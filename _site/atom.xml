<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Bo's Blog</title>
 <link href="http://bo-yang.github.com//atom.xml" rel="self"/>
 <link href="http://bo-yang.github.com/"/>
 <updated>2014-06-17T13:54:07-07:00</updated>
 <id>http://bo-yang.github.com/</id>
 <author>
   <name>Bo Yang</name>
   <email>bonny95@gmail.com</email>
 </author>

 
 <entry>
   <title>Sort Colors</title>
   <link href="http://bo-yang.github.com//2014/06/17/sort-colors"/>
   <updated>2014-06-17T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2014/06/17/sort-colors</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://oj.leetcode.com/problems/sort-colors/&quot;&gt;Problem&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue.&lt;/p&gt;

  &lt;p&gt;Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This problem is trivial when using two-pass counting sort: first pass count the numbers of each color, and then assign each element in array into corresponding regions in the array in the second pass.&lt;/p&gt;

&lt;p&gt;The follow up of this problem requires to design a one-pass algorithm using constant space. The strategy is go through all the elements in the array, and move red colors(0s) to the left and move blue colors to the right(2s). The green colors(1s) will finally remain in the middle part of the array.&lt;/p&gt;

&lt;p&gt;In order to implement above strategy, three indices can be used: one index for current element, one idex for the right-most red color, and one index for the left-most blue color. When meeting a red color, move it to the end of the red colors. When meeting a blue color, move it to the front(left-most) of the blue colors. And when meeting a green color, just increase current index.&lt;/p&gt;

&lt;p&gt;Following is my C++ implementation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Solution {
public:
    void sortColors(int A[], int n) {
		int idx=0,ridx=0,bidx=n-1; // ridx - index for red color, bidx - index for blue color
        while(idx&amp;lt;=bidx) {
			switch(A[idx]) {
				case 0: { // Red color, move it to left
					while(A[ridx]==0 &amp;amp;&amp;amp; ridx&amp;lt;n)
						++ridx;
					if(idx&amp;gt;ridx){
						swap(A[idx],A[ridx]);
						++ridx;
					} else {
						idx=ridx;
					}
					break;
				}
				case 1: { // Green color, skip it
					++idx;					
					break;
				}
				case 2: { // Blue color, move it to right
					while(A[bidx]==2 &amp;amp;&amp;amp; bidx&amp;gt;idx)
						--bidx;
					swap(A[idx],A[bidx]);
					--bidx;
					break;
				}
				default:
					cout&amp;lt;&amp;lt;&quot;Error: invalid color detected&quot;&amp;lt;&amp;lt;endl;
			}
		} // end while
    }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And the following code can be used for test:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;utility&amp;gt;
#include &amp;lt;cstdlib&amp;gt;
using namespace std;

int main() {
	/* initialize random seed: */
	srand (time(NULL));
	
	const int N=10;
	Solution sol;
	int* A=new int[N];
	cout&amp;lt;&amp;lt;&quot;Before sorting:&quot;&amp;lt;&amp;lt;endl;
	for(int i=0;i&amp;lt;N;++i) {
		A[i]=rand()%3;
		cout&amp;lt;&amp;lt;A[i]&amp;lt;&amp;lt;&quot; &quot;;
	}
	cout&amp;lt;&amp;lt;endl;

	sol.sortColors(A,N);
	
	cout&amp;lt;&amp;lt;&quot;After sorting:&quot;&amp;lt;&amp;lt;endl;
	for(int i=0;i&amp;lt;N;++i)
		cout&amp;lt;&amp;lt;A[i]&amp;lt;&amp;lt;&quot; &quot;;
	cout&amp;lt;&amp;lt;endl;


	delete [] A;
}
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Check Soduku Solution</title>
   <link href="http://bo-yang.github.com//2014/06/14/soduku"/>
   <updated>2014-06-14T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2014/06/14/soduku</id>
   <content type="html">&lt;p&gt;The objective of Soduku game is to fill a \(9 \times 9\) grid with digits so that each column, each row, and each of the nine \(3 \times 3\) sub-grids that compose the grid (also called “boxes”, “blocks”, “regions”, or “sub-squares”) contains all of the digits from 1 to 9. A solved Soduku game is like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sudoku_solution.png&quot; alt=&quot;Solved_Suduku&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To check if a \(9 \times 9\) grid is a valid solution, we need to check every row, every column and \(3 \times 3\) subgrids. It is not hard to check rows and columns, but checking subgrids is little tricky. When considering going through the grid only one time, it will be much harder.&lt;/p&gt;

&lt;p&gt;My solution is define a 9-item-long vector to count the occurrences of each element in a row, a 9-item-long vector to count the occurrences of each element in a column, and a \(3 \times 9\) matrix to count the occurrences of elements in the 3 nearby subgrids. The value of each element in grid can be used as the indices of the counting vectors, because they are supposed to be in the range of 0~9. If found one occurrence greater than one in the vectors, then return false.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bool isSoduku(vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; grid) {
	const int dim=3;
	vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; subGridCnt(grid[0].size()/dim,vector&amp;lt;int&amp;gt;(dim*dim+1,0)); // count the occurrences of elements in 3 nearby 3x3 subgrids.
	// check row,column, subgrids
	for(int i=0;i&amp;lt;grid.size();++i) {
		if(i%3==0) { // reset subGridCnt
			subGridCnt.clear();
			for(int cnt=0;cnt&amp;lt;grid[0].size()/dim;++cnt)
				subGridCnt.push_back(vector&amp;lt;int&amp;gt;(dim*dim+1,0));
		}
		vector&amp;lt;int&amp;gt; rowCnt(grid[0].size()+1,0); // count the occurrences of elements in one row.
		vector&amp;lt;int&amp;gt; colCnt(grid.size()+1,0); // count the occurrences of elements in one column.
		for(int j=0;j&amp;lt;grid[i].size();++j) {
			rowCnt[grid[i][j]]++;
			colCnt[grid[j][i]]++;
			subGridCnt[j/3][grid[i][j]]++;
			if(rowCnt[grid[i][j]]&amp;gt;1) {
				cout&amp;lt;&amp;lt;&quot;Error: &quot;&amp;lt;&amp;lt;rowCnt[grid[i][j]]&amp;lt;&amp;lt;&quot; &quot;&amp;lt;&amp;lt;grid[i][j]&amp;lt;&amp;lt;&quot;s found in row &quot;&amp;lt;&amp;lt;i+1&amp;lt;&amp;lt;&quot;.&quot;&amp;lt;&amp;lt;endl;
				return false;
			}
			if(colCnt[grid[j][i]]&amp;gt;1) {
				cout&amp;lt;&amp;lt;&quot;Error: &quot;&amp;lt;&amp;lt;colCnt[grid[j][i]]&amp;lt;&amp;lt;&quot; &quot;&amp;lt;&amp;lt;grid[j][i]&amp;lt;&amp;lt;&quot;s found in column &quot;&amp;lt;&amp;lt;i+1&amp;lt;&amp;lt;&quot;.&quot;&amp;lt;&amp;lt;endl;
				return false;
			}
			if(subGridCnt[j/3][grid[i][j]]&amp;gt;1) {
				cout&amp;lt;&amp;lt;&quot;Error: duplicate elements found in subgrid &amp;lt;&quot;&amp;lt;&amp;lt;i/3+1&amp;lt;&amp;lt;&quot;,&quot;&amp;lt;&amp;lt;j/3+1&amp;lt;&amp;lt;&quot;&amp;gt;: &quot;&amp;lt;&amp;lt;grid[i][j]&amp;lt;&amp;lt;&quot;.&quot;&amp;lt;&amp;lt;endl;
				return false;
			}
		}
	}
	
	return true;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To test above funciton, following code segment can be used:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int main() {
	vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; grid={ 
		{6,5,7,2,9,1,8,4,3},
		{8,9,4,6,7,3,2,1,5},
		{1,2,3,5,8,4,7,9,6},
		{5,6,8,3,4,7,1,8,2},
		{7,3,1,9,2,8,5,6,4},
		{4,8,2,1,6,5,3,7,9},
		{2,7,6,8,3,9,4,5,1},
		{3,4,5,7,1,6,9,2,8},
		{9,1,8,4,5,2,6,3,7} 
	};

	for(int i=0;i&amp;lt;grid.size();++i) {
		for(int j=0;j&amp;lt;grid[i].size();++j) {
			cout&amp;lt;&amp;lt;grid[i][j]&amp;lt;&amp;lt;&quot; &quot;;
		}
		cout&amp;lt;&amp;lt;endl;
	}
	
	if(isSoduku(grid))
		cout&amp;lt;&amp;lt;&quot;A valid solution!&quot;&amp;lt;&amp;lt;endl;
	else
		cout&amp;lt;&amp;lt;&quot;Not a solution!&quot;&amp;lt;&amp;lt;endl;
}
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Least Recently Used(LRU) Cache</title>
   <link href="http://bo-yang.github.com//2014/06/12/lru-cache"/>
   <updated>2014-06-12T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2014/06/12/lru-cache</id>
   <content type="html">&lt;p&gt;According to &lt;a href=&quot;https://oj.leetcode.com/problems/lru-cache/&quot;&gt;LeetCode&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Design and implement a data structure for Least Recently Used (LRU) cache. It should support the following operations: &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code&gt;get(key)&lt;/code&gt; - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code&gt;set(key, value)&lt;/code&gt; - Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When dealing with (key, vlaue) pairs, the most straight-forward data structure is hashmap(map or unordered_map in C++). However, at least for C++, it is difficult to control the insertion of new items: (1) the position you can specify is just a hint and does not force the new element to be inserted at that position within the map/unordered_map container, and (2) there is no &lt;code&gt;push_back&lt;/code&gt; or &lt;code&gt;push_front&lt;/code&gt; methods provided for map/unordered_map. &lt;/p&gt;

&lt;p&gt;So if you implement the LRU cache only using hashmap, you may find that the order of inserted/deleted items is a mess. If you at first insert 10 items(keys 0~9) into the LRU cache of size 10, then enter another 10 items(keys 10~19), you will find that old items are not replaced in order.&lt;/p&gt;

&lt;pre&gt;
Initial LRU cache:
Key  Value
9: 54
8: 71
7: 49
6: 12
5: 42
4: 10
3: 37
2: 12
1: 35
0: 83

Erase pair &amp;lt;9,54&amp;gt;
Erase pair &amp;lt;10,2&amp;gt;
Erase pair &amp;lt;8,71&amp;gt;
Erase pair &amp;lt;7,49&amp;gt;
Erase pair &amp;lt;6,12&amp;gt;
Erase pair &amp;lt;5,42&amp;gt;
Erase pair &amp;lt;15,87&amp;gt;
Erase pair &amp;lt;16,35&amp;gt;
Erase pair &amp;lt;17,72&amp;gt;
Erase pair &amp;lt;18,36&amp;gt;

Updated LRU cache:
Key  Value
19: 61
4: 10
14: 20
3: 37
13: 72
2: 12
12: 4
1: 35
11: 53
0: 83
&lt;/pre&gt;

&lt;p&gt;To fix the order issue, there are three candidates: &lt;code&gt;vector&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;queue&lt;/code&gt;. Since queue doesn’t support deleting an item at arbitrary position and deleting an item requires O(n) time cost for vector, the best choice is list. List is flexible enough to support inserting items into any position and erazing an arbitrary item in constant time. &lt;/p&gt;

&lt;p&gt;However, the potential issue for list is that searching for an item requires O(n) time. To find an item in list in constant time, the best way is constructing a hashmap to record the key and its corresponding address in list. In C++, the builtin(actually, from C++ STL) hashmap data structure is &lt;code&gt;unordered_map&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In order to update the values in the cache according to keys, &lt;code&gt;list&lt;/code&gt; also needs to record both keys and values. There are two data structures can be used: &lt;code&gt;pair&amp;lt;int, int&amp;gt;&lt;/code&gt; or &lt;code&gt;struct{int key;int val;}&lt;/code&gt;. There is a saying, when dealing with large data, the STL &lt;code&gt;pair&lt;/code&gt; struct will be much slower than the self-defined &lt;code&gt;struct&lt;/code&gt;, because &lt;a href=&quot;http://stackoverflow.com/questions/1606894/stdpairint-int-vs-struct-with-two-ints&quot;&gt;std::pair&amp;lt;int, int&amp;gt;::pair() constructor initializes the fields with default values and initializing requires writing to each field which requires a whole lot of memory accesses that are relatively time consuming&lt;/a&gt;. But my tests showed that &lt;strong&gt;the &lt;code&gt;pair&lt;/code&gt; implementation always performs better&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I implemented LRU cache using both &lt;code&gt;pair&amp;lt;int, int&amp;gt;&lt;/code&gt; and &lt;code&gt;struct{int key;int val;}&lt;/code&gt;, and I also tested the time cost on my Mac. When setting the LRU capacity to 100, with the same test code, the &lt;code&gt;pair&amp;lt;int, int&amp;gt;&lt;/code&gt; implementation is faster.&lt;/p&gt;

&lt;pre&gt;
macmini:LRU boyang$ time ./lru_pair
real	0m0.010s
user	0m0.007s
sys	0m0.003s

macmini:LRU boyang$ time ./lru_struct
real	0m0.020s
user	0m0.016s
sys	0m0.003s
&lt;/pre&gt;

&lt;p&gt;When setting the LRU capacity to 10000:&lt;/p&gt;

&lt;pre&gt;
macmini:LRU boyang$ time ./lru_pair
real	0m0.575s
user	0m0.547s
sys	0m0.003s
macmini:LRU boyang$ time ./lru_struct
real	0m0.584s
user	0m0.580s
sys	0m0.003s
&lt;/pre&gt;

&lt;p&gt;When setting the LRU capacity to 100000:&lt;/p&gt;
&lt;pre&gt;
macmini:LRU boyang$ time ./lru_pair
real	1m23.615s
user	1m23.509s
sys	0m0.079s
macmini:LRU boyang$ time ./lru_struct 
real	2m1.782s
user	2m1.552s
sys	0m0.167s
&lt;/pre&gt;

&lt;p&gt;Following are my implementations of LRU cache. There is one tricky thing of implementing &lt;code&gt;set(key,value)&lt;/code&gt;: if you check if the cache size surpasses the capacity for every input and move the &lt;code&gt;while&lt;/code&gt; clause out of the &lt;code&gt;if&lt;/code&gt; block, then your code won’t pass the LeetCode tests, and you will receive an error of exceeding time limit. I think the cache size checking should be trivial, but I still cannot really understand why it matters so much in large data tests.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;struct&lt;/code&gt; implementation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class LRUCache{
public:
	struct Node {
		int key;
		int val;
		Node(int k, int v):key(k),val(v) {}
	};

	LRUCache(int capacity) {
        cap=capacity;
    }

    int get(int key) {
		unordered_map&amp;lt;int,list&amp;lt;Node&amp;gt;::iterator&amp;gt;::iterator got=hash.find(key);
		if(got!=hash.end()) {
			// update key&amp;amp;value
			Node ptr=*(got-&amp;gt;second);
			cache.erase(got-&amp;gt;second);
			cache.push_front(ptr);
			hash[key]=cache.begin();

			return ptr.val;
		} else {
			return -1;
		}
    }
    
    void set(int key, int value) {
		Node ptr(key, value);
		unordered_map&amp;lt;int,list&amp;lt;Node&amp;gt;::iterator&amp;gt;::iterator got=hash.find(key);
		if(got!=hash.end()) {
			cache.erase(got-&amp;gt;second); // erase so as to update key&amp;amp;value
			hash.erase(key);
		} else {
			// Assume that least recently used items are stored at the end of the cache
	        while(cache.size()&amp;gt;=cap) {
				Node it=cache.back();
				//cout&amp;lt;&amp;lt;&quot;Erase pair &amp;lt;&quot;&amp;lt;&amp;lt;key&amp;lt;&amp;lt;&quot;,&quot;&amp;lt;&amp;lt;it.val&amp;lt;&amp;lt;&quot;&amp;gt;&quot;&amp;lt;&amp;lt;endl; // TEST ONLY
				hash.erase(it.key);
				cache.pop_back();
			}
		}

		cache.push_front(ptr);
		hash[key]=cache.begin();

    }

	void print() {
		cout&amp;lt;&amp;lt;&quot;Key  Value&quot;&amp;lt;&amp;lt;endl;
		for(auto&amp;amp; x: cache)
			cout&amp;lt;&amp;lt;x.key&amp;lt;&amp;lt;&quot;: &quot;&amp;lt;&amp;lt;x.val&amp;lt;&amp;lt;endl;
	}

private:
	list&amp;lt;Node&amp;gt; cache; // &amp;lt;value&amp;gt;
	unordered_map&amp;lt;int,list&amp;lt;Node&amp;gt;::iterator&amp;gt; hash; // &amp;lt;key, iterator&amp;gt;
	int cap;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;pair&lt;/code&gt; implementation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class LRUCache{
public:
    LRUCache(int capacity) {
        cap=capacity;
    }
    
    int get(int key) {
		unordered_map&amp;lt;int,list&amp;lt;pair&amp;lt;int,int&amp;gt;&amp;gt;::iterator&amp;gt;::iterator got=hash.find(key);
		if(got!=hash.end()) {
			// update key&amp;amp;value
			int val=got-&amp;gt;second-&amp;gt;second;
			cache.erase(got-&amp;gt;second);
			cache.push_front(pair&amp;lt;int,int&amp;gt;(key,val));
			hash[key]=cache.begin();

			return val;
		} else {
			return -1;
		}
    }
    
    void set(int key, int value) {
		// Assume that least recently used items are stored at the end of the cache
		unordered_map&amp;lt;int,list&amp;lt;pair&amp;lt;int,int&amp;gt;&amp;gt;::iterator&amp;gt;::iterator got=hash.find(key);
		if(got!=hash.end()) {
			cache.erase(got-&amp;gt;second); // erase so as to update key&amp;amp;value
			hash.erase(key);
		} else {
			while(cache.size()&amp;gt;=cap) { // for big data, must run here
				pair&amp;lt;int,int&amp;gt; it=cache.back();
				//cout&amp;lt;&amp;lt;&quot;Erase pair &amp;lt;&quot;&amp;lt;&amp;lt;it.first&amp;lt;&amp;lt;&quot;,&quot;&amp;lt;&amp;lt;it.second&amp;lt;&amp;lt;&quot;&amp;gt;&quot;&amp;lt;&amp;lt;endl; // TEST ONLY
				hash.erase(it.first);
				cache.pop_back();
			}
		}

		cache.push_front(pair&amp;lt;int,int&amp;gt;(key,value));
		hash[key]=cache.begin();

    }

	void print() {
		cout&amp;lt;&amp;lt;&quot;Key  Value&quot;&amp;lt;&amp;lt;endl;
		for(auto&amp;amp; x: cache)
			cout&amp;lt;&amp;lt;x.first&amp;lt;&amp;lt;&quot;: &quot;&amp;lt;&amp;lt;x.second&amp;lt;&amp;lt;endl;
	}

private:
	list&amp;lt;pair&amp;lt;int,int&amp;gt; &amp;gt; cache; // &amp;lt;key, value&amp;gt;
	unordered_map&amp;lt;int,list&amp;lt;pair&amp;lt;int,int&amp;gt;&amp;gt;::iterator&amp;gt; hash; // &amp;lt;key, iterator&amp;gt;
	int cap;
};
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Binary Tree Operations</title>
   <link href="http://bo-yang.github.com//2014/05/26/binary-tree-traversal"/>
   <updated>2014-05-26T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2014/05/26/binary-tree-traversal</id>
   <content type="html">&lt;p&gt;There are two kinds of traversal for (binary) trees: Depth First Search(DFS) and Breadth First Search(BFS). Depth First Search visits the tree by proceeding deeper and deeper until it reaches the leaf nodes, including pre-order, in-order, post-order tree traversal. DFS uses a data structure called Stack.&lt;/p&gt;

&lt;p&gt;Breadth First Search is the most natural solution for level-order traversal, since it visits the nodes level by level. BFS requires the use of a data structure called Queue, which is a First In First Out (FIFO) structure.&lt;/p&gt;

&lt;p&gt;For the complete C++ source code used in this article, please refer to: &lt;a href=&quot;https://github.com/bo-yang/BinaryTree&quot;&gt;https://github.com/bo-yang/BinaryTree&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#data_structure&quot;&gt;Data Structure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#build_tree&quot;&gt;Build Binary Tree&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#preorder&quot;&gt;Preorder Traversal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#inorder&quot;&gt;Inorder Traversal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#postorder&quot;&gt;Postorder Traversal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#bft&quot;&gt;Breadth First Traversal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#zigzag&quot;&gt;Zigzag Traversal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comparison&quot;&gt;Binary Tree Comparison&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;a-namedatastructuredata-structurea&quot;&gt;&lt;a name=&quot;data_structure&quot;&gt;Data Structure&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;The data structure used for the tree node is very simple, which is adopted from &lt;a href=&quot;https://oj.leetcode.com/problems/binary-tree-inorder-traversal/&quot;&gt;LeetCode OJ&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};
&lt;/code&gt;&lt;/pre&gt;

&lt;strike&gt;The constructing function TreeNode() is added to purely because it is easier to dynamically allocate TreeNode array by `new TreeNode[size]`. C++98 doesn&#39;t support specifying default arguments for objects allocated by `new`. However, the TreeNode array can simplify the process of building binary trees.&lt;/strike&gt;

&lt;p&gt;The data structure for the binary tree is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class BinaryTree {
public:
	BinaryTree() { root=NULL;layers=0; }
	BinaryTree(vector&amp;lt;string&amp;gt;&amp;amp; t) { BuildTree(t); }
	~BinaryTree();
	TreeNode* GetRoot() { return root; }
	vector&amp;lt;int&amp;gt; PreorderTraversal(TreeNode *root);
	vector&amp;lt;int&amp;gt; InorderTraversal(TreeNode *root);
	vector&amp;lt;int&amp;gt; PostorderTraversal(TreeNode *root);
	vector&amp;lt;vector&amp;lt;int&amp;gt; &amp;gt; ZigzagLevelOrder(TreeNode *root);
	void PrintTraversal(vector&amp;lt;int&amp;gt;&amp;amp; vec, string type);
	void PrintTraversal(vector&amp;lt;vector&amp;lt;int&amp;gt; &amp;gt;&amp;amp; vec, string type);
	TreeNode* BuildTree(vector&amp;lt;string&amp;gt;&amp;amp; t);
	void PrintTree(TreeNode *root);
	bool IsSameTree(TreeNode *p, TreeNode *q);

private:
	TreeNode* root;
	int layers;	// number of layers
};
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;a-namebuildtreebuild-binary-treea&quot;&gt;&lt;a name=&quot;build_tree&quot;&gt;Build Binary Tree&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;In my implementation, binary trees are built from a vector of strings. For example, given sequence {1,2,3,#,#,4,#,#,5}, the following binary tree can be built:&lt;/p&gt;

&lt;pre&gt;
	  1
	 / \
	2   3
	   /
	  4
	 / \
	5   6
&lt;/pre&gt;

&lt;p&gt;The tree is built layer by layer, where the first element in sequence is viewed as the root node. Here the “#” is used as terminator. &lt;/p&gt;

&lt;p&gt;For each node other than the last layer, there are two children in the next layer, either a number(or string) or a “#”(invalid node). When parsing nodes in current layer, count the number of elements in next layer. The exception is for “#”s - they have no child nodes. In this way, we can parse the dependency of nodes layer by layer. &lt;/p&gt;

&lt;p&gt;Following is the C++ code for building binary trees:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;TreeNode* BuildTree(vector&amp;lt;string&amp;gt;&amp;amp; t) {
	if(t.empty())
		return NULL;

	root=new TreeNode(-1);
	TreeNode* tree=root;
	queue&amp;lt;TreeNode*&amp;gt; q; // store nodes of next layer
	q.push(tree);

	// Build binary tree from vector of strings, where # denotes an invalid node.
	// The main idea is to parse vector of strings(nodes) layer by layer. 
	// The first item in the vector should be the root node, and the number of
	// first layer is one. When parsing the first layer, count the nodes of the
	// second layer, and so on.
	int idx=0;
	int nodes_cur_layer=1;
	vector&amp;lt;string&amp;gt;::iterator it=t.begin(); 
	while(idx&amp;lt;t.size()){
		int nodes_next_layer=0; // all nodes, including #s
		int vi=0;	// index of valid nodes in next layer
		for(int i=0;i&amp;lt;nodes_cur_layer;++i) {
			if(idx+i&amp;lt;t.size() &amp;amp;&amp;amp; *(it+i)==&quot;#&quot;) { // Skip #s
				continue;
			}

			tree=q.front();
			q.pop();

			int left=nodes_cur_layer+nodes_next_layer;
			int right=nodes_cur_layer+nodes_next_layer+1;
			if(idx+left&amp;lt;t.size()) { // in case of out-of-boundary access
				if(*(it+left)!=&quot;#&quot; ) {
					tree-&amp;gt;left=new TreeNode(-1);
					q.push(tree-&amp;gt;left);
					vi++;
				} else {
					tree-&amp;gt;left=NULL;
				}
				nodes_next_layer++;
			}
			if(idx+right&amp;lt;t.size()) { // in case of out-of-boundary access
				if(*(it+right)!=&quot;#&quot;) {
					tree-&amp;gt;right=new TreeNode(-1);
					q.push(tree-&amp;gt;right);
					vi++;
				} else {
					tree-&amp;gt;right=NULL;
				}
				nodes_next_layer++;
			}

			tree-&amp;gt;val=atoi((it+i)-&amp;gt;c_str());
		}

		idx+=nodes_cur_layer;
		it+=nodes_cur_layer;
		nodes_cur_layer=nodes_next_layer;
		layers++;
	}

	return root;	// root of the tree
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In order to delete the memroy dynamically allocated in function BuildTree(), in the desctructor, every node in the tree should be traversed and deleted. For simplicity, layer-by-layer traversal is used.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~BinaryTree() {
	if(root!=NULL) {
		// delete allocated nodes iteratively
		queue&amp;lt;TreeNode*&amp;gt; q;
		TreeNode* tmp=root;
		q.push(tmp);
		int nodes_cur_layer=1; // # of nodes in current layer
		int nodes_next_layer=0;	// # of nodes in next layer
		while(nodes_cur_layer&amp;gt;0) {
			for(int i=0;i&amp;lt;nodes_cur_layer;++i) {
				tmp=q.front();
				q.pop();

				if(tmp-&amp;gt;left!=NULL) {
					q.push(tmp-&amp;gt;left);
					nodes_next_layer++;
				}
				if(tmp-&amp;gt;right!=NULL) {
					q.push(tmp-&amp;gt;right);
					nodes_next_layer++;
				}

				delete tmp;
			}
			nodes_cur_layer=nodes_next_layer;
			nodes_next_layer=0;
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;a-namepreorderpreorder-traversala&quot;&gt;&lt;a name=&quot;preorder&quot;&gt;Preorder Traversal&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;To traverse a binary tree in Preorder, following operations are carried-out 
1. Visit the root, 
2. Traverse the left subtree, and 
3. Traverse the right subtree. &lt;/p&gt;

&lt;p&gt;For the example binary tree {1,2,3,#,#,4,#,5,6}, the preorder traversal is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
1,2,3,4,5,6
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Following is my C++ implementation of preorder traversal(&lt;a href=&quot;http://en.wikipedia.org/wiki/Tree_traversal#Implementations&quot;&gt;Pseudo Code&lt;/a&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vector&amp;lt;int&amp;gt; PreorderTraversal(TreeNode *root) {
	vector&amp;lt;int&amp;gt; trace;
	stack&amp;lt;TreeNode*&amp;gt; st;
	while(root!=NULL) {
		trace.push_back(root-&amp;gt;val); // Visit the root
		if(root-&amp;gt;left!=NULL) {	// Traverse the left subtree
			TreeNode* tmp=root;
			root=root-&amp;gt;left;
			if(tmp-&amp;gt;right!=NULL)
				st.push(tmp-&amp;gt;right);	// store the root of the right subtree
		} else if(root-&amp;gt;right!=NULL) {
			root=root-&amp;gt;right;
		} else {
			if(st.empty()) {
				root=NULL;
			} else {
				root=st.top();
				st.pop();
			}
		}
	} // end of while
	return trace;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;a-nameinorderinorder-traversala&quot;&gt;&lt;a name=&quot;inorder&quot;&gt;Inorder Traversal&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;To traverse a binary tree in Inorder, following operations are carried-out:
1. Traverse the leftmost subtree starting at the left external node,
2. Visit the root, and 
3. Traverse the right subtree starting at the left external node.&lt;/p&gt;

&lt;p&gt;For the example binary tree {1,2,3,#,#,4,#,5,6}, the inorder traversal is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
2,1,5,4,6,3
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Following is my C++ implementation of inorder traversal(&lt;a href=&quot;http://en.wikipedia.org/wiki/Tree_traversal#Implementations&quot;&gt;Pseudo Code&lt;/a&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vector&amp;lt;int&amp;gt; InorderTraversal(TreeNode *root) {
	vector&amp;lt;int&amp;gt; trace;
	stack&amp;lt;TreeNode&amp;gt; st;
    while(root!=NULL) {
		// Find the left-most node
		if(root-&amp;gt;left!=NULL) {
			TreeNode tmp=*root;
			root=root-&amp;gt;left;
			tmp.left=NULL;
			st.push(tmp);	// store the root of the right subtree
		} else if(root-&amp;gt;right!=NULL) {
			// Handle the right subtree
			trace.push_back(root-&amp;gt;val); // Visit leftmost node
			root=root-&amp;gt;right;
		} else {
			trace.push_back(root-&amp;gt;val); // Visit leaf/root node
			if(st.empty()) {
				root=NULL;
			} else {
				root=&amp;amp;(st.top());
				st.pop();
			}
		}
	}
	return trace;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;a-namepostorderpostorder-traversala&quot;&gt;&lt;a name=&quot;postorder&quot;&gt;Postorder Traversal&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;To traverse a binary tree in Postorder, following operations are carried-out: 
1. Traverse all the left external nodes starting with the leftmost subtree which is then followed by bubble-up all the internal nodes, 
2. Traverse the right subtree starting at the left external node which is then followed by bubble-up all the internal nodes, and 
3. Visit the root.&lt;/p&gt;

&lt;p&gt;For the example binary tree {1,2,3,#,#,4,#,5,6}, the postorder traversal is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
2,5,6,4,3,1
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Following is my C++ implementation of postorder traversal(&lt;a href=&quot;http://en.wikipedia.org/wiki/Tree_traversal#Implementations&quot;&gt;Pseudo Code&lt;/a&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vector&amp;lt;int&amp;gt; PostorderTraversal(TreeNode *root) {
	vector&amp;lt;int&amp;gt; trace;
	stack&amp;lt;TreeNode&amp;gt; st;
    while(root!=NULL) {
		// Find the left-most node
		if(root-&amp;gt;left!=NULL) {
			TreeNode tmp=*root;
			root=root-&amp;gt;left;
			tmp.left=NULL;
			st.push(tmp);	// store the root of the right subtree
		} else if(root-&amp;gt;right!=NULL) {
			TreeNode tmp=*root;
			root=root-&amp;gt;right;
			tmp.left=NULL;
			tmp.right=NULL;
			st.push(tmp);	// store the root
		} else {
			trace.push_back(root-&amp;gt;val);	// Print root at last
			if(st.empty()) {
				root=NULL;
			} else {
				root=&amp;amp;(st.top());
				st.pop();
			}
		}
	}
	return trace;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;a-namebftbreadth-first-traversalbfta&quot;&gt;&lt;a name=&quot;bft&quot;&gt;Breadth First Traversal(BFT)&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Breadth first traversal is used for printing the binary tree in my code. The key of for BFT is to use a queue(s) to store nodes in current and/or next layers. The simplest way to use two queues: one to store nodes of current layer and the other for next layer. &lt;/p&gt;

&lt;p&gt;However, a single queue also can work well. For the first layer, there is only one node - the root. When accessing this node, count the number of nodes in the second layer and push them into queue. When accessing the second layer, pop items in FIFO sequence and remove them from queue, and push the nodes in third layer into queue, and so on. Two inteher variables can be used to count the numbers of nodes in current layer and the next layer, respectively.&lt;/p&gt;

&lt;p&gt;Following is my C++ impementation of traversing binary tree in level order:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;void PrintTree(TreeNode *root) {
	queue&amp;lt;TreeNode*&amp;gt; q;
	TreeNode* tmp=root;
	q.push(tmp);
	int nodes_cur_layer=1; // # of nodes in current layer
	int nodes_next_layer=0;	// # of nodes in next layer
	while(nodes_cur_layer&amp;gt;0) {
		for(int i=0;i&amp;lt;nodes_cur_layer;++i) {
			tmp=q.front();
			q.pop();

			cout&amp;lt;&amp;lt;tmp-&amp;gt;val&amp;lt;&amp;lt;&quot; &quot;;

			if(tmp-&amp;gt;left!=NULL) {
				q.push(tmp-&amp;gt;left);
				nodes_next_layer++;
			}
			if(tmp-&amp;gt;right!=NULL) {
				q.push(tmp-&amp;gt;right);
				nodes_next_layer++;
			}
		}
		cout&amp;lt;&amp;lt;endl;
		nodes_cur_layer=nodes_next_layer;
		nodes_next_layer=0;
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;a-namezigzagzigzag-traversala&quot;&gt;&lt;a name=&quot;zigzag&quot;&gt;Zigzag Traversal&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Zigzag level order traversal is a Breadth First Traversal(BFT). The procedure  of this traversal is (i) from left to right, (ii) then right to left for the next level, (iii) and alternate between). &lt;/p&gt;

&lt;p&gt;For the example binary tree {1,2,3,#,#,4,#,5,6}, the postorder traversal is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
[[1],[3,2],[4],[6,5]]
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Although zigzag traversal is kind of BFT, it is not easy to use one or two queues to implement it, because you need to traverse every layer from left to right, and print nodes from right to left for some layers. Since I don’t want to use three queues(one to store the nodes of current layer, the other two store the left-to-right traversal of next layer, but one of them should be used for left-to-right traveral in next iteration and the other used for right-to-left printing), I implemented the zigzag traversal with two lists: one list to store the left-to-right traversal of current layer, and the other list for storing left-to-right traversal of next layer. During printing, the same list can be controlled to output nodes either from left to right or right to left without loosing any information(unlike queue, quque is not iterable).&lt;/p&gt;

&lt;p&gt;Following is my code for zigzag traversal. Note that the output is a vector of vectors.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vector&amp;lt;vector&amp;lt;int&amp;gt; &amp;gt; ZigzagLevelOrder(TreeNode *root) {
    vector&amp;lt;vector&amp;lt;int&amp;gt; &amp;gt; trace;
	list&amp;lt;TreeNode*&amp;gt; lst_cur;
	int next_layer_nodes=0;
	int cur_layer_nodes;
	bool l2r=true;
	if(root!=NULL) {
		cur_layer_nodes=1;
		lst_cur.push_back(root);
	}else{
		return trace;
	}

	// Use two lists for left to right traversal and vice versa: 
	// one list used for storing nodes of current layer, and the 
	// other used for storing nodes layer below.
	//
	// The binary tree will always be traversed from left to right 
	// for each layer, however, for every other layer, the nodes will
	// be printed from right to left.
	while(cur_layer_nodes&amp;gt;0) {
		vector&amp;lt;int&amp;gt; subtr;
		list&amp;lt;TreeNode*&amp;gt; lst_next;
		list&amp;lt;TreeNode*&amp;gt;::iterator lr=lst_cur.begin();
		list&amp;lt;TreeNode*&amp;gt;::iterator rl=lst_cur.end();
		for(int i=0;i&amp;lt;cur_layer_nodes;++i) {
			TreeNode* tn = *(lr);
			if(l2r) {
				subtr.push_back((*(lr))-&amp;gt;val);
			} else {
				rl--; // lst_cur.end() points to undefined memory
				subtr.push_back((*(rl))-&amp;gt;val);
			}
			
			if(tn-&amp;gt;left!=NULL) {
				next_layer_nodes++;
				lst_next.push_back(tn-&amp;gt;left);
			}

			if(tn-&amp;gt;right!=NULL) {
				next_layer_nodes++;
				lst_next.push_back(tn-&amp;gt;right);
			}

			lr++;
		} // end for
		trace.push_back(subtr);
		cur_layer_nodes=next_layer_nodes;
		next_layer_nodes=0;
		lst_cur=lst_next;
		l2r=!l2r;
	} // end while

	return trace;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;a-namecomparisonbinary-tree-comparisona&quot;&gt;&lt;a name=&quot;comparison&quot;&gt;Binary Tree Comparison&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;As for the comparison of two binary trees, only equality is considered. Two binary trees are considered equal if they are structurally identical and the nodes have the same value. To implement this, two trees should be traversed at the same time using same traverse method. If for every pair of nodes, the values are equal, and both of them have left child and right child, then the two nodes are considered equal.&lt;/p&gt;

&lt;p&gt;For simplicity, Breadth First Traversal is used in my implementation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bool IsSameTree(TreeNode *p, TreeNode *q) {
	bool same_tree=true;
    queue&amp;lt;TreeNode*&amp;gt; qp;
	queue&amp;lt;TreeNode*&amp;gt; qq;
	int cur_layer_nodes;
	int next_layer_nodes=0;
	if(p!=NULL &amp;amp;&amp;amp; q!=NULL) {
		cur_layer_nodes=1;
		qp.push(p);
		qq.push(q);
	} else if(p==NULL &amp;amp;&amp;amp; q==NULL) {
		return true;
	} else {
		return false;
	}

	// Traverse trees layer by layer
	while(cur_layer_nodes&amp;gt;0) {
		next_layer_nodes=0;
		for(int i=0;i&amp;lt;cur_layer_nodes;++i) {
			TreeNode* tp=qp.front();
			qp.pop();
			TreeNode* tq=qq.front();
			qq.pop();

			if((tp-&amp;gt;val!=tq-&amp;gt;val) || (tp-&amp;gt;left==NULL) &amp;amp;&amp;amp; (tq-&amp;gt;left!=NULL) || (tp-&amp;gt;left!=NULL) &amp;amp;&amp;amp; (tq-&amp;gt;left==NULL) || (tp-&amp;gt;right==NULL) &amp;amp;&amp;amp; (tq-&amp;gt;right!=NULL) || (tp-&amp;gt;right!=NULL) &amp;amp;&amp;amp; (tq-&amp;gt;right==NULL)) {
				same_tree=false;
				break;
			}

			if(tp-&amp;gt;left!=NULL) {
				qp.push(tp-&amp;gt;left);
				qq.push(tq-&amp;gt;left);
				next_layer_nodes++;
			}

			if(tp-&amp;gt;right!=NULL) {
				qp.push(tp-&amp;gt;right);
				qq.push(tq-&amp;gt;right);
				next_layer_nodes++;
			}
		} // end for
		cur_layer_nodes=next_layer_nodes;
		if(!same_tree)
			break;
	} // end while

	return same_tree;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;[Updated 05/30/2014]&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;https://oj.leetcode.com/problems/binary-tree-inorder-traversal/&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://datastructuresnotes.blogspot.com/2009/02/binary-tree-traversal-preorder-inorder.html&quot;&gt;Binary tree traversal: Preorder, Inorder, and Postorder&lt;/a&gt;
«««&amp;lt; HEAD&lt;/li&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;tree-traversalhttpenwikipediaorgwikitreetraversal&quot;&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Tree_traversal&quot;&gt;Tree Traversal&lt;/a&gt;&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Tree_traversal&quot;&gt;Tree Traversal&lt;/a&gt;
»»»&amp;gt; FETCH_HEAD&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Action Recognition with Fisher Vectors</title>
   <link href="http://bo-yang.github.com//2014/04/30/fisher-vector-in-action-recognition"/>
   <updated>2014-04-30T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2014/04/30/fisher-vector-in-action-recognition</id>
   <content type="html">&lt;p&gt;This is a summary of doing human action recognition using Fisher Vector with (Improved) Dense Trjectory Features(DTF, http://lear.inrialpes.fr/~wang/improved_trajectories) and STIP features(http://crcv.ucf.edu/ICCV13-Action-Workshop/download.html) on UCF 101 dataset(&lt;a href=&quot;http://crcv.ucf.edu/data/UCF101.php&quot;&gt;http://crcv.ucf.edu/data/UCF101.php&lt;/a&gt;). In the STIP features, two low-level visual features HOG and HOF are integrated, with dimensions 72 and 90 respectively. The (improved) DTF employ more features(TR, HOG, HOF and MBHx/MBHy) with longer dimensions. &lt;/p&gt;

&lt;p&gt;You can find my Matlab code from &lt;a href=&quot;https://github.com/bo-yang&quot;&gt;my GitHub Channel&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bo-yang/dtf_fisher&quot;&gt;DTF + Fisher Vector code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bo-yang/stip_fisher&quot;&gt;STIP + Fisher Vector code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dense-trajectory-features&quot;&gt;Dense Trajectory Features&lt;/h3&gt;

&lt;p&gt;For some details of DTF, please refer to &lt;a href=&quot;http://bo-yang.github.io/2014/01/10/dense-trajectory-notes/&quot;&gt;my previous post&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;pipeline&quot;&gt;Pipeline&lt;/h3&gt;

&lt;p&gt;The pipeline of integrating DTF/STIP features and Fisher vectors is shown in Figure 1. The first step is subsampling a fixed number of STIP/DTF features(in my implementation, 1000) from each
video clip in training list, which will be used to do PCA and train
Gaussian Mixture Models(GMMs).&lt;/p&gt;

&lt;p&gt;After getting the PCA coefficients and GMM parameters, treat UCF 101 video clips
action by action. For each action, first load all train videos in this
action(positive videos), and then randomly load the same number of video
clips not in this action(negative videos). All of the loaded videos are
multiplied with the saved PCA coefficients in order to reduce dimensions
and rotate matrices. Fisher vectors are computed for each loaded video
clip. Finally a binary SVM model is trained with both the positive and negative
Fisher vectors.&lt;/p&gt;

&lt;p&gt;When dealing with the test videos, similar process is adopted. The only
difference is that the Fisher vectors are used for SVM classification,
which is based on the SVM model trained with training videos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/fisher_pipeline.png&quot; alt=&quot;Figure 1. Pipeline of UCF101 action recognition using Fisher
vector.&quot; /&gt;.&lt;/p&gt;

&lt;p&gt;To well utilize the STIP or DTF features, features(HOG, HOF, MBH, etc.) are treated
separately and they are only combined(simple concatenation) after computing Fisher
vectors before linear SVM classification.&lt;/p&gt;

&lt;h3 id=&quot;pre-processing&quot;&gt;Pre-processing&lt;/h3&gt;

&lt;h4 id=&quot;stip-features&quot;&gt;STIP Features&lt;/h4&gt;

&lt;p&gt;The offcial STIP features are stored in class, which means that all the STIP
info of all video clips in each class are mixed together in a file. To
extract STIP features for each video, I wrote a script(mk_stip_data)
to separate STIP features for each video clip. And all the following
operations are based on each video clip.&lt;/p&gt;

&lt;h4 id=&quot;dtf-features&quot;&gt;DTF Features&lt;/h4&gt;

&lt;p&gt;Since the DTF features are “dense”(which means a lot of data), it took me 4~5 days to exact the (improved) DTF features of UCF 101 clips with the dedault parameters on a modern Linux desktop(I used 10 threads for extraction in paralle). The installation of DTF tools was also a very tricky task.&lt;/p&gt;

&lt;p&gt;To save space, all the DTF features were compressed. For UCF101, it would cost about 500GB after zip compression. And the required space would doubled if not compressing. If you don’t want to save the DTF features, you can call the DTF tools in Matlab and discard the extracted features.&lt;/p&gt;

&lt;h3 id=&quot;fisher-vector&quot;&gt;Fisher Vector&lt;/h3&gt;

&lt;p&gt;The Fisher Vector (FV) representation of visual features is an extension of the popular bag-of-visual words (BOV)[1]. Both of them are based on an intermediate representation, the visual vocabulary built in the low level feature space. A probability density function (in most cases a Gaussian Mixture Model) is used to model the visual vocabulary, and we can compute the gradient of the log likelihood with respect to the parameters of the model to represent an image or video. The Fisher Vector is the concatenation of these partial derivatives and describes in which direction the parameters of the model should be modified to best fit the data. This representation has the advantage to give similar or even better classification performance than BOV obtained with supervised visual vocabularies.  &lt;/p&gt;

&lt;p&gt;Following is the algorithm of computing Fisher vectors from features(actually I implemented this algorithm in Matlab, and if you are interested, please refer &lt;a href=&quot;https://github.com/bo-yang/stip_fisher/blob/master/fisher_encode.m&quot;&gt;here&lt;/a&gt;):
&lt;img src=&quot;/assets/images/fisher_vector_algorithm.png&quot; alt=&quot;Figure 2. Algorithm of computing Fisher vectors.&quot; /&gt;.&lt;/p&gt;

&lt;p&gt;During the subsampling of STIP features, I randomly chose 1000 HOG or
HOF features from each training video clip. For some videos, if the
total number of features were less than 1000, I would use all of their
features. All the subsampled features are square rooted after L1
normalization.&lt;/p&gt;

&lt;p&gt;After that, the dimensions of the subsampled features were reduced to
half of their original dimensions by doing PCA. At this step, the
coefficients of PCA were recorded, which would be used in later. The
GMMs were trained with the half-sized features, and the parameters of
GMMs(i.e. weight, mean and covariance) were stored for the following
process. In my program, the GMM code implemented by Oxford Visual
Geometry
Group(VGG, http://www.robots.ox.ac.uk/~vgg/software/enceval_toolkit/)
is used, which eventually call VLFeat(http://www.vlfeat.org/). In my
code, 256 Gaussians were used.&lt;/p&gt;

&lt;h3 id=&quot;svm-classification&quot;&gt;SVM Classification&lt;/h3&gt;

&lt;p&gt;Binary SVM classification(&lt;a href=&quot;http://www.csie.ntu.edu.tw/~cjlin/libsvm/&quot;&gt;LIBSVM&lt;/a&gt;) is used in my implementation.
For each action, positive video clips are labeled as 1 while negative
videos are as labeled -1 during training and test. In my code, SVM cost
is set to 100. The option of SVM training is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;-t 0 -s 0 -q -c 100 -b 1.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;results&quot;&gt;Results&lt;/h3&gt;

&lt;p&gt;The action recognition accuracy of all the 101 actions was 77.95% when
using above pipeline. And the confusion matrix is shown in Figure 3.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/confusionmat_101.png&quot; alt=&quot;Figure 3. Confusion matrix of all the 101 actions with STIP features.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The mean accurary of the fist 10 actions with DTF features was 90.6%, while the STIP was only 84.32%. The mean accuracy of the whole UCF 101 data(train/test list 1) was around 85%, about 8% higher than using BOV representation(internal test). And the best result I got with the ISA network on UCF 101 was only 58% last year.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;It is obvious that Fisher vector can lead to better results than Bag-of-visual words in action recognition. Compared to other low-level visual features, DTF features have more advantages in action recognition. However, in the long run I still believe deep learning methods - when deep neural networks could be trained with millions of vidios[5], they would learn more info from scratch and achieve state-of-the-art accuracy.&lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Gabriela Csurka, Florent Perronnin, &lt;em&gt;Fisher Vectors: Beyond Bag-of-Visual-Words Image Representations&lt;/em&gt; , Communications in Computer and Information Science Volume 229, 2011, pp 28-42.&lt;/li&gt;
  &lt;li&gt;Chih-Chung Chang and Chih-Jen Lin. &lt;em&gt;Libsvm: A library for support vector machines&lt;/em&gt;. ACM Trans. Intell. Syst. Technol., 2(3):27:1–27:27, May 2011.&lt;/li&gt;
  &lt;li&gt;Heng Wang and Cordelia Schmid. &lt;em&gt;Action Recognition with Improved Trajectories&lt;/em&gt;. In ICCV 2013 - IEEE International Conference on Computer Vision, Sydney, Australia, December 2013. IEEE.&lt;/li&gt;
  &lt;li&gt;Jorge Sanchez, Florent Perronnin, Thomas Mensink, and Jakob Verbeek. &lt;em&gt;Image Classification with the Fisher Vector: Theory and Practice&lt;/em&gt;. International Journal of Computer Vision, 105(3):222–245, December 2013.&lt;/li&gt;
  &lt;li&gt;Andrej Karpathy, George Toderici, Sanketh Shetty, Thomas Leung, Rahul Sukthankar, and Li Fei-Fei. &lt;em&gt;Large-scale video classification with convolutional neural networks&lt;/em&gt;. In CVPR, 2014.&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>How To Install Jekyll in Mac OSX Mavericks</title>
   <link href="http://bo-yang.github.com//2014/03/29/how-to-install-jekyll-in-mac-osx-mavericks"/>
   <updated>2014-03-29T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2014/03/29/how-to-install-jekyll-in-mac-osx-mavericks</id>
   <content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;http://xthinking.com/github/2014/03/17/github_install_jekyll_mavericks.html&quot;&gt;Procedure of installing Jekyll in Mac OS X&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Install Xcode Command line tools: &lt;a href=&quot;http://stackoverflow.com/questions/9329243/xcode-4-4-and-later-install-command-line-tools&quot;&gt;http://stackoverflow.com/questions/9329243/xcode-4-4-and-later-install-command-line-tools&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Clang error during install Jekyll&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;/p&gt;
&lt;div dir=&quot;ltr&quot;&gt;
&lt;table&gt;
&lt;col width=&quot;*&quot; /&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre class=&quot;plain&quot;&gt;
clang: error: unknown argument: &#39;-multiply_definedsuppress&#39; [-Wunused-command-line-argument-hard-error-in-future]
clang: note: this will be a hard error (cannot be downgraded to a warning) in the future
make: *** [redcarpet.bundle] Error 1

make failed, exit code 2 &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Solution:&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;div dir=&quot;ltr&quot;&gt;
&lt;table&gt;
&lt;col width=&quot;*&quot; /&gt;
&lt;tbody&gt;
&lt;tr&gt;
	&lt;td&gt;
		&lt;pre class=&quot;cpp&quot;&gt;
export ARCHFLAGS=&quot;-Wno-error=unused-command-line-argument-hard-error-in-future&quot;
export CFLAGS=-Wunused-command-line-argument-hard-error-in-future
export CPPFLAGS=-Qunused-arguments
sudo -E gem install jekyll &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;i&gt;[Note]: Above is only a temporary workaround for Xcode 5.1.&lt;/i&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;b&gt;References&lt;/b&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;http://xthinking.com/github/2014/03/17/github_install_jekyll_mavericks.html&quot;&gt;http://xthinking.com/github/2014/03/17/github_install_jekyll_mavericks.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;http://stackoverflow.com/questions/22313407/clang-error-unknown-argument-mno-fused-madd-python-package-installation-fa&quot;&gt;http://stackoverflow.com/questions/22313407/clang-error-unknown-argument-mno-fused-madd-python-package-installation-fa&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;http://forums.getpebble.com/discussion/11862/installation-error-perhaps-due-to-xcode-5-1&quot;&gt;http://forums.getpebble.com/discussion/11862/installation-error-perhaps-due-to-xcode-5-1&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://langui.sh/2014/03/10/wunused-command-line-argument-hard-error-in-future-is-a-harsh-mistress/&quot;&gt;https://langui.sh/2014/03/10/wunused-command-line-argument-hard-error-in-future-is-a-harsh-mistress/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;http://stackoverflow.com/questions/9329243/xcode-4-4-and-later-install-command-line-tools&quot;&gt;http://stackoverflow.com/questions/9329243/xcode-4-4-and-later-install-command-line-tools&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>C++ Code to Print Pascal Triangle</title>
   <link href="http://bo-yang.github.com//2014/03/26/c-code-to-print-pascal-triangle"/>
   <updated>2014-03-26T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2014/03/26/c-code-to-print-pascal-triangle</id>
   <content type="html">&lt;p&gt;
	Printing Pascal Triangle seems like an easy problem, however, it is not that easy to print a good-looking Pascal Triangle.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
	To print the Pascal Triangle, for each line, first print spaces to the left of numbers, and then print digit numbers.&lt;/p&gt;
&lt;p&gt;
	To calculate Pascal numbers, two assays can be used: one array to store numbers of above line, the other array to store numbers of this line. The first line has 1 number(1), the second lien has 2 numbers(1 1), the third line has three numbers(1 2 1) and so on.&lt;/p&gt;
&lt;p&gt;
	To make the Pascal Triangle more readable, print spaces between two neighbor &amp;nbsp;numbers in the same line.&lt;/p&gt;&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;// Pascal triangle
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;iomanip&amp;gt;
#include &amp;lt;cstring&amp;gt;
using namespace std;

const int WIDTH=7;
int main()
{
	int* oldarr=new int[WIDTH]; // store numbers of above row
	int* newarr=new int[WIDTH]; // store numbers of current row

	for(int i=0;i&amp;lt;WIDTH;++i) // cntrol row counting
	{
		for(int j=0;j&amp;lt;WIDTH-i-1;++j) // left space
			cout&amp;lt;&amp;lt;setw(2)&amp;lt;&amp;lt;&amp;quot; &amp;quot;;

		// set default boundary numbers
		newarr[0]=1;
		if(i&amp;gt;=1)
			newarr[i]=1;

		if(i&amp;gt;=2)
		{
			for(int k=1;k&amp;lt;i;++k)
				newarr[k]=oldarr[k-1]+oldarr[k];
		}
		memcpy(oldarr,newarr,sizeof(int)*WIDTH);

		// Print the middle part
		int idx=0;
		int flag=(WIDTH-i-1)%2;
		for(int j=WIDTH-i-1;j&amp;lt;WIDTH+i;++j)
		{
			if(j%2==flag)
			{
				cout&amp;lt;&amp;lt;setw(2)&amp;lt;&amp;lt;newarr[idx++];
			} else {
				cout&amp;lt;&amp;lt;setw(2)&amp;lt;&amp;lt;&amp;quot; &amp;quot;;
			}
		}
		
		//for(int j=WIDTH+i;j&amp;lt;WIDTH;++j) // Print right space, if you like
		//	cout&amp;lt;&amp;lt;setw(4)&amp;lt;&amp;lt;&amp;quot; &amp;quot;;

		cout&amp;lt;&amp;lt;endl;
	}

	delete [] oldarr;
	delete [] newarr;

	return 0;
}
&lt;/pre&gt;
&lt;p&gt;
The output looks like:&lt;/p&gt;&lt;/p&gt;
&lt;pre class=&quot;plain&quot;&gt;             1
           1   1
         1   2   1
       1   3   3   1
     1   4   6   4   1
   1   5  10  10   5   1
 1   6  15  20  15   6   1&lt;/pre&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>BACI Simple Install and Compile Guide</title>
   <link href="http://bo-yang.github.com//2014/01/22/baci-simple-install-and-compile-guide"/>
   <updated>2014-01-22T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2014/01/22/baci-simple-install-and-compile-guide</id>
   <content type="html">&lt;p&gt;This is a guideline for a course of this semester, for which I am serving as a teaching assistant. I publish it here in hope that it can also help someone else who want to use BACI.&lt;/p&gt;
&lt;h2&gt;Install BACI&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Go to &lt;a href=&quot;http://inside.mines.edu/~tcamp/baci/baci_index.html#Obtain&quot;&gt;http://inside.mines.edu/~tcamp/baci/baci_index.html#Obtain&lt;/a&gt; and download BACI executables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;http://inside.mines.edu/~tcamp/baci/badosxe-2005Nov09.zip&quot;&gt;BACI DOS executables&lt;/a&gt; for Windows,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;http://inside.mines.edu/~tcamp/baci/balnxxe32-2007Nov25.tar.gz&quot;&gt;BACI LINUX executables (32 bit)&lt;/a&gt; and &lt;a href=&quot;http://inside.mines.edu/~tcamp/baci/balnxxe64-2012Oct01.tar.gz&quot;&gt;BACI LINUX executables (64 bit)&lt;/a&gt; for Linux.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;For windows user, after download and unzip the BACI DOS executables, please put the folder called badosxe directly under the C:\ drive so it’s easy to find it. You can do all your BACI work inside this directory.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;If your badosxe folder is C:\badosxe, then in your command prompt (cmd) your path should be C:\badosxe&amp;gt; bacc &amp;lt;file_name&amp;gt; .&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;For Linux user, after download and gunzip the BACI executables, please make sure to add balnxxe into your PATH: export PATH=$PATH:/path/to/your/balnxxe (You also can add this line into $HOME/.profile, so that this command will be executed every time you login).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;If you want to use jBACI(BACI with a graphical IDE), please go to &lt;a href=&quot;https://code.google.com/p/jbaci/downloads/list&quot;&gt;https://code.google.com/p/jbaci/downloads/list&lt;/a&gt;, and choose the &lt;a href=&quot;https://code.google.com/p/jbaci/downloads/detail?name=jbaci-1.4.6.binaries.zip&amp;amp;can=2&amp;amp;q=&quot;&gt;jbaci-1.4.6.binaries.zip&lt;/a&gt;. Unfortunately, currently jBACI is only available for Windows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;If you want to use BACI on the Eustis server, please download Linux version BACI first, gunzip it and then upload them into your home folder of Eustis server. Please remember to add BACI executables into your PATH(as step 3).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;NetBeans + BACI plugin is the best choice for people who prefer a modern IDE or MAC users. You need to install NetBeans first, and then follow the &lt;a href=&quot;http://www.cslab.pepperdine.edu/warford/cosc450/cosc-450-Setup-for-BACI.pdf&quot;&gt;guide of setting up BaciBeans&lt;/a&gt;. NetBeans is a cross-platform IDE, so it can work on all operating systems that have Java JDK installed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Compile and run BACI program&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Make sure that bacc is in your PATH, or put your BACI program in the same folder of bacc. Note the .cm extension. This is the extension that identifies BACI source files to the BACI compiler.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Invoke the compile command bacc your_prog.cm. This creates an object file called your_prog.pco and also a listing file called your_prog.lst.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Invoke the interpreter through the command bainterp your_prog (please note, there is no suffix here) to execute your code. bainterp has an option -t that will display the order in which processes terminate within the program.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Verify the installation of BACI&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Download &lt;a href=&quot;http://www.cs.ucf.edu/courses/cop4020/spr2014/BACI/example.cm&quot;&gt;example.cm&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Run command  bacc example.cm. If you see following outputs, then the example.cm is successfully compiled:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p dir=&quot;ltr&quot;&gt;bo@HEC-2GQFTK1:~/Documents/BACI$ bacc example.cm&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Pcode and tables are stored in example.pco&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Compilation listing is stored in example.lst&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Execute command  bainterp -t example. If you get following message, then bainterp runs correctly.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p dir=&quot;ltr&quot;&gt;bo@HEC-2GQFTK1:~/Documents/BACI$ bainterp -t example&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Source file: example.cm  Wed Jan 22 15:16:12 2014&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Executing PCODE ...&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;before v(count) value of count is 0&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;process 2 increment,  procedure increment ended&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;before p(count) value of count is 1&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;process 1 decrement,  procedure decrement ended&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;http://inside.mines.edu/~tcamp/baci/baci_index.html#Using&quot;&gt;More Options of BACI Compiler&lt;/a&gt;&lt;/h2&gt;
&lt;p dir=&quot;ltr&quot;&gt;A BACI source file using the C-- compiler should use a .cm suffix. To execute a program in BACI, there are two steps:&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;1. Compile a &quot;.cm&quot; file to obtain a PCODE file (.pco)&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Usage: bacc [optional_flags] source_filename&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Optional_flags:&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;-h show this help&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;-c make a .pob object file for subsequent linkingInterpret a PCODE file (.pco) to execute the program&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;2. Usage bainterp [optional_flags] pcode_filename&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Optional_flags:&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;-d enter the debugger, single step, set breakpoints&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;-e show the activation record (AR) on entry to each process&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;-x show the AR on exit from each process&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;-t announce process termination&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;-h show this help&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;-p show PCODE instructions as they are executed&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;There is a shell script, baccint, that will call the compiler and then call the interpreter for you. It passes the options that you give it along to the interpreter. If you are using the Pascal compiler syntax, then the source file should be with a .pm suffix, and you compile the program with the bapas compiler.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Dense Trajectory Notes</title>
   <link href="http://bo-yang.github.com//2014/01/10/dense-trajectory-notes"/>
   <updated>2014-01-10T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2014/01/10/dense-trajectory-notes</id>
   <content type="html">&lt;p&gt;&lt;span style=&quot;font-size:12px;font-weight:bold;line-height:1em;&quot;&gt;Notes of Dense Trajectories&lt;/span&gt;&lt;img class=&quot;aligncenter&quot; style=&quot;font-size:12px;font-weight:bold;line-height:1em;&quot; alt=&quot;&quot; src=&quot;https://lh6.googleusercontent.com/AysSQ7M6yvc5hbkBHzsEHc1c7L4ZJcIXmdSfzh9g4iBDsL_q9lZD_8fhH8TEPMwAJ12Kp_s4z1FWmX3rndc6DTFAwARyWkx-mJiixB4X7nQRV5XcB391xltefQ&quot; width=&quot;568px;&quot; height=&quot;178px;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;densely sample feature points in each frame&lt;/li&gt;
&lt;li&gt;track points in the video based on optical flow.&lt;/li&gt;
&lt;li&gt;compute multiple descriptors along the trajectories of feature points to capture shape, appearance and motion information.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;Dense Sampling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Sampling step size \( W=5 \) pixels&lt;/li&gt;
&lt;li&gt;# spatial scales ≤ 8&lt;/li&gt;
&lt;li&gt;Spatial scale increase: \( 1 / \sqrt{2} \)&lt;/li&gt;
&lt;li&gt;Removing points in homogeneous areas: 
$$ T=0.001 \times \max_{i \in l}\min(\lambda_{i}^{1},\lambda_{i}^{2}) $$,
where \( (\lambda_{i}^{1},\lambda_{i}^{2}) \) are eigenvalues of point \(i\) in image \(I\) (the auto-correlation matrix).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;Descriptors&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Trajectory shape descriptor(TR):&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://lh3.googleusercontent.com/TZG6Zx9WlI95UsEDsemdeXUHBtPrV6gJh_50zZzKJYTV45heKGfIx7xjlN079nJUZWMb93j9Vr72R0cvPQtdyVb49vDDeFpcLhcjeVq_VL8JhSh2VlZwtvNnxw&quot; width=&quot;206px;&quot; height=&quot;61px;&quot; /&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;where L is the length of trajectory, and the displacement vectors &lt;img alt=&quot;&quot; src=&quot;https://lh3.googleusercontent.com/DqC7Y6vrH4mfXOVQQ29w8S9KH4jNH6kPpmyViWd5AhXhpVebHPO5xMTIdyWVAOPMvFU379KWsBR5FjV6cER0-whR6TxlBpch33vMqEVDXwC80uon5hQJMR3cxg&quot; width=&quot;422px;&quot; height=&quot;27px;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HOG – static appearance information&lt;/li&gt;
&lt;li&gt;HOF – local motion information&lt;/li&gt;
&lt;li&gt;MBH – motion descriptor for trajectories&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;Format of DTF features&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;The format of the computed features&lt;/h4&gt;
&lt;p dir=&quot;ltr&quot;&gt;The features are computed one by one, and each one in a single line, with the following format:&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;frameNum mean_x mean_y var_x var_y length scale x_pos y_pos t_pos Trajectory HOG HOF MBHx MBHy&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;The first 10 elements are information about the trajectory:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;frameNum:     The trajectory ends on which frame&lt;/li&gt;
&lt;li&gt;mean_x:       The mean value of the x coordinates of the trajectory&lt;/li&gt;
&lt;li&gt;mean_y:       The mean value of the y coordinates of the trajectory&lt;/li&gt;
&lt;li&gt;var_x:        The variance of the x coordinates of the trajectory&lt;/li&gt;
&lt;li&gt;var_y:        The variance of the y coordinates of the trajectory&lt;/li&gt;
&lt;li&gt;length:       The length of the trajectory&lt;/li&gt;
&lt;li&gt;scale:        The trajectory is computed on which scale&lt;/li&gt;
&lt;li&gt;x_pos:        The normalized x position w.r.t. the video (0~0.999), for spatio-temporal pyramid&lt;/li&gt;
&lt;li&gt;y_pos:        The normalized y position w.r.t. the video (0~0.999), for spatio-temporal pyramid&lt;/li&gt;
&lt;li&gt;t_pos:        The normalized t position w.r.t. the video (0~0.999), for spatio-temporal pyramid&lt;/li&gt;
&lt;/ul&gt;
&lt;p dir=&quot;ltr&quot;&gt;The following element are five descriptors concatenated one by one:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Trajectory:    2x[trajectory length] (default 30 dimension)&lt;/li&gt;
&lt;li&gt;HOG:           8x[spatial cells]x[spatial cells]x[temporal cells] (default 96 dimension)&lt;/li&gt;
&lt;li&gt;HOF:           9x[spatial cells]x[spatial cells]x[temporal cells] (default 108 dimension)&lt;/li&gt;
&lt;li&gt;MBHx:          8x[spatial cells]x[spatial cells]x[temporal cells] (default 96 dimension)&lt;/li&gt;
&lt;li&gt;MBHy:          8x[spatial cells]x[spatial cells]x[temporal cells] (default 96 dimension)&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;h3&gt;Improved Dense Trajectories&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Explicit camera motion estimation&lt;/li&gt;
&lt;li&gt;Assumption: two consecutive frames are related by a homography.&lt;/li&gt;
&lt;li&gt;Match feature points between frames using SURF descriptors and dense optical flow&lt;/li&gt;
&lt;li&gt;Removing inconsistent matches due to humans: use a human detector to remove matches from human regions (computation expensive)&lt;/li&gt;
&lt;li&gt;Estimate a homography with RANSAC with these matches&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;References:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;div&gt;H Wang, C Schmid, Action recognition with improved trajectories, ICCV 2013&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;H Wang, A Kläser, C Schmid, CL Liu, Dense trajectories and motion boundary descriptors for action recognition, International Journal of Computer Vision, May 2013, Volume 103, Issue 1, pp 60-79&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Parallelize mex file in Matlab</title>
   <link href="http://bo-yang.github.com//2013/10/20/parallel-mex-file-in-matlab"/>
   <updated>2013-10-20T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2013/10/20/parallel-mex-file-in-matlab</id>
   <content type="html">&lt;p&gt;By default mex file cannot be executed in parallel in Matlab, which will be a major bottleneck for Matlab program. Fortunately, there is a way to execute loop operations in parallel -- &lt;a href=&quot;http://www.mathworks.com/help/distcomp/parfor.html&quot;&gt;parfor&lt;/a&gt;. Matlab provides a good tutorial on parfor: &lt;a href=&quot;http://www.mathworks.com/help/distcomp/getting-started-with-parfor.html&quot;&gt;Getting Started with parfor&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One tricky problem with parfor is dealing with reduction assignments, which means the value of some variables are updated by each iteration, such as assignment to an array/matrix indexed by loop index.  My suggestion is to separate the loop into two parts: one part deal with non-reduction assignment with &lt;code&gt;parfor&lt;/code&gt;, and the other part do the reduction assignment with traditional &lt;code&gt;for&lt;/code&gt; loop.&lt;/p&gt;
&lt;p&gt;If you cannot save all the &lt;code&gt;parfor&lt;/code&gt;-assigned variables in memory, then you must save them into mat file and load them in the next for-loop. In the &lt;code&gt;parfor&lt;/code&gt;-loop, command &quot;&lt;code&gt;save&lt;/code&gt;&quot; cannot  be used directly because it violates the transparency(God knows what does it mean!). As an alternative, you can create a wrapper function of &lt;code&gt;save&lt;/code&gt; and call that function instead. FOr example:&lt;/p&gt;
&lt;p&gt;Save the following as &quot;parsave.m&quot;:&lt;br /&gt;
&lt;code&gt;function parsave(fname, x,y)&lt;br /&gt;
save(fname, &#39;x&#39;, &#39;y&#39;)&lt;br /&gt;
end&lt;br /&gt;
&lt;/code&gt;&lt;br /&gt;
Then run it with:&lt;br /&gt;
&lt;code&gt;parfor ii = 1:4&lt;br /&gt;
x = rand(10,10);&lt;br /&gt;
y = ones(1,3);&lt;br /&gt;
parsave(sprintf(&#39;output%d.mat&#39;, ii), x, y);&lt;br /&gt;
end&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;parfor manual: http://www.mathworks.com/help/distcomp/parfor.html&lt;/li&gt;
&lt;li&gt;Getting Started with parfor: http://www.mathworks.com/help/distcomp/getting-started-with-parfor.html&lt;/li&gt;
&lt;li&gt;How do I use SAVE with a PARFOR loop: http://www.mathworks.com/support/solutions/en/data/1-D8103H/?product=DM&amp;amp;solution=1-D8103H&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Notes of Advanced Machine Learning(I)</title>
   <link href="http://bo-yang.github.com//2013/10/11/notes-of-advanced-machine-learningi"/>
   <updated>2013-10-11T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2013/10/11/notes-of-advanced-machine-learningi</id>
   <content type="html">&lt;ol&gt;
&lt;li&gt;Two different ways represent a distribution over several random variables: (1) product of conditional probabilities: \(p(x_1,x_2,x_3,x_4)=p(x_4)p(x_3|x_4)p(x_2|x_3,x_4)p(x_1|x_2,x_3,x_4)\) and (2) global energy function: \(p(x_1,x_2,x_3,x_4)=\frac{1}{Z}e^{-E(x_1,x_2,x_3,x_4)}\), where \(Z\) is the partition function.&lt;/li&gt;
&lt;li&gt;Directed graphical models use conditional probabilities, which undirected graphical models use energy functions that are a sum of several terms. Deep belief net(DBN) is a hybrid model.&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h3&gt;Probabilistic Model&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p dir=&quot;ltr&quot;&gt;Two different ways represent a distribution over several random variables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;product of conditional probabilities: p(x1,x2,x3,x4)=p(x4)p(x3|x4)p(x2|x3,x4)p(x1|x2,x3,x4)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;global energy function:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p dir=&quot;ltr&quot;&gt;p(x1,x2,x3,x4)=1Ze{-E(x1,x2,x3,x4)},&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;where Zis the partition function.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Directed graphical models use conditional probabilities(Bayesian networks), while undirected graphical models(Markov random fields, Boltzmann machines) use energy functions that are a sum of several terms. Deep belief net(DBN) is a hybrid model.&lt;/p&gt;
&lt;h4&gt;Directed Graphs&lt;/h4&gt;
&lt;p dir=&quot;ltr&quot;&gt;Directed graphs are useful for expressing causal relationships between random variables.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;The joint distribution defined by the graph is given by the product of a conditional distribution for each node conditioned on its parents.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;For example, the joint distribution over x1,,x7 factorizes:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p dir=&quot;ltr&quot;&gt;p(x)=p(x1)p(x2)p(x3)p(x4|x1,x2,x3)p(x5|x1,x3)p(x6|x4)p(x7|x4,x5)&lt;/p&gt;
&lt;h4&gt;Markov Random Fields&lt;/h4&gt;
&lt;p dir=&quot;ltr&quot;&gt;p(x)=1Zcc(xc)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Each potential function is a mapping from joint configurations of random variables in a clique to non-negative real numbers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;The choice of potential functions is not restricted to having specific probabilistic interpretations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Potential functions are often represented as exponentials:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p dir=&quot;ltr&quot;&gt;p(x)=1Zcc(xc)=1Z(-cE(xc))=1Z(-E(x)) (Boltzmann distribution)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Computing Z is very hard, which represents a major limitation of undirected models.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p dir=&quot;ltr&quot;&gt;
&lt;hr /&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;h3&gt;Singular Value Decomposition&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p dir=&quot;ltr&quot;&gt;Singular Value Decomposition(SVD) is a factorization of a real or complex matrix. Formally, the singular value decomposition of an mn matrix M is a factorization of the form&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;M=UV*&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;where U is a mm unitary matrix,  is an mn rectangular diagonal matrix with nonnegative real numbers on the diagonal, and V*(the conjugate transpose of V: (V*)ij=Vji, for real matrix, it equals the transpose) is an nn unitary matrix.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;A complex square matrix U is unitary if U*U=UU*=I.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;The diagonal entries ij of  are known as the singular values of M, which means they are the square roots of the eigenvalues of matrix MM*. The m columns of U and n columns of V are called the left-singular vectors and right-singular vectors of M, respectively.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;The SVD and the eigendecomposition are closely related:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;The left-singular vectors of M(columns of U) are eigenvectors of MM*.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;The right-singular vectors of M(columns of V) are eigenvectors of M*M.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;The non-zero singular values of M(diagonal entries of ) are the square roots of the non-zero eigenvalues of both M*M and MM*.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;U Toronto CSC2535: &lt;a href=&quot;http://www.cs.toronto.edu/~hinton/csc2535/lectures.html&quot;&gt;http://www.cs.toronto.edu/~hinton/csc2535/lectures.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>"undefined reference" error during installing OpenCV</title>
   <link href="http://bo-yang.github.com//2013/10/10/undefined-reference-error-during-installing-opencv"/>
   <updated>2013-10-10T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2013/10/10/undefined-reference-error-during-installing-opencv</id>
   <content type="html">&lt;p&gt;Many people(including me) met the infamous &quot;undefined reference&quot; error during installing OpenCV, such as&lt;/p&gt;
&lt;pre&gt;../../lib/libopencv_highgui.so.2.4.1: undefined reference to `avpriv_vorbis_parse_extradata’
../../lib/libopencv_highgui.so.2.4.1: undefined reference to `av_des_init’
../../lib/libopencv_highgui.so.2.4.1: undefined reference to `av_rc4_crypt’
../../lib/libopencv_highgui.so.2.4.1: undefined reference to `av_aes_crypt’
../../lib/libopencv_highgui.so.2.4.1: undefined reference to `av_des_mac’
../../lib/libopencv_highgui.so.2.4.1: undefined reference to `av_tree_destroy’
../../lib/libopencv_highgui.so.2.4.1: undefined reference to `av_sha_update’
collect2: ld returned 1 exit status
make[2]: *** [bin/opencv_perf_imgproc] Error 1
make[1]: *** [modules/imgproc/CMakeFiles/opencv_perf_imgproc.dir/all] Error 2
make: *** [all] Error 2&lt;/pre&gt;
&lt;p&gt;This error was caused by lacking of or improper installation of &lt;a href=&quot;http://www.ffmpeg.org/&quot;&gt;ffmpeg&lt;/a&gt;. If you are sure the ffmpeg is successfully installed, and you can find &quot;– FFMPEG: YES&quot; after cmake opencv, then you&#39;d better think about adding option &quot;&lt;code&gt;--enable-shared&lt;/code&gt; &quot; when &lt;i&gt;configure&lt;/i&gt; ffmpeg. After re-installing ffmpeg, then this &quot;undefined reference&quot; error should disappear.&lt;/p&gt;
&lt;p&gt;PS: A very good guideline of installing OpenCV on Ubuntu: &lt;/p&gt;
&lt;h1&gt;&lt;a href=&quot;http://www.ozbotz.org/opencv-installation/&quot;&gt;A Comprehensive Guide to Installing and Configuring OpenCV 2.4.2 on Ubuntu&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;PPS: Damn Ubuntu!!!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Build Dense Trajectory Codes in Ubuntu</title>
   <link href="http://bo-yang.github.com//2013/10/10/build-dense-trajectory-codes-in-ubuntu"/>
   <updated>2013-10-10T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2013/10/10/build-dense-trajectory-codes-in-ubuntu</id>
   <content type="html">&lt;p&gt;Even when the OpenCV and ffmpeg have been successfully installed, you still may meet the error of &quot;&lt;strong&gt;undefined reference to main&lt;/strong&gt;&quot; when building the &lt;a href=&quot;http://lear.inrialpes.fr/people/wang/dense_trajectories&quot;&gt;Dense Trajectory code&lt;/a&gt;. Since the author didn&#39;t provide a solution, I share my workaround here -- just use command g++ directly:&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;g++ -o DenseTrack -pipe -D __STDC_CONSTANT_MACROS -D STD=std -Wall -I. -I/opt/include -O3 -DNDEBUG -ggdb -L/opt/lib -lopencv_core -lopencv_highgui -lopencv_video -lopencv_imgproc -lavformat -lavdevice -lavutil -lavcodec -lswscale *.h DenseTrack.cpp&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;The program &lt;em&gt;Video&lt;/em&gt; can be built in similar way, just substitute all &lt;em&gt;DenseTrack&lt;/em&gt; into Video.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Matlab Startup Script</title>
   <link href="http://bo-yang.github.com//2013/06/12/matlab-startup-script"/>
   <updated>2013-06-12T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2013/06/12/matlab-startup-script</id>
   <content type="html">&lt;p&gt;You can create a script named &lt;code&gt;startup.m&lt;/code&gt; under &lt;em&gt;userpath&lt;/em&gt;(in Windows and Mac OSX, default path is &lt;tt&gt;&lt;code&gt;Documents/MATLAB&lt;/code&gt;&lt;/tt&gt;). You can add whatever Matlab commands you want into &lt;code&gt;startup.m&lt;/code&gt;. For example, to add &lt;code&gt;/usr/local/bin&lt;/code&gt; into PATH, you can add command&lt;/p&gt;
&lt;p&gt;&lt;code&gt;setenv(&#39;PATH&#39;, [getenv(&#39;PATH&#39;) &#39;:/usr/local/bin&#39;]);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;into &lt;code&gt;startup.m&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;BTW, every time Matlab starts, configure file &lt;code&gt;$MATLABROOT/toolbox/local/matlabrc.m&lt;/code&gt; will be executed.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Counting Unique k-mers -- My First Go Program</title>
   <link href="http://bo-yang.github.com//2013/05/16/counting-unique-k-mers-my-first-go-program"/>
   <updated>2013-05-16T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2013/05/16/counting-unique-k-mers-my-first-go-program</id>
   <content type="html">&lt;p&gt;Previously, I wrote a Perl program to count the number of unique k-mers. It is very convenient to implement it in Perl, because Perl supports hash-of-hashes(which could dynamically count distinct k-mers) and sorting hashes by value(which can easily list the occurrences of unique k-mers in descending order).&lt;/p&gt;
&lt;p&gt;Unfortunately, comparing to C++, Perl program usually costs more memory and longer time. This is not a big issue when the FASTA files are not large(smaller than 400MB). However, when handling larger FASTA files, my Perl program would require more than 8GB memory, which exceeds the limits of my computer. Therefore, I decided to rewrite the program by Go, a system language that supports concurrent features and can has C/C++-comparable speed.&lt;/p&gt;
&lt;p&gt;The syntax of Go is very different from C/C++, which takes me a whole day familiarize. Some operations that can be implemented easily in Perl can only be done in complicated way, such as calling system command, reading file line-by-line, writing file and sorting map by value. Since this small tool doesn&#39;t involve network and concurrency, I cannot compare the difficulty of writing Go program to implement such work. &lt;/p&gt;
&lt;p&gt;Although the experience of the first Go program is not happy, I still think it is necessary to continue learning Go language, because Go program really runs very fast and saves memory(comparing to Perl script). And you don&#39;t need to worry about the tricky part of C++. &lt;/p&gt;

&lt;pre&gt;
// kmerfreq - count unique k-mers from a fasta file.

package main

import (
	&quot;bufio&quot;
	&quot;bytes&quot;
	&quot;flag&quot;
	&quot;fmt&quot;
	&quot;io&quot;
	&quot;os&quot;
	&quot;os/exec&quot;
	&quot;strings&quot;
	&quot;strconv&quot;
)

// Readln returns a single line (without the ending \n)
// from the input buffered reader.
// An error is returned iff there is an error with the
// buffered reader.
func Readln(r *bufio.Reader) (string, error) {
	var (
		isPrefix bool  = true
		err      error = nil
		line, ln []byte
	)
	for isPrefix &amp;amp;&amp;amp; err == nil {
		line, isPrefix, err = r.ReadLine()
		ln = append(ln, line...)
	}
	return string(ln), err
}

func main() {
	// Get options
	var input = flag.String(&quot;i&quot;, &quot;&quot;, &quot;input fasta file&quot;)
	var kmer = flag.Int(&quot;k&quot;, 16, &quot;length of k-mer&quot;)
	flag.Parse()

	// Dynamically parse the input file name
	cmd := exec.Command(&quot;basename&quot;, *input)
	cmd.Stdin = strings.NewReader(&quot;some input&quot;)
	var name bytes.Buffer
	cmd.Stdout = &amp;amp;name
	err := cmd.Run()
	if err != nil {
		fmt.Println(err)
		return
	}
	var output = flag.String(&quot;o&quot;, fmt.Sprintf(&quot;%s.%d-mer&quot;, strings.TrimSpace(name.String()), *kmer), &quot;output file&quot;)
	flag.Parse()

	// open input file
	fi, err := os.Open(*input)
	if err != nil {
		panic(err)
	}
	// close fi on exit and check for its returned error
	defer func() {
		if err := fi.Close(); err != nil {
			panic(err)
		}
	}()

	// open output file
	fo, err := os.Create(*output)
	if err != nil {
		panic(err)
	}
	// close fo on exit and check for its returned error
	defer func() {
		if err := fo.Close(); err != nil {
			panic(err)
		}
	}()

	// Read and count unique k-mers
	var read string = &quot;&quot;
	var km map[string]int  // k-mer counts
	km = make(map[string]int)

	r := bufio.NewReader(fi)
	for {
		line, err := Readln(r)
		if err == io.EOF {
			if !strings.HasPrefix(line, &quot;&amp;gt;&quot;) {
				read += line
			}
			break // done
		} else if err != nil {
			panic(err) // error happens
		}
		if strings.HasPrefix(line, &quot;&amp;gt;&quot;) {
			// Header of the read
			if len(read) != 0 {
				// count k-mers
				for i := 0; i &amp;lt; len(read)-*kmer+1; i++ {
					if km[read[i:i+*kmer]] != 0 {
						km[read[i:i+*kmer]]++
					} else {
						km[read[i:i+*kmer]] = 1
					}
				}
				read = &amp;quot;&amp;quot;
			}
		} else {
			// Read
			read += line
		}
	} // end of for

	// don&amp;#039;t forget the last read
	if len(read) != 0 {
		// count k-mers
		for i := 0; i &amp;lt; len(read)-*kmer+1; i++ {
			if km[read[i:i+*kmer]] != 0 {
				km[read[i:i+*kmer]]++
			} else {
				km[read[i:i+*kmer]] = 1
			}
		}
	}

	// Write results
	for k, v := range km {
		fo.WriteString(k + &amp;quot;\t&amp;quot; + strconv.Itoa(v) + &amp;quot;\n&amp;quot;)
	}
}

&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Linear Space Sequence Alignment</title>
   <link href="http://bo-yang.github.com//2013/04/05/linear-space-sequence-alignment"/>
   <updated>2013-04-05T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2013/04/05/linear-space-sequence-alignment</id>
   <content type="html">&lt;p&gt;For explanation to linear space sequence alignment, please refer to &lt;a href=&quot;http://ai.stanford.edu/~serafim/CS262_2007/notes/lecture3.pdf&quot;&gt;http://ai.stanford.edu/~serafim/CS262_2007/notes/lecture3.pdf&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The algorithm and equation I used was from the textbook &lt;em&gt;Algorithm Design&lt;/em&gt; by Jon Kleinberg and Éva Tardos(2005):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013-04-05-linear-space-sequence-alignment/align_equation.png&quot; alt=&quot;align-equation&quot; /&gt;  &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013-04-05-linear-space-sequence-alignment/align_alg.png&quot; alt=&quot;align-alg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013-04-05-linear-space-sequence-alignment/space_efficient_equation.png&quot; alt=&quot;space-efficient-equation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013-04-05-linear-space-sequence-alignment/space_efficient_alg.png&quot; alt=&quot;space-efficient-alg&quot; /&gt;  &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013-04-05-linear-space-sequence-alignment/devide_and_conquer.png&quot; alt=&quot;divide-conquer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The algorithm of Backward-Space-Efficient-Alignment() is the reverse of Space-Efficient-Alignment().&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2013-04-05-linear-space-sequence-alignment/time_cost_plot.png&quot; alt=&quot;time_cost_plot&quot; /&gt; &lt;/p&gt;

&lt;p&gt;Time cost of sequences from 10bp-510bp.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/2013-04-05-linear-space-sequence-alignment/memory_cost_plot.png&quot; alt=&quot;memory_cost_plot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Memory cost of sequences from 10bp-510bp.&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;fstream&amp;gt;
#include &amp;lt;cstring&amp;gt;
#include &amp;lt;cmath&amp;gt;
#include &amp;lt;time.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;ctype.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;

using namespace std;

const int MATCH_COST=0;
const int MISMATCH_COST=2;
const int GAP_COST=1;

int memcnt=0; // counting memory allocated

struct BTNode
{
	int x; // x axis
	int y; // y axis
	char type; // &#39;m&#39;-match,&#39;s&#39;-mismatch,&#39;g&#39;-gap
	char nt; // valid neucleotide: x-sequence x, y-sequence y, b-both 
};

BTNode* P;
int pidx=0; // index of P

struct Region // region in a sequence
{
	int start; 
	int end;
};

//
// Generate random sequence
// 
char* GenRandSeq(char* seq, int n)
{
	string nt=&quot;ATCG&quot;;
	for(int i=0;i&amp;lt;n;++i)
	{
		int idx=rand()%4;
		seq[i]=nt[idx];
	}

	return seq;
}

int min(int a,int b,int c)
{
	return (a&amp;lt;b?a:b)&amp;lt;c?(a&amp;lt;b?a:b):c;
}

void Merge(BTNode* input, long p, long r)
{
	long mid = floor((p + r) / 2);
	long i1 = 0;
	long i2 = p;
	long i3 = mid + 1;

	// Temp array
	BTNode* temp=new BTNode[r-p+1];
	memcnt+=sizeof(BTNode)*(r-p+1);

	// Merge in sorted form the 2 arrays
	while ( i2 &amp;lt;= mid &amp;amp;&amp;amp; i3 &amp;lt;= r )
		if ( input[i2].x &amp;lt; input[i3].x )
			temp[i1++] = input[i2++];
		else
			temp[i1++] = input[i3++];

	// Merge the remaining elements in left array
	while ( i2 &amp;lt;= mid )
		temp[i1++] = input[i2++];

	// Merge the remaining elements in right array
	while ( i3 &amp;lt;= r )
		temp[i1++] = input[i3++];

	// Move from temp array to master array
	for ( int i = p; i &amp;lt;= r; i++ )
		input[i] = temp[i-p];

	delete [] temp;
}

// Merge sort the BTNode array by the first index(element x)
//
// inputs:
//	p - the start index of array input
//	r - the end index of array input
void Merge_sort(BTNode* input, long p, long r)
{
	if ( p &amp;lt; r )
	{
		long mid = floor((p + r) / 2);
		Merge_sort(input, p, mid);
		Merge_sort(input, mid + 1, r);
		Merge(input, p, r);
	}
}

//
// Insert new node into P
//
void InsertNodetoP(int x, int y)
{
	bool isok=true;
	for(int i=0;i&amp;lt;pidx;++i)
	{
		if(x==P[i].x &amp;amp;&amp;amp; y==P[i].y)
			isok=false;
	}
	if(isok)
	{
		P[pidx].x=x;
		P[pidx].y=y;
		pidx++;
	}
}

//
// Align seqences
//
// Recurrence:
// 	OPT(i,j)=min{   
// 			alpha(i,j)+OPT(i-1,j-1), 
// 			delta+OPT(i-1,j), 
// 			delta+OPT(i,j-1)
// 		}
// 	where mismatch cost alpha=2, match cost alpha=0, and gap cost delta=1.
//
// Parameters:
//	X,Y - sequences
//	m - length of sequence X
//	n - length of sequence Y
//
int Alignment(char* X, Region&amp;amp; rx, char* Y, Region&amp;amp; ry)
{
	int m=rx.end-rx.start+1;
	int n=ry.end-ry.start+1;

	int** S=new int*[m+1]; // temp array to store scores of alignment
	for(int i=0;i&amp;lt;m+1;++i)
		S[i]=new int[n+1];
	memcnt+=sizeof(int)*(m+1)*(n+1);

	for(int i=0;i&amp;lt;=m;++i)
		S[i][0]=i*GAP_COST;
	for(int j=0;j&amp;lt;=n;++j)
		S[0][j]=j*GAP_COST;

	for(int j=1;j&amp;lt;=n;++j)
	{
		for(int i=1;i&amp;lt;=m;++i)
		{
			int alpha;
			if(X[i-1]==Y[j-1])
				alpha=MATCH_COST;
			else
				alpha=MISMATCH_COST;

			S[i][j]=min(alpha+S[i-1][j-1],GAP_COST+S[i-1][j],GAP_COST+S[i][j-1]);
		}
	} // end of for

	// Trace back 
	int ix=m;
	int iy=n;
	int bt_len=m+n;// length of array to record tracing back
	int cnt=bt_len-1; 	
	BTNode* bt=new BTNode[bt_len]; // record backtrace path
	memcnt+=sizeof(BTNode)*bt_len;
	while(ix&amp;gt;=1 &amp;amp;&amp;amp; iy&amp;gt;=1)
	{
		bt[cnt].x=ix-1;
		bt[cnt].y=iy-1;
		InsertNodetoP(rx.start+ix-1,ry.start+iy-1);

		if(S[ix][iy]==S[ix-1][iy-1]+MATCH_COST &amp;amp;&amp;amp; X[ix-1]==Y[iy-1]) // match
		{
			bt[cnt].type=&#39;m&#39;;
			bt[cnt].nt=&#39;b&#39;;
			ix--;
			iy--;
		} else if(S[ix][iy]==S[ix-1][iy-1]+MISMATCH_COST) { // mismatch
			bt[cnt].type=&#39;s&#39;;
			bt[cnt].nt=&#39;b&#39;;
			ix--;
			iy--;
		} else if(S[ix][iy]==S[ix-1][iy]+GAP_COST) { // gap
			bt[cnt].type=&#39;g&#39;;
			bt[cnt].nt=&#39;x&#39;;
			ix--;
		} else if(S[ix][iy]==S[ix][iy-1]+GAP_COST) { // gap
			bt[cnt].type=&#39;g&#39;;
			bt[cnt].nt=&#39;y&#39;;
			iy--;
		} 	
		cnt--;
	}
	while(iy&amp;gt;0)
	{
		bt[cnt].x=ix-1;
		bt[cnt].y=iy-1;
		InsertNodetoP(rx.start+ix-1,ry.start+iy-1);

		if(S[ix][iy]==S[ix][iy-1]+GAP_COST) { // gap
			bt[cnt].type=&#39;g&#39;;
			bt[cnt].nt=&#39;y&#39;;
			iy--;
		}
		cnt--;
	}
	while(ix&amp;gt;0)
	{
		bt[cnt].x=ix-1;
		bt[cnt].y=iy-1;
		InsertNodetoP(rx.start+ix-1,ry.start+iy-1);

		if(S[ix][iy]==S[ix-1][iy]+GAP_COST) { // gap
			bt[cnt].type=&#39;g&#39;;
			bt[cnt].nt=&#39;x&#39;;
			ix--;
		}
		cnt--;
	}

/*	// Print the alignment
  	cnt++;
	// TEST ONLY
	for(int i=cnt;i&amp;lt;bt_len;++i)
	{
		cout&amp;lt;&amp;lt;&quot;(&quot;&amp;lt;&amp;lt;bt[i].x&amp;lt;&amp;lt;&quot;,&quot;&amp;lt;&amp;lt;bt[i].y&amp;lt;&amp;lt;&quot;) &quot;;
	}
	cout&amp;lt;&amp;lt;endl;

	// Print sequence X
	for(int i=cnt;i&amp;lt;bt_len;++i)
	{
		if(bt[i].nt==&#39;x&#39;||bt[i].nt==&#39;b&#39;)
		{
			if(bt[i].x&amp;lt;0)
				cout&amp;lt;&amp;lt;&#39;-&#39;;
			else
				cout&amp;lt;&amp;lt;X[bt[i].x];
		} else {
			cout&amp;lt;&amp;lt;&#39;-&#39;;
		}
	}
	cout&amp;lt;&amp;lt;endl;
	// print middle line
	for(int i=cnt;i&amp;lt;bt_len;++i)
	{
		if(bt[i].type==&#39;m&#39;)
			cout&amp;lt;&amp;lt;&#39;|&#39;;
		else
			cout&amp;lt;&amp;lt;&#39; &#39;;
	}
	cout&amp;lt;&amp;lt;endl;
	// print sequence Y
	for(int i=cnt;i&amp;lt;bt_len;++i)
	{
		if(bt[i].nt==&#39;y&#39;||bt[i].nt==&#39;b&#39;)
		{
			if(bt[i].y&amp;lt;0)
				cout&amp;lt;&amp;lt;&#39;-&#39;;
			else
				cout&amp;lt;&amp;lt;Y[bt[i].y];
		} else {
			cout&amp;lt;&amp;lt;&#39;-&#39;;
		}
	}
	cout&amp;lt;&amp;lt;endl; */

	delete [] bt;

	int score=S[m][n];

	for(int i=0;i&amp;lt;m+1;++i)
		delete [] S[i];
	delete [] S;

	return score;
}

// 
// Space efficient alignment, which caculate the length of the 
// shortest path from (0,0) to (i,j) and only can returns the optimal value.
//
int SpaceEfficientAlignment(int** S, char* X, int m, char* Y, int n)
{
	for(int i=0;i&amp;lt;=m;++i)
	{
		S[i][0]=i*GAP_COST;
	}

	for(int j=1;j&amp;lt;=n;++j)
	{
		S[0][1]=j*GAP_COST;
		for(int i=1;i&amp;lt;=m;++i)
		{
			int alpha;
			if(X[i-1]==Y[j-1])
				alpha=MATCH_COST;
			else
				alpha=MISMATCH_COST;

			S[i][1]=min(alpha+S[i-1][0],GAP_COST+S[i-1][1],GAP_COST+S[i][0]);
		}

		// move column 1 of S to column 0 to make room for next iteration
		for(int i=0;i&amp;lt;=m;++i)
			S[i][0]=S[i][1];
	}

	return S[m][1];
}

// 
// Backward space efficient alignment, which caculate the length of the 
// shortest path from (i,j) to (m,n) and only can returns the optimal value.
//
int BackwardSpaceEfficientAlignment(int** S, char* X, int m, char* Y, int n)
{
	for(int i=m;i&amp;gt;=0;--i)
	{
		S[i][1]=(m-i)*GAP_COST;
	}

	for(int j=n-1;j&amp;gt;=0;--j)
	{
		S[m][0]=(n-j)*GAP_COST;
		for(int i=m-1;i&amp;gt;=0;--i)
		{
			int alpha;
			//if(X[m-i-1]==Y[j])
			if(X[i]==Y[j])
				alpha=MATCH_COST;
			else
				alpha=MISMATCH_COST;

			S[i][0]=min(alpha+S[i+1][1],GAP_COST+S[i+1][0],GAP_COST+S[i][1]);
		}

		// move column 0 of S to column 1 to make room for next iteration
		for(int i=0;i&amp;lt;=m;++i)
			S[i][1]=S[i][0];
	}

	return S[0][0];
}

// 
// Find out the q that minimize the score f(q,n/2)+g(q,n/2)
//
// Inputs:
// 	sf - score vector of forward space efficient alignment
// 	sb - score vector of backward space efficient alignment
// 	m - length of the score vector
//
int FindMinScore(int** sf,int** sb,int m)
{
	int min=sf[1][1]+sb[1][0];
	int ret=1;
	for(int q=2;q&amp;lt;=m;++q)
	{
		if(min&amp;gt;sf[q][1]+sb[q][0])
		{
			min=sf[q][1]+sb[q][0];
			ret=q-1; // ret should be the position in the sequence, so minus 1
		}
	}

	return ret;
}

//
// Sequence alignemnt using divide and conquer
//
void DivideConquerAlignment(char* X, Region&amp;amp; rx, char* Y, Region&amp;amp; ry)
{
	int m=rx.end-rx.start+1;
	int n=ry.end-ry.start+1;

	if(m&amp;lt;=2 || n&amp;lt;=2)
	{
		Alignment(&amp;amp;X[rx.start],rx,&amp;amp;Y[ry.start],ry);
//		cout&amp;lt;&amp;lt;&quot;Call Alignment&quot;&amp;lt;&amp;lt;endl; // TEST ONLY
		return;
	}

	int** score_forward=new int*[m+1]; // (m+1)x2 matrix to store scores of alignment
	int** score_backward=new int*[m+1]; // (m+1)x2 matrix to store scores of alignment
	for(int i=0;i&amp;lt;m+1;++i)
	{
		score_forward[i]=new int[2];
		score_backward[i]=new int[2];
	}
	memcnt+=sizeof(int)*2*(m+1)*2;

	// Get the middle points in path
	Region tempry;
	tempry.start=ry.start;
	tempry.end=(ry.start+ry.end)/2;
	SpaceEfficientAlignment(score_forward,&amp;amp;X[rx.start],m,&amp;amp;Y[tempry.start],tempry.end-tempry.start+1);
	tempry.start=(ry.start+ry.end)/2+1;
	tempry.end=ry.end;
	BackwardSpaceEfficientAlignment(score_backward,&amp;amp;X[rx.start],m,&amp;amp;Y[tempry.start],tempry.end-tempry.start+1);

	int q=FindMinScore(score_forward,score_backward,m)+rx.start;
//	cout&amp;lt;&amp;lt;&quot;q=&quot;&amp;lt;&amp;lt;q&amp;lt;&amp;lt;&quot;, n/2=&quot;&amp;lt;&amp;lt;(ry.start+ry.end)/2&amp;lt;&amp;lt;endl; // TEST ONLY
	InsertNodetoP(q,(ry.start+ry.end)/2);

	// Divide and Conquer
	Region temprx;
	temprx.start=rx.start;
	temprx.end=q;
	tempry.start=ry.start;
	tempry.end=(ry.start+ry.end)/2;
	if(temprx.start&amp;lt;=temprx.end &amp;amp;&amp;amp; tempry.start&amp;lt;=tempry.end)
		DivideConquerAlignment(X,temprx,Y,tempry);
	temprx.start=q+1;
	temprx.end=rx.end;
	tempry.start=(ry.start+ry.end)/2+1;
	tempry.end=ry.end;
	if(temprx.start&amp;lt;=temprx.end &amp;amp;&amp;amp; tempry.start&amp;lt;=tempry.end)
		DivideConquerAlignment(X,temprx,Y,tempry);

	for(int i=0;i&amp;lt;m+1;++i)
	{
		delete [] score_forward[i];
		delete [] score_backward[i];
	}
	delete [] score_forward;
	delete [] score_backward;
}

// 
// Backtrace and print the alignment
//
void Backtrace(char* X,char* Y)
{
	Merge_sort(P,0,pidx-1); // Sort nodes in path according to element x
	// Adjust all nodes in path by element y
	int prev_x=-1,prev_y=-1;
	BTNode temp;
	for(int i=0;i&amp;lt;pidx;++i)
	{
		if(prev_y&amp;gt;P[i].y)
		{
			temp=P[i-1];
			P[i-1]=P[i];
			P[i]=temp;
		}
		prev_y=P[i].y;
	}

//	for(int i=0;i&amp;lt;pidx;++i)
//		cout&amp;lt;&amp;lt;&quot;(&quot;&amp;lt;&amp;lt;P[i].x&amp;lt;&amp;lt;&quot;,&quot;&amp;lt;&amp;lt;P[i].y&amp;lt;&amp;lt;&quot;)&quot;&amp;lt;&amp;lt;&quot; &quot;; //TEST ONLY
//	cout&amp;lt;&amp;lt;endl; // TEST ONLY

	// Print sequence X
	prev_x=-1;
	for(int i=0;i&amp;lt;pidx;++i)
	{
		if(P[i].x&amp;lt;0 || P[i].x==prev_x)
			cout&amp;lt;&amp;lt;&#39;-&#39;;
		else
			cout&amp;lt;&amp;lt;X[P[i].x];
		prev_x=P[i].x;
	}
	cout&amp;lt;&amp;lt;endl;

	// Print middle line
	prev_x=-1;
	prev_y=-1;
	for(int i=0;i&amp;lt;pidx;++i)
	{
		if(X[P[i].x]==Y[P[i].y] &amp;amp;&amp;amp; prev_x!=P[i].x &amp;amp;&amp;amp; prev_y!=P[i].y)
			cout&amp;lt;&amp;lt;&#39;|&#39;;
		else
			cout&amp;lt;&amp;lt;&#39; &#39;;
		prev_x=P[i].x;
		prev_y=P[i].y;
	}
	cout&amp;lt;&amp;lt;endl;

	// Print sequence Y
	prev_y=-1;
	for(int i=0;i&amp;lt;pidx;++i)
	{
		if(P[i].y&amp;lt;0 || P[i].y==prev_y)
			cout&amp;lt;&amp;lt;&#39;-&#39;;
		else
			cout&amp;lt;&amp;lt;Y[P[i].y];
		prev_y=P[i].y;
	}
	cout&amp;lt;&amp;lt;endl;

}

//
// MAIN START HERE
//
int main(int argc, char** argv)
{
	// initialize random seed
	srand(time(NULL));

	char* output=NULL;	// output file
	int seqlen=0;		// sequence length
	int c;

	while ((c = getopt (argc, argv, &quot;n:o:&quot;)) != -1)
	{
		switch (c)
           	{
		case &#39;n&#39;:
             		seqlen = atoi(optarg); 
             		break;
		case &#39;o&#39;:
             		output = optarg; 
             		break;
           	case &#39;?&#39;:
             		if (optopt == &#39;n&#39;)
              			fprintf (stderr, &quot;Option -%c requires an argument.\n\n&quot;, optopt);
             		else if (isprint (optopt))
               			fprintf (stderr, &quot;Unknown option `-%c&#39;.\n\n&quot;, optopt);
             		else
               			fprintf (stderr,
                        		&quot;Unknown option character `\x%x&#39;.\n\n&quot;,
                        		optopt);
             		return 1;
           	default:
             		abort ();
           	}
	}

	int m=seqlen;
	int n=seqlen-rand()%(seqlen/5);

	char* ref=new char[m];
	char* seq=new char[n];
	memcnt+=sizeof(char)*(m+n);

	// generate random sequences
	ref=GenRandSeq(ref,m);
	seq=GenRandSeq(seq,n);

	P=new BTNode[m+n];
	memcnt+=sizeof(BTNode)*(m+n);

	cout&amp;lt;&amp;lt;&quot;seq 1:&quot;&amp;lt;&amp;lt;ref&amp;lt;&amp;lt;endl; // TEST ONLY
	cout&amp;lt;&amp;lt;&quot;seq 2:&quot;&amp;lt;&amp;lt;seq&amp;lt;&amp;lt;endl; // TEST ONLY

	Region rx, ry;
	rx.start=0;
	rx.end=m-1;
	ry.start=0;
	ry.end=n-1;
//	Alignment(ref,rx,seq,ry); // TEST ONLY

	DivideConquerAlignment(ref,rx,seq,ry);

	Backtrace(ref,seq);

	delete [] ref;
	delete [] seq;
	delete [] P;

	// Record the space costs
	fstream fs;
	fs.open(&quot;memory_cost&quot;, fstream::out|fstream::app);
	fs&amp;lt;&amp;lt;m&amp;lt;&amp;lt;&quot;bp: &quot;&amp;lt;&amp;lt;memcnt&amp;lt;&amp;lt;endl;
	fs.close();

	return 0;
}&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Implementation of Strassen's Algorithm for Matrix Multiplication</title>
   <link href="http://bo-yang.github.com//2013/03/20/implementation-of-strassens-algorithm-for-matrix-multiplication"/>
   <updated>2013-03-20T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2013/03/20/implementation-of-strassens-algorithm-for-matrix-multiplication</id>
   <content type="html">&lt;p&gt;Strassen&#39;s algorithm is not the most efficient algorithm for matrix multiplication, but it was the first algorithm that was theoretically faster than the naive algorithm. There is very good explanation and implementation of Strassen&#39;s algorithm on &lt;a href=&quot;http://en.wikipedia.org/wiki/Strassen_algorithm&quot;&gt;Wikipedia&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, the implementation of Strassen&#39;s algorithm cannot be used directly, because it  just sets the base case of the divide-and-conquer to be 1x1 matrix, which would consume huge time cost for iteration. If set the base case to 2x2 matrix, which means 2x2 matrix and 1x1 matrix will be multiplied by naive algorithm, then the Strassen&#39;s algorithm will be more efficient for matrices larger than 512x512.&lt;/p&gt;
&lt;p&gt;[caption id=&quot;attachment_521&quot; align=&quot;alignnone&quot; width=&quot;529&quot;]&lt;a href=&quot;http://bonny95.files.wordpress.com/2013/03/local_double_41.png&quot;&gt;&lt;img class=&quot;size-full wp-image-521&quot; alt=&quot;When set base case to 2x2 matrix, then the Strassen&#39;s algorithm will surpass naive algorithm for matrices larger than 512x512.&quot; src=&quot;http://bonny95.files.wordpress.com/2013/03/local_double_41.png&quot; width=&quot;529&quot; height=&quot;395&quot; /&gt;&lt;/a&gt; When set base case to 2x2 matrix, then the Strassen&#39;s algorithm will surpass naive algorithm for matrices larger than 512x512.[/caption]&lt;/p&gt;
&lt;p&gt;[caption id=&quot;attachment_520&quot; align=&quot;alignnone&quot; width=&quot;529&quot;]&lt;a href=&quot;http://bonny95.files.wordpress.com/2013/03/local_int_36.png&quot;&gt;&lt;img class=&quot; wp-image-520  &quot; alt=&quot;When set base case to 6x6 matrix, then the Strassen&#39;s algorithm will surpass naive algorithm for matrices larger than 128x128. &quot; src=&quot;http://bonny95.files.wordpress.com/2013/03/local_int_36.png&quot; width=&quot;529&quot; height=&quot;396&quot; /&gt;&lt;/a&gt; When set base case to 6x6 matrix, then the Strassen&#39;s algorithm will surpass naive algorithm for matrices larger than 128x128.[/caption]&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
/*------------------------------------------------------------------------------*/
// matrix_mult.cc -- Implementation of matrix multiplication with
// Strassen&#39;s algorithm.
//
// Compile this file with gcc command:
// g++ -Wall -o matrix_mult matrix_mult.cc 

#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;time.h&amp;gt;
#include &amp;lt;ctype.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;fstream&amp;gt;
#include &amp;lt;cmath&amp;gt;
#include &amp;lt;cstring&amp;gt;

using namespace std;

// This function allocates the matrix
inline double** allocate_matrix(int n)
{
double** mat=new double*[n];
for(int i=0;i&amp;lt;n;++i)
{
mat[i]=new double[n];
memset(mat[i],0,sizeof(double)*n);
}

return (mat); // returns the pointer to the vector.
}

/*------------------------------------------------------------------------------*/
// This function unallocates the matrix (frees memory)
inline void free_matrix(double **M, int n)
{
for (int i = 0; i &amp;lt; n; i++)
{
delete [] M[i];
}

delete [] M; // frees the pointer /
M = NULL;
}

/*------------------------------------------------------------------------------*/
// function to sum two matrices
inline void sum(double **a, double **b, double **result, int tam) {

int i, j;

for (i = 0; i &amp;lt; tam; i++) {
for (j = 0; j &amp;lt; tam; j++) {
result[i][j] = a[i][j] + b[i][j];
}
}
}

/*------------------------------------------------------------------------------*/
// function to subtract two matrices
inline void subtract(double **a, double **b, double **result, int tam) {

int i, j;

for (i = 0; i &amp;lt; tam; i++) {
for (j = 0; j &amp;lt; tam; j++) {
result[i][j] = a[i][j] - b[i][j];
}
}
}

/*------------------------------------------------------------------------------*/
// naive method
void naive(double** A, double** B,double** C, int n)
{
for (int i=0;i&amp;lt;n;i++)
for (int j=0;j&amp;lt;n;j++)
for(int k=0;k&amp;lt;n;k++)
C[i][j] += A[i][k]*B[k][j];
}

/*------------------------------------------------------------------------------*/
// Strassen&#39;s method
void strassen(double **a, double **b, double **c, int tam)
{
// Key observation: call naive method for matrices smaller than 2 x 2
if(tam &amp;lt;= 4)
{
naive(a,b,c,tam);
return;
}

// other cases are treated here:
int newTam = tam/2;
double **a11, **a12, **a21, **a22;
double **b11, **b12, **b21, **b22;
double **c11, **c12, **c21, **c22;
double **p1, **p2, **p3, **p4, **p5, **p6, **p7;

// memory allocation:
a11 = allocate_matrix(newTam);
a12 = allocate_matrix(newTam);
a21 = allocate_matrix(newTam);
a22 = allocate_matrix(newTam);

b11 = allocate_matrix(newTam);
b12 = allocate_matrix(newTam);
b21 = allocate_matrix(newTam);
b22 = allocate_matrix(newTam);

c11 = allocate_matrix(newTam);
c12 = allocate_matrix(newTam);
c21 = allocate_matrix(newTam);
c22 = allocate_matrix(newTam);

p1 = allocate_matrix(newTam);
p2 = allocate_matrix(newTam);
p3 = allocate_matrix(newTam);
p4 = allocate_matrix(newTam);
p5 = allocate_matrix(newTam);
p6 = allocate_matrix(newTam);
p7 = allocate_matrix(newTam);

double **aResult = allocate_matrix(newTam);
double **bResult = allocate_matrix(newTam);

//dividing the matrices in 4 sub-matrices:
for (int i = 0; i &amp;lt; newTam; i++) {
for (int j = 0; j &amp;lt; newTam; j++) {
a11[i][j] = a[i][j];
a12[i][j] = a[i][j + newTam];
a21[i][j] = a[i + newTam][j];
a22[i][j] = a[i + newTam][j + newTam];

b11[i][j] = b[i][j];
b12[i][j] = b[i][j + newTam];
b21[i][j] = b[i + newTam][j];
b22[i][j] = b[i + newTam][j + newTam];
}
}

// Calculating p1 to p7:

sum(a11, a22, aResult, newTam); // a11 + a22
sum(b11, b22, bResult, newTam); // b11 + b22
strassen(aResult, bResult, p1, newTam); // p1 = (a11+a22) * (b11+b22)

sum(a21, a22, aResult, newTam); // a21 + a22
strassen(aResult, b11, p2, newTam); // p2 = (a21+a22) * (b11)

subtract(b12, b22, bResult, newTam); // b12 - b22
strassen(a11, bResult, p3, newTam); // p3 = (a11) * (b12 - b22)

subtract(b21, b11, bResult, newTam); // b21 - b11
strassen(a22, bResult, p4, newTam); // p4 = (a22) * (b21 - b11)

sum(a11, a12, aResult, newTam); // a11 + a12
strassen(aResult, b22, p5, newTam); // p5 = (a11+a12) * (b22)

subtract(a21, a11, aResult, newTam); // a21 - a11
sum(b11, b12, bResult, newTam); // b11 + b12
strassen(aResult, bResult, p6, newTam); // p6 = (a21-a11) * (b11+b12)

subtract(a12, a22, aResult, newTam); // a12 - a22
sum(b21, b22, bResult, newTam); // b21 + b22
strassen(aResult, bResult, p7, newTam); // p7 = (a12-a22) * (b21+b22)

// calculating c21, c21, c11 e c22:

sum(p3, p5, c12, newTam); // c12 = p3 + p5
sum(p2, p4, c21, newTam); // c21 = p2 + p4

sum(p1, p4, aResult, newTam); // p1 + p4
sum(aResult, p7, bResult, newTam); // p1 + p4 + p7
subtract(bResult, p5, c11, newTam); // c11 = p1 + p4 - p5 + p7

sum(p1, p3, aResult, newTam); // p1 + p3
sum(aResult, p6, bResult, newTam); // p1 + p3 + p6
subtract(bResult, p2, c22, newTam); // c22 = p1 + p3 - p2 + p6

// Grouping the results obtained in a single matrix:
for (int i = 0; i &amp;lt; newTam ; i++) {
for (int j = 0 ; j &amp;lt; newTam ; j++) {
c[i][j] = c11[i][j];
c[i][j + newTam] = c12[i][j];
c[i + newTam][j] = c21[i][j];
c[i + newTam][j + newTam] = c22[i][j];
}
}

// deallocating memory (free):
free_matrix(a11, newTam);
free_matrix(a12, newTam);
free_matrix(a21, newTam);
free_matrix(a22, newTam);

free_matrix(b11, newTam);
free_matrix(b12, newTam);
free_matrix(b21, newTam);
free_matrix(b22, newTam);

free_matrix(c11, newTam);
free_matrix(c12, newTam);
free_matrix(c21, newTam);
free_matrix(c22, newTam);

free_matrix(p1, newTam);
free_matrix(p2, newTam);
free_matrix(p3, newTam);
free_matrix(p4, newTam);
free_matrix(p5, newTam);
free_matrix(p6, newTam);
free_matrix(p7, newTam);
free_matrix(aResult, newTam);
free_matrix(bResult, newTam);

} // end of Strassen function

/*------------------------------------------------------------------------------*/
// Generate random matrices
void gen_matrix(double** M,int n)
{
for(int i=0;i&amp;lt;n;++i)
{
for(int j=0;j&amp;lt;n;++j)
{
M[i][j]=rand()%100;
//M[i][j]=1;
}
}
}

/*------------------------------------------------------------------------------*/
// print matrix M using specied fstream
void print_matrix(fstream&amp;amp; fs, double** M, int n)
{
for(int i=0;i&amp;lt;n;++i)
{
for(int j=0;j&amp;lt;n;++j)
{
fs&amp;lt;&amp;lt;M[i][j]&amp;lt;&amp;lt;&quot; &quot;;
}
fs&amp;lt;&amp;lt;endl;
}
fs&amp;lt;&amp;lt;endl;
}

/*------------------------------------------------------------------------------*/
// record the generated matrix and the final product
void mat_mult_log(double** A, double** B,double** C,int n,char* file)
{
fstream fs;
fs.open(file,fstream::out);

fs&amp;lt;&amp;lt;&quot;Random Matrix A:&quot;&amp;lt;&amp;lt;endl;
print_matrix(fs,A,n);
fs&amp;lt;&amp;lt;&quot;Random Matrix B:&quot;&amp;lt;&amp;lt;endl;
print_matrix(fs,B,n);
fs&amp;lt;&amp;lt;&quot;C=A * B&quot;&amp;lt;&amp;lt;endl;
print_matrix(fs,C,n);

fs.close();
}

/*------------------------------------------------------------------------------*/

int main(int argc, char** argv)
{
srand(time(NULL));

int mdim=2; // matrix dimension
char* output=NULL;
bool is_strassen=false;
int c;

while ((c = getopt (argc, argv, &quot;sn:o:&quot;)) != -1)
{
switch (c)
{
case &#39;s&#39;:
is_strassen=true;
break;
case &#39;n&#39;:
mdim = pow((int)2,atoi(optarg)); // 2^n dimensions
break;
case &#39;o&#39;:
output = optarg; // 2^n dimensions
break;
case &#39;?&#39;:
if (optopt == &#39;n&#39;)
fprintf (stderr, &quot;Option -%c requires an argument.\n&quot;, optopt);
else if (isprint (optopt))
fprintf (stderr, &quot;Unknown option `-%c&#39;.\n&quot;, optopt);
else
fprintf (stderr,
&quot;Unknown option character `\x%x&#39;.\n&quot;,
optopt);
return 1;
default:
abort ();
}
}

// create new matrices
double** A=allocate_matrix(mdim);
double** B=allocate_matrix(mdim);
double** C=allocate_matrix(mdim);
gen_matrix(A,mdim);
gen_matrix(B,mdim);

// matrices multiplication
if(is_strassen)
strassen(A,B,C,mdim);
else
naive(A,B,C,mdim);

if(output!=NULL)
mat_mult_log(A,B,C,mdim,output);

free_matrix(A,mdim);
free_matrix(B,mdim);
free_matrix(C,mdim);

return 0;
}&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Basic Linux Multi-Process and Multi-Thread Programming</title>
   <link href="http://bo-yang.github.com//2013/01/29/basic-linux-multi-process-multi-thread-programming"/>
   <updated>2013-01-29T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2013/01/29/basic-linux-multi-process-multi-thread-programming</id>
   <content type="html">&lt;p&gt;
	Today I have to make my algorithm running in parallel in order to make it faster. At first I used following way to implement multi-process:&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;	unsigned int proc_num = 5;
	pid_t* pids=new pid_t[proc_num];
	double incr=(double)N/(double)proc_num;
	
	/* Start children. */
	for (unsigned int i = 0; i &amp;lt; proc_num; ++i) {
		if ((pids[i] = fork()) &amp;lt; 0) {
	    		perror(&amp;quot;fork&amp;quot;);
	    		abort();
	 	} else if (pids[i] == 0) {
	    		// DoWorkInChild();

	    		exit(0);
	  	}
	}
	
	/* Wait for children to exit. */
	int status;
	pid_t pid;
	while (proc_num &amp;gt; 0) {
	  	pid = wait(&amp;amp;status);
		if(status != 0)
	  		printf(&amp;quot;Child Process with PID %ld aborted with status 0x%x.\n&amp;quot;, (long)pid, status);
	  	--proc_num;  // TODO(pts): Remove pid from the pids array.
	}
&lt;/pre&gt;
&lt;p&gt;
Above way worked well, however, there&#39;s no way to change the &amp;quot;shared&amp;quot; variables in child processes. Because each child process has an independent copy of all variables.&lt;/p&gt;
&lt;p&gt;
	In order to change the same array in parallel, I implemented multi threads.&lt;/p&gt;&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;struct thread_info {    /* Used as argument to thread_start() */
	pthread_t thread_id;        /* ID returned by pthread_create() */
	int	start;       /* Application-defined thread # */
	int     end;      /* From command-line argument */
	int*	gpdarr;	/* Array to store GPD number */
	long int G;	/* genome length */
	unsigned int L;	/* read length */
	double l1;	// GPD parameter lambda1
	double l2;	// GPD parameter lambda2
	double M;	// maximum of GPD density
};

void printPt(pthread_t pt) {
  unsigned char *ptc = (unsigned char*)(void*)(&amp;amp;pt);
  printf(&amp;quot;0x&amp;quot;);
  for (size_t i=0; i&amp;lt;sizeof(pt); i++) {
    printf(&amp;quot;%02x&amp;quot;, (unsigned)(ptc[i]));
  }
}

void* gen_gpd_num(void* arg)
{
	struct thread_info *tinfo = (struct thread_info *) arg;
	// do something here

	pthread_exit(0);
}

int main()
{
        unsigned int tnum = 20;
	double incr=(double)N/(double)tnum;
	
	thread_info* tinfo=new thread_info[tnum];

	int err;
	void* res;
	
	/* Start children. */
	for(unsigned int idx=0;idx&amp;lt;tnum;++idx) 
	{
		tinfo[idx].start=incr*idx;
		tinfo[idx].end=incr*(idx+1);
		tinfo[idx].gpdarr=gpdnum;
		tinfo[idx].G=G;
		tinfo[idx].L=l;
		tinfo[idx].l1=l1;
		tinfo[idx].l2=l2;
		tinfo[idx].M=M;

		err = pthread_create(&amp;amp;tinfo[idx].thread_id, NULL, &amp;amp;gen_gpd_num, &amp;amp;tinfo[idx]);

		if(err!=0)
			printf(&amp;quot;can&#39;t create thread :[%s]&amp;quot;, strerror(err));
		else
			pthread_join(tinfo[idx].thread_id, &amp;amp;res);
	}
        delete [] tinfo;
}&lt;/pre&gt;
&lt;p&gt;
The potential problem of using multi-threading in Linux is -- it is hard to figure out if there really are many threads are running&amp;nbsp;simultaneously.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
	When compiling multi-threading program using GCC, pthread library must be specified:&lt;/p&gt;&lt;/p&gt;
&lt;pre class=&quot;cpp&quot;&gt;g++ -o foo -Wall foo.cc -L/usr/lib -lpthread&lt;/pre&gt;
&lt;p&gt;
References:&lt;/p&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
		&lt;a href=&quot;http://www.thegeekstuff.com/2012/04/create-threads-in-linux/&quot; style=&quot;font-size:14px;font-family:&#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;letter-spacing:-1px;line-height:1.364em;&quot;&gt;How to Create Threads in Linux (With a C Example Program)&lt;/a&gt;&lt;/p&gt;
&lt;h1 class=&quot;entry-title&quot; style=&quot;padding:0;margin:0;font-weight:normal;color:rgb(169,0,0);line-height:1.364em;letter-spacing:-1px;font-family:&#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;&quot;&gt;
		&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
		http://www.kernel.org/doc/man-pages/online/pages/man3/pthread_create.3.html&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
&lt;p&gt;
	&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Simple Matlab/Octave Commands to Process Data</title>
   <link href="http://bo-yang.github.com//2012/12/06/simple-matlaboctave-commands-to-process-data"/>
   <updated>2012-12-06T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2012/12/06/simple-matlaboctave-commands-to-process-data</id>
   <content type="html">&lt;p&gt;To load data in following format stored in a text file &quot;read_pos&#39; into Matlab/Octave, use commands&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
    f=fopen(&#39;read_pos&#39;,&#39;r&#39;); % open file&lt;br /&gt;
    a=textscan(f,&#39;%s%d&#39;);  % read file&lt;br /&gt;
    y=a{2}; % a is a cell: a{1} stores read id, a{2} stores numbers.&lt;br /&gt;
&lt;/code&gt;&lt;br /&gt;
&lt;br /&gt;
Then data of the second column are stored in variable y.&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
r12353.1 	2407054.5&lt;br /&gt;
r12361.1 	5328858.5&lt;br /&gt;
r12363.1 	2360272&lt;br /&gt;
r12368.1 	4726440.5&lt;br /&gt;
r12372.1 	2224001&lt;br /&gt;
r12373.1 	5165613.5&lt;br /&gt;
r12381.1 	501776&lt;br /&gt;
r12385.1 	3475398&lt;br /&gt;
r12394.1 	3376364&lt;br /&gt;
r12401.1 	2142875.5&lt;br /&gt;
r12411.1 	2191090.5&lt;br /&gt;
r12419.1 	1240590&lt;br /&gt;
r12420.1 	4903572&lt;br /&gt;
r12422.1 	767011.5&lt;br /&gt;
r12426.1 	3575915.5&lt;br /&gt;
r12429.1 	554956&lt;br /&gt;
r12433.1 	4786335&lt;br /&gt;
r12435.1 	3373955.5&lt;br /&gt;
r12442.1 	5363611.5&lt;br /&gt;
r12452.1 	1903660.5&lt;br /&gt;
r12454.1 	2784165&lt;br /&gt;
r12466.1 	5137479&lt;br /&gt;
r12470.1 	592191&lt;br /&gt;
&lt;/code&gt;&lt;br /&gt;
&lt;br /&gt;
If there are only numbers stored in file &quot;read_pos&quot;, following commands should be used:&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
    f=fopen(&#39;read_pos&#39;,&#39;r&#39;); % open file&lt;br /&gt;
    a=textscan(f,&#39;%s%d&#39;);  % read file&lt;br /&gt;
    y=cell2mat{a}; % convert cell a to vector&lt;br /&gt;
    size(y) % check the size&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;
To plot the distribution of all the numbers, you can:&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
    x=zeros(size(y));&lt;br /&gt;
    plot(y,x,&#39;bo&#39;);&lt;br /&gt;
&lt;/code&gt;&lt;br /&gt;
&lt;br /&gt;
If another data set z is also loaded and you want to plot y and z in the same graph, you can:&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
    figure&lt;br /&gt;
    x=zeros(size(y));&lt;br /&gt;
    plot(y,x,&#39;bo&#39;);&lt;br /&gt;
    hold on&lt;br /&gt;
    x=ones(size(z));&lt;br /&gt;
    plot(z,x,&#39;r+&#39;);&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;
To annotate and scale the graph, use commands;&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
    xlabel(&#39;AMD Data k-mer Occurrances&#39;);&lt;br /&gt;
    title(&#39;GPD Classification of AMD k-mers&#39;)&lt;br /&gt;
    legend(&#39;Bin 1&#39;,&#39;Bin 2&#39;)&lt;br /&gt;
    axis([-5 5 0 10000]) % scale axes&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A matlab function to plot multiple datasets:&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
function result=plot_distr(varargin)&lt;/p&gt;
&lt;p&gt;nVarargs=length(varargin);&lt;/p&gt;
&lt;p&gt;marker={&#39;bo&#39; &#39;r+&#39; &#39;k*&#39; &#39;gs&#39; &#39;y^&#39; &#39;md&#39; &#39;cp&#39; &#39;bx&#39; &#39;r.&#39; &#39;k&amp;gt;&#39; &#39;gh&#39; &#39;y&amp;lt;&amp;#039;};&lt;br /&gt;
figure&lt;br /&gt;
for k=1:nVarargs&lt;br /&gt;
	f=fopen(varargin{k},&amp;#039;r&amp;#039;);&lt;br /&gt;
	a=textscan(f,&amp;#039;%d&amp;#039;);&lt;br /&gt;
	y=cell2mat(a);&lt;br /&gt;
	x=zeros(size(y))+k;&lt;br /&gt;
	plot(y,x,marker{k});&lt;br /&gt;
	hold on&lt;br /&gt;
end&lt;br /&gt;
ylim([0-5*nVarargs 6*nVarargs]); % scale y-axis&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tips about Regular Expression</title>
   <link href="http://bo-yang.github.com//2012/11/17/tips-about-regular-expression"/>
   <updated>2012-11-17T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2012/11/17/tips-about-regular-expression</id>
   <content type="html">&lt;ol&gt;
&lt;li&gt;In Vim, greedy matching is used by default. In order to use non-greedy matching, you can use \{-}, or \{-n,m}, such as: :/Q.\{-0,200}[IL].\{-0,2000}FF.&lt;/li&gt;
&lt;li&gt;In Perl, default matching is also greedy. To use non-greedy matching, please change &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;?&lt;/code&gt; , and&lt;code&gt;{}&lt;/code&gt; into &lt;code&gt;*?&lt;/code&gt; , &lt;code&gt;+?&lt;/code&gt; , &lt;code&gt;??&lt;/code&gt; , and &lt;code&gt;{}?&lt;/code&gt; , respectively.&lt;/li&gt;
&lt;li&gt;To count the number of matching in Vim, you can use command &quot;:%s/&amp;lt;pattern&amp;gt;//g&quot;. After get the number of matches, then execute &quot;:u&quot; to undo the changes.&lt;/li&gt;
&lt;li&gt;In Perl, to count the number of matching, you can use command: 
&lt;pre&gt;&lt;code&gt;my $number =()= $string =~ /\./gi;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;http://vimregex.com/&lt;/li&gt;
&lt;li&gt;http://stackoverflow.com/questions/1849329/is-there-a-perl-shortcut-to-count-the-number-of-matches-in-a-string&lt;/li&gt;
&lt;li&gt;http://docstore.mik.ua/orelly/perl/cookbook/ch06_16.htm&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Calculate the CDF of Poisson Distribution with Boost C++ Library</title>
   <link href="http://bo-yang.github.com//2012/11/05/calculate-the-cdf-of-poisson-distribution-with-boost-c-library"/>
   <updated>2012-11-05T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2012/11/05/calculate-the-cdf-of-poisson-distribution-with-boost-c-library</id>
   <content type="html">&lt;p&gt;The Cumulative Distribution Function(CDF) of Poisson distribution can be easily calculated by R function ppois() or octave/Matlab function poisspdf(). However, it is not a easy thing to deal with statistics with C++ from scratch.&lt;/p&gt;
&lt;p&gt;Today I found a very powerful C++ mathematical library(actually not limited to math), boost. Unfortunately, it is hard to figure out the API of boost library from the code if you are not familiar with generalization programming(just like me). Besides, there is no useful &quot;hello world&quot; examples on the Internet to show the boost library handling statistics(examples on webpage &lt;a href=&quot;https://www.quantnet.com/threads/c-statistical-distributions-in-boost.10016/&quot;&gt;C++ Statistical Distributions in Boost&lt;/a&gt; is a bit complicated and the header files are not included).&lt;/p&gt;
&lt;p&gt;Therefore, I made up following example to show how to get the cdf of Poisson distribution with boost C++ library:&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
#include &amp;lt;boost/math/distributions/poisson.hpp&amp;gt;&lt;br /&gt;
#include &amp;lt;iostream&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;using namespace std;&lt;br /&gt;
using namespace boost::math;&lt;/p&gt;
&lt;p&gt;int main()&lt;br /&gt;
{&lt;br /&gt;
poisson_distribution&amp;lt;&amp;gt; p(2.9);&lt;br /&gt;
cout&amp;lt;&amp;lt;&quot;cdf: ppois(1,2.9)=&quot;&amp;lt;&amp;lt;cdf(p,1)&amp;lt;&amp;lt;endl;&lt;/p&gt;
&lt;p&gt;return 0;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;&lt;em&gt;References:&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.boost.org/doc/libs/1_52_0/libs/math/doc/sf_and_dist/html/math_toolkit/dist/dist_ref/dists/poisson_dist.html&quot;&gt;http://www.boost.org/doc/libs/1_52_0/libs/math/doc/sf_and_dist/html/math_toolkit/dist/dist_ref/dists/poisson_dist.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.quantnet.com/threads/c-statistical-distributions-in-boost.10016/&quot;&gt;C++ Statistical Distributions in Boost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.datasimfinancial.com/forum/viewtopic.php?t=111&quot;&gt;http://www.datasimfinancial.com/forum/viewtopic.php?t=111&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>An Implementation of Merge Sort in C</title>
   <link href="http://bo-yang.github.com//2012/11/04/an-implementation-of-merge-sort-in-c"/>
   <updated>2012-11-04T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2012/11/04/an-implementation-of-merge-sort-in-c</id>
   <content type="html">&lt;p&gt;Following C code is the implementation of merge sort, with the time complexity of O(nlogn). It was used in my current project to sort 148 million integers. At first I used bubbled sort, which took me hours to have the 148M integers sorted, because the time complexity of bubble sort is O(n^2). After replacing the sorting algorithm with merge sort, the time of sorting reduced to less than 10 mins. Amazing improvement! Although I have heard of the importance of sorting/searching algorithm for years, it was the first time I realize the magic of algorithms. &lt;/p&gt;
&lt;p&gt;The merge sort below was found in Internet. Sorry that I forgot to record the hyperlink of the webpage. Only a few changes were made by me. &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;void Merge(int* input, long p, long r)&lt;br /&gt;
{&lt;br /&gt;
	long mid = floor((p + r) / 2);&lt;br /&gt;
	long i1 = 0;&lt;br /&gt;
	long i2 = p;&lt;br /&gt;
	long i3 = mid + 1;&lt;/p&gt;
&lt;p&gt;	// Temp array&lt;br /&gt;
	int* temp=new int[r-p+1];&lt;/p&gt;
&lt;p&gt;	// Merge in sorted form the 2 arrays&lt;br /&gt;
	while ( i2 &amp;lt;= mid &amp;amp;&amp;amp; i3 &amp;lt;= r )&lt;br /&gt;
		if ( input[i2] &amp;lt; input[i3] )&lt;br /&gt;
			temp[i1++] = input[i2++];&lt;br /&gt;
		else&lt;br /&gt;
			temp[i1++] = input[i3++];&lt;/p&gt;
&lt;p&gt;	// Merge the remaining elements in left array&lt;br /&gt;
	while ( i2 &amp;lt;= mid )&lt;br /&gt;
		temp[i1++] = input[i2++];&lt;/p&gt;
&lt;p&gt;	// Merge the remaining elements in right array&lt;br /&gt;
	while ( i3 &amp;lt;= r )&lt;br /&gt;
		temp[i1++] = input[i3++];&lt;/p&gt;
&lt;p&gt;	// Move from temp array to master array&lt;br /&gt;
	for ( int i = p; i &amp;lt;= r; i++ )&lt;br /&gt;
		input[i] = temp[i-p];&lt;/p&gt;
&lt;p&gt;	delete [] temp;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;// inputs:&lt;br /&gt;
//	p - the start index of array input&lt;br /&gt;
//	r - the end index of array input&lt;br /&gt;
void Merge_sort(int* input, long p, long r)&lt;br /&gt;
{&lt;br /&gt;
	if ( p &amp;lt; r )&lt;br /&gt;
	{&lt;br /&gt;
		long mid = floor((p + r) / 2);&lt;br /&gt;
		Merge_sort(input, p, mid);&lt;br /&gt;
		Merge_sort(input, mid + 1, r);&lt;br /&gt;
		Merge(input, p, r);&lt;br /&gt;
	}&lt;br /&gt;
}&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Connect Mac OS X with Linux Server</title>
   <link href="http://bo-yang.github.com//2012/08/24/connect-mac-os-x-with-linux-server"/>
   <updated>2012-08-24T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2012/08/24/connect-mac-os-x-with-linux-server</id>
   <content type="html">&lt;p&gt;There are many ways to connect Mac OS X with Linux by command line. However, connecting them with GUI is not so easy. I tried two ways, but none of them work perfectly and each of them has both advantages and disadvantages.&lt;/p&gt;
&lt;p&gt;The first way I tried was VNC. &lt;a href=&quot;http://sourceforge.net/projects/cotvnc/&quot;&gt;Chicken of the VNC&lt;/a&gt; was said to be the best VNC client under Mac OS X, unfortunately, I haven&#39;t make it work, even follow the tips of webpage &lt;a id=&quot;using_vnc_on_mac_os_x&quot; name=&quot;using_vnc_on_mac_os_x&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cs.vassar.edu/sysnews/vnc/osx&quot;&gt;Using VNC on Mac OS X&lt;/a&gt;. I used realvnc. The first step is to configure ssh. I followed the tips on webpage &lt;a href=&quot;http://narnia.cs.ttu.edu/drupal/node/132&quot;&gt;Connecting to Remote Linux Desktop via SSH with X11 Forwarding&lt;/a&gt;.  In the Linux server, after installing openssh, edit the file &lt;code&gt;/etc/ssh/ssh_config&lt;/code&gt; and make sure&lt;/p&gt;
&lt;pre&gt;ForwardAgent yes
ForwardX11 yes
ForwardX11Trusted yes&lt;/pre&gt;
&lt;p&gt;Then edit &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; and make sure&lt;/p&gt;
&lt;pre&gt;X11Forwarding yes&lt;/pre&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;p&gt;In the terminal of Mac OS X, enter command &quot;&lt;code&gt;ssh -L 5901:localhost:5900 &amp;lt;login&amp;gt;@&amp;lt;LinuxServer&amp;gt;&lt;/code&gt;&quot;. 5901 is the port number to be used by RealVNC, and 5900 is the port number of the VNC in Linux. For details about this command, refer to &lt;a href=&quot;http://manas.tungare.name/blog/ssh-port-forwarding-on-mac-os-x/&quot;&gt;SSH Port Forwarding on Mac OS X&lt;/a&gt;. Then start RealVNC, enter &quot;&lt;code&gt;localhost:5901&lt;/code&gt;&quot; and your VNC password.&lt;/p&gt;
&lt;p&gt;RealVNC works reliably, but the quality of GUI is not good and sometimes responds slowly.&lt;/p&gt;
&lt;p&gt;The other method is also based on ssh, therefore the ssh should also be configured in the Linux side. The only difference is X11 should be installed in Mac OS X. The above&lt;br /&gt;
ssh command can also be used. Or just use &quot;ssh -X &amp;lt;login&amp;gt;@&amp;lt;LinuxServer&amp;gt;&quot;. After login to Linux in terminal, run command &quot;&lt;code&gt;gnome-session&lt;/code&gt;&quot;(this requires Gnome be installed in Linux server). In this way, remote Linux programs runs as local Mac applications. For more info, please refer to &lt;a href=&quot;http://narnia.cs.ttu.edu/drupal/node/132&quot;&gt;Connecting to Remote Linux Desktop via SSH with X11 Forwarding&lt;/a&gt;. The disadvantage of using this way is, X11 is not reliable in Mac OS X and it may crash at any time.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to make NIC BCM57780 work in Scientific Linux?</title>
   <link href="http://bo-yang.github.com//2012/08/08/how-to-make-nic-bcm57780-work-in-scientific-linux"/>
   <updated>2012-08-08T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2012/08/08/how-to-make-nic-bcm57780-work-in-scientific-linux</id>
   <content type="html">&lt;p&gt;I decided to install Scientific Linux on the computer in my lab. Partly because this distribution is called &quot;Scientific&quot;, partly because it is compiled from Red Hat Enterprise Linux, the most prestigious Linux distribution in the world.&lt;/p&gt;
&lt;p&gt;At first, I downloaded the &lt;a href=&quot;http://ftp.scientificlinux.org/linux/scientific/6.2/x86_64/iso&quot;&gt;Everything DVDs&lt;/a&gt; and burned it into my USB stick via &lt;a href=&quot;http://unetbootin.sourceforge.net/&quot;&gt;UNetbootin&lt;/a&gt;. Unfortunately, it couldn&#39;t boot. Then I tried the &lt;a href=&quot;http://ftp.scientificlinux.org/linux/scientific/6.2/x86_64/iso/SL-62-x86_64-2012-02-16-LiveCD.iso&quot;&gt;Live CD&lt;/a&gt;. It did worked and I installed the SL in a few minutes. However, the network could not be connected and the NIC could not be activated. I checked the NIC type by &quot;&lt;code&gt;lspci | grep net&lt;/code&gt;&quot;, and I found it was &lt;strong&gt;Broadcom Corporation NetLink BCM57780&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Many people complain this network card. Some guys tried to download the&lt;a href=&quot;http://www.broadcom.com/support/ethernet_nic/netlink_k57.php&quot;&gt; source code &lt;/a&gt;of the driver from Broadcom and compiled it by themselves. I didn&#39;t want to do that, so I searched &quot;tg3 rpm&quot; and finally got the rpm package for SL &lt;a href=&quot;ftp://ftp.ntua.gr/pub/linux/scientificlinux/6.2/x86_64/updates/fastbugs/kmod-tg3-3.122-1.el6_2.x86_64.rpm&quot;&gt;kmod-tg3-3.122-1.el6_2.x86_64.rpm&lt;/a&gt;. I installed it and restarted the network even the computer, the NIC still didn&#39;t work.&lt;/p&gt;
&lt;p&gt;Then I resorted to compiling the source code of tg3. Unfortunately, I realized that gcc was not installed -- the LiveCD didn&#39;t contain the GCC package. When I tried to manually install GCC from rpm, a series of shared library dependencies blocked me. So I have to downloaded the &lt;a href=&quot;http://ftp.scientificlinux.org/linux/scientific/6.2/x86_64/iso/SL-62-x86_64-2012-02-16-LiveDVD.iso&quot;&gt;LiveDVD of SL&lt;/a&gt;, burned it again and installed the SL again. This time, the GCC was included.&lt;/p&gt;
&lt;p&gt;Before building the tg3 driver, I installed the downloaded tg3 rpm package and searched again for the driver. Finally I found webpage &lt;strong&gt;&lt;a href=&quot;http://www.aoddy.com/2007/10/15/how-to-updating-driver-for-gigabit-network-card-broadcom-tg3netxtream-on-fedora-core-4-2/&quot;&gt;How to updating driver for gigabit network card [Broadcom TG3:netXtream] on fedora core 4.&lt;/a&gt; &lt;/strong&gt;and responses to &lt;a href=&quot;http://fonality.com/trixbox/forums/trixbox-forums/help/eth0-no-device-found-nic-broadcom-tg3-drivers-kernel-dkms&quot;&gt;eth0 no device found, NIC Broadcom tg3 drivers, kernel, DKMS&lt;/a&gt;. Combing the two webpages, I got to know how to make BCM57780 work in SL:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download and install &lt;a href=&quot;ftp://ftp.ntua.gr/pub/linux/scientificlinux/6.2/x86_64/updates/fastbugs/kmod-tg3-3.122-1.el6_2.x86_64.rpm&quot;&gt;kmod-tg3-3.122-1.el6_2.x86_64.rpm&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;/lib/modules/&amp;lt;kernel#&amp;gt;/kernel/net &lt;/code&gt; and check if tg3.ko there. If not, try executing &quot;locate tg3&quot;.&lt;/li&gt;
&lt;li&gt;Run command &quot;&lt;code&gt;insmod  /path/to/tg3.ko&lt;/code&gt;&quot;.&lt;/li&gt;
&lt;li&gt;Run command &quot;&lt;code&gt;service network restart&lt;/code&gt;&quot;.&lt;/li&gt;
&lt;li&gt;Update /etc/.rc.local and append commands in 3 &amp;amp; 4 to the end. Or you must manually run commands 3&amp;amp;4 after reboot.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Besides, if the above still not work, you may consider appending &quot;&lt;code&gt;biosdevname=0&lt;/code&gt;&quot; to the kernel line of the grub config file &lt;code&gt;/etc/grub.conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;[Update 08/09/2012]:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I am sorry that I didn&#39;t really tried if the way above modifying /etc/rc.local really work after reboot. And today I did try, but the answer was no. I struggled for another hour and finally found out the tricky tip: &lt;span style=&quot;color:#ff0000;&quot;&gt;&lt;strong&gt;module tg3.ko must be removed and re-installed before restarting your network, or the Broadcom NIC still wouldn&#39;t work!&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;So you should append following code to your /etc/rc.local:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;rmmod tg3.ko&lt;br /&gt;
insmod /path/to/tg3.ko&lt;br /&gt;
service network restart&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SOCK_RAW Issue with setuid and chroot-ed login on Linux Servers(Still Unresolved)</title>
   <link href="http://bo-yang.github.com//2012/06/14/sock_raw-issue-with-setuidchroot-ed-login-on-linux-serversstill-unresolved"/>
   <updated>2012-06-14T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2012/06/14/sock_raw-issue-with-setuidchroot-ed-login-on-linux-serversstill-unresolved</id>
   <content type="html">&lt;p&gt;Problem:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;when using function socket(AF_INET,&lt;strong&gt;SOCK_RAW&lt;/strong&gt;,IPPROTO_TCP...) with setuid&amp;amp;chroot-ed fake root on Linux servers, it would always fail. However, the real root can work well. Usually the fake root can do most things that root login required.
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;After investigation, got following hints:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;According to man page of &lt;a href=&quot;http://linux.die.net/man/7/raw&quot;&gt;SOCK_RAW(7)&lt;/a&gt;, &amp;quot;Only processes with an effective user ID of 0 or the CAP_NET_RAW capability are allowed to open raw sockets&amp;quot;.&lt;/li&gt;
&lt;li&gt;According to &lt;a href=&quot;http://www.kernel.org/doc/man-pages/online/pages/man7/capabilities.7.html&quot;&gt;capabilities(7) - Linux man page&lt;/a&gt;, &amp;quot;For the purpose of performing permission checks, traditional UNIX implementations distinguish two categories of processes: privileged processes (whose effective user ID is 0, referred to as superuser or root), and unprivileged processes (whose effective UID is nonzero). Privileged processes bypass all kernel permission checks, while unprivileged processes are subject to full permission checking based on the process&#39;s credentials (usually: effective UID, effective GID, and supplementary group list)&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;&lt;p&gt;Starting with kernel 2.2, Linux divides the privileges traditionally associated with superuser into distinct units, known as capabilities, which can be independently enabled and disabled. Capabilities are a per-thread attribute.
&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;CAP_NET_RAW
&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;blockquote&gt; Use RAW and PACKET sockets.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;In raw socket access as normal user on linux 2.4, setuid is suggested, but it didn’t work.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since we can&#39;t provide root login to all users, we must either find a way to let raw sockets work with setuid&amp;amp;chroot-ed login, or substitute raw sockets with other options.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Error "ldd:  execution failed due to signal 9"</title>
   <link href="http://bo-yang.github.com//2012/06/04/ldd-error"/>
   <updated>2012-06-04T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2012/06/04/ldd-error</id>
   <content type="html">&lt;p&gt;Today, one of my folks met a very weird problem and finally he asked me for help. The issue was, when running command &quot;ldd CDNap&quot; on a Solaris 9 server(AP11), following error would show up:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AP11: ldd CDNap&lt;br /&gt;
ldd: CDNap: execution failed due to signal 9&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;However, when running this command on another Solaris 9 server(ap15), it worked well.&lt;/p&gt;
&lt;p&gt;According to &lt;a href=&quot;https://forums.oracle.com/forums/thread.jspa?threadID=1919581&quot;&gt;Weird exec failure&lt;/a&gt;, &quot;&lt;strong&gt;My bet is that the program has a rather large BSS segment, and there isn&#39;t enough swap to reserve the space. (ldd(1) works by setting up some environment variables, then running the program itself, which is why it would fail)&lt;/strong&gt;&quot;. To verify this, you can run&lt;/p&gt;
&lt;pre&gt;/usr/ccs/bin/size /path/to/program&lt;/pre&gt;
&lt;p&gt;To check the free space of swap, you can&lt;/p&gt;
&lt;pre&gt;swap -s&lt;/pre&gt;
&lt;p&gt;After comparing the swap space and memory of the two Solaris servers, I noticed that the server(AP11) bearing this issue has smaller memory(1GB) and swap space(only 75008k available).&lt;/p&gt;
&lt;pre&gt;AP11: swap -l
swapfile             dev  swaplo blocks   free
/dev/dsk/c0t2d0s1   136,1      16 4198304 4198304
AP11: swap -s
total: 513384k bytes allocated + 2296288k reserved = 2809672k used, 75008k available
AP11: uname -a
SunOS coolap22n 5.9 Generic_122300-61 sun4u sparc SUNW,UltraAX-i2
AP11: prtconf|grep Memory
Memory size: 1024 Megabytes&lt;/pre&gt;
&lt;p&gt;Server(ap15) without ldd issue has 2GB memory and larger swap(4966160k available).&lt;/p&gt;
&lt;pre&gt;ap15:root &amp;gt; swap -s
total: 372136k bytes allocated + 522864k reserved = 895000k used, 4966160k available
ap15:root &amp;gt; df -k swap
Filesystem            kbytes    used   avail capacity  Mounted on
swap                 1793064960 1589658648 203406312    89%    /tmp
ap15:root &amp;gt; swap -l
swapfile             dev  swaplo blocks   free
/dev/dsk/c0t2d0s1   136,1      16 8392544 8392544
ap15:root &amp;gt; uname -a
SunOS coolap10n 5.9 Generic_122300-61 sun4u sparc SUNW,UltraAX-i2&lt;/pre&gt;
&lt;p&gt;It seems it&#39;s time for such old Solaris servers to retire.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>String Evolver, My First Genetic Algorithm</title>
   <link href="http://bo-yang.github.com//2012/05/04/string-evolver"/>
   <updated>2012-05-04T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2012/05/04/string-evolver</id>
   <content type="html">&lt;p&gt;When reading &lt;em&gt;Evolutionary Computation for Modeling and Optimization[1]&lt;/em&gt;, I found following problem in section 1.2.3:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;A string evolver is an evolutionary algorithm that tries to match a reference string from a population of random strings. The underlying character set of the string evolver is the alphabet from which the strings are drawn.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The solution given in the context is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Start with a reference string and a population of random strings.&lt;/li&gt;
&lt;li&gt;The fitness of a string is the number of positions in which it has the same character as the reference string.&lt;/li&gt;
&lt;li&gt;To evolve the population, split it into small random groups called&amp;nbsp;tournaments.&lt;/li&gt;
&lt;li&gt;Copy the most fit string(break ties by picking at random among the most fit strings) over the least fit string in each tournament.&lt;/li&gt;
&lt;li&gt;Then change one randomly chosen character in each copy(mutation).&lt;/li&gt;
&lt;li&gt;Repeat until an exact match with the reference string is obtained.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When trying this solution, I noticed that it won&#39;t converge even after a long time. Therefore, I modified the crossover and mutation strategy.&lt;strong&gt;A subset of population(strings) will be selected based on fitness in a tournament, and the bottom-ranked&lt;br /&gt;
 50% of each tournament will be deleted. New population is formed by crossing the remaining high 20 individuals in a tournament, while the high-ranked parents are kept unchanged[2]. Finally, a random selected string in a tournament will be mutated.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
My codes are:&lt;/p&gt;&lt;/p&gt;
&lt;pre&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;

#define POP 20 
#define TNMT 4	    // Total number of tournaments
#define MAXSTR 80
char strPop[POP][MAXSTR]; // population of strings
char* REF=&amp;quot;Hello,world!&amp;quot;; // Reference string
char* mostFit[TNMT]; 	  // the most fit string of each tournament
char* leastFit[TNMT]; 	// the least fit string of each 

tournament

char GenRandChar()
{
	return (char)(32+rand()%96);
}

char * GenRandStr(char* str, unsigned int len)
{
	int i;
	for(i=0;i&amp;lt;len-1;++i)
	{
		str[i]=GenRandChar();
	}
	str[i]=&#39;&#39;;
	return str;
}

// Copy the most fit string(break ties by picking at 
// random among the most fit strings) over the least 
// fit string in each tournament.
unsigned int CrossoverM2L(char* strMostFit, char* strLeastFit, unsigned int len)
{
	int i,p;
	char tmp;

	// Generate random position. Make sure the string
	// won&#39;t be broken at the first or last character.
	p=rand()%(len-2)+1;
	for(i=0;i&amp;lt;p;++i)
	{
		tmp=strMostFit[i];
		strMostFit[i]=strLeastFit[i];
		strLeastFit[i]=tmp;
	}
	return p;
}

// Change one randomly chosen character in each copy.
unsigned int Mutate(char* str,unsigned int len)
{
	int p;

	p=rand()%len;
	str[p]=GenRandChar();
	return p;
}

// Count the number of identical chars between ref and str.
unsigned int GetFitness(char* str,unsigned int len)
{
	int i;
	int cnt=0;
	for(i=0;i&amp;lt;len;++i)
	{
		if(REF[i]==str[i])
			cnt++;
	}
	
	return cnt;
}

// Find out the most and least fit strings in a tournament.
// 	tourn -- the number of tourn, starting from 0.
void GetFitOfTnmt(char* mostFit[],char* leastFit[],unsigned int tourn)
{
	int i,fit;
	char* str;
	int most_fit,least_fit;

	// Make sure the most and least fit strings are different
	mostFit[tourn]=strPop[tourn*POP/TNMT];
	most_fit=GetFitness(mostFit[tourn],strlen(REF));
	leastFit[tourn]=strPop[tourn*POP/TNMT+1];
	least_fit=GetFitness(leastFit[tourn],strlen(REF));
	for(i=1;i&amp;lt;POP/TNMT;++i)
	{
		str=strPop[tourn*POP/TNMT+i];
		fit=GetFitness(str,strlen(REF));
		if(most_fitfit)
		{
			least_fit=fit;
			leastFit[tourn]=str;
		}
	}
}

// Get the most fit string of the population
char* GetMostFit(char* mostFit[])
{
	int i,fit;
	char* strFit=mostFit[0];
	int most_fit=GetFitness(strFit,strlen(REF));
	for(i=1;i&amp;lt;TNMT;++i)
	{
		fit=GetFitness(mostFit[i],strlen(REF));
		if(most_fit&amp;lt;fit)
		{
			most_fit=fit;
			strFit=mostFit[i];
		}
	}
	
	return strFit;
}

// Sort the strings in a tournament by fitness.
void SortTournByFit(unsigned int tourn)
{
	int tmpInt;
	unsigned int fit[POP/TNMT];
	int i,j;
	int len=strlen(REF);
	char tmpStr[MAXSTR];

	// Get the fitness of each string in this tournament
	for(i=0;i&amp;lt;POP/TNMT;i++)
	{
		fit[i]=GetFitness(strPop[tourn*POP/TNMT+i],len);
	}

	// Sort strings by fitness
	for(i=0;i&amp;lt;POP/TNMT;i++)
	{
		for(j=i+1;j&amp;lt;POP/TNMT;j++)
		{
			if(fit[i]&amp;lt;fit[j])
			{
				tmpInt=fit[i];
				fit[i]=fit[j];
				fit[j]=tmpInt;

				strcpy(tmpStr,strPop[tourn*POP/TNMT+i]);
				strcpy(strPop[tourn*POP/TNMT+i],strPop[tourn*POP/TNMT+j]);
				strcpy(strPop[tourn*POP/TNMT+j],tmpStr);
			}
		} // end of for j
	} // end of for i
}

// Crossover the top half strings.
// Remove the second half strings after sorting, keep the top half, 
// and generate children by crossing over top half strings.
void CrossoverByFit(unsigned int tourn)
{
	int i,j,p,len;
	char* strTmp;

	SortTournByFit(tourn);

	// Generate random position. Make sure the string
	// won&#39;t be broken at the first or last character.
	len=strlen(REF);
	p=rand()%(len-2)+1;
	
	for(i=0;i&amp;lt;(int)POP/TNMT/2;i+=2)
	{
		for(j=0;j
p;--j)
		{
			strPop[(tourn+1)*POP/TNMT-1-i][j]=strPop[tourn*POP/TNMT+i+1][j];
			strPop[(tourn+1)*POP/TNMT-2-i][j]=strPop[tourn*POP/TNMT+i][j];
		}
	}
}


// Print population by tournaments.
void DumpPop()
{
	int i,j;
	char* curStr;
	for(i=0;i&amp;lt;TNMT;i++)
	{
		printf(&amp;quot;Tournament %d:n&amp;quot;,i);
		for(j=0;j&amp;lt;POP/TNMT;j++)
		{
			curStr=strPop[i*POP/TNMT+j];
			printf(&amp;quot;t%stFitness: %dn&amp;quot;,curStr,GetFitness(curStr,strlen(curStr)));
		}
		printf(&amp;quot;n&amp;quot;);
	}
}

//
// MAIN START HERE
//
int main()
{
	int LEN=strlen(REF);

	int i,j,p;
	long cnt=0;
	char * strFit=NULL;
	
	// Initionlization
	for(i=0;i&amp;lt;POP;++i)
	{
		GenRandStr(strPop[i],LEN);
	}
	
	printf(&amp;quot;---------------- Original Population ---------------n&amp;quot;);
	DumpPop();
	
	for(i=0;i&amp;lt;TNMT;++i)
		GetFitOfTnmt(mostFit,leastFit,i);
		
	strFit=GetMostFit(mostFit);
	while(GetFitness(strFit,LEN) != LEN)
	//while(GetFitness(strFit,LEN)&amp;lt;5)
	{
		printf(&amp;quot;n---------------- Generation %d ----------------n&amp;quot;,cnt);
		DumpPop();

		printf(&amp;quot;%stReferencen&amp;quot;,REF);
		printf(&amp;quot;%stGen: %dtFitness: %dn&amp;quot;,strFit,cnt++,GetFitness(strFit,LEN));
		for(i=0;i&amp;lt;TNMT;++i)
		{
			// Crossover
			//CrossoverM2L(mostFit[i],leastFit[i],LEN);
			CrossoverByFit(i);
			
			// Mutation
			p=rand()%(POP/TNMT);
			Mutate(strPop[i*POP/TNMT+p],LEN);

			// Re-calculate the fitness
			GetFitOfTnmt(mostFit,leastFit,i);
		}
		strFit=GetMostFit(mostFit);
	}

	strFit=GetMostFit(mostFit);
	printf(&amp;quot;n---------------- Generation %d ----------------n&amp;quot;,cnt);
	DumpPop();
	printf(&amp;quot;%stReferencen&amp;quot;,REF);
	printf(&amp;quot;%stGen: %dtFitness: %dn&amp;quot;,strFit,cnt++,GetFitness(strFit,LEN));

	return 0;
}&lt;/pre&gt;
&lt;p&gt;
&lt;span style=&quot;font-family:monospace;&quot;&gt;&lt;span style=&quot;white-space:pre;&quot;&gt;And the output is:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;---------------- Generation 0 ----------------
Tournament 0:
	F~AKK[b;tV]	Fitness: 0
	\agA_q&amp;gt;vr	Fitness: 0
	OGG&amp;amp;Gy*(|yj	Fitness: 0
	6s[rEA8|45/	Fitness: 0
	W.e[:bYXlCz	Fitness: 0

Tournament 1:
	6n?y9o??VN#	Fitness: 0
	8mmZ~f:Dfn&amp;lt;	Fitness: 0
	i-nV!P`{oQ	Fitness: 0
	8%p%)3-j;(	Fitness: 0
	92S2}&amp;amp;jU&amp;quot;f	Fitness: 0

Tournament 2:
	38IrA~lrHq|	Fitness: 0
	RF51Vo7V9]v	Fitness: 0
	Z(tUX&amp;lt;w|!{m	Fitness: 1
	qNoPy&#39;a;OS]	Fitness: 0
	1`]em-+SM~~	Fitness: 0

Tournament 3:
	o^f(T&amp;amp;zQC3Q	Fitness: 0
	($g[j@ Asi	Fitness: 0
	@gb#E`!QGUb	Fitness: 0
	%H/&amp;gt;N)Kt_Pm	Fitness: 0
	i&amp;gt;Z+F0@6/&#39;L	Fitness: 0

Hello,world!	Reference
Z(tUX&amp;lt;w|!{m	Gen: 0	Fitness: 1

---------------- Generation 1 ----------------
Tournament 0:
	F~AKK[b;tVx	Fitness: 0
	\agA_q&amp;gt;vr	Fitness: 0
	OGG&amp;amp;Gy*(|yj	Fitness: 0
	\agA_q&amp;gt;5]	Fitness: 0
	F~AKK[b;tCr	Fitness: 0

Tournament 1:
	6n?y9o??VN#	Fitness: 0
	kmmZ~f:Dfn&amp;lt;	Fitness: 0
	i-nV!P`{oQ	Fitness: 0
	8mm%9o??VN#	Fitness: 0
	6n?2~f:Dfn&amp;lt;	Fitness: 0

Tournament 2:
	Z(tUX&amp;lt;w|!{m	Fitness: 1
	RF51Vo7V9]v	Fitness: 0
	38IrA~lrHq|	Fitness: 0
	RFoUX&amp;lt;w|r{m	Fitness: 2
	Z(]1Vo7V9]v	Fitness: 0

Tournament 3:
	o^f(T&amp;amp;zQC3Q	Fitness: 0
	($g[j@ Asi	Fitness: 0
	@gb#E`!QGUb	Fitness: 0
	($/(T&amp;amp;zQC3Q	Fitness: 0
	@^Z[j@ Asi	Fitness: 0

Hello,world!	Reference
RFoUX&amp;lt;w|r{m	Gen: 1	Fitness: 2

---------------- Generation 2 ----------------
Tournament 0:
	F~AKK[b;tVx	Fitness: 0
	\agA_q&amp;gt;vr	Fitness: 0
	OGG&amp;amp;Gy*(|yj	Fitness: 0
	\agA_q&amp;gt;v]	Fitness: 0
	F~AeK[b;tVr	Fitness: 0

Tournament 1:
	Pn?y9o??VN#	Fitness: 0
	kmmZ~f:Dfn&amp;lt;	Fitness: 0
	i-nV!P`{oQ	Fitness: 0
	kmmZ~f??VN#	Fitness: 0
	6n?y9o:Dfn&amp;lt;	Fitness: 0

Tournament 2:
	RFoDX&amp;lt;w|r{m	Fitness: 2
	Z(tUX&amp;lt;w|!{m	Fitness: 1
	38IrA~lrHq|	Fitness: 0
	Z(t1X&amp;lt;w|r{m	Fitness: 2
	RFo1X&amp;lt;w|!{m	Fitness: 1

Tournament 3:
	o^f(T&amp;amp;zQC3Q|	Fitness: 0
	($g[j@ Asi	Fitness: 0
	@gb#E`!QGUb	Fitness: 0
	($f(T&amp;amp;zQC3Q	Fitness: 0
	o^g[j@ Asi	Fitness: 0

Hello,world!	Reference
RFoDX&amp;lt;w|r{m	Gen: 2	Fitness: 2

---------------- Generation 3 ----------------
Tournament 0:
	F~AKK[b;tVx	Fitness: 0
	\agA_q&amp;gt;vr	Fitness: 0
	OGG&amp;amp;Gy*(|yj	Fitness: 0
	\KK[b;tVx	Fitness: 0
	F~Aag~_q&amp;gt;vr	Fitness: 0

Tournament 1:
	Pn?y9o??VN#	Fitness: 0
	kmmZ~f:Dfn&amp;lt;@	Fitness: 0
	i-nV!P`{oQ	Fitness: 0
	km?y9o??VN#	Fitness: 0
	PnmZ~f:Dfn&amp;lt;	Fitness: 0

Tournament 2:
	RFoDX&amp;lt;w|r{m	Fitness: 2
	Z(t1X&amp;lt;w|r{m	Fitness: 2
	Z(tUX~w|!{m	Fitness: 1
	Z(oDX&amp;lt;w|r{m	Fitness: 2
	RFI1X&amp;lt;w|r{m	Fitness: 2

Tournament 3:
	o^f(T&amp;amp;zQC3Q|	Fitness: 0
	($g[j@ Asi	Fitness: 0
	@gb#E`!QGUb	Fitness: 0
	($g[W@ QC3Q|	Fitness: 0
	o^f(T&amp;amp;zAsi	Fitness: 0

Hello,world!	Reference
RFoDX&amp;lt;w|r{m	Gen: 3	Fitness: 2

---------------- Generation 4 ----------------
Tournament 0:
	F~AKK[b;tVx	Fitness: 0
	\JgA_q&amp;gt;vr	Fitness: 0
	OGG&amp;amp;Gy*(|yj	Fitness: 0
	\KK[b;tVx	Fitness: 0
	F~AagA_q&amp;gt;vr	Fitness: 0

Tournament 1:
	Pn?y9o??VN#	Fitness: 0
	kmmZ~f:Dfn&amp;lt;@	Fitness: 0
	i-nV!P`{oQ	Fitness: 0
	kmmZ~o??VN#	Fitness: 0
	Pnsy9f:Dfn&amp;lt;@	Fitness: 0

Tournament 2:
	RFoDX&amp;lt;w|r{m	Fitness: 2
	Z(t1X&amp;lt;w|r{m	Fitness: 2
	Z(oDXFw|r{m	Fitness: 2
	Z(t1X&amp;lt;w|r{m	Fitness: 2
	RFoDX&amp;lt;w|r{m	Fitness: 2

Tournament 3:
	o^f(T&#39;zQC3Q|	Fitness: 0
	($g[j@ Asi	Fitness: 0
	@gb#E`!QGUb	Fitness: 0
	($g[j@ AsQ|	Fitness: 0
	o^f(T&amp;amp;zQC3i	Fitness: 0

Hello,world!	Reference
RFoDX&amp;lt;w|r{m	Gen: 4	Fitness: 2

      ......
      ......

---------------- Generation 2342 ----------------
Tournament 0:
	Hpllk,world!	Fitness: 10
	Hpllo,world!	Fitness: 11
	Hpllo,world!	Fitness: 11
	Hpllo,world!	Fitness: 11
	Hpllo,world!	Fitness: 11

Tournament 1:
	Hello,worlF!	Fitness: 11
	Hello,worlf!	Fitness: 11
	Hello,worlf!	Fitness: 11
	Hello,worlf!	Fitness: 11
	Hello,worlf!	Fitness: 11

Tournament 2:
	Hello,worldh	Fitness: 11
	Hello,worldJ	Fitness: 11
	Hello,worldh	Fitness: 11
	Hello,worldh	Fitness: 11
	Hello,worVdJ	Fitness: 10

Tournament 3:
	He:lo,w4rld!	Fitness: 10
	He:lo,w0rld!	Fitness: 10
	He:lo,w4rld!	Fitness: 10
	He:lo,w0rld!	Fitness: 10
	He:2o,w4rld!	Fitness: 9

Hello,world!	Reference
Hpllo,world!	Gen: 2342	Fitness: 11

---------------- Generation 2343 ----------------
Tournament 0:
	Hp|lo,world!	Fitness: 10
	Hpllo,world!	Fitness: 11
	Hpllo,world!	Fitness: 11
	Hpllo,world!	Fitness: 11
	Hpllo,world!	Fitness: 11

Tournament 1:
	Hello,worlF!	Fitness: 11
	Hello,wo&amp;amp;lf!	Fitness: 10
	Hello,worlf!	Fitness: 11
	Hello,worlF!	Fitness: 11
	Hello,worlf!	Fitness: 11

Tournament 2:
	Hello,worldh	Fitness: 11
	Hello,worldJ	Fitness: 11
	Hello,worldh	Fitness: 11
	Hello,wor&amp;amp;dh	Fitness: 10
	Hello,worldJ	Fitness: 11

Tournament 3:
	He:lo,w4rld!	Fitness: 10
	He:lo,w0rld!	Fitness: 10
	He:lo,w4rld!	Fitness: 10
	He:lo,w0rld!	Fitness: 10
	He:lozw4rld!	Fitness: 9

Hello,world!	Reference
Hpllo,world!	Gen: 2343	Fitness: 11

---------------- Generation 2344 ----------------
Tournament 0:
	Hpllo,world!	Fitness: 11
	Hpllo,world!	Fitness: 11
	Hllo,world!	Fitness: 11
	Hpllo,world!	Fitness: 11
	Hpllo,world!	Fitness: 11

Tournament 1:
	Hello,worlF!	Fitness: 11
	Hello,worlf!	Fitness: 11
	Hello,world!	Fitness: 12
	Hello,worlF!	Fitness: 11
	Hello,wo&amp;amp;lf!	Fitness: 10

Tournament 2:
	Hello,world 	Fitness: 11
	Hello,worldJ	Fitness: 11
	Hello,worldh	Fitness: 11
	Hello,worldh	Fitness: 11
	Hello,worldJ	Fitness: 11

Tournament 3:
	He:lo,w44ld!	Fitness: 9
	He:lo,w0rld!	Fitness: 10
	He:lo,w4rld!	Fitness: 10
	He:lo,w0rld!	Fitness: 10
	He:lo,w4rld!	Fitness: 10

Hello,world!	Reference
Hello,world!	Gen: 2344	Fitness: 12
&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;-----------------------------------------------------------------&lt;/p&gt;
&lt;p&gt;&lt;em&gt;References:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[1]: Daniel Ashlock, &lt;em&gt;Evolutionary Computation for Modeling and Optimization&lt;/em&gt;, Springer, 2005.&lt;/p&gt;
&lt;p&gt;[2]: FORREST, S., WEIMER, W., NGUYEN, T., AND GOUES, C. L., &lt;em&gt;A Genetic Programming Approach to Automated Software Repair&lt;/em&gt;, In GECCO (July 2009).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>升级Ubuntu 12.04所遇到的一些问题</title>
   <link href="http://bo-yang.github.com//2012/05/02/ubuntu-1204-update"/>
   <updated>2012-05-02T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2012/05/02/ubuntu-1204-update</id>
   <content type="html">&lt;p&gt;升级Ubuntu 11.10到12.04后，开机报错“&lt;em&gt;no partition found&lt;/em&gt;”,进入Grub后，输入&amp;quot;ls&amp;quot;命令，也报错“no partition found”。可见Grub已经崩溃了。&lt;/p&gt;
&lt;p&gt;于是我下载了&lt;a href=&quot;http://unetbootin.sourceforge.net/&quot;&gt;UNetbootin&lt;/a&gt;，然后利用它在Win 7下制作Ubuntu自启动U盘。制作好之后，结果发现不会自动引导启动，需要在开机之后出现Thinkpad欢迎界面时按F12，然后选择U盘启动。然后选择U盘启动Ubuntu，进入Ubuntu后按照&amp;nbsp;&lt;a href=&quot;http://www.webupd8.org/2009/12/how-to-recover-grub2-linux.html&quot;&gt;How to&lt;br /&gt;
 Fix Grub 2&lt;/a&gt;&amp;nbsp;中的方法安装Grub 2到硬盘。&lt;/p&gt;&lt;/p&gt;
&lt;div style=&quot;color:rgb(85,85,85);font-size:14px;line-height:20px;text-align:justify;margin:0;padding:0;&quot;&gt;
&lt;span style=&quot;margin:0;padding:0;&quot;&gt;To fix GRUB 2, you need an Ubuntu live CD from which you need to boot.&lt;/span&gt;&amp;nbsp;Once you boot to the LIVE&lt;br /&gt;
 CD, open a terminal an and type these commands:&lt;/div&gt;
&lt;p&gt;&lt;br style=&quot;color:rgb(85,85,85);font-size:14px;line-height:20px;margin:0;padding:0;&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;color:rgb(85,85,85);font-size:14px;line-height:20px;text-align:justify;margin:0;padding:0;&quot;&gt;
&lt;span style=&quot;font-weight:bold;margin:0;padding:0;&quot;&gt;a) Firstly, you need to find out on which partition your Linux system is installed:&lt;/span&gt;&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;/p&gt;
&lt;pre class=&quot;linux-code&quot; style=&quot;margin-top:10px;margin-bottom:10px;margin-left:10px;background-color:rgb(229,202,202);color:rgb(0,0,0);font-size:13px;font-family:&#39;UbuntuBeta Mono&#39;, &#39;Ubuntu Mono&#39;, &#39;Courier New&#39;, Courier, monospace;max-height:500px;min-height:16px;overflow-x:auto;overflow-y:auto;width:522px;z-index:10000;border-color:rgb(155,5,5);border-style:solid;border-width:1px 1px 1px 20px;padding:28px 10px 10px;&quot;&gt;&lt;code style=&quot;margin:0;padding:0;&quot;&gt;sudo fdisk -l&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(in my case, it&#39;s &amp;quot;sda1&amp;quot;)&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-weight:bold;margin:0;padding:0;&quot;&gt;b) Now, we must mount this partition:&lt;/span&gt;&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;/p&gt;
&lt;pre class=&quot;linux-code&quot; style=&quot;margin-top:10px;margin-bottom:10px;margin-left:10px;background-color:rgb(229,202,202);color:rgb(0,0,0);font-size:13px;font-family:&#39;UbuntuBeta Mono&#39;, &#39;Ubuntu Mono&#39;, &#39;Courier New&#39;, Courier, monospace;max-height:500px;min-height:16px;overflow-x:auto;overflow-y:auto;width:522px;z-index:10000;border-color:rgb(155,5,5);border-style:solid;border-width:1px 1px 1px 20px;padding:28px 10px 10px;&quot;&gt;&lt;code style=&quot;margin:0;padding:0;&quot;&gt;sudo mount /dev/&lt;span style=&quot;font-weight:bold;margin:0;padding:0;&quot;&gt;sda1&lt;/span&gt; /mnt&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Where &amp;quot;sda1&amp;quot; is the partition where you installed Ubuntu (or any other Linux distro). It could be &amp;quot;sda5&amp;quot;, &amp;quot;sda6&amp;quot;, etc. for you.&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-weight:bold;margin:0;padding:0;&quot;&gt;c) Install grub to the partition you&#39;ve mounted:&lt;/span&gt;&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;/p&gt;
&lt;pre class=&quot;linux-code&quot; style=&quot;margin-top:10px;margin-bottom:10px;margin-left:10px;background-color:rgb(229,202,202);color:rgb(0,0,0);font-size:13px;font-family:&#39;UbuntuBeta Mono&#39;, &#39;Ubuntu Mono&#39;, &#39;Courier New&#39;, Courier, monospace;max-height:500px;min-height:16px;overflow-x:auto;overflow-y:auto;width:522px;z-index:10000;border-color:rgb(155,5,5);border-style:solid;border-width:1px 1px 1px 20px;padding:28px 10px 10px;&quot;&gt;&lt;code style=&quot;margin:0;padding:0;&quot;&gt;sudo grub-install --root-directory=/mnt/ /dev/sda&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;background-color:rgb(255,255,177);border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(223,223,223);border-right-width:1px;border-right-style:solid;border-right-color:rgb(223,223,223);color:rgb(51,51,51);margin:0;padding:0 2px;&quot;&gt;Important:&lt;/span&gt;&amp;nbsp;Please&lt;br /&gt;
 notice that it&#39;s &amp;quot;/dev/sda&amp;quot;, not &amp;quot;/dev/sda1&amp;quot;. &amp;quot;sda&amp;quot; is the hard disk on which your Linux distribution is installed!&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-weight:bold;margin:0;padding:0;&quot;&gt;d) Restart your computer. As previous Grub 2 entries are removed, run the following&lt;br /&gt;
 command to restore them:&lt;/span&gt;&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;/p&gt;
&lt;pre class=&quot;linux-code&quot; style=&quot;margin-top:10px;margin-bottom:10px;margin-left:10px;background-color:rgb(229,202,202);color:rgb(0,0,0);font-size:13px;font-family:&#39;UbuntuBeta Mono&#39;, &#39;Ubuntu Mono&#39;, &#39;Courier New&#39;, Courier, monospace;max-height:500px;min-height:16px;overflow-x:auto;overflow-y:auto;width:522px;z-index:10000;border-color:rgb(155,5,5);border-style:solid;border-width:1px 1px 1px 20px;padding:28px 10px 10px;&quot;&gt;&lt;code style=&quot;margin:0;padding:0;&quot;&gt;sudo update-grub&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;我以前是用USB Stick安装的Ubuntu，在安装过程中有一选项是选择引导程序的安装位置，默认是/dev/sdb，也就是U盘。因为当时我没注意，所以Grub 2被安装到了U盘，尽管事后重新安装到了硬盘上，但貌&amp;#20284;升级后还是不太正常。&lt;/p&gt;
&lt;p&gt;重启电脑进入Grub 2之后，输入命令（Grub 2中已经不再支持kernel命令，需要用&lt;strong&gt;&lt;em&gt;linux&lt;/em&gt;&lt;/strong&gt;指定kernel）：&lt;/p&gt;&lt;/p&gt;
&lt;pre&gt;linux (hd0,X)/vmlinuz-3.2......
initrd (hd0,X)/initrd.img-3.2......
boot&lt;/pre&gt;
&lt;p&gt;悲哀的是系统启动到一半仍然无法进入GUI或者shell。多次检查测试后确认 / 所在的分区已经崩溃，Ubuntu根本无法识别。&lt;/p&gt;
&lt;p&gt;虽然不想，但此时我已别无选择，只能重新安装Ubuntu 12.04了。可惜我电脑里那些尚未备份的文件和电影啊……&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Briss -- Crop the Margins of Your PDF Files</title>
   <link href="http://bo-yang.github.com//2012/04/21/briss-intro"/>
   <updated>2012-04-21T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2012/04/21/briss-intro</id>
   <content type="html">&lt;p&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;今天用iPad阅读一个PDF文档时，发现每页留白太多，字体特别小，在iBooks中每翻一页都要手动去缩放，实在是麻烦。于是搜索去掉PDF留白的方法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;先是寄希望于Linux系统自带的pdfcrop，结果尝试了各种选项后，发现PDF的size没有变，还是原来的8.5x8.9 inch。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;后来搜索Ghostscript的用法，把papersize或者resolution强制改成希望的数&amp;#20540;，仍然没有变化。郁闷！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;再后来发现了网上的一个PDFcrop版本，也是用Perl写的，只是更加友好一点，尝试之后仍不奏效。自己上手用hardcode改为自己想要的结果，失败。不过在该tool中最大的发现就是&lt;em&gt; 1inch=28.3464567bp(dpi)&lt;/em&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;总结一晚上失败的经验就是：&lt;strong&gt;该PDF文档是扫描的图片转PDF&amp;#26684;式，而不是文字直接转的，因此pdfcrop等工具无法发现并处理留白！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;最后在网上搜索PDF Margin Crop，无意中发现了&lt;a href=&quot;http://sourceforge.net/projects/briss/&quot;&gt;Briss&lt;/a&gt;，抱着试试看的心态下载使用了一下，发现竟然能够识别图片转PDF的文字区域，拖动左上或右下脚上的蓝色正方形区域还可一手动选择保留的区域， Terrific！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;使用方法就是下载&lt;a href=&quot;http://sourceforge.net/projects/briss/&quot;&gt;Briss&lt;/a&gt;，解压缩，然后执行&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;
&lt;pre&gt;java -jar briss-0.0.13.jar
or
java -jar briss-0.0.13.jar cropthis.pdf

(The second line comes in handy if you want shortlinks for pdf editing) 
&lt;/pre&gt;
&lt;p&gt;
&lt;span style=&quot;font-size:18px;&quot;&gt;更详细的使用说明参见&amp;nbsp;&lt;a href=&quot;http://www.freewaregenius.com/2011/01/18/briss-crop-your-pdf-documents-using-a-visual-interface/&quot; title=&quot;Briss: crop your PDF documents using a visual interface&quot; rel=&quot;bookmark&quot; style=&quot;font-family:&#39;Myriad Pro&#39;, Calibri;line-height:22px;vertical-align:baseline;outline-style:none;outline-width:initial;outline-color:initial;background-color:transparent;border-width:initial;border-color:initial;color:rgb(34,34,34);border-style:none;margin:0;padding:0;&quot;&gt;Briss:&lt;br /&gt;
 crop your PDF documents using a visual interface&lt;/a&gt;&lt;span style=&quot;color:rgb(68,68,68);font-family:&#39;Myriad Pro&#39;, Calibri;line-height:22px;&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using Expect Here Document in Shell Scripts</title>
   <link href="http://bo-yang.github.com//2012/03/06/using-expect-here-document-in-shell-scripts-4"/>
   <updated>2012-03-06T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2012/03/06/using-expect-here-document-in-shell-scripts-4</id>
   <content type="html">&lt;p&gt;Sometimes simple interactions are needed for Shell scripts. In this scenario, a here document written in Expect will work well. In following example, the output of Expect here document is assigned to KSH variable rcs_stat.&lt;br /&gt;
&lt;P&gt;&lt;/p&gt;
&lt;pre class=&quot;python&quot;&gt;#!/bin/ksh

autoload formatAPnum

# Set the lab name, COOLLAB
. $COOLXDIR/.netlabs
# Get the RCS cell list
set -A RCSs
typeset -i nx=0
cat $COOLXDIR/.coolcell2dcs | while read cell
do
	if [[ &amp;quot;$cell&amp;quot; = c* ]]
	then
		rcs=${cell%%$COOLLAB*}
		RCSs[$nx]=${rcs#c}
		nx=$nx+1
	fi
done

# Check RCS status
typeset -i loopCount=0
rcs_cnt=${#RCSs[*]}
B_server=$(formatAPnum $BserverAP)
while [ &amp;quot;${#RCSs[*]}&amp;quot; != 0 -a $loopCount -lt 720 ]  # wait at most 2 hours
do
	loopCount=${loopCount}+1

	nx=0
	while [ $nx -lt $rcs_cnt ]
	do
		rcs_stat=&amp;quot;OOS&amp;quot;
		rcs_stat=$(
expect - &amp;lt;&amp;lt;!
log_user 0
set timeout 20
spawn $COOL_RSH ap$B_server TICLI
send &amp;quot;op:cell ${RCSs[$nx]}\r&amp;quot;
expect {
	timeout {puts &amp;quot;OOS\n&amp;quot;}
	&amp;quot;*DL(S) DOWN&amp;quot; {puts &amp;quot;OOS\n&amp;quot;}
	&amp;quot;*DL(S) UP&amp;quot; {puts &amp;quot;UP\n&amp;quot;}
}
!
		)

		if [ &amp;quot;$rcs_stat&amp;quot; = &amp;quot;UP&amp;quot; ]
		then
			coolprint - &amp;quot;RCS cell ${RCSs[$nx]} is up.&amp;quot;
			unset RCSs[$nx]
		fi

		nx=${nx}+1
	done

	[ -n &amp;quot;${RCSs[*]}&amp;quot; ] &amp;amp;&amp;amp; sleep 10 
done

coolprint - &amp;quot;All RCSs are up.&amp;quot;
exit 0
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Shell中使用Expect Here Document</title>
   <link href="http://bo-yang.github.com//2012/03/06/expect-here-doc-in-shell"/>
   <updated>2012-03-06T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2012/03/06/expect-here-doc-in-shell</id>
   <content type="html">&lt;p&gt;在使用Shell写程序时，有时不得不面对交互的问题——可惜shell往往无法自动完成交互。如果交互的内容很多，自然是直接应用Expect脚本比较方便；如果交互的内容很少，而且考虑到Shell的易用性，在Shell脚本中创建一个Expect 的Here Document更加方便灵活。&lt;/p&gt;
&lt;p&gt;如下例所示，Expect&amp;nbsp;Here Document可以直接运行并将运行结果赋给KSH变量rcs_stat。&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;#!/bin/ksh

autoload formatAPnum

# Set the lab name, COOLLAB
. $COOLXDIR/.netlabs
# Get the RCS cell list
set -A RCSs
typeset -i nx=0
cat $COOLXDIR/.coolcell2dcs | while read cell
do
	if [[ &amp;quot;$cell&amp;quot; = c* ]]
	then
		rcs=${cell%%$COOLLAB*}
		RCSs[$nx]=${rcs#c}
		nx=$nx+1
	fi
done

# Check RCS status
typeset -i loopCount=0
rcs_cnt=${#RCSs[*]}
B_server=$(formatAPnum $BserverAP)
while [ &amp;quot;${#RCSs[*]}&amp;quot; != 0 -a $loopCount -lt 720 ]  # wait at most 2 hours
do
	loopCount=${loopCount}+1

	nx=0
	while [ $nx -lt $rcs_cnt ]
	do
		rcs_stat=&amp;quot;OOS&amp;quot;
		rcs_stat=$(
expect - &amp;lt;&amp;lt;!
log_user 0
set timeout 20
spawn $COOL_RSH ap$B_server TICLI
send &amp;quot;op:cell ${RCSs[$nx]}r&amp;quot;
expect {
	timeout {puts &amp;quot;OOSn&amp;quot;}
	&amp;quot;*DL(S) DOWN&amp;quot; {puts &amp;quot;OOSn&amp;quot;}
	&amp;quot;*DL(S) UP&amp;quot; {puts &amp;quot;UPn&amp;quot;}
}
!
		)

		if [ &amp;quot;$rcs_stat&amp;quot; = &amp;quot;UP&amp;quot; ]
		then
			coolprint - &amp;quot;RCS cell ${RCSs[$nx]} is up.&amp;quot;
			unset RCSs[$nx]
		fi

		nx=${nx}+1
	done

	[ -n &amp;quot;${RCSs[*]}&amp;quot; ] &amp;amp;&amp;amp; sleep 10 
done

coolprint - &amp;quot;All RCSs are up.&amp;quot;
exit 0
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>File Descriptors per Process</title>
   <link href="http://bo-yang.github.com//2012/02/02/file-descriptors-per-process"/>
   <updated>2012-02-02T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2012/02/02/file-descriptors-per-process</id>
   <content type="html">&lt;p&gt;A file descriptor is a handle created by a process when a file is opened. There is a limit to the amount of file descriptors per process. In order to check the default limit of the system, you can use command:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ulimit -a # all limitations&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ulimit -Sn # soft limit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ulimit -Hn # hard limit&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the file descriptor limit is exceeded for a process, you may see the error &lt;code&gt;Too Many Open Files&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And if you want to change the limit per process temporarily, you can:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ulimit -n &amp;lt;desired_#&amp;gt; # both&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ulimit -Sn &amp;lt;desired_#&amp;gt; # soft limit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ulimit -Hn &amp;lt;desired_#&amp;gt; # hard limit&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To check the open files of a process, you can use command &lt;code&gt;pfiles &amp;lt;PID&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To check the run time limit of each process in Solaris, you can &lt;code&gt;plimit &amp;lt;PID&amp;gt;&lt;/code&gt;(it seems this command is not supported in Linux). If you have the root permission and you want to change the limit of an process without killing or restarting the process, you can &lt;code&gt;plimit -n &amp;lt;desired_#&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It was said that it may be dangerous to set the soft limit higher than 256 or hard limit greater than 1024 due to limitations with the stdio library.If programs require more file descriptors, they should use setrlimit directly.&lt;/p&gt;
&lt;p&gt;-------------&lt;br /&gt;
References:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.brandonhutchinson.com/File_descriptors.html&quot;&gt;File descriptors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cyberciti.biz/faq/linux-increase-the-maximum-number-of-open-files/&quot;&gt;Linux Increase The Maximum Number Of Open Files / File Descriptors (FD)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cyberciti.biz/faq/howto-linux-get-list-of-open-files/&quot;&gt;Linux / UNIX: List Open Files for Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.princeton.edu/~unix/Solaris/troubleshoot/filedesc.html&quot;&gt;Princeton University Enterprise Servers and Storage, File Descriptors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://compute.cnr.berkeley.edu/cgi-bin/man-cgi?plimit+1&quot;&gt;plimit&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>OnLive——在iPad上使用MS Word, Excel, PowerPoint</title>
   <link href="http://bo-yang.github.com//2012/01/13/onlive"/>
   <updated>2012-01-13T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2012/01/13/onlive</id>
   <content type="html">&lt;p&gt;昨晚睡前看到Walter Mossburg的最新文章&lt;a href=&quot;http://allthingsd.com/20120111/working-in-word-excel-powerpoint-on-an-ipad/&quot;&gt;Working in Word, Excel, PowerPoint on an iPad&lt;/a&gt;：尽管iPad上已经有office软件，可以在上面编辑或创建文档，但这些软件对MS Office的兼容性并不好，而且还是收费的。&lt;a href=&quot;http://desktop.onlive.com/&quot;&gt;OnLive&lt;br /&gt;
 Desktop&lt;/a&gt;即将推出一个免费的应用，该应用可以利用云端的MS Word, Excel, PowerPoint创建并编辑文档，文档保存在云端，可以在iPad和PC上（今后会有Android版）编辑。免费版每人2G云端存储空间，付费版$10每月每人50G空间。&amp;nbsp;除常用的Office软件，还支持常用的Windows小程序，如计算器，画图板，记事本等。&lt;/p&gt;
&lt;p&gt;OnLive对于网络要求较高，低于1M的网络很可能无法连接到服务器。另外，文档输入时的虚拟键盘不是iPad的虚拟键盘而是Windows的键盘，编辑长文档时会很麻烦。&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;img src=&quot;http://online.wsj.com/public/resources/images/PJ-BE740_PTECHJ_G_20120111170747.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;看过视频之后，我认为这个软件就是一个高级版的VNC应用，创新之处就在于云端的Windows服务器集群，能维护Windows环境以及自动为用户分配Windows服务器。一年多以前，在《&lt;a href=&quot;http://blog.csdn.net/bonny95/article/details/5857256&quot;&gt;Splashtop Remote——让你在iPad上也能用Windows下的应用&lt;/a&gt;》一文中，我曾预言&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;quot;&lt;span style=&quot;color:rgb(51,51,51);font-family:Arial;font-size:14px;line-height:26px;text-align:left;&quot;&gt;试想如果将来有公司（比如这个DeviceVM）推出一项服务（可以免费，也可收费），为用户提供现成的Windows应用，而用户所需要做的就是在iPad或gPad上安装Splashtop Remote，打开这个应用就可以自动连接到DeviceVM的Windows&lt;br /&gt;
 PC/Server，利用现成的Windows程序了——省去了自己购买并维护PC的很多麻烦，节省了购买大量Windows软件的开支，何乐而不为呢？而且这也正契合了时下的云计算潮流。&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;果然英雄所见略同，已经有人开始提供这样的服务了。不过OnLive能否流行开来，还有待用户和市场的检验。使用体验是否可以被用户接受？如何解决网速（无论有线或无线）慢的情况？ 微软会不会推出iPad版的Office软件？即使该服务的终极目标不仅仅限于Windows或者Office软件，其他只能能在PC运行的程序会不会有替代解决方案在iPad或者Android平板上？以及现存的很多类VNC的软件……凡此种种，都构成了该服务的不确定因素。&lt;/p&gt;
&lt;p&gt;无论如何，这都是一个很好的尝试。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Updating Fedora to Fedora16 and Installing Ubuntu 11.04</title>
   <link href="http://bo-yang.github.com//2012/01/09/updating-fedora-to-fedora16-and-installing-ubuntu-11-04"/>
   <updated>2012-01-09T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2012/01/09/updating-fedora-to-fedora16-and-installing-ubuntu-11-04</id>
   <content type="html">&lt;p&gt;2.5years ago I installed Fedora11 on my Thinkpad R61,and then updated it to Fedora 12 and then Fedora 14. A bunch of software were installed, and as a result, the system went slower and slower... 固然有我个人懒惰不愿优化的原因，系统性能下降也与两年多来Fedora的复杂程度的增长有关。前天晚上禁不住诱惑升级到了Fedora 16，过程中没遇到问题，只是升级后发现：（1）Gnome 3的界面进不去，因为笔记本配置太低，没有独立显卡；（2）Classic Gnome with compiz也基本无法使用，尽管我已经装好了compiz；（3）KDE界面虽然花哨但速度较慢不甚喜欢；（4）无线网卡经常无法工作。&lt;br /&gt;
基于以上缺陷，我终于忍无可忍，决定更换系统到Ubuntu或者FreeBSD了。本来我更倾向于FreeBSD的，但是由于下载速度缓慢，不得不暂时放弃。&lt;br /&gt;
Ubuntu很快就下完。首先在Fedora下创建启动U盘，参照 How to create and use Live USB：&lt;br /&gt;
Check the size of your USB stick&lt;br /&gt;
Many USB sticks indicate the size on the packaging or the outside of the stick.&lt;/p&gt;
&lt;p&gt;If you don&#39;t know the size of the stick, or want to check it for data, you should be able to auto-mount the USB stick by inserting it into a USB port. You can check the contents and size using the graphical file manager. In Linux, you can also use the command line:&lt;/p&gt;
&lt;p&gt;$ df -h&lt;br /&gt;
Filesystem Size Used Avail Use% Mounted on&lt;br /&gt;
/dev/mapper/VolGroup00-LogVol00&lt;br /&gt;
143G 14G 122G 10% /&lt;br /&gt;
/dev/sda1 99M 12M 82M 13% /boot&lt;br /&gt;
tmpfs 1009M 0 1009M 0% /dev/shm&lt;br /&gt;
/dev/sdb1 3.9G 4.0K 3.9G 1% /media/usbdisk&lt;br /&gt;
USB drives are usually mounted in /media. In this case, the device is /dev/sdb1, has a 3.9GB capacity and is almost empty.&lt;/p&gt;
&lt;p&gt;Take note of &quot;/dev/sdb1&quot; or equivalent; you will be specifying the device name if you use the command line method.&lt;/p&gt;
&lt;p&gt;How to Partition&lt;/p&gt;
&lt;p&gt;CAUTION&lt;br /&gt;
This will erase all data on the USB drive! Please read the instructions below carefully.&lt;br /&gt;
If the drive has not been partitioned properly (or if you are unsure), use fdisk to repartition it.&lt;/p&gt;
&lt;p&gt;It is also possible to do a non-destructive installation of a LiveUSB image, if you have sufficient empty space. See How to install non-destructively below.&lt;/p&gt;
&lt;p&gt;The fdisk command must be run as root. Include only the drive name in the command, not the partition number. Be sure to select the correct disk, or you may erase important data! Check the output of &quot;df -h&quot; if you are unsure. For example, if your partition will be /dev/sdb1, do:&lt;/p&gt;
&lt;p&gt;$ /sbin/fdisk /dev/sdb&lt;br /&gt;
If you don&#39;t have fdisk installed, run&lt;/p&gt;
&lt;p&gt;yum install util-linux-ng&lt;br /&gt;
as root.&lt;br /&gt;
The following session output from fdisk shows the responses to give to the prompts. The line starting Last cylinder ... refers to the size of the flash drive, so may be different than in the example.&lt;/p&gt;
&lt;p&gt;Command (m for help): d&lt;br /&gt;
Selected partition 1&lt;/p&gt;
&lt;p&gt;Command (m for help): n&lt;br /&gt;
Command action&lt;br /&gt;
e extended&lt;br /&gt;
p primary partition (1-4)&lt;br /&gt;
p&lt;br /&gt;
Partition number (1-4): 1&lt;br /&gt;
First cylinder (1-960, default 1): ↵&lt;br /&gt;
Using default value 1&lt;br /&gt;
Last cylinder or +size or +sizeM or +sizeK (1-960, default 960): ↵&lt;br /&gt;
Using default value 960&lt;/p&gt;
&lt;p&gt;Command (m for help): t&lt;br /&gt;
Selected partition 1&lt;br /&gt;
Hex code (type L to list codes): 6&lt;br /&gt;
Changed system type of partition 1 to 6 (FAT16)&lt;/p&gt;
&lt;p&gt;Command (m for help): a&lt;br /&gt;
Partition number (1-4): 1&lt;/p&gt;
&lt;p&gt;Command (m for help): w&lt;br /&gt;
The partition table has been altered!&lt;/p&gt;
&lt;p&gt;Calling ioctl() to re-read partition table.&lt;/p&gt;
&lt;p&gt;WARNING: If you have created or modified any DOS 6.x&lt;br /&gt;
partitions, please see the fdisk manual page for additional&lt;br /&gt;
information.&lt;br /&gt;
Syncing disks.&lt;br /&gt;
How to Format&lt;/p&gt;
&lt;p&gt;CAUTION&lt;br /&gt;
This will erase all data on the USB drive! Please read the instructions below carefully.&lt;br /&gt;
If your USB media has sufficient free space on a vfat file system already, you do not need to perform this step.&lt;/p&gt;
&lt;p&gt;To finish, the partition must be formatted with an actual file system using mkdosfs as the root user. Unmount the device before using mkdosfs. In the below example, /dev/USBPARTITIONNAME might be, for example, /dev/sdb1. Be sure to select the correct partition; formatting destroys all data on it!&lt;/p&gt;
&lt;p&gt;$ umount /dev/USBPARTITIONNAME&lt;br /&gt;
$ /sbin/mkdosfs -F 32 -n usbdisk /dev/USBPARTITIONNAME&lt;br /&gt;
If you don&#39;t have mkdosfs installed, run &quot;yum install dosfstools&quot; as root.&lt;/p&gt;
&lt;p&gt;通过命令&lt;br /&gt;
su -c &quot;yum install liveusb-creator&quot;&lt;br /&gt;
安装了Fedora的liveusb-creator，但是发现Fedora的这个程序无法制作Ubuntu的启动盘。无奈之下，试着把Ubuntu的iso文件复制到U盘里：&lt;br /&gt;
sudo dd if=F12-Live-i686.iso of=/dev/sdX bs=8M&lt;/p&gt;
&lt;p&gt;之后重启电脑，开机之后按c进入grub引导程序。尝试以往的通过kernel指定vmlinuz时失败，才发现Grub2中已经没有了kernel命令，尝试legacy_kernel和xnu_kernel，结果均遭失败。于是我尝试直接指定 initrd (hd1,4)/casper/initrd.gz，然后exit，没成想Ubuntu的安装界面竟然出现了！&lt;br /&gt;
安装Ubuntu的过程中竟然就已经支持了WIFI，着实令我欣慰，看来Ubuntu这么多年在用户友好性上改进不少。&lt;br /&gt;
安装完成后重启，结果Grub无法正常工作，进入grub rescue模式。用iPad百度之后，发现好文Ubuntu启动问题以及Grub Rescue修复方法，逐步去试，果然灵验。转载该文如下：&lt;br /&gt;
Ubuntu启动问题以及Grub Rescue修复方法&lt;/p&gt;
&lt;p&gt;问题：&lt;br /&gt;
之前系统是Windows7 64bit（C盘） + D，E盘（都是NTFS） + Ubuntu。&lt;br /&gt;
今天，在Windows7中删除了E盘，准备向其中安装RedHat 6。 重启Windows7之后发现Ubuntu的grub菜单不能启动。屏幕显示Invalid FileSystem。 （如果没有记错的话，呵呵）&lt;br /&gt;
分析&lt;br /&gt;
由于在Windows下面更改了分区状态，删掉了Ubuntu之前的一个分区，造成Ubuntu的分区由sda5变为sda4了，这样找不到grub了，开机显示&lt;br /&gt;
grub rescue&amp;gt;&lt;br /&gt;
解决&lt;br /&gt;
1. 先使用ls命令，找到Ubuntu的安装在哪个分区：&lt;br /&gt;
grub rescue&amp;gt;ls&lt;br /&gt;
会罗列所有的磁盘分区信息，比方说：&lt;br /&gt;
(hd0,1),(hd0,5),(hd0,3),(hd0,2)&lt;br /&gt;
2. 然后依次调用如下命令： X表示各个分区号码&lt;br /&gt;
grub rescue&amp;gt;ls (hd0,X)/boot/grub&lt;br /&gt;
如果都找不到的话，需要查一下是否因为Linux版本差异，造成grub的路径不对，例如直接ls(hd0,X)/grub等等。&lt;br /&gt;
3. 假设找到（hd0,5）时，显示了文件夹中的文件，则表示Linux安装在这个分区。&lt;br /&gt;
4. 调用如下命令：&lt;br /&gt;
grub rescue&amp;gt;set root=(hd0,5)&lt;br /&gt;
grub rescue&amp;gt;set prefix=(hd0,5)/boot/grub&lt;br /&gt;
grub rescue&amp;gt;insmod /boot/grub/normal.mod&lt;br /&gt;
5. 然后调用如下命令，就可以显示出丢失的grub菜单了。&lt;br /&gt;
grub rescue&amp;gt;normal&lt;br /&gt;
6. 不过不要高兴，如果这时重启，问题依旧存在，我们需要进入Linux中，对grub进行修复。&lt;br /&gt;
进入Linux之后，在命令行执行：&lt;br /&gt;
sudo update-grub&lt;br /&gt;
sudo grub-install /dev/sda&lt;br /&gt;
（sda是你的硬盘号码，千万不要指定分区号码，例如sda1，sda5等都不对）&lt;br /&gt;
7. 重启测试是否已经恢复了grub的启动菜单？ 恭喜你恢复成功！&lt;/p&gt;
&lt;p&gt;Grub恢复成功后，开始安装常用软件。Ubuntu新的界面不像以前想象中那么难用，而且他们终于部分放弃了以前屎黄色的界面风格，最难得的是在我那破本本上速度还是很快滴！期待Ubuntu12.04早日发布，到时直接升级之。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>升级Fedora 16 与安装Ubuntu 11.04</title>
   <link href="http://bo-yang.github.com//2011/12/31/install-ubuntu-11-04"/>
   <updated>2011-12-31T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/12/31/install-ubuntu-11-04</id>
   <content type="html">&lt;p&gt;两年半前安装了Fedora11，之后升级到Fedora 12， Fedora 14，期间安装了大量的软件，系统越来越慢……固然有我个人懒惰不愿优化的原因，系统性能下降也与两年多来Fedora的复杂程度的增长有关。前天晚上禁不住诱惑升级到了Fedora 16，过程中没遇到问题，只是升级后发现：（1）Gnome 3的界面进不去，因为笔记本配置太低，没有独立显卡；（2）Classic Gnome with compiz也基本无法使用，尽管我已经装好了compiz；（3）KDE界面虽然花哨但速度较慢不甚喜欢；（4）无线网卡经常无法工作。&lt;/p&gt;
&lt;p&gt;基于以上缺陷，我终于忍无可忍，决定更换系统到Ubuntu或者FreeBSD了。本来我更倾向于FreeBSD的，但是由于下载速度缓慢，不得不暂时放弃。&lt;/p&gt;
&lt;p&gt;Ubuntu很快就下完。首先在Fedora下创建启动U盘，参照&amp;nbsp;&lt;span style=&quot;font-family:sans-serif;&quot;&gt;&lt;span style=&quot;font-size:13px;&quot;&gt;&lt;a href=&quot;http://fedoraproject.org/wiki/How_to_create_and_use_Live_USB&quot;&gt;How to create and use Live USB&lt;/a&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span style=&quot;font-family:sans-serif;font-size:13px;&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:16px;border-bottom-width:initial;border-bottom-style:none;border-bottom-color:initial;font-family:sans-serif;margin:0 0 .3em;padding:.5em 0 .17em;&quot;&gt;
&lt;span class=&quot;mw-headline&quot; id=&quot;Check_the_size_of_your_USB_stick&quot; style=&quot;margin:0;padding:0;&quot;&gt;Check the size of your USB stick&lt;/span&gt;&lt;/h3&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
Many USB sticks indicate the size on the packaging or the outside of the stick.&lt;/p&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
If you don&#39;t know the size of the stick, or want to check it for data, you should be able to auto-mount the USB stick by inserting it into a USB port. You can check the contents and size using the graphical file manager. In Linux, you can also use the command&lt;br /&gt;
 line:&lt;/p&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
&lt;pre&gt;$ df -h
Filesystem            Size  Used Avail Use% Mounted on
/dev/mapper/VolGroup00-LogVol00
143G   14G  122G  10% /
/dev/sda1              99M   12M   82M  13% /boot
tmpfs                1009M     0 1009M   0% /dev/shm
/dev/sdb1             3.9G  4.0K  3.9G   1% /media/usbdisk&lt;/pre&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
USB drives are usually mounted in /media. In this case, the device is /dev/sdb1, has a 3.9GB capacity and is almost empty.&lt;/p&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
Take note of &amp;quot;/dev/sdb1&amp;quot; or equivalent; you will be specifying the device name if you use the command line method.&lt;/p&gt;
&lt;p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h2 style=&quot;font-size:18px;font-weight:normal;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(170,170,170);font-family:sans-serif;margin:0 0 .6em;padding:.5em 0 .17em;&quot;&gt;
&lt;span class=&quot;mw-headline&quot; id=&quot;How_to_Partition&quot; style=&quot;margin:0;padding:0;&quot;&gt;How to Partition&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;messagebox&quot; style=&quot;font-family:sans-serif;line-height:18px;background-color:rgb(249,246,183);min-height:35px;border-color:rgb(196,194,149);border-style:solid;border-width:1px;margin:1ex 0;padding:5px 5px 5px 45px;&quot;&gt;
&lt;div style=&quot;float:left;margin:0 0 0 -40px;padding:0;&quot;&gt;
&lt;a href=&quot;http://fedoraproject.org/wiki/File:Warning_(medium_size).png&quot; class=&quot;image&quot; style=&quot;color:rgb(114,159,207);text-decoration:none;margin:0;padding:0;&quot;&gt;&lt;img alt=&quot;Warning (medium size).png&quot; src=&quot;http://fedoraproject.org/w/uploads/thumb/f/fd/Warning_%28medium_size%29.png/35px-Warning_%28medium_size%29.png&quot; width=&quot;35&quot; height=&quot;35&quot; style=&quot;border-width:initial;border-color:initial;border-style:none;margin:0;padding:0;&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;margin:0;padding:0;&quot;&gt;
&lt;span style=&quot;margin:0;padding:0;&quot;&gt;CAUTION&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;clear:none!important;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
This will erase all data on the USB drive! Please read the instructions below&amp;nbsp;&lt;span style=&quot;margin:0;padding:0;&quot;&gt;carefully&lt;/span&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
If the drive has not been partitioned properly (or if you are unsure), use&amp;nbsp;&lt;code style=&quot;background-color:rgb(249,249,249);font-size:2.4ex;margin:0;padding:0;&quot;&gt;fdisk&lt;/code&gt;&amp;nbsp;to&lt;br /&gt;
 repartition it.&lt;/p&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
It is also possible to do a non-destructive installation of a LiveUSB image, if you have sufficient empty space. See&amp;nbsp;&lt;a href=&quot;https://fedoraproject.org/wiki/How_to_create_and_use_Live_USB#How_to_install_non-destructively&quot; class=&quot;external text&quot; style=&quot;color:rgb(51,102,187);text-decoration:none;background-color:initial;margin:0;padding:0 16px 0 0;&quot;&gt;How&lt;br /&gt;
 to install non-destructively&lt;/a&gt;&amp;nbsp;below.&lt;/p&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
The&amp;nbsp;&lt;code style=&quot;background-color:rgb(249,249,249);font-size:2.4ex;margin:0;padding:0;&quot;&gt;fdisk&lt;/code&gt;&amp;nbsp;command must be run as root. Include&lt;br /&gt;
 only the drive name in the command, not the partition number.&amp;nbsp;&lt;span style=&quot;margin:0;padding:0;&quot;&gt;&lt;span style=&quot;margin:0;padding:0;&quot;&gt;Be&lt;br /&gt;
 sure to select the correct disk, or you may erase important data!&lt;/span&gt;&lt;/span&gt;&amp;nbsp;Check the output of &amp;quot;df -h&amp;quot; if you are unsure. For example, if your partition will be /dev/sdb1, do:&lt;/p&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
&lt;pre&gt;$ /sbin/fdisk /dev/sdb&lt;/pre&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
If you don&#39;t have fdisk installed, run&amp;nbsp;&lt;/p&gt;
&lt;pre&gt;yum install util-linux-ng&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;as root.&lt;/p&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
The following session output from&amp;nbsp;&lt;span style=&quot;font-size:16px;&quot;&gt;&lt;code style=&quot;background-color:rgb(249,249,249);margin:0;padding:0;&quot;&gt;fdisk&lt;/code&gt;&amp;nbsp;&lt;/span&gt;shows&lt;br /&gt;
 the responses to give to the prompts. The line starting&amp;nbsp;&lt;code style=&quot;background-color:rgb(249,249,249);font-size:2.4ex;margin:0;padding:0;&quot;&gt;Last&lt;br /&gt;
 cylinder ...&lt;/code&gt;&amp;nbsp;refers to the size of the flash drive, so may be different than in the example.&lt;/p&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
&lt;pre&gt;Command (m for help): d
Selected partition 1

Command (m for help): n
Command action
e   extended
p   primary partition (1-4)
p
Partition number (1-4): 1
First cylinder (1-960, default 1): ↵
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-960, default 960): ↵
Using default value 960

Command (m for help): t
Selected partition 1
Hex code (type L to list codes): 6
Changed system type of partition 1 to 6 (FAT16)

Command (m for help): a
Partition number (1-4): 1

Command (m for help): w
The partition table has been altered!

Calling ioctl() to re-read partition table.

WARNING: If you have created or modified any DOS 6.x
partitions, please see the fdisk manual page for additional
information.
Syncing disks.&lt;/pre&gt;&lt;/p&gt;
&lt;h2 style=&quot;font-size:18px;font-weight:normal;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(170,170,170);font-family:sans-serif;margin:0 0 .6em;padding:.5em 0 .17em;&quot;&gt;
&lt;span class=&quot;mw-headline&quot; id=&quot;How_to_Format&quot; style=&quot;margin:0;padding:0;&quot;&gt;How to Format&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;messagebox&quot; style=&quot;font-family:sans-serif;line-height:18px;background-color:rgb(249,246,183);min-height:35px;border-color:rgb(196,194,149);border-style:solid;border-width:1px;margin:1ex 0;padding:5px 5px 5px 45px;&quot;&gt;
&lt;div style=&quot;float:left;margin:0 0 0 -40px;padding:0;&quot;&gt;
&lt;a href=&quot;http://fedoraproject.org/wiki/File:Warning_(medium_size).png&quot; class=&quot;image&quot; style=&quot;color:rgb(114,159,207);text-decoration:none;margin:0;padding:0;&quot;&gt;&lt;img alt=&quot;Warning (medium size).png&quot; src=&quot;http://fedoraproject.org/w/uploads/thumb/f/fd/Warning_%28medium_size%29.png/35px-Warning_%28medium_size%29.png&quot; width=&quot;35&quot; height=&quot;35&quot; style=&quot;border-width:initial;border-color:initial;border-style:none;margin:0;padding:0;&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;margin:0;padding:0;&quot;&gt;
&lt;span style=&quot;margin:0;padding:0;&quot;&gt;CAUTION&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;clear:none!important;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
This will erase all data on the USB drive! Please read the instructions below&amp;nbsp;&lt;span style=&quot;margin:0;padding:0;&quot;&gt;carefully&lt;/span&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
If your USB media has sufficient free space on a&amp;nbsp;&lt;span style=&quot;margin:0;padding:0;&quot;&gt;vfat&lt;/span&gt;&amp;nbsp;file system already, you do not need to&lt;br /&gt;
 perform this step.&lt;/p&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
To finish, the partition must be formatted with an actual file system using&amp;nbsp;&lt;code style=&quot;background-color:rgb(249,249,249);font-size:2.4ex;margin:0;padding:0;&quot;&gt;mkdosfs&lt;/code&gt;&amp;nbsp;as&lt;br /&gt;
 the root user. Unmount the device before using&amp;nbsp;&lt;code style=&quot;background-color:rgb(249,249,249);font-size:2.4ex;margin:0;padding:0;&quot;&gt;mkdosfs&lt;/code&gt;.&lt;br /&gt;
 In the below example, /dev/USBPARTITIONNAME might be, for example, /dev/sdb1.&amp;nbsp;&lt;span style=&quot;margin:0;padding:0;&quot;&gt;&lt;span style=&quot;margin:0;padding:0;&quot;&gt;Be&lt;br /&gt;
 sure to select the correct partition; formatting destroys all data on it!&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
&lt;span style=&quot;margin:0;padding:0;&quot;&gt;&lt;span style=&quot;margin:0;padding:0;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;$ umount /dev/USBPARTITIONNAME
$ /sbin/mkdosfs -F 32 -n usbdisk /dev/USBPARTITIONNAME&lt;/pre&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:1ex;margin-right:5ex;margin-bottom:1ex;padding-top:0;padding-bottom:0;font-family:sans-serif;line-height:18px;&quot;&gt;
If you don&#39;t have mkdosfs installed, run &amp;quot;yum install dosfstools&amp;quot; as root.&lt;/p&gt;
&lt;p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-family:sans-serif;font-size:13px;&quot;&gt;通过命令&lt;/span&gt;
&lt;pre&gt;su -c &amp;quot;yum install liveusb-creator&amp;quot;&lt;/pre&gt;
&lt;p&gt;安装了Fedora的liveusb-creator，但是发现Fedora的这个程序无法制作Ubuntu的启动盘&lt;img alt=&quot;快哭了&quot; src=&quot;http://static.blog.csdn.net/xheditor/xheditor_emot/default/fastcry.gif&quot; /&gt;。&lt;span style=&quot;font-family:sans-serif;font-size:13px;&quot;&gt;无奈之下，试着把Ubuntu的iso文件复制到U盘里：&lt;/span&gt;
&lt;pre&gt;sudo dd if=F12-Live-i686.iso of=/dev/sdX bs=8M&lt;/pre&gt;
&lt;p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-family:sans-serif;font-size:13px;&quot;&gt;之后重启电脑，开机之后按c进入grub引导程序。尝试以往的通过kernel指定vmlinuz时失败，才发现Grub2中已经没有了kernel命令，尝试legacy_kernel和xnu_kernel，结果均遭失败。于是我尝试直接指定&amp;nbsp;&lt;span style=&quot;font-family:Consolas, &#39;Courier New&#39;, Courier, mono, serif;line-height:18px;text-align:left;background-color:rgb(248,248,248);&quot;&gt;initrd&amp;nbsp;(hd1,4)/casper/initrd.gz，然后exit，没成想Ubuntu的安装界面竟然出现了！&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-family:sans-serif;font-size:13px;&quot;&gt;安装Ubuntu的过程中竟然就已经支持了WIFI，着实令我欣慰，看来Ubuntu这么多年在用户友好性上改进不少。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-family:sans-serif;font-size:13px;&quot;&gt;安装完成后重启，结果Grub无法正常工作，进入grub rescue模式。用iPad百度之后，发现好文&lt;a href=&quot;http://www.cnblogs.com/samcn/archive/2011/03/30/1999615.html&quot;&gt;Ubuntu启动问题以及Grub Rescue修复方法&lt;/a&gt;，逐步去试，果然灵验。转载该文如下：&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span style=&quot;font-family:sans-serif;font-size:13px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;postTitle&quot; style=&quot;font-family:verdana;word-wrap:break-word;font-size:14px;font-weight:bold;line-height:21px;border-color:red;border-style:solid;border-width:0;padding:10px 10px 10px 5px;&quot;&gt;
&lt;h3&gt;&lt;a id=&quot;ctl02_TitleUrl&quot; class=&quot;postTitle2&quot; href=&quot;http://www.cnblogs.com/samcn/archive/2011/03/30/1999615.html&quot; style=&quot;border-bottom-style:dotted;border-bottom-width:0;border-bottom-color:rgb(239,239,239);padding-bottom:10px;color:rgb(120,175,211);text-decoration:none;&quot;&gt;Ubuntu启动问题以及Grub&lt;br /&gt;
 Rescue修复方法&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&quot;cnblogs_post_body&quot; style=&quot;font-family:verdana;word-wrap:break-word;font-size:14px;line-height:21px;&quot;&gt;
&lt;ul&gt;
&lt;li&gt;问题：&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
之前系统是Windows7 64bit（C盘） &amp;#043; D，E盘（都是NTFS）&amp;nbsp;&amp;#043; Ubuntu。&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
今天，在Windows7中删除了E盘，准备向其中安装RedHat 6。 重启Windows7之后发现Ubuntu的grub菜单不能启动。屏幕显示Invalid FileSystem。 （如果没有记错的话，呵呵）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
由于在Windows下面更改了分区状态，删掉了Ubuntu之前的一个分区，造成Ubuntu的分区由sda5变为sda4了，这样找不到grub了，开机显示&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
grub rescue&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解决&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
1.&amp;nbsp; 先使用ls命令，找到Ubuntu的安装在哪个分区：&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
&lt;pre&gt;grub rescue&amp;gt;ls&lt;/pre&gt;&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;会罗列所有的磁盘分区信息，比方说：&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; (hd0,1),(hd0,5),(hd0,3),(hd0,2)&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
2.&amp;nbsp;然后依次调用如下命令： X表示各个分区号码&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
&lt;pre&gt;grub rescue&amp;gt;ls (hd0,X)/boot/grub&lt;/pre&gt;&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp;如果都找不到的话，需要查一下是否因为Linux版本差异，造成grub的路径不对，例如直接ls(hd0,X)/grub等等。&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
3. 假设找到（hd0,5）时，显示了文件夹中的文件，则表示Linux安装在这个分区。&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
4. 调用如下命令：&lt;/p&gt;
&lt;pre&gt;grub rescue&amp;gt;set root=(hd0,5)
grub rescue&amp;gt;set prefix=(hd0,5)/boot/grub
grub rescue&amp;gt;insmod /boot/grub/normal.mod&lt;/pre&gt;&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
5. 然后调用如下命令，就可以显示出丢失的grub菜单了。&lt;/p&gt;
&lt;pre&gt;grub rescue&amp;gt;normal&lt;/pre&gt;&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
6. 不过不要高兴，如果这时重启，问题依旧存在，我们需要进入Linux中，对grub进行修复。&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; 进入Linux之后，在命令行执行：&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
&lt;pre&gt;sudo update-grub
sudo grub-install /dev/sda&lt;/pre&gt;&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
（sda是你的硬盘号码，千万不要指定分区号码，例如sda1，sda5等都不对）&lt;/p&gt;
&lt;p style=&quot;margin:5px auto;&quot;&gt;
7. 重启测试是否已经恢复了grub的启动菜单？ 恭喜你恢复成功！&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;font-family:sans-serif;font-size:13px;&quot;&gt;Grub恢复成功后，开始安装常用软件。Ubuntu新的界面不像以前想象中那么难用，而且他们终于部分放弃了以前屎黄色的界面风&amp;#26684;，最难得的是在我那破本本上速度还是很快滴！期待Ubuntu12.04早日发布，到时直接升级之。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:sans-serif;font-size:13px;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:sans-serif;font-size:13px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;【Update 2012-04-29】&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:32px;&quot;&gt;&lt;strong&gt;恢复Grub2&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;升级Ubuntu 11.10到12.04后，开机报错“no partition found”,进入Grub后，输入&amp;quot;ls&amp;quot;命令，也报错“no partition found”。&lt;/p&gt;
&lt;p&gt;于是我下载了&lt;a href=&quot;http://unetbootin.sourceforge.net/&quot;&gt;UNetbootin&lt;/a&gt;，然后利用它在Win 7下制作Ubuntu自启动U盘。制作好之后，结果发现不会自动引导启动，需要在开机之后出现Thinkpad欢迎界面时按F12，然后选择U盘启动。然后选择U盘启动Ubuntu，进入Ubuntu后按照&amp;nbsp;&lt;a href=&quot;http://www.webupd8.org/2009/12/how-to-recover-grub2-linux.html&quot;&gt;How to&lt;br /&gt;
 Fix Grub 2&lt;/a&gt; 中的方法安装Grub 2到硬盘。&lt;/p&gt;&lt;/p&gt;
&lt;div style=&quot;margin:0;padding:0;color:rgb(85,85,85);font-size:14px;line-height:20px;text-align:justify;&quot;&gt;
&lt;span style=&quot;margin:0;padding:0;&quot;&gt;To fix GRUB 2, you need an Ubuntu live CD from which you need to boot.&lt;/span&gt;&amp;nbsp;Once you boot to the LIVE CD, open a terminal an and type these commands:&lt;/div&gt;
&lt;p&gt;&lt;br style=&quot;margin:0;padding:0;color:rgb(85,85,85);font-size:14px;line-height:20px;&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;margin:0;padding:0;color:rgb(85,85,85);font-size:14px;line-height:20px;text-align:justify;&quot;&gt;
&lt;span style=&quot;margin:0;padding:0;font-weight:bold;&quot;&gt;a) Firstly, you need to find out on which partition your Linux system is installed:&lt;/span&gt;&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;/p&gt;
&lt;pre class=&quot;linux-code&quot; style=&quot;margin-top:10px;margin-bottom:10px;margin-left:10px;padding:28px 10px 10px;background-color:rgb(229,202,202);color:rgb(0,0,0);font-size:13px;font-family:&#39;UbuntuBeta Mono&#39;, &#39;Ubuntu Mono&#39;, &#39;Courier New&#39;, Courier, monospace;max-height:500px;min-height:16px;overflow:auto;width:522px;z-index:10000;border-color:rgb(155,5,5);border-style:solid;border-width:1px 1px 1px 20px;&quot;&gt;&lt;code style=&quot;margin:0;padding:0;&quot;&gt;sudo fdisk -l&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(in my case, it&#39;s &amp;quot;sda1&amp;quot;)&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;margin:0;padding:0;font-weight:bold;&quot;&gt;b) Now, we must mount this partition:&lt;/span&gt;&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;/p&gt;
&lt;pre class=&quot;linux-code&quot; style=&quot;margin-top:10px;margin-bottom:10px;margin-left:10px;padding:28px 10px 10px;background-color:rgb(229,202,202);color:rgb(0,0,0);font-size:13px;font-family:&#39;UbuntuBeta Mono&#39;, &#39;Ubuntu Mono&#39;, &#39;Courier New&#39;, Courier, monospace;max-height:500px;min-height:16px;overflow:auto;width:522px;z-index:10000;border-color:rgb(155,5,5);border-style:solid;border-width:1px 1px 1px 20px;&quot;&gt;&lt;code style=&quot;margin:0;padding:0;&quot;&gt;sudo mount /dev/&lt;span style=&quot;margin:0;padding:0;font-weight:bold;&quot;&gt;sda1&lt;/span&gt; /mnt&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Where &amp;quot;sda1&amp;quot; is the partition where you installed Ubuntu (or any other Linux distro). It could be &amp;quot;sda5&amp;quot;, &amp;quot;sda6&amp;quot;, etc. for you.&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;margin:0;padding:0;font-weight:bold;&quot;&gt;c) Install grub to the partition you&#39;ve mounted:&lt;/span&gt;&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;/p&gt;
&lt;pre class=&quot;linux-code&quot; style=&quot;margin-top:10px;margin-bottom:10px;margin-left:10px;padding:28px 10px 10px;background-color:rgb(229,202,202);color:rgb(0,0,0);font-size:13px;font-family:&#39;UbuntuBeta Mono&#39;, &#39;Ubuntu Mono&#39;, &#39;Courier New&#39;, Courier, monospace;max-height:500px;min-height:16px;overflow:auto;width:522px;z-index:10000;border-color:rgb(155,5,5);border-style:solid;border-width:1px 1px 1px 20px;&quot;&gt;&lt;code style=&quot;margin:0;padding:0;&quot;&gt;sudo grub-install --root-directory=/mnt/ /dev/sda&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;margin:0;padding:0 2px;background-color:rgb(255,255,177);border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(223,223,223);border-right-width:1px;border-right-style:solid;border-right-color:rgb(223,223,223);color:rgb(51,51,51);&quot;&gt;Important:&lt;/span&gt;&amp;nbsp;Please&lt;br /&gt;
 notice that it&#39;s &amp;quot;/dev/sda&amp;quot;, not &amp;quot;/dev/sda1&amp;quot;. &amp;quot;sda&amp;quot; is the hard disk on which your Linux distribution is installed!&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;margin:0;padding:0;font-weight:bold;&quot;&gt;d) Restart your computer. As previous Grub 2 entries are removed, run the following command to restore them:&lt;/span&gt;&lt;br style=&quot;margin:0;padding:0;&quot; /&gt;&lt;/p&gt;
&lt;pre class=&quot;linux-code&quot; style=&quot;margin-top:10px;margin-bottom:10px;margin-left:10px;padding:28px 10px 10px;background-color:rgb(229,202,202);color:rgb(0,0,0);font-size:13px;font-family:&#39;UbuntuBeta Mono&#39;, &#39;Ubuntu Mono&#39;, &#39;Courier New&#39;, Courier, monospace;max-height:500px;min-height:16px;overflow:auto;width:522px;z-index:10000;border-color:rgb(155,5,5);border-style:solid;border-width:1px 1px 1px 20px;&quot;&gt;&lt;code style=&quot;margin:0;padding:0;&quot;&gt;sudo update-grub&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
重启电脑进入Grub 2之后，输入命令&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;linux (hd0,X)/vmlinuz-3.2......
initrd (hd0,X)/initrd.img-3.2......
boot&lt;/pre&gt;
&lt;p&gt;
Grub 2中已经不再支持kernel命令，需要用linux指定kernel。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Backquotes in Ksh here document</title>
   <link href="http://bo-yang.github.com//2011/12/19/backquote"/>
   <updated>2011-12-19T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/12/19/backquote</id>
   <content type="html">&lt;p&gt;When the shell encounters a string between backquotes&lt;/p&gt;
&lt;pre&gt;     `cmd`&lt;/pre&gt;
&lt;p&gt;it executes cmd and replaces the backquoted string with the standard output of cmd, with any trailing newlines deleted. Quoting inside backquoted commands is somewhat complicated, mainy because the same token is used to start and to end a backquoted command. As a consequence, to nest backquoted commands, the backquotes of the inner one have to be escaped using backslashes, e.g.&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
LABNAME=$(echo $labname | tr &quot;[a-z]&quot; &quot;[A-Z]&quot; | sed &#39;s/-/_/g&#39;&lt;br /&gt;
cat &amp;lt;&amp;lt;-IOTA &amp;gt;$iota_cfg&lt;br /&gt;
path=\`checkpath\`&lt;br /&gt;
export ${LABNAME}_COOLXDIR=$COOLXDIR&lt;br /&gt;
IOTA&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Since the LABNAME is a variable defined out of the here document, it must be quoted by braces {}, or error will occur.&lt;/p&gt;
&lt;p&gt;--------------&lt;/p&gt;
&lt;p&gt;Reference:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; &lt;a href=&quot;http://www.mpi-inf.mpg.de/~uwe/lehre/unixffb/quoting-guide.html#para:sh-backquotes&quot;&gt;A Guide to Unix Shell Quoting&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Merge/Split PDF files in Linux</title>
   <link href="http://bo-yang.github.com//2011/12/18/merge-split-pdf-files"/>
   <updated>2011-12-18T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/12/18/merge-split-pdf-files</id>
   <content type="html">&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
First install pdftk (pdf toolkit). Pdftk runs from the command line which means you should unpack the software into a directory that you can access easily. I put the file into c: for&amp;nbsp;&lt;a href=&quot;http://www.ghacks.net/2007/10/02/merge-pdf-files/#&quot; class=&quot;kLink&quot; id=&quot;KonaLink0&quot; style=&quot;border-style:initial;border-color:initial;outline-width:initial;outline-style:none;outline-color:initial;background-color:transparent!important;vertical-align:baseline;color:rgb(0,114,188);font-family:inherit!important;display:inline!important;top:0;right:0;bottom:0;left:0;position:static;font-size:inherit!important;border-width:0!important;margin:0;padding:0;&quot;&gt;&lt;span style=&quot;color:#0072bc;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;background-color:transparent;vertical-align:baseline;font-family:inherit!important;font-size:inherit!important;position:static;border-width:0;margin:0;padding:0;&quot;&gt;&lt;span class=&quot;kLink&quot; style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;background-color:transparent;vertical-align:baseline;width:auto!important;float:none!important;display:inline!important;font-family:inherit!important;font-size:inherit!important;position:static;border-width:0 0 1px!important;margin:0;padding:0 0 1px!important;&quot;&gt;testing&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&amp;nbsp;purposes&lt;br /&gt;
 along with two pdfs called 123.pdf and 456.pdf.&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
If you run pdftk without parameters you get a quick output that details the most important parameters. Lets take a look at the possible operations:&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
&lt;span id=&quot;more-2012&quot; style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;background-color:transparent;vertical-align:baseline;border-width:0;margin:0;padding:0;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;background-color:transparent;vertical-align:baseline;border-width:0;margin:0;padding:0;&quot;&gt;Merge&lt;br /&gt;
 pdf files:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
&lt;code style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;background-color:transparent;vertical-align:baseline;font-size:1em;font-family:&#39;Courier New&#39;, Courier, monospace;border-width:0;margin:0;padding:0;&quot;&gt;pdftk&lt;br /&gt;
 123.pdf 456.pdf output 123456.pdf&lt;/code&gt;&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
This tells pdftk to merge the two pdf files 123.pdf and 456.pdf into a new pdf called 123456.pdf. If you want to merge more than two pdf files at once you simply add them between pdftk and output. You could also use wildcards to merge many or all pdfs with&lt;br /&gt;
 a certain name.&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
&lt;code style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;background-color:transparent;vertical-align:baseline;font-size:1em;font-family:&#39;Courier New&#39;, Courier, monospace;border-width:0;margin:0;padding:0;&quot;&gt;pdftk&lt;br /&gt;
 *.pdf output 123456.pdf&lt;/code&gt;&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
&lt;span style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;background-color:transparent;vertical-align:baseline;border-width:0;margin:0;padding:0;&quot;&gt;Split&lt;br /&gt;
 pages from one or more pdfs:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
&lt;code style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;background-color:transparent;vertical-align:baseline;font-size:1em;font-family:&#39;Courier New&#39;, Courier, monospace;border-width:0;margin:0;padding:0;&quot;&gt;pdftk&lt;br /&gt;
 A=123.pdf B=456.pdf cat A1-2 B4-5 output 1245.pdf&lt;/code&gt;&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
&lt;span style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;background-color:transparent;vertical-align:baseline;border-width:0;margin:0;padding:0;&quot;&gt;Repair&lt;br /&gt;
 a pdf:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
&lt;code style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;background-color:transparent;vertical-align:baseline;font-size:1em;font-family:&#39;Courier New&#39;, Courier, monospace;border-width:0;margin:0;padding:0;&quot;&gt;pdftk&lt;br /&gt;
 123.pdf output 123fixed.pdf&lt;/code&gt;&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
&lt;span style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;background-color:transparent;vertical-align:baseline;border-width:0;margin:0;padding:0;&quot;&gt;Merge&lt;br /&gt;
 encrypted pdfs:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
&lt;code style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;background-color:transparent;vertical-align:baseline;font-size:1em;font-family:&#39;Courier New&#39;, Courier, monospace;border-width:0;margin:0;padding:0;&quot;&gt;pdftk&lt;br /&gt;
 A=123.pdf 456.pdf input_pw A=password cat output 123456.pdf&lt;/code&gt;&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
Pdftk offers several more possibilities which are worth a look if you want to do something that I did not describe on this website. A version for Linux and Windows is available.&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
&lt;span style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;background-color:transparent;vertical-align:baseline;border-width:0;margin:0;padding:0;&quot;&gt;Read&lt;br /&gt;
 More:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
&lt;a href=&quot;http://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/&quot; style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;background-color:transparent;vertical-align:baseline;text-decoration:none;color:rgb(0,0,255);border-width:0;margin:0;padding:0;&quot;&gt;Pdftk&lt;br /&gt;
 Homepage&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;margin-top:0;margin-bottom:1em;outline-width:0;outline-style:initial;outline-color:initial;padding-top:0;padding-bottom:0;vertical-align:baseline;color:rgb(16,16,16);font-family:&#39;Lucida Grande&#39;, Verdana, &#39;Lucida Sans Regular&#39;, &#39;Lucida Sans Unicode&#39;, Arial, sans-serif;line-height:21px;border-width:0;&quot;&gt;
原文：&lt;a href=&quot;http://www.ghacks.net/2007/10/02/merge-pdf-files/&quot;&gt;http://www.ghacks.net/2007/10/02/merge-pdf-files/&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tk send</title>
   <link href="http://bo-yang.github.com//2011/12/16/tcl-send"/>
   <updated>2011-12-16T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/12/16/tcl-send</id>
   <content type="html">&lt;p style=&quot;font-family:Georgia, &#39;Times New Roman&#39;, &#39;Bitstream Charter&#39;, Times, serif;font-size:13px;line-height:19px;&quot;&gt;
&lt;code&gt;send&lt;/code&gt;&amp;nbsp;is a Tk command&amp;nbsp;used to execute a command in a different application. This send communication mechanism is limited to applications&amp;nbsp;running on one display. Multiple screens on one workstation still count as the same display on X.&lt;/p&gt;
&lt;p style=&quot;font-family:Georgia, &#39;Times New Roman&#39;, &#39;Bitstream Charter&#39;, Times, serif;font-size:13px;line-height:19px;&quot;&gt;
In order to use&amp;nbsp;&lt;code&gt;send&lt;/code&gt;&amp;nbsp;in your program, you should&lt;/p&gt;
&lt;ol style=&quot;font-family:Georgia, &#39;Times New Roman&#39;, &#39;Bitstream Charter&#39;, Times, serif;font-size:13px;line-height:19px;&quot;&gt;
&lt;ol&gt;
&lt;li&gt;use command&amp;nbsp;&lt;tt&gt;winfo interps&lt;/tt&gt;&amp;nbsp;to find out all the names of Tk applications reachable with send.&lt;/li&gt;
&lt;li&gt;to get the real name of a spplicaiton, using&amp;nbsp;&lt;tt&gt;tk appname &amp;lt;application&amp;gt;.&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt&gt;run tcl command remotely by send [tk appname &amp;lt;application&amp;gt;] &amp;lt;command&amp;gt;.&lt;/tt&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/ol&gt;
&lt;p style=&quot;font-family:Georgia, &#39;Times New Roman&#39;, &#39;Bitstream Charter&#39;, Times, serif;font-size:13px;line-height:19px;&quot;&gt;
------------------&lt;br /&gt;
Reference:&lt;/p&gt;
&lt;ol style=&quot;font-family:Georgia, &#39;Times New Roman&#39;, &#39;Bitstream Charter&#39;, Times, serif;font-size:13px;line-height:19px;&quot;&gt;
&lt;li&gt;send manual page:&amp;nbsp;&lt;a href=&quot;http://www.tcl.tk/man/tcl8.4/TkCmd/send.htm&quot;&gt;http://www.tcl.tk/man/tcl8.4/TkCmd/send.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/exec/obidos/ISBN=0130385603/brentwelchA/&quot;&gt;Practical Programming in Tcl and Tk(4th edition)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>How to change the character case in ksh?</title>
   <link href="http://bo-yang.github.com//2011/12/16/change-character-case"/>
   <updated>2011-12-16T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/12/16/change-character-case</id>
   <content type="html">&lt;p&gt;1. To change lower case characters to upper case, you can&lt;/p&gt;&lt;/p&gt;
&lt;pre&gt;echo abc | tr &amp;quot;[a-z]&amp;quot; &amp;quot;[A-Z]&amp;quot;&lt;/pre&gt;
&lt;p&gt;
or&amp;nbsp;&lt;/p&gt;&lt;/p&gt;
&lt;pre&gt;echo abc | tr &#39;[:lower:]&#39; &#39;[:upper:]&#39;&lt;/pre&gt;
&lt;p&gt;
2. To change upper case characters to lower case, you can&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:monospace;&quot;&gt;&lt;span style=&quot;white-space:pre;&quot;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;pre&gt;echo ABC | tr &amp;quot;[A-Z]&amp;quot; &amp;quot;[a-z]&amp;quot;&lt;/pre&gt;
&lt;p&gt;
&lt;span style=&quot;white-space:pre;font-family:monospace;&quot;&gt;or&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:monospace;&quot;&gt;&lt;span style=&quot;white-space:pre;&quot;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;pre&gt;echo ABC | tr &#39;[:upper:]&#39; &#39;[:lower:]&#39;&lt;/pre&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>rup:: RPC: Program not registered in RHEL6.1</title>
   <link href="http://bo-yang.github.com//2011/12/02/rup-rpc-program-not-registered-in-rhel6-1"/>
   <updated>2011-12-02T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/12/02/rup-rpc-program-not-registered-in-rhel6-1</id>
   <content type="html">&lt;p&gt;I just installed Redhat Enterprise Linux 6.1 on one HP server. Following error met when rup it on other servers:&lt;/p&gt;
&lt;p&gt;[sourcecode language=&quot;text&quot;]&lt;br /&gt;
$rup coolnjmcl033&lt;br /&gt;
rup:coolnjmcl033: RPC: Program not registered&lt;br /&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;SOLUTION:&lt;br /&gt;
1) check if all nfs related services are working:&lt;/p&gt;
&lt;p&gt;[sourcecode language=&quot;text&quot;]&lt;br /&gt;
[root@coolnjmcl033init.d]# rpcinfo -p&lt;br /&gt;
program vers proto port service&lt;br /&gt;
100000 4 tcp 111 portmapper&lt;br /&gt;
100000 3 tcp 111 portmapper&lt;br /&gt;
100000 2 tcp 111 portmapper&lt;br /&gt;
100000 4 udp 111 portmapper&lt;br /&gt;
100000 3 udp 111 portmapper&lt;br /&gt;
100000 2 udp 111 portmapper&lt;br /&gt;
100011 1 udp 875 rquotad&lt;br /&gt;
100011 2 udp 875 rquotad&lt;br /&gt;
100011 1 tcp 875 rquotad&lt;br /&gt;
100011 2 tcp 875 rquotad&lt;br /&gt;
100003 2 tcp 2049 nfs&lt;br /&gt;
100003 3 tcp 2049 nfs&lt;br /&gt;
100003 4 tcp 2049 nfs&lt;br /&gt;
100227 2 tcp 2049 nfs_acl&lt;br /&gt;
100227 3 tcp 2049 nfs_acl&lt;br /&gt;
100003 2 udp 2049 nfs&lt;br /&gt;
100003 3 udp 2049 nfs&lt;br /&gt;
100003 4 udp 2049 nfs&lt;br /&gt;
100227 2 udp 2049 nfs_acl&lt;br /&gt;
100227 3 udp 2049 nfs_acl&lt;br /&gt;
100005 1 udp 51310 mountd&lt;br /&gt;
100005 1 tcp 60605 mountd&lt;br /&gt;
100005 2 udp 42799 mountd&lt;br /&gt;
100005 2 tcp 44201 mountd&lt;br /&gt;
100005 3 udp 49544 mountd&lt;br /&gt;
100005 3 tcp 49098 mountd&lt;br /&gt;
100024 1 udp 37035 status&lt;br /&gt;
100024 1 tcp 60898 status&lt;br /&gt;
100001 3 udp 1008 rstatd&lt;br /&gt;
100001 2 udp 1008 rstatd&lt;br /&gt;
100001 1 udp 1008 rstatd&lt;br /&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;If there is no running rstatdservice , start it byservice rstatd start.&lt;br /&gt;
Accordingto RHEL 6 RUP manual:&lt;/p&gt;
&lt;p&gt;[sourcecode language=&quot;text&quot;]&lt;br /&gt;
rup: RPC: Program not registered&lt;br /&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;The rpc.rstatd(8) daemon has not been started on the remote host.&lt;/p&gt;
&lt;p&gt;2) check if package rusers-server-*and rusers-* are installed: rpm –qa|greprusers. If not, install it and then restart service rstatd.&lt;/p&gt;
&lt;p&gt;PS:&lt;br /&gt;
Other userful commands:&lt;br /&gt;
[sourcecode language=&quot;text&quot;]&lt;br /&gt;
rup localhost&lt;br /&gt;
service rstatd status&lt;br /&gt;
[/sourcecode]&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>C++filt</title>
   <link href="http://bo-yang.github.com//2011/12/02/cfilt"/>
   <updated>2011-12-02T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/12/02/cfilt</id>
   <content type="html">&lt;p&gt;c++flit decodes(demangles) low-level names into user-level names so that the linker can keep these overloaded functions from clashing.&lt;/p&gt;
&lt;p&gt;You may use c++filt to demangle the symbols.&lt;br /&gt;
[sourcecode language=&quot;text&quot;]&lt;br /&gt;
$ c++filt _ZNSt8ios_base4InitD1Ev&lt;br /&gt;
std::ios_base::Init::~Init()&lt;br /&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;You may try adding-lstdc++ to your link command to resolve the issue.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://sourceware.org/binutils/docs-2.16/binutils/c_002b_002bfilt.html&quot;&gt;&lt;strong&gt;c++filt manual&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>What's the differences between  virtualization and cloud computing?</title>
   <link href="http://bo-yang.github.com//2011/11/28/whats-the-differences-between-virtualization-and-cloud-computing"/>
   <updated>2011-11-28T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/11/28/whats-the-differences-between-virtualization-and-cloud-computing</id>
   <content type="html">&lt;p&gt;Many people will be confused by the relations and differences between virtualization and cloud computing. Following essays will clarify the nature of the two technologies.&lt;br /&gt;
1. Cloud is an operations model, not technology: &lt;a href=&quot;http://news.cnet.com/8301-19413_3-10249486-240.html&quot;&gt;http://news.cnet.com/8301-19413_3-10249486-240.html&lt;/a&gt;&lt;br /&gt;
2. Difference Between Virtualization and Cloud Computing: &lt;a href=&quot;http://data-centers.in/virtualization-and-cloud-computing/&quot;&gt;http://data-centers.in/virtualization-and-cloud-computing/&lt;/a&gt;&lt;br /&gt;
3. The Difference Between Virtualization and Cloud Computing: &lt;a href=&quot;http://www.erpsoftwareblog.com/2010/08/the-difference-between-virtualization-and-cloud-computing/&quot;&gt;http://www.erpsoftwareblog.com/2010/08/the-difference-between-virtualization-and-cloud-computing/&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>如何在Gmail中搜索特定时间段的邮件</title>
   <link href="http://bo-yang.github.com//2011/11/22/gmail-tips"/>
   <updated>2011-11-22T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/11/22/gmail-tips</id>
   <content type="html">&lt;p&gt;由于众所周知的原因，在天朝登录Gmail时越来越困难了，但是很多以前的邮件都还在，时不时还需要翻一翻，如何搜索特定时间段的邮件呢？&lt;/p&gt;
&lt;p&gt;答案就是在Gmail的搜索框中输入after:或者/和before:， 如 “after:2007/07/31 before:2007/12/31”就是搜索2007年7月31日之后12月31日之前的邮件。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.iamatechie.com/wp-content/uploads/2008/05/gmail-search-box-duration.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Steve Jobs的家庭教育</title>
   <link href="http://bo-yang.github.com//2011/10/24/education-of-steve-jobs"/>
   <updated>2011-10-24T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/10/24/education-of-steve-jobs</id>
   <content type="html">&lt;div style=&quot;line-height:1.6;font-family:Arial;font-size:14px;background-color:transparent;word-wrap:break-word;min-height:340px;overflow-x:hidden;height:auto;margin:0;padding:0;&quot;&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:10px;line-height:20px;padding-top:0;padding-bottom:0;padding-left:30px;text-align:left;font-family:Georgia, &#39;Times New Roman&#39;, Times, serif;&quot;&gt;
&lt;strong&gt;从CBS对&lt;a href=&quot;http://latimesblogs.latimes.com/technology/2011/10/steve-jobs-lightning-bolts-went-off-in-my-head-about-being-adopted.html&quot; style=&quot;border-width:initial;border-color:initial;border-style:none;&quot;&gt;Walter&lt;br /&gt;
 Isaacson的采访&lt;/a&gt;来看，Steve Jobs小时候的家庭教育还是很成功的，虽然他的养父母都没有受过高等教育，但他们懂得如何教育一个（被收养的）小孩子，如何培养他正确的人生观和价&amp;#20540;观。反观我们的童年，这些大多是缺失的。&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:10px;line-height:20px;padding-top:0;padding-bottom:0;padding-left:30px;text-align:left;font-family:Georgia, &#39;Times New Roman&#39;, Times, serif;&quot;&gt;
&lt;strong&gt;1. 追求完美&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:10px;line-height:20px;padding-top:0;padding-bottom:0;padding-left:30px;text-align:left;font-family:Georgia, &#39;Times New Roman&#39;, Times, serif;&quot;&gt;
&lt;strong&gt;ISAACSON BELIEVES THAT MUCH OF IT CAN BE TRACED TO THE EARLIEST YEARS OF HIS LIFE, AND TO THE TO THE FACT THAT JOBS BORN OUT OF WEDLOCK, GIVEN UP BY HIS BIRTH PARENTS, AND ADOPTED BY A WORKING CLASS COUPLE FROM MOUNTAIN VIEW, FROM MOUNTAIN VIEW, CALIFORNIA.&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:10px;line-height:20px;padding-top:0;padding-bottom:0;padding-left:30px;text-align:left;font-family:Georgia, &#39;Times New Roman&#39;, Times, serif;&quot;&gt;
WALTER ISAACSON: Paul Jobs was a salt-of-the-earth guy who was a great mechanic. And he taught his son Steve how to make great things&amp;nbsp; And he--once they were building a fence. And he said,&amp;nbsp;&lt;span style=&quot;color:#ff0000;&quot;&gt;&lt;strong&gt;&amp;quot;You got to make the back of the&lt;br /&gt;
 fence that nobody will see just as good looking as the front of the fence.&amp;quot; Even though nobody will see it, you will know, and that will show that you&#39;re dedicated to making something perfect.&amp;quot;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:10px;line-height:20px;padding-top:0;padding-bottom:0;padding-left:30px;text-align:left;font-family:Georgia, &#39;Times New Roman&#39;, Times, serif;&quot;&gt;
&lt;strong&gt;2. 培养自信&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:10px;line-height:20px;padding-top:0;padding-bottom:0;padding-left:30px;text-align:left;font-family:Georgia, &#39;Times New Roman&#39;, Times, serif;&quot;&gt;
&lt;strong&gt;JOBS ALWAYS KNEW HE WAS ADOPTED, BUT IT STILL HAD A PROFOUND EFFECT ON HIM. HE TOLD ISAACSON THIS STORY FROM HIS EARLY CHILDHOOD DURING ONE OF THEIR MANY TAPED INTERVIEWS:&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:10px;line-height:20px;padding-top:0;padding-bottom:0;padding-left:30px;text-align:left;font-family:Georgia, &#39;Times New Roman&#39;, Times, serif;&quot;&gt;
STEVE JOBS TAPES: I was, I remember right here on my lawn, telling Lisa McMoylar from across the street that I was adopted. And she said, “So does that mean your real parents didn&#39;t want you?” Ooooh, lightning bolts went off in my head. I remember running into&lt;br /&gt;
 the house, I think I was like crying, asking my parents. And they sat me down and they said, “&lt;span style=&quot;color:#ff0000;&quot;&gt;&lt;strong&gt;No, you don&#39;t understand. We specifically picked you out.&lt;/strong&gt;&lt;/span&gt;”&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:10px;line-height:20px;padding-top:0;padding-bottom:0;padding-left:30px;text-align:left;font-family:Georgia, &#39;Times New Roman&#39;, Times, serif;&quot;&gt;
WALTER ISAACSON: He said, &amp;quot;&lt;strong&gt;&lt;span style=&quot;color:#ff0000;&quot;&gt;From then on, I realized that I was not — just abandoned. I was chosen. I was special.&lt;/span&gt;&lt;/strong&gt;&amp;quot; And I think that&#39;s the key to understanding Steve Jobs.&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:10px;line-height:20px;padding-top:0;padding-bottom:0;padding-left:30px;text-align:left;font-family:Georgia, &#39;Times New Roman&#39;, Times, serif;&quot;&gt;
Steve Jobs的英文版自传目前还没买到，我的iTunes帐号只能在中国大陆使用，期盼过些天能够有办法。由于Steve Jobs的语言十分生动灵活，Walter Isaacson 的文体严肃认真，估计直接阅读英文版还是会很有一些障碍的，但那应该是学习好的英语的一种不可多得的机会。&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>What's+the+difference+between+virtualization+and+cloud+computing?</title>
   <link href="http://bo-yang.github.com//2011/10/13/diff-between-virtualization-and-cloud-computing"/>
   <updated>2011-10-13T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/10/13/diff-between-virtualization-and-cloud-computing</id>
   <content type="html">&lt;p&gt;在很多资料或文献中很难找到虚拟化和云计算的区别，甚至连云计算是什么都颇有争议。在网上找到几片论述这一问题的文章，摘录于下。&lt;/p&gt;&lt;/p&gt;
&lt;h1 style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-family:proxima-nova-extra-condensed, &#39;Helvetica Neue Condensed Bold&#39;, &#39;Arial Narrow&#39;, Helvetica, Arial, sans-serif;text-align:left;vertical-align:baseline;color:rgb(57,67,76);clear:both;line-height:1em!important;border-width:0;margin:5px 0;padding:0;&quot;&gt;
&lt;span style=&quot;font-size:18px;&quot;&gt;1. Cloud is an operations model, not technology:&amp;nbsp;&lt;a href=&quot;http://news.cnet.com/8301-19413_3-10249486-240.html&quot;&gt;http://news.cnet.com/8301-19413_3-10249486-240.html&lt;/a&gt;&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2. Difference Between Virtualization and Cloud Computing:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://data-centers.in/virtualization-and-cloud-computing/&quot; style=&quot;font-size:18px;&quot;&gt;http://data-centers.in/virtualization-and-cloud-computing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;3.&amp;nbsp;&lt;/span&gt;&lt;strong&gt;The Difference Between Virtualization and Cloud Computing:&amp;nbsp;&lt;a href=&quot;http://www.erpsoftwareblog.com/2010/08/the-difference-between-virtualization-and-cloud-computing/&quot;&gt;http://www.erpsoftwareblog.com/2010/08/the-difference-between-virtualization-and-cloud-computing/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;================================================================================================&lt;/p&gt;&lt;/p&gt;
&lt;h1 style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-family:proxima-nova-extra-condensed, &#39;Helvetica Neue Condensed Bold&#39;, &#39;Arial Narrow&#39;, Helvetica, Arial, sans-serif;text-align:left;vertical-align:baseline;color:rgb(57,67,76);clear:both;line-height:1em!important;border-width:0;margin:5px 0;padding:0;&quot;&gt;
&lt;span style=&quot;font-size:18px;&quot;&gt;1. Cloud is an operations model, not technology:&amp;nbsp;&lt;a href=&quot;http://news.cnet.com/8301-19413_3-10249486-240.html&quot;&gt;http://news.cnet.com/8301-19413_3-10249486-240.html&lt;/a&gt;&lt;/span&gt;&lt;/h1&gt;
&lt;div&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:0;padding-top:0;padding-bottom:0;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:1.4286em;font-family:museo-slab, georgia, times, serif;text-align:left;vertical-align:baseline;line-height:1.133em;color:rgb(118,134,150);border-width:0;&quot;&gt;
One of the most common questions I get from those exploring cloud computing for the first time is &amp;quot;what is the difference between cloud computing and virtualization?&amp;quot; It is an excellent question, as most IT departments are currently exploring the ways in which&amp;nbsp;&lt;a href=&quot;http://en.wikipedia.org/wiki/Virtualization&quot; style=&quot;border-style:initial;border-color:initial;outline-width:initial;outline-style:none;outline-color:initial;font-size:undefined;font-family:inherit;vertical-align:baseline;color:rgb(41,100,191);text-decoration:none;border-width:0;margin:0;padding:0;&quot;&gt;virtualization&lt;/a&gt;&amp;nbsp;enables&lt;br /&gt;
 automation and provisioning agility. Given the fact that cloud is often touted for providing similar benefits, it can be confusing to understand why the two terms aren&#39;t equivalent.&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:0;padding-top:0;padding-bottom:0;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:1.0714em;font-family:museo-slab, georgia, times, serif;text-align:left;vertical-align:baseline;line-height:1.433em!important;color:rgb(37,37,37);border-width:0;&quot;&gt;
My response to that question requires a bit of explanation, so let&#39;s step through the differences between the two concepts.&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:0;padding-top:0;padding-bottom:0;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:1.0714em;font-family:museo-slab, georgia, times, serif;text-align:left;vertical-align:baseline;line-height:1.433em!important;color:rgb(37,37,37);border-width:0;&quot;&gt;
&lt;strong&gt;Virtualization is a technology.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;cnet-image-div image-medium float-right&quot; style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:14px;font-family:museo-slab, georgia, times, serif;text-align:left;vertical-align:baseline;clear:right;float:right;color:rgb(37,37,37);line-height:20px;width:270px;border-width:0;margin:20px 2px 20px 20px;padding:0;&quot;&gt;
&lt;img class=&quot;cnet-image&quot; src=&quot;http://i.i.com.com/cnwk.1d/i/bto/20090528/Virtualization_stack_270x258.jpg&quot; alt=&quot;&quot; width=&quot;270&quot; height=&quot;258&quot; style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:undefined;font-style:inherit;font-family:inherit;vertical-align:baseline;border-width:0;margin:0;padding:0;&quot; /&gt;&lt;span class=&quot;image-credit&quot; style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:.8571em;font-style:inherit;font-family:inherit;vertical-align:baseline;line-height:1.166em;border-width:0;margin:0;padding:0;&quot;&gt;(Credit:&lt;br /&gt;
 CNET/James Urquhart)&lt;/span&gt;&lt;/div&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:0;padding-top:0;padding-bottom:0;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:1.0714em;font-family:museo-slab, georgia, times, serif;text-align:left;vertical-align:baseline;line-height:1.433em!important;color:rgb(37,37,37);border-width:0;&quot;&gt;
When you run software in a virtual machine, the bits that represent the program&#39;s instructions run through a layer of software that &amp;quot;pretends&amp;quot; to be a dedicated server infrastructure, the hypervisor. The hypervisor is the heart and soul of server virtualization,&lt;br /&gt;
 and is the enabler of the consolidation and agility values that virtualization brings to the data center.&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:0;padding-top:0;padding-bottom:0;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:1.0714em;font-family:museo-slab, georgia, times, serif;text-align:left;vertical-align:baseline;line-height:1.433em!important;color:rgb(37,37,37);border-width:0;&quot;&gt;
It is because of the hypervisor that virtualization is the true disruptive technology that enables cloud computing on a massive scale. Hypervisors allow servers to be multi-tenant without rewriting applications to be multi-tenant. Hypervisors allow operating&lt;br /&gt;
 systems and applications to install to a consistent hardware profile, even though they end up running on a variety of actual physical system implementations. Hypervisors also allow servers to be manipulated by software APIs, which greatly simplifies the act&lt;br /&gt;
 of automating IT operations.&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:0;padding-top:0;padding-bottom:0;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:1.0714em;font-family:museo-slab, georgia, times, serif;text-align:left;vertical-align:baseline;line-height:1.433em!important;color:rgb(37,37,37);border-width:0;&quot;&gt;
&lt;strong&gt;Cloud computing is an operations model, not a technology.&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:0;padding-top:0;padding-bottom:0;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:1.0714em;font-family:museo-slab, georgia, times, serif;text-align:left;vertical-align:baseline;line-height:1.433em!important;color:rgb(37,37,37);border-width:0;&quot;&gt;
When you run an application in a public or private cloud, there is no &amp;quot;cloud layer&amp;quot; that your software must pass through in order to leverage the physical infrastructure available to it. In the vast majority of cases, there is probably some virtualization involved,&lt;br /&gt;
 but the existence of hypervisors clearly does not make your data center resources into a cloud. Nor is the fact that&amp;nbsp;&lt;a href=&quot;http://aws.amazon.com/ec2/&quot; style=&quot;border-style:initial;border-color:initial;outline-width:initial;outline-style:none;outline-color:initial;font-size:undefined;font-family:inherit;vertical-align:baseline;color:rgb(41,100,191);text-decoration:none;border-width:0;margin:0;padding:0;&quot;&gt;Amazon&lt;br /&gt;
 EC2&lt;/a&gt;&amp;nbsp;uses Xen hypervisors the reason that they are a cloud.&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:0;padding-top:0;padding-bottom:0;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:1.0714em;font-family:museo-slab, georgia, times, serif;text-align:left;vertical-align:baseline;line-height:1.433em!important;color:rgb(37,37,37);border-width:0;&quot;&gt;
What makes a cloud a cloud is the fact that the physical resources involved are operated to deliver abstracted IT resources on-demand, at scale, and (almost always) in a multi-tenant environment. It is how you use the technologies involved. For the most part,&lt;br /&gt;
 cloud computing uses the same management tools, operating systems, middleware, databases, server platforms, network cabling, storage arrays, and so on, that we have come to know and love over the last several decades.&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:0;padding-top:0;padding-bottom:0;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:1.0714em;font-family:museo-slab, georgia, times, serif;text-align:left;vertical-align:baseline;line-height:1.433em!important;color:rgb(37,37,37);border-width:0;&quot;&gt;
Specific technologies, of course, gain significant importance in a cloud computing environment, such as policy-driven automation, metering systems, and self-service provisioning portals. However, all of these technologies--with the possible exception of the&lt;br /&gt;
 self-service portal--existed before cloud computing became a much hyped paradigm.&lt;/p&gt;
&lt;p style=&quot;margin-top:10px;margin-bottom:0;padding-top:0;padding-bottom:0;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:1.0714em;font-family:museo-slab, georgia, times, serif;text-align:left;vertical-align:baseline;line-height:1.433em!important;color:rgb(37,37,37);border-width:0;&quot;&gt;
There is no doubt cloud borrows much from long established technologies. It is also true that cloud has borrowed from many long standing operations models, such as mainframe service bureaus. However, the combination of on-demand, at scale, in a multi-tenant&lt;br /&gt;
 infrastructure is relatively unique for the post client-server era, and is the reason why cloud computing is disruptive, rather than just another operations fad.&lt;/p&gt;
&lt;p&gt;
&lt;/div&gt;
&lt;div&gt;----------------------------------------------------------------------------------&lt;/div&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;2. Difference Between Virtualization and Cloud Computing:&amp;nbsp;&lt;a href=&quot;http://data-centers.in/virtualization-and-cloud-computing/&quot;&gt;http://data-centers.in/virtualization-and-cloud-computing/&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color:rgb(44,44,41);font-family:Tahoma;font-size:14px;&quot;&gt;Cloud Computing and Virtualization are completely two different technologies. Both of them are considered as future saving technologies and that is the only similarity between them.&lt;br /&gt;
 In the process of Cloud Computing easily scalable and mostly virtualized data resources are provided to the users over the internet. Using Cloud computing colocation provider or Data Centers providers offer managed IT services via a hosted software as a service&lt;br /&gt;
 model. In Cloud Computing a database can be physically located somewhere in secure remote location and data can be accessed through clients computer using the database server to analyze and recover the data. This eliminates the need of a costly in-house equipments&lt;br /&gt;
 and department. Cloud Computing make use of virtualized resources such as servers, computing devices and networks. Cloud Computing provider own the hardware and the providing host manage all the services to the clients according to their usage basis. On the&lt;br /&gt;
 other hand Virtualization is creating virtual versions of technologies like servers, operating system, network resources and storage devices. Virtualization basically enables a single user to access multiple physical devices. In virtualization, either its&lt;br /&gt;
 one operating system using multiple computers to evaluate database or a single computer controlling several machines. Here we will learn how Cloud Computing and virtualization are different from each other.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;vertical-align:baseline;margin-top:1px;margin-bottom:15px;padding-right:2px;padding-left:2px;font-size:1.2em;color:rgb(44,44,41);font-family:Tahoma;text-align:justify;border-width:0;&quot;&gt;
&lt;span style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;vertical-align:baseline;border-width:0;margin:0;padding:0;&quot;&gt;Cloud&lt;br /&gt;
 Computing&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;vertical-align:baseline;margin-top:1px;margin-bottom:15px;padding-right:2px;padding-left:2px;font-size:1.2em;color:rgb(44,44,41);font-family:Tahoma;text-align:justify;border-width:0;&quot;&gt;
The easily availability of computers has opened new doors in the field of information technology. Instead of creating own Data Center all the Data Center services can be acquired from IT server providers with outstanding IT infrastructure which is strong, flexible&lt;br /&gt;
 and safe. The cost which either wise would have been invested in building a Data Center can be avoided with acquiring related services on a usage basis. Fees for the managed IT services is similar to the operating costs of a Data Center. Cloud Computing seems&lt;br /&gt;
 attractive option, since it cuts a lot costs and also remove operating costs. In a traditional IT department equipments and staff are occupied in the peak hours, however in off hours they sat idle. Most of the servers are not operable in off hours, even when&lt;br /&gt;
 they are operational its not necessary that they are giving their 100% of their potential. Also a Data Center services provider also needs to upgrade latest technologies in order to keep the data safe and secure. On the other side these services are provided&lt;br /&gt;
 by Cloud Computing provider.&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;vertical-align:baseline;margin-top:1px;margin-bottom:15px;padding-right:2px;padding-left:2px;font-size:1.2em;color:rgb(44,44,41);font-family:Tahoma;text-align:justify;border-width:0;&quot;&gt;
&lt;span style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;vertical-align:baseline;background-color:transparent;border-width:0;margin:0;padding:0;&quot;&gt;Virtualization&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;vertical-align:baseline;margin-top:1px;margin-bottom:15px;padding-right:2px;padding-left:2px;font-size:1.2em;color:rgb(44,44,41);font-family:Tahoma;text-align:justify;border-width:0;&quot;&gt;
There are many types of virtualization, but all of them focus on usage format and control that improves efficiency. What this efficiency means is a single task running over multiple computers through unoccupied computer or a single terminal running multiple&lt;br /&gt;
 tasks. One more advanced advantage of virtualization is hosting an application to many users, thus preventing several needed software’s from being installed again and again. Data is combined into a central computer from databases, hard drives and USB drives.&lt;br /&gt;
 This process increase security and accessibility by using replication. In an IT company physical resources can be divided into many virtual networks allowing the Central IT resources to be available to all the departments via local networks. Computer devices&lt;br /&gt;
 which are allocated to individual staff members or which are only dedicated to a specific software application are highly efficient and they are much more cheaper.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;-----------------------------------------------------------------------------------------------------------&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:18px;&quot;&gt;3.&amp;nbsp;&lt;strong&gt;The Difference Between Virtualization and Cloud Computing:&amp;nbsp;&lt;a href=&quot;http://www.erpsoftwareblog.com/2010/08/the-difference-between-virtualization-and-cloud-computing/&quot;&gt;http://www.erpsoftwareblog.com/2010/08/the-difference-between-virtualization-and-cloud-computing/&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:0;padding-right:20px;padding-bottom:4px;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:15px;vertical-align:baseline;color:rgb(51,51,51);font-family:Arial, Helvetica, sans-serif;border-width:0;&quot;&gt;
Brittany Meeks, Dynamics GP Sales and Marketing Assistant&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:0;padding-right:20px;padding-bottom:4px;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:15px;vertical-align:baseline;color:rgb(51,51,51);font-family:Arial, Helvetica, sans-serif;border-width:0;&quot;&gt;
As a newbie sales and marketing assistant at&amp;nbsp;&lt;a href=&quot;http://www.customis.com/&quot; style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;vertical-align:baseline;background-color:transparent;color:rgb(51,115,159);border-width:0;margin:0;padding:0;&quot;&gt;Custom&lt;br /&gt;
 Information Services&lt;/a&gt;, I kept getting thrown technical terms that I was unable to grasp.&amp;nbsp; That is until I did some research and discovered the easy way to understand and implement such terms or questions as, “&lt;a href=&quot;http://www.customis.com/it-solutions/Blog/Difference-Virtualization-Cloud.aspx&quot; style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;vertical-align:baseline;background-color:transparent;color:rgb(51,115,159);border-width:0;margin:0;padding:0;&quot;&gt;What’s&lt;br /&gt;
 the difference&amp;nbsp;between virtualization and cloud computing?”&lt;/a&gt;&amp;nbsp; Originally, I couldn’t even tell you the meaning of virtualization or cloud computing, let alone what the differences were.&amp;nbsp;&amp;nbsp; Since we implement and support these technologies I had to&amp;nbsp;understand&lt;br /&gt;
 the definitions quickly!&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:0;padding-right:20px;padding-bottom:4px;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:15px;vertical-align:baseline;color:rgb(51,51,51);font-family:Arial, Helvetica, sans-serif;border-width:0;&quot;&gt;
Virtualization is a computing technology that enables a single user to access multiple physical devices.&amp;nbsp; Another way to look at it is a single computer controlling multiple machines, or one operating system utilizing multiple computers to analyze a database.&amp;nbsp;&lt;br /&gt;
 Virtualization may also be used&amp;nbsp;for running multiple applications on each server rather than just one; this in turn reduces the number of servers companies need to purchase and manage.&amp;nbsp; It enables you to consolidate your servers and do more with less hardware.&amp;nbsp;It&lt;br /&gt;
 also lets you support more users per piece of hardware, deliver applications, and run applications faster. &amp;nbsp;Follow this link for more detail on virtualization&amp;nbsp;&lt;a href=&quot;http://www.customis.com/resources/library/VirtualizationWhitePaper.pdf&quot; style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;vertical-align:baseline;background-color:transparent;color:rgb(51,115,159);border-width:0;margin:0;padding:5px 20px 5px 0;&quot;&gt;VirtualizationWhitePaper.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:0;padding-right:20px;padding-bottom:4px;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:15px;vertical-align:baseline;color:rgb(51,51,51);font-family:Arial, Helvetica, sans-serif;border-width:0;&quot;&gt;
Cloud computing offers scalable infrastructure and software off site, saving labor, hardware, and power costs.&amp;nbsp; Financially, the cloud’s virtual resources are typically cheaper than dedicated physical resources connected to a personal computer or network.&amp;nbsp;&lt;br /&gt;
 With cloud computing, the&amp;nbsp;&lt;a href=&quot;http://www.customis.com/business-application/&quot; target=&quot;_blank&quot; style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;vertical-align:baseline;background-color:transparent;color:rgb(51,115,159);border-width:0;margin:0;padding:0;&quot;&gt;software&lt;br /&gt;
 programs&lt;/a&gt;&amp;nbsp;you use aren’t run from your personal computer, but&amp;nbsp; rather are&amp;nbsp;stored on servers housed elsewhere and accessed via the Internet.&amp;nbsp; If your computer crashes, the software is still available for others to use.&amp;nbsp; Simply, the cloud is a collection&lt;br /&gt;
 of computers and servers that are publicly accessible via the Internet.&amp;nbsp; Here is something else I found online which may be helpful in better understanding cloud services&lt;a href=&quot;http://www.customis.com/resources/library/Microsoft_CloudServices.pdf&quot; target=&quot;_blank&quot; style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;vertical-align:baseline;background-color:transparent;color:rgb(51,115,159);border-width:0;margin:0;padding:5px 20px 5px 0;&quot;&gt;Microsoft&lt;br /&gt;
 Cloud Services.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:0;padding-right:20px;padding-bottom:4px;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:15px;vertical-align:baseline;color:rgb(51,51,51);font-family:Arial, Helvetica, sans-serif;border-width:0;&quot;&gt;
One way to look at it is that&amp;nbsp;virtualization is basically one physical computer pretending to be many computing environments whereas cloud computing is many different computers pretending to be the one computing environment (hence user scaling).&amp;nbsp; Virtualization&lt;br /&gt;
 provides flexibility that is a great match for cloud computing.&amp;nbsp;&amp;nbsp;Moreover, cloud computing can be defined based on the virtual machine containers created with virtualization.&amp;nbsp; Virtualization is not always necessary in cloud computing; however, you can use&lt;br /&gt;
 it as the basis.&amp;nbsp; Cloud computing is an approach for the delivery of services while virtualization is one possible service that could be delivered.&amp;nbsp; Large corporations with little downtime tolerance and airtight security requirements may find that virtualization&lt;br /&gt;
 fits them best.&amp;nbsp; Smaller businesses are more likely to profit more with cloud computing, allowing them to focus on their mission while leaving IT chores to those who can do more for less.&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:0;padding-right:20px;padding-bottom:4px;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;font-size:15px;vertical-align:baseline;color:rgb(51,51,51);font-family:Arial, Helvetica, sans-serif;border-width:0;&quot;&gt;
Plainly, virtualization provides more servers on the same hardware and cloud computing provides measured resources while paying for what you use.&amp;nbsp; While it is not uncommon to hear people discuss them interchangeably, they are very different approaches to solving&lt;br /&gt;
 the problem of maximizing the use of available resources.&amp;nbsp; They differ in many ways and that also leads to some important considerations when selecting between the two.&amp;nbsp; Not only do we offer&amp;nbsp;&lt;a href=&quot;http://www.customis.com/business-application/business-accounting/microsoft-dynamics-gp.aspx&quot; style=&quot;border-style:initial;border-color:initial;outline-width:0;outline-style:initial;outline-color:initial;vertical-align:baseline;background-color:transparent;color:rgb(51,115,159);border-width:0;margin:0;padding:0;&quot;&gt;Dynamics&lt;br /&gt;
 GP,&lt;/a&gt;&amp;nbsp;but we also offer services for cloud and virtualization for your business applications.&amp;nbsp;&amp;nbsp; Our new website set for a September go live will have more information on this subject.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>帮主远行，智慧永生</title>
   <link href="http://bo-yang.github.com//2011/10/09/in-memory-of-steve-jobs"/>
   <updated>2011-10-09T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/10/09/in-memory-of-steve-jobs</id>
   <content type="html">&lt;div style=&quot;direction:ltr;font-family:arial;font-size:11pt;line-height:1.2;margin:0;padding:.5in 1in;&quot;&gt;
&lt;h1 id=&quot;zw-132e39cf371ufqXd3916c&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-size:17px;line-height:20px;&quot;&gt;1.&amp;nbsp;硅谷海盗&lt;/span&gt;&lt;/h1&gt;
&lt;p id=&quot;zw-132e77cd793Ye5deS3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e77cd792y2b7JR3916c&quot;&gt;2006年年底我开始关注科技尤其是IT新闻，间或看到一些关于Apple的新闻，当时并没有太深的印象，甚至连iPod是神马都没搞特别清楚。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e3a2a0f5L3ZJr83916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e3a2a0f5z-CepF3916c&quot;&gt;2007年1月初看到一些新闻风传Apple即将推出智能手机，当时仍然感到莫名其妙——手机都已经人手一部了，有什么特别的。&lt;/span&gt;&lt;span id=&quot;zw-132e3a4662cNkqUs3916c&quot;&gt;那个月的月底，iPhone发布了，看到了iPhone的demo，很是吸引人，但仍然不清楚业界为何视其为划时代的产品。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e3c8e09848r0Fd3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e3c8e098KHwsP3916c&quot;&gt;&lt;/span&gt;&lt;span id=&quot;zw-132e3c8e52dpeDNfD3916c&quot;&gt;2007年另一件记忆深刻的事情是第一次看到了《硅谷海盗》&lt;/span&gt;&lt;span id=&quot;zw-132e3c8e536BZka333916c&quot;&gt;&lt;/span&gt;&lt;span id=&quot;zw-132e3c8e52dJvRfg3916c&quot;&gt;（The&amp;nbsp;Pirates&amp;nbsp;of&lt;br /&gt;
 Silicon Valley）。其实当时是受《加勒比海盗》的影响，对海盗片非常感兴趣，在网上看到&lt;/span&gt;&lt;span id=&quot;zw-132e3c8e537Dccfym3916c&quot;&gt;&lt;/span&gt;&lt;span id=&quot;zw-132e3c8e52eItF8nD3916c&quot;&gt;《硅谷海盗》中有“海盗”两个字，就下了。下完一看这电影一开场就是比尔.盖茨和鲍尔默等人打牌泡妞的镜头，很黄很暴力，当时的我很喜欢。直到看完之后才明白，原来该片的主角不是&lt;/span&gt;&lt;span id=&quot;zw-132e3c8e537n59JDJ3916c&quot;&gt;比尔.盖茨，而是一个叫Jobs的人，这个人是Apple公司的创始人，心里有些失望。由于当时鄙人孤陋寡闻，只知道比尔.盖茨牛X的不得了，全然不知原来盖茨当初竟然是Jobs的小弟（后来看到2007年D5上Steve&amp;nbsp;Jobs和Bill&amp;nbsp;Gates两个人的采访，更加深了我的这种感觉——盖茨虽然比乔帮主年长两岁，但在帮助面前一副谦卑的姿态，而乔帮主尽显老大风范，即使是在1997年Apple濒临破产有求于微软的时候）。由于《硅谷海盗》中的Steve&amp;nbsp;Jobs风流倜傥，我开始留心Apple的一些新闻。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e3b86f75s6Zps73916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e3b86f75quvWW3916c&quot;&gt;&lt;/span&gt;&lt;span id=&quot;zw-132e3b8759aoTc3bj3916c&quot;&gt;后来偶然的机会在网上看到了apple4.us，看了一些关于Apple以及乔帮主的很有深度的文章&lt;/span&gt;&lt;span id=&quot;zw-132e3b875a38KHu13916c&quot;&gt;，很长一段时间apple4us是我每日必上的网站，再后来我的Google&lt;br /&gt;
 reader中添加的第一个网站就是它。正是apple4us，这个国内差不多资历最老的果粉网站，让我了解并接受了Apple或者说Steve&amp;nbsp;Jobs的世界观和方法论。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e3bea050aLdz7L3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e3bea050hH5IM73916c&quot;&gt;2008年第一次看到Steve&amp;nbsp;Jobs在Stanford毕业典&amp;#31036;上的演讲的中文版，很是震撼，但当时视野狭窄，理解不够深刻，花前月下，乔帮主引用的“Stay&amp;nbsp;hungry. Stay foolish.”的箴言也仅止于思想层面的震撼而已，没有什么实际行动。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e3d12aa0mWVLme3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e3d12aa0ku9jAy3916c&quot;&gt;关于Apple和Steve&amp;nbsp;Jobs的文章看多了，才逐渐明白现实中的Steve&amp;nbsp;Jobs和《硅谷海盗》中所描述的相去甚远：他深谋远虑，绝非意气用事，即使是在年轻气盛的时候（参见Playboy1985年对Steve&amp;nbsp;Jobs的采访）；他笃信佛教，奉行鱼素主义，绝不自我放纵；他执着认真，勤奋努力，绝非像电影中描绘的纨绔子弟的形象……&lt;/span&gt;&lt;span id=&quot;zw-132e3de81669KuSSN3916c&quot;&gt;&amp;nbsp;每次观看《Think&amp;nbsp;Different》，每次重读《Thoughts&amp;nbsp;on&amp;nbsp;Flash》，每次分析Steve&amp;nbsp;Jobs对Andoid平板电脑的批评，无不为帮主的才华所深深折服。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e3e0db18xNB5GW3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e3e0db17ITu5Ll3916c&quot;&gt;尤其是从去年起喜欢上了&lt;/span&gt;&lt;a id=&quot;zw-132e78e9643X9Ybg3916c&quot; title=&quot;Daring&amp;nbsp;Fireball&quot; target=&quot;_self&quot; href=&quot;http://daringfireball.net/&quot;&gt;&lt;span id=&quot;zw-132e78e9621XvNgmr3916c&quot;&gt;Daring&amp;nbsp;Fireball&lt;/span&gt;&lt;/a&gt;&lt;span id=&quot;zw-132e78e9622EpOzl3916c&quot;&gt;，John&amp;nbsp;Gruber的分析往往令人拍案叫绝。尽管仔细想来他的分析未必符合Apple或者Jobs的事实，但实在很难找出对Apple和Steve&amp;nbsp;Jobs的很多决定的更好的解释。考虑到乔帮主素有“偷”别人idea的名声(&lt;/span&gt;&lt;a href=&quot;http://tech.qq.com/a/20111008/000283.htm&quot; id=&quot;zw-132e77f330b_IvSJy3916c&quot;&gt;&lt;span id=&quot;zw-132e77f330cz1Lz__3916c&quot;&gt;参见&lt;/span&gt;&lt;/a&gt;&lt;span id=&quot;zw-132e77f330cz1Lz__3916c&quot;&gt;&lt;/span&gt;&lt;span id=&quot;zw-132e7b9fc42iWeMEr3916c&quot; style=&quot;font-family:宋体, arial;line-height:30px;text-align:center;font-size:.90909090909091em;&quot;&gt;&lt;/span&gt;&lt;a id=&quot;zw-132e7ba6852jdl-533916c&quot; title=&quot;《史蒂夫·乔布斯传》摘要首发：与伊夫二重唱&quot; target=&quot;_self&quot; href=&quot;http://http//tech.qq.com/a/20111008/000283.htm%E2%80%8B&quot;&gt;&lt;span id=&quot;zw-132e7ba6830cgaxO3916c&quot; style=&quot;font-family:宋体, arial;line-height:30px;text-align:center;font-size:.90909090909091em;&quot;&gt;《史蒂夫·乔布斯传》摘要首发：与伊夫二重唱&lt;/span&gt;&lt;/a&gt;&lt;span id=&quot;zw-132e77f331e-S8T0I3916c&quot;&gt;)，已经很难分辨哪些想法是他自己原创，哪些是和别人一起碰撞的火花，因此与其纠结于Steve&amp;nbsp;Jobs是否原创了某个想法，毋宁把Steve&amp;nbsp;Jobs和他的团队视为一个整体，而Jobs毋庸置疑是这个团队的灵魂。只有强大如斯、睿智如斯、固执如斯、挑剔如斯、努力如斯的人，才能掌控整个团队，激发出所有人的潜力，创造出最伟大的产品&lt;/span&gt;&lt;span id=&quot;zw-132e78df9a1oc56jV3916c&quot;&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e78e02d0464dSv3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e78e02d0watEk3916c&quot;&gt;今天上午又仔细看了一遍Jobs在D8（2010年5月份）&lt;/span&gt;&lt;span id=&quot;zw-132e790f617rPMLW3916c&quot;&gt;上的&lt;span id=&quot;zw-132e79066dc1juRA_3916c&quot; class=&quot;z-cursor-spacer&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;zw-132e790f618pF44pI3916c&quot;&gt;采访，在身体极度虚弱之时反应仍如此迅速，对一些观点的反驳仍如此犀利，脾气仍如此火爆，着实令人叹服。从某些意义上讲，他无愧“硅谷海盗”的称号，他是硅谷的&lt;/span&gt;&lt;span id=&quot;zw-132e79640cd0wpSEE3916c&quot; style=&quot;font-family:arial, 宋体, sans-serif;font-size:.95454545454545em;line-height:24px;&quot;&gt;Jack&lt;br /&gt;
 Sparrow。&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;zw-132e7964efdDJOAT13916c&quot;&gt;&lt;span id=&quot;zw-132e7964efcpQzQA3916c&quot; style=&quot;font-family:arial, 宋体, sans-serif;line-height:24px;&quot;&gt;2.&amp;nbsp;佛教徒&lt;/span&gt;&lt;span id=&quot;zw-132e79640e0VYMZq_3916c&quot;&gt;&lt;/span&gt;&lt;span id=&quot;zw-132e796fd53tWCWXh3916c&quot; class=&quot;z-cursor-spacer&quot;&gt;​&lt;/span&gt;&lt;/h3&gt;
&lt;p id=&quot;zw-132e3ef5a69sVQvBu3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e792b046lBDP5M3916c&quot;&gt;年轻时一次印度之行使他成为一名虔诚的佛教徒，而且信奉的是禅宗。至于他是如何禅修的，我们不得而知。记得1985年花花公子对他的采访中，他描述了在印度的一个遭遇：当地一个非常著名难得一见的大师见到他之后突然大笑，一把拉住他把他拖到山顶上给他剃头（参见：&lt;/span&gt;&lt;span id=&quot;zw-132e79ce161_2hFDC3916c&quot; style=&quot;font-family:&#39;Trebuchet MS&#39;, Helvetica, Arial, Geneva, sans-serif;color:rgb(65,77,76);line-height:24px;background-color:rgb(214,222,212);font-size:.90909090909091em;&quot;&gt;&lt;/span&gt;&lt;a id=&quot;zw-132e79d497eqV3ubc3916c&quot; title=&quot;花花公子1985年采访乔布斯:相信电脑可改变世界&quot; target=&quot;_self&quot; href=&quot;http://www.lzhi.org/views/651002&quot;&gt;&lt;span id=&quot;zw-132e79d495ddjYKj3916c&quot; style=&quot;font-family:&#39;Trebuchet MS&#39;, Helvetica, Arial, Geneva, sans-serif;color:rgb(65,77,76);line-height:24px;background-color:rgb(214,222,212);font-size:.90909090909091em;&quot;&gt;花花公子1985年采访乔布斯:相信电脑可改变世界&lt;/span&gt;&lt;/a&gt;&lt;span id=&quot;zw-132e79ce1694C0gYy3916c&quot;&gt;）。如果这个故事是真的（对于早年Jobs讲的故事，还是应保持警惕），那位大师肯定看出他有佛缘。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e79e4b9fQ7WkUj3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e79e4b9ewXfrbz3916c&quot;&gt;Jobs参悟的应该是日本的禅宗，应该不是中国的，因为他一生不肯踏上中国的国土，而日本却去过多次，还在日本机场发生过不愉快而发誓再也不去日本。我至今仍无宗教信仰，对佛教也了解不多，但禅宗的思辨领教过一二，确实能开拓人的思路。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e7a2eba2huoKQ43916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e7a2eba2I0x5au3916c&quot;&gt;”&lt;/span&gt;&lt;span id=&quot;zw-132e7a41f3bJ1DXX3916c&quot; style=&quot;font-family:arial, sans-serif;font-size:.88636363636364em;line-height:normal;&quot;&gt;印度有一句老话：&#39;生命中的前30年，你培养了习惯；后30年，习惯培养了你。&#39;”&lt;/span&gt;&lt;span id=&quot;zw-132e7a41f51Uln38q3916c&quot;&gt;1985年的Jobs如是说。——我后年也即将30，却还没有培养出好的习惯。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e7a5e948z5eXVh3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e7a5e948koeTRA3916c&quot;&gt;我认为禅给Jobs最大的帮助就是个人修为，不断的自我反省自我改造，不断的探求生命以及事物的本质。&lt;/span&gt;&lt;a id=&quot;zw-132e7ae1d5bS5Ub1K3916c&quot; title=&quot;李开周&quot; target=&quot;_self&quot; href=&quot;http://weibo.com/reallikaizhou&quot;&gt;&lt;span id=&quot;zw-132e7ae1d3amQ77Qj3916c&quot;&gt;李开周&lt;/span&gt;&lt;/a&gt;&lt;span id=&quot;zw-132e7ae1d3aCI6Xfq3916c&quot;&gt;（不是李开复的弟弟）在&lt;/span&gt;&lt;span id=&quot;zw-132e7a5e94ax2EoIF3916c&quot; class=&quot;z-cursor-spacer&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-132e7ac8283YlyA4l3916c&quot;&gt;微博中说&lt;/span&gt;&lt;span id=&quot;zw-132e7ac8283juYXGQ3916c&quot;&gt;“&lt;/span&gt;&lt;span id=&quot;zw-132e7ac869cuhhv5-3916c&quot; style=&quot;color:rgb(68,68,68);font-family:Arial, Helvetica, sans-serif;font-size:.95454545454545em;line-height:22px;background-color:rgb(255,211,221);&quot;&gt;两年前我修过一段不净观，观想自己慢慢腐烂，从后脑勺烂到小命根儿，全身骨骼根根外露，白森森亮闪闪；也参过话头，咬住“腿疼的这个家伙到底是谁”不放。但效果都很差，因为缺恒心，更缺信心。唯一的收获是，发现打坐（修不净观和参话头都打坐，当然也可以不打坐）确实是最能让人“收放心”的动作。&lt;/span&gt;&lt;span id=&quot;zw-132e7ac86a6P47dcV3916c&quot;&gt;”，个人没研究过，但禅修的意义可见一斑。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e7ad1b4fLQjpkd3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e7ad1b4fOfnpAh3916c&quot;&gt;其实Jobs最能让我联想起来的一个中国人是曾国藩。个人感觉他们有很多的共性，最大的共同点就是能够认识自己，改造自己。另外的共同点就是：坚持、努力、有领导魅力&lt;/span&gt;&lt;span id=&quot;zw-132e7b2517a69hFsk3916c&quot;&gt;、有远见、工于心计、善于玩弄策略(曾的更像权术)、失败过、影响了几代人……&amp;nbsp;还有一个有意思的共性就是他们小时候学习都不好：曾是出了名的笨小孩(参见南京师范大学郦波副教授在《百家讲坛》所讲的《曾国藩家训》)；Jobs也是淘气&amp;#39740;，直到小学四年级碰到了一位好老师才有所好转（具体故事不甚了解，期待Walter&amp;nbsp;Isaacsson的Steve&amp;nbsp;Jobs传记）。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e7b73776q_piIi3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e7b73776rhgkAa3916c&quot;&gt;随着年纪越来越大，越来越发现改变自己是何其困难，尤其是改掉多年的习惯。我崇拜任何能都改变&lt;/span&gt;&lt;span id=&quot;zw-132e7b73778R08OVl3916c&quot; class=&quot;z-cursor-spacer&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-132e7b881e4Z5ttZE3916c&quot;&gt;自己的人。何况有些人能都修行一生。&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;zw-132e7b8ad63QVMRu3916c&quot;&gt;&lt;span id=&quot;zw-132e7b8ad63JnJ9X83916c&quot;&gt;3.&amp;nbsp;工心计&lt;/span&gt;&lt;/h3&gt;
&lt;p id=&quot;zw-132e797453abq_IN93916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e797453ayE64b3916c&quot;&gt;也许是受水果教一般信徒的影响，我对于那些几近阴谋论的Apple产品策略分析文章非常喜欢。最新的一篇大爱就是John&amp;nbsp;Gruber的&lt;/span&gt;&lt;a href=&quot;http://daringfireball.net/2011/10/thoughts_and_observations_iphone_4s&quot; title=&quot;Permanent link to ‘Thoughts and Observations Regarding This Week’s iPhone 4S Event, Written Almost Entirely Before Wednesday’s Sad News, But Which the Time Has Come to Publish Because Life Goes On’&quot; id=&quot;zw-132e7bf19be8U_YX3916c&quot; style=&quot;color:rgb(238,238,238);background-color:inherit;border-style:initial;border-color:initial;border-width:0;padding:3px 0 2px;&quot;&gt;&lt;span id=&quot;zw-132e7bf49e4P_A-3916c&quot; style=&quot;border-color:initial;font-family:&#39;Gill Sans&#39;, &#39;Gill Sans Std&#39;, &#39;Gill Sans MT&#39;, Georgia, serif;line-height:1.5em;text-align:left;background-color:inherit;text-decoration:none;font-size:.90909090909091em;&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;a id=&quot;zw-132e7bf9a36eYITXC3916c&quot; title=&quot;Thoughts and Observations Regarding This Week’s iPhone 4S Event, Written Almost Entirely Before Wednesday’s Sad News, But Which the Time Has Come to Publish Because Life Goes&amp;nbsp;On&quot; target=&quot;_self&quot; href=&quot;http://daringfireball.net/2011/10/thoughts_and_observations_iphone_4s&quot;&gt;&lt;span id=&quot;zw-132e7bfdd12If0fLW3916c&quot; style=&quot;border-color:initial;font-family:&#39;Gill Sans&#39;, &#39;Gill Sans Std&#39;, &#39;Gill Sans MT&#39;, Georgia, serif;line-height:1.5em;text-align:left;background-color:inherit;text-decoration:none;font-size:.90909090909091em;color:rgb(0,0,0);&quot;&gt;Thoughts&lt;br /&gt;
 and Observations Regarding This Week’s iPhone 4S Event, Written Almost Entirely Before Wednesday’s Sad News, But Which the Time Has Come to Publish Because Life Goes&amp;nbsp;On&lt;/span&gt;&lt;/a&gt;&lt;span id=&quot;zw-132e7bfdd6apnIqU23916c&quot;&gt;&lt;/span&gt;&lt;span id=&quot;zw-132e7bf19e4IT9a023916c&quot;&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e7c04693d89xct3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e7c04692jyvm113916c&quot;&gt;纵观关于Jobs生命最后时光的报道（还是期待&lt;/span&gt;&lt;span id=&quot;zw-132e7c128bdQapkDK3916c&quot;&gt;Walter&amp;nbsp;Isaacsson的Steve&amp;nbsp;Jobs传记&lt;/span&gt;&lt;span id=&quot;zw-132e7c128caOq8wsO3916c&quot;&gt;），感觉&lt;/span&gt;&lt;span id=&quot;zw-132e7c193f4_gLk0V3916c&quot;&gt;Jobs直至生命的最后时刻，仍然牢牢掌控全局：2月份自感来日无多时便安排见诸多好友的最后一面，选择性接见，只有depend&lt;br /&gt;
 on他的人才见，因为他不想浪费生命最后的时光去做对自己无意义的事情；2011年WWDC发布会前仍然在陪伴家人(参见&lt;/span&gt;&lt;span id=&quot;zw-132e7c8c599aEK4d03916c&quot; style=&quot;font-family:&#39;Gill Sans&#39;, &#39;Gill Sans Std&#39;, &#39;Gill Sans MT&#39;, Georgia, serif;line-height:1.5em;text-align:left;font-size:.90909090909091em;&quot;&gt;&lt;/span&gt;&lt;a id=&quot;zw-132e7c9355b4-4_5r3916c&quot; title=&quot;Universe Dented, Grass&amp;nbsp;Underfoot&quot; target=&quot;_self&quot; href=&quot;http://daringfireball.net/2011/10/universe_dented_grass_underfoot&quot;&gt;&lt;span id=&quot;zw-132e7c93538ncaNS63916c&quot; style=&quot;font-family:&#39;Gill Sans&#39;, &#39;Gill Sans Std&#39;, &#39;Gill Sans MT&#39;, Georgia, serif;line-height:1.5em;text-align:left;font-size:.90909090909091em;color:rgb(0,0,0);&quot;&gt;Universe&lt;br /&gt;
 Dented, Grass&amp;nbsp;Underfoot&lt;/span&gt;&lt;/a&gt;&lt;span id=&quot;zw-132e7c93539I0urFE3916c&quot; style=&quot;font-family:&#39;Gill Sans&#39;, &#39;Gill Sans Std&#39;, &#39;Gill Sans MT&#39;, Georgia, serif;line-height:1.5em;text-align:left;font-size:.90909090909091em;&quot;&gt;，&amp;nbsp;我特地看了WWDC乔帮主的开场白，他的脚上的New&amp;nbsp;Balance确实沾满草迹&lt;/span&gt;&lt;span id=&quot;zw-132e7c8153d1X6Sjj3916c&quot;&gt;)；重病期间请来保安护卫全家；去世前一天还在家蜷缩在一楼的角落里观看iPhone&lt;br /&gt;
 4S的发布会，结束后嘴角露出一丝微笑（这么像小说？！）；葬&amp;#31036;选择在死后的第二天匆匆举行……&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e7cc8435-EKCVa3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e7cc8435rfsiB-3916c&quot;&gt;一个重病缠身却能把自己生命的最后时光（很可能还包括身后好多年）安排的如此井井有条的人，是怎样的人啊？&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e7d06ba95FXnSB3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e7d06ba9Lh9Ho3916c&quot;&gt;&lt;/span&gt;&lt;span id=&quot;zw-132e7cc8436zTHYJ3916c&quot; class=&quot;z-cursor-spacer&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-132e7ce9da0-DPtpt3916c&quot;&gt;估计唯一能与其匹敌的就是慈禧太后，死前22小时还毒死了光绪皇帝册立了溥仪。但Jobs所有的安排都是为了家人和朋友，而慈禧的安排纯粹为了自己，两相比较，高下立现。&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;zw-132e7d0377cD6tNPS3916c&quot;&gt;&lt;span id=&quot;zw-132e7d0377cyWvpsH3916c&quot;&gt;4.&amp;nbsp;斯人已逝&lt;/span&gt;&lt;/h3&gt;
&lt;p id=&quot;zw-132e7d266a6eEuKyb3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e7d266a63696IZ3916c&quot;&gt;我实在北京时间10月6日中午回北京的火车上听说Steve&amp;nbsp;Jobs离世的。其实我个人这次并没有太大震动，不像年初看到他再度休病假的通知，不像看到他参加Obama的晚宴的照片，不像看到他辞去CEO后网上流传的那张瘦骨嶙峋的照片那般。对于一个罹患胰腺癌（方舟子坚称Jobs身患胰腺肿瘤而非胰腺癌，期待他的自传中能给出答案），经历过肝脏移植的人，饱受病魔侵扰7年的人而言，未尝不是一种解脱。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e7d72ed3g8LAvI3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e7d72ed388mGwv3916c&quot;&gt;但他是Steve&amp;nbsp;Jobs，Apple的灵魂。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e7d934895q1Q_3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e7d9348952tLcK3916c&quot;&gt;其实硕士毕业工作3年多以后，作为一个程序员，作为一名普通员工，对于企业运营、资本运作之类的东西早已不感兴趣，哪些东西跟我实在太远。只有面向消费者推出的产品，&lt;/span&gt;&lt;span id=&quot;zw-132e7dec865v50sax3916c&quot;&gt;才是我有可能买得起，享受的到的——如Apple的iPxd，Google的XXX等。Steve&amp;nbsp;Jobs作为一名企业创始人和管理者，对于我这样的普通程序员，能够直接借鉴的技巧实在不明显，但是他的智慧，是留给全世界最有价&amp;#20540;的遗产。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-132e7e41a4b3UV1fd3916c&quot; style=&quot;margin-top:0;margin-bottom:12pt;&quot;&gt;&lt;span id=&quot;zw-132e7e41a4b1mH0tM3916c&quot;&gt;无论我明天做什么，&lt;/span&gt;&lt;span id=&quot;zw-132e7e58525uzcbWb3916c&quot;&gt;Steve&amp;nbsp;Jobs永远&amp;#20540;得学习。&lt;/span&gt;&lt;span id=&quot;zw-132e7e41a4clqh0vS3916c&quot; class=&quot;z-cursor-spacer&quot;&gt;​&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Struct sctp_event_subscribe Differs Between RHEL5 and RHEL6</title>
   <link href="http://bo-yang.github.com//2011/09/28/structure-sctp_event_subscribe-differs-between-rhel5-rhel6"/>
   <updated>2011-09-28T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/09/28/structure-sctp_event_subscribe-differs-between-rhel5-rhel6</id>
   <content type="html">&lt;p&gt;Recently meet an SCTP issue: one product application running on MontaVista(kernel version 2.6.21) can&#39;t run on RedHat Enterprise Linux 5.5. After hours investion between millions lines  of  log file and source code, I finally noticed following error showed up:&lt;br /&gt;
[sourcecode language=&quot;text&quot;]&lt;br /&gt;
^?0 2011-08-16 09:11:57.316267 coolnjmcl018 AMMServ 26555[26566]&lt;br /&gt;
 ../com/AMMSSctpLib.cc,369 [EAMMS1315] AMMSSctpLib::ammsSetSockOpt()&lt;br /&gt;
 setsockopt - Invalid argument&lt;br /&gt;
^?1 2011-08-16 09:11:57.316326 coolnjmcl018 AMMServ 26555[26566]&lt;br /&gt;
../com/AMMSAccessServer.cc,779 [EAMMS1036] AMMSAccessServer::setSocketOpts():&lt;br /&gt;
 failed to set SCTP_EVENTS for socket 6&lt;br /&gt;
[/sourcecode]&lt;br /&gt;
C function ammsSetSockOpt() was a function used in that product application, which eventually calls Linux system API setsockopt().&lt;/p&gt;
&lt;p&gt;The product developers told me that they updated libsctp.so shared library in MV, so I copied that library directly to RHEL5.5(usually this way will work). However, that shared library didn&#39;t work this time.&lt;/p&gt;
&lt;p&gt;Then I noticed that the kernel of RHEL5.5 was 2.6.18-194.el5, which means Linux kernel 2.6.18 was used. I also found some webpages about RHEL kernel, and all of them claimed that Red Hat would backport new-developed Linux kernel(community) features to RHEL5 kernels, which means that the older kernel version of RHEL may also contains some features in higher Linux kernel.  Since SCTP codes were largely changed in 2.6.21, I decided to upgrade RHEL kernel to 2.6.18-238.9.1.el5(the default version in RHEL5.7).&lt;/p&gt;
&lt;p&gt;After 4.5 hours compiling and installing, RHEL kernel upgraded to the latest one. Unfortunately, the SCTP issue still existed.&lt;/p&gt;
&lt;p&gt;I wen to back to reading source code, and tried to change the last parameter of setsockopt() from sizeof(events) to 8, and it worked!  Where, events is defined as&lt;br /&gt;
[sourcecode language=&quot;cpp&quot;]struct sctp_event_subscribe events;[/sourcecode]&lt;br /&gt;
Then I began to check the definition of struct sctp_event_subscribe in both RHEL5.5 and RHEL6.0 - they were different:&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L406&quot;&gt;RHEL 6&lt;/a&gt;,&lt;/p&gt;
&lt;pre&gt;&lt;a id=&quot;L402&quot; name=&quot;L402&quot; href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L402&quot;&gt;&lt;/a&gt; 402/*
&lt;a id=&quot;L403&quot; name=&quot;L403&quot; href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L403&quot;&gt;&lt;/a&gt; 403 * Described in Section 7.3
&lt;a id=&quot;L404&quot; name=&quot;L404&quot; href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L404&quot;&gt;&lt;/a&gt; 404 *   Ancillary Data and Notification Interest Options
&lt;a id=&quot;L405&quot; name=&quot;L405&quot; href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L405&quot;&gt;&lt;/a&gt; 405 */
&lt;a id=&quot;L406&quot; name=&quot;L406&quot; href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L406&quot;&gt;&lt;/a&gt; 406struct &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=sctp_event_subscribe&quot;&gt;sctp_event_subscribe&lt;/a&gt; {
&lt;a id=&quot;L407&quot; name=&quot;L407&quot; href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L407&quot;&gt;&lt;/a&gt; 407        &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=sctp_data_io_event&quot;&gt;sctp_data_io_event&lt;/a&gt;;
&lt;a id=&quot;L408&quot; name=&quot;L408&quot; href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L408&quot;&gt;&lt;/a&gt; 408        &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=sctp_association_event&quot;&gt;sctp_association_event&lt;/a&gt;;
&lt;a id=&quot;L409&quot; name=&quot;L409&quot; href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L409&quot;&gt;&lt;/a&gt; 409        &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=sctp_address_event&quot;&gt;sctp_address_event&lt;/a&gt;;
&lt;a id=&quot;L410&quot; name=&quot;L410&quot; href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L410&quot;&gt;&lt;/a&gt; 410        &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=sctp_send_failure_event&quot;&gt;sctp_send_failure_event&lt;/a&gt;;
&lt;a id=&quot;L411&quot; name=&quot;L411&quot; href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L411&quot;&gt;&lt;/a&gt; 411        &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=sctp_peer_error_event&quot;&gt;sctp_peer_error_event&lt;/a&gt;;
&lt;a id=&quot;L412&quot; name=&quot;L412&quot; href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L412&quot;&gt;&lt;/a&gt; 412        &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=sctp_shutdown_event&quot;&gt;sctp_shutdown_event&lt;/a&gt;;
&lt;a id=&quot;L413&quot; name=&quot;L413&quot; href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L413&quot;&gt;&lt;/a&gt; 413        &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=sctp_partial_delivery_event&quot;&gt;sctp_partial_delivery_event&lt;/a&gt;;
&lt;a id=&quot;L414&quot; name=&quot;L414&quot; href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L414&quot;&gt;&lt;/a&gt; 414        &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=sctp_adaptation_layer_event&quot;&gt;sctp_adaptation_layer_event&lt;/a&gt;;
&lt;a id=&quot;L415&quot; name=&quot;L415&quot; href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L415&quot;&gt;&lt;/a&gt; 415        &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/+code=sctp_authentication_event&quot;&gt;sctp_authentication_event&lt;/a&gt;;
&lt;a id=&quot;L416&quot; name=&quot;L416&quot; href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L416&quot;&gt;&lt;/a&gt; 416};&lt;/pre&gt;
&lt;p&gt;While in &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L367&quot;&gt;RHEL5&lt;/a&gt;,&lt;/p&gt;
&lt;pre&gt;&lt;a id=&quot;L363&quot; name=&quot;L363&quot; href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L363&quot;&gt;&lt;/a&gt; 363/*
&lt;a id=&quot;L364&quot; name=&quot;L364&quot; href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L364&quot;&gt;&lt;/a&gt; 364 * Described in Section 7.3
&lt;a id=&quot;L365&quot; name=&quot;L365&quot; href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L365&quot;&gt;&lt;/a&gt; 365 *   Ancillary Data and Notification Interest Options
&lt;a id=&quot;L366&quot; name=&quot;L366&quot; href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L366&quot;&gt;&lt;/a&gt; 366 */
&lt;a id=&quot;L367&quot; name=&quot;L367&quot; href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L367&quot;&gt;&lt;/a&gt; 367struct &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=sctp_event_subscribe&quot;&gt;sctp_event_subscribe&lt;/a&gt; {
&lt;a id=&quot;L368&quot; name=&quot;L368&quot; href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L368&quot;&gt;&lt;/a&gt; 368        &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=sctp_data_io_event&quot;&gt;sctp_data_io_event&lt;/a&gt;;
&lt;a id=&quot;L369&quot; name=&quot;L369&quot; href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L369&quot;&gt;&lt;/a&gt; 369        &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=sctp_association_event&quot;&gt;sctp_association_event&lt;/a&gt;;
&lt;a id=&quot;L370&quot; name=&quot;L370&quot; href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L370&quot;&gt;&lt;/a&gt; 370        &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=sctp_address_event&quot;&gt;sctp_address_event&lt;/a&gt;;
&lt;a id=&quot;L371&quot; name=&quot;L371&quot; href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L371&quot;&gt;&lt;/a&gt; 371        &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=sctp_send_failure_event&quot;&gt;sctp_send_failure_event&lt;/a&gt;;
&lt;a id=&quot;L372&quot; name=&quot;L372&quot; href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L372&quot;&gt;&lt;/a&gt; 372        &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=sctp_peer_error_event&quot;&gt;sctp_peer_error_event&lt;/a&gt;;
&lt;a id=&quot;L373&quot; name=&quot;L373&quot; href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L373&quot;&gt;&lt;/a&gt; 373        &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=sctp_shutdown_event&quot;&gt;sctp_shutdown_event&lt;/a&gt;;
&lt;a id=&quot;L374&quot; name=&quot;L374&quot; href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L374&quot;&gt;&lt;/a&gt; 374        &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=sctp_partial_delivery_event&quot;&gt;sctp_partial_delivery_event&lt;/a&gt;;
&lt;a id=&quot;L375&quot; name=&quot;L375&quot; href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L375&quot;&gt;&lt;/a&gt; 375        &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=__u8&quot;&gt;__u8&lt;/a&gt; &lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/+code=sctp_adaption_layer_event&quot;&gt;sctp_adaption_layer_event&lt;/a&gt;;
&lt;a id=&quot;L376&quot; name=&quot;L376&quot; href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L376&quot;&gt;&lt;/a&gt; 376};&lt;/pre&gt;
&lt;p id=&quot;b9/7a/901cb22644e92e629902da22bf3d62baf0cc_3/0&quot;&gt;It seems upgrading RHEL5.5 to RHEL6 is the final choice!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Dot(.) after the file permission flags in Redhat</title>
   <link href="http://bo-yang.github.com//2011/09/21/dot-flag-in-rhel"/>
   <updated>2011-09-21T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/09/21/dot-flag-in-rhel</id>
   <content type="html">&lt;p&gt;Phenomenon:&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;$ rsh coolnjmcl033 &#39;ls -l /opt/cool/tools/lib/COOLvirtenv&#39;
ls: cannot access /opt/cool/tools/lib/COOLvirtenv: Permission denied&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;[root@coolnjmcl033 etc]# ls -l /opt/cool/tools/lib/COOLvirtenv
-rwxr-xr-x. 1 cool cool 29852 Jul 22 03:16 /opt/cool/tools/lib/COOLvirtenv&lt;/pre&gt;
&lt;p&gt;
According to&amp;nbsp;&lt;a href=&quot;http://www.redhat.com/archives/rhelv6-list/2010-December/msg00076.html&quot;&gt;http://www.redhat.com/archives/rhelv6-list/2010-December/msg00076.html&lt;/a&gt;,&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Times New Roman&#39;;font-size:16px;&quot;&gt;From &amp;quot;info ls&amp;quot;:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Following the file mode bits is a single character that specifies&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; whether an alternate access method such as an access control list&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; applies to the file.&amp;nbsp; When the character following the file mode&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; bits is a space, there is no alternate access method.&amp;nbsp; When it is&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; a printing character, then there is such a method.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; GNU `ls&#39; uses a `.&#39; character to indicate a file with an SELinux&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; security context, but no other alternate access method.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; A file with any other combination of alternate access methods is&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; marked with a `&amp;#043;&#39; character.&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In order to make files located on one server can be accessied by other servers, SELinux should be disabled. In order to disable SELinux, &amp;nbsp;refer to&lt;a href=&quot;http://www.crypt.gen.nz/selinux/disable_selinux.html&quot;&gt; How to Disable SELinux&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>RPC - Program not registered in RHEL6.1</title>
   <link href="http://bo-yang.github.com//2011/09/20/rpc-error-in-rhel6"/>
   <updated>2011-09-20T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/09/20/rpc-error-in-rhel6</id>
   <content type="html">&lt;p&gt;I just installed Redhat Enterprise Linux 6.1 on one HP server. Following error met when rup it on other servers:&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;$rup coolnjmcl033
rup:coolnjmcl033: RPC: Program not registered&lt;/pre&gt;
&lt;p&gt;
SOLUTION:&lt;/p&gt;
&lt;p&gt;1)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;check if all nfs related services are working: &lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;[root@coolnjmcl033init.d]# rpcinfo -p
   program vers proto   port  service
    100000   4   tcp    111 portmapper
    100000   3   tcp    111 portmapper
    100000   2   tcp    111 portmapper
    100000   4   udp    111 portmapper
    100000   3   udp    111 portmapper
    100000   2   udp    111 portmapper
    100011   1   udp    875 rquotad
    100011   2   udp    875 rquotad
    100011   1   tcp    875 rquotad
    100011   2   tcp    875 rquotad
    100003   2   tcp   2049 nfs
    100003   3   tcp   2049 nfs
    100003   4   tcp   2049 nfs
    100227   2   tcp   2049 nfs_acl
    100227   3   tcp   2049 nfs_acl
    100003   2   udp   2049 nfs
    100003   3   udp   2049 nfs
    100003   4   udp   2049 nfs
    100227   2   udp   2049 nfs_acl
    100227   3   udp   2049 nfs_acl
    100005    1  udp  51310  mountd
    100005    1  tcp  60605  mountd
   100005    2   udp 42799  mountd
   100005    2   tcp 44201  mountd
   100005    3   udp 49544  mountd
   100005    3   tcp 49098  mountd
   100024    1   udp 37035  status
   100024    1   tcp 60898  status
   100001    3   udp  1008  rstatd
   100001    2   udp  1008  rstatd
   100001    1   udp  1008  rstatd&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;If there is no running&amp;nbsp;&lt;a href=&quot;http://man.sourcentral.org/RHEL6/8+rpc.rstatd&quot;&gt;rstatd&lt;/a&gt;service , start it by&lt;br /&gt;
&lt;strong&gt;service rstatd start&lt;/strong&gt;.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Accordingto &lt;a href=&quot;http://man.sourcentral.org/RHEL6/1+rup&quot;&gt;RHEL 6 RUP manual&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;rup: RPC: Program not registered&lt;/span&gt;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; width=&quot;100%&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot;&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot;&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;The&amp;nbsp;&lt;a href=&quot;http://man.sourcentral.org/RHEL6/8+rpc.rstatd&quot;&gt;rpc.rstatd(8)&lt;/a&gt;&amp;nbsp;daemon has not been started on the remote host.&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;2) &amp;nbsp;check if package &lt;strong&gt;rusers-server-*&lt;/strong&gt;and &lt;strong&gt;rusers-* &lt;/strong&gt;&lt;br /&gt;
are installed: rpm –qa|greprusers. If not, install it and then restart service rstatd.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PS: &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Other userful commands:&lt;/p&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;rup localhost&lt;/li&gt;
&lt;li&gt;service rstatd status&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;According to &lt;a href=&quot;http://pnaplinux.blogspot.com/2011/02/new-features-in-rhel6.html&quot;&gt;&lt;br /&gt;
New Featuresin RHEL6&lt;/a&gt;, &lt;/p&gt;
&lt;p&gt;1.ext4 file system is introduced.&lt;br /&gt;
2. xen is&amp;nbsp;removed and kernel&amp;nbsp;virtualization&amp;nbsp;machine&amp;nbsp;(KVM) is introduced.&lt;br /&gt;
3. neat&amp;nbsp;command&amp;nbsp;is removed.&lt;br /&gt;
4. portmap service is removed.&lt;br /&gt;
5. iscsi is introduced, which&amp;nbsp;supports&amp;nbsp;forSAN.&lt;br /&gt;
6. rpmbuild is available, which is used to create our own rpms.&lt;br /&gt;
7. File encyption is added.&lt;br /&gt;
8. palimpsest is available for&amp;nbsp;disk&amp;nbsp;management.&lt;br /&gt;
9.&amp;nbsp;Virtual&amp;nbsp;machine will&amp;nbsp;run&amp;nbsp;only on 64bit processors.&lt;br /&gt;
10. postfix service is&amp;nbsp;recommended&amp;nbsp;insteadof sendmail service.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Accordingto &lt;a href=&quot;http://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/ch-nfs.html&quot;&gt;&lt;br /&gt;
Chapter&amp;nbsp;12.&amp;nbsp;Network File System (NFS)&lt;/a&gt;&lt;strong&gt;, &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The&amp;nbsp;&lt;strong&gt;portmap&lt;/strong&gt;&amp;nbsp;service wasused to map RPC program numbers to IP address port number combinations inearlier versions of Red Hat Enterprise Linux. This service is now replaced by&amp;nbsp;&lt;strong&gt;rpcbind&lt;/strong&gt;&amp;nbsp;inRed Hat Enterprise Linux 6 to enable&lt;br /&gt;
 IPv6 support. For more information aboutthis change, refer to the following links:&lt;/p&gt;
&lt;ul type=&quot;circle&quot;&gt;
&lt;li&gt;&lt;em&gt;TI-RPC / rpcbind support&lt;/em&gt;:&amp;nbsp;&lt;a href=&quot;http://nfsv4.bullopensource.org/doc/tirpc_rpcbind.php&quot;&gt;http://nfsv4.bullopensource.org/doc/tirpc_rpcbind.php&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;IPv6 support in NFS&lt;/em&gt;:&amp;nbsp;&lt;a href=&quot;http://nfsv4.bullopensource.org/doc/nfs_ipv6.php&quot;&gt;http://nfsv4.bullopensource.org/doc/nfs_ipv6.php&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;liberation sans&#39;, &#39;Myriad &#39;, &#39;Bitstream Vera Sans&#39;, &#39;Lucida Grande&#39;, &#39;Luxi Sans&#39;, &#39;Trebuchet MS&#39;, helvetica, verdana, arial, sans-serif;line-height:15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;variablelist&quot; style=&quot;line-height:1.29em;padding-top:0;&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;varlistentry&quot;&gt;
&lt;span class=&quot;term&quot;&gt;&lt;span style=&quot;font-family:&#39;liberation sans&#39;, &#39;Myriad &#39;, &#39;Bitstream Vera Sans&#39;, &#39;Lucida Grande&#39;, &#39;Luxi Sans&#39;, &#39;Trebuchet MS&#39;, helvetica, verdana, arial, sans-serif;line-height:15px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 class=&quot;title&quot; id=&quot;s2-nfs-how-daemons&quot; style=&quot;line-height:1.29em;color:rgb(167,0,0);margin-top:0;margin-bottom:0;background-color:transparent;font-size:1.3em;padding-top:0;padding-bottom:0;&quot;&gt;
Required Services&lt;/h3&gt;
&lt;/dt&gt;
&lt;dt class=&quot;varlistentry&quot;&gt;
&lt;span class=&quot;term&quot;&gt;nfs&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;para&quot; style=&quot;line-height:1.29em;padding-top:0;margin-top:.3em;padding-bottom:0;margin-bottom:1em;&quot;&gt;
&lt;code class=&quot;command&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;service nfs start&lt;/code&gt;&amp;nbsp;starts the NFS server and the appropriate RPC processes to service requests for shared NFS&lt;br /&gt;
 file systems.&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&quot;varlistentry&quot;&gt;
&lt;span class=&quot;term&quot;&gt;nfslock&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;para&quot; style=&quot;line-height:1.29em;padding-top:0;margin-top:.3em;padding-bottom:0;margin-bottom:1em;&quot;&gt;
&lt;code class=&quot;command&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;service nfslock start&lt;/code&gt;&amp;nbsp;activates a mandatory service that starts the appropriate RPC processes which allow&lt;br /&gt;
 NFS clients to lock files on the server.&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&quot;varlistentry&quot;&gt;
&lt;span class=&quot;term&quot;&gt;rpcbind&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;para&quot; style=&quot;line-height:1.29em;padding-top:0;margin-top:.3em;padding-bottom:0;margin-bottom:1em;&quot;&gt;
&lt;code class=&quot;command&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;rpcbind&lt;/code&gt;&amp;nbsp;accepts port reservations from local RPC services. These ports are then made available (or advertised)&lt;br /&gt;
 so the corresponding remote RPC services can access them.&amp;nbsp;&lt;code class=&quot;command&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;rpcbind&lt;/code&gt;&amp;nbsp;responds to requests for RPC services and&lt;br /&gt;
 sets up connections to the requested RPC service. This is not used with NFSv4.&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&quot;para&quot; style=&quot;line-height:1.29em;padding-top:0;margin-top:.3em;padding-bottom:0;margin-bottom:1em;&quot;&gt;
The following RPC processes facilitate NFS services:&lt;/div&gt;
&lt;div class=&quot;variablelist&quot; style=&quot;line-height:1.29em;padding-top:0;&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;varlistentry&quot;&gt;
&lt;span class=&quot;term&quot;&gt;rpc.mountd&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;para&quot; style=&quot;line-height:1.29em;padding-top:0;margin-top:.3em;padding-bottom:0;margin-bottom:1em;&quot;&gt;
This process receives mount requests from NFS clients and verifies that the requested file system is currently exported. This process is started automatically by the&amp;nbsp;&lt;code class=&quot;command&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;nfs&lt;/code&gt;&amp;nbsp;service&lt;br /&gt;
 and does not require user configuration.&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&quot;varlistentry&quot;&gt;
&lt;span class=&quot;term&quot;&gt;rpc.nfsd&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;para&quot; style=&quot;line-height:1.29em;padding-top:0;margin-top:.3em;padding-bottom:0;margin-bottom:1em;&quot;&gt;
&lt;code class=&quot;command&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;rpc.nfsd&lt;/code&gt;&amp;nbsp;allows explicit NFS versions and protocols the server advertises to be defined. It works with the&lt;br /&gt;
 Linux kernel to meet the dynamic demands of NFS clients, such as providing server threads each time an NFS client connects. This process corresponds to the&amp;nbsp;&lt;code class=&quot;command&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;nfs&lt;/code&gt;&amp;nbsp;service.&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&quot;varlistentry&quot;&gt;
&lt;span class=&quot;term&quot;&gt;lockd&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;para&quot; style=&quot;line-height:1.29em;padding-top:0;margin-top:.3em;padding-bottom:0;margin-bottom:1em;&quot;&gt;
&lt;code class=&quot;command&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;lockd&lt;/code&gt;&amp;nbsp;is a kernel thread which runs on both clients and servers. It implements the&amp;nbsp;&lt;span class=&quot;firstterm&quot; style=&quot;font-style:italic;&quot;&gt;Network&lt;br /&gt;
 Lock Manager&lt;/span&gt;&amp;nbsp;(NLM) protocol, which allows NFSv2 and NFSv3 clients to lock files on the server. It is started automatically whenever the NFS server is run and whenever an NFS filesystem is mounted.&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&quot;varlistentry&quot;&gt;
&lt;span class=&quot;term&quot;&gt;rpc.statd&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;para&quot; style=&quot;line-height:1.29em;padding-top:0;margin-top:.3em;padding-bottom:0;margin-bottom:1em;&quot;&gt;
This process implements the&amp;nbsp;&lt;span class=&quot;firstterm&quot; style=&quot;font-style:italic;&quot;&gt;Network Status Monitor&lt;/span&gt;&amp;nbsp;(NSM) RPC protocol, which notifies NFS clients when an NFS server is restarted without being gracefully brought down.&amp;nbsp;&lt;code class=&quot;command&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;rpc.statd&lt;/code&gt;&amp;nbsp;is&lt;br /&gt;
 started automatically by the&amp;nbsp;&lt;code class=&quot;command&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;nfslock&lt;/code&gt;service, and does not require user configuration. This is not used with&lt;br /&gt;
 NFSv4.&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&quot;varlistentry&quot;&gt;
&lt;span class=&quot;term&quot;&gt;rpc.rquotad&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;para&quot; style=&quot;line-height:1.29em;padding-top:0;margin-top:.3em;padding-bottom:0;margin-bottom:1em;&quot;&gt;
This process provides user quota information for remote users.&amp;nbsp;&lt;code class=&quot;command&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;rpc.rquotad&lt;/code&gt;&amp;nbsp;is started automatically by the&amp;nbsp;&lt;code class=&quot;command&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;nfs&lt;/code&gt;service&lt;br /&gt;
 and does not require user configuration.&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&quot;varlistentry&quot;&gt;
&lt;span class=&quot;term&quot;&gt;rpc.idmapd&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;para&quot; style=&quot;line-height:1.29em;padding-top:0;margin-top:.3em;padding-bottom:0;margin-bottom:1em;&quot;&gt;
&lt;code class=&quot;command&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;rpc.idmapd&lt;/code&gt;&amp;nbsp;provides NFSv4 client and server upcalls, which map between on-the-wire NFSv4 names (which are&lt;br /&gt;
 strings in the form of&amp;nbsp;&lt;code class=&quot;computeroutput&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;&lt;span class=&quot;replaceable&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;font-style:italic;&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;code style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;user&lt;/code&gt;@&lt;span class=&quot;replaceable&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;font-style:italic;&quot;&gt;&lt;code style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;domain&lt;/code&gt;&lt;/span&gt;)&lt;br /&gt;
 and local UIDs and GIDs. For&amp;nbsp;&lt;code class=&quot;command&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;idmapd&lt;/code&gt;&amp;nbsp;to function with NFSv4, the&lt;code class=&quot;filename&quot; style=&quot;font-family:&#39;liberation mono&#39;, &#39;bitstream vera mono&#39;, &#39;dejavu mono&#39;, monospace;white-space:nowrap;font-weight:bold;&quot;&gt;/etc/idmapd.conf&lt;/code&gt;&amp;nbsp;must&lt;br /&gt;
 be configured. This service is required for use with NFSv4, although not when all hosts share the same DNS domain name.&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>c++filt</title>
   <link href="http://bo-yang.github.com//2011/09/14/cpp-filt"/>
   <updated>2011-09-14T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/09/14/cpp-filt</id>
   <content type="html">&lt;p&gt;
&lt;span style=&quot;font-family:&#39;Times New Roman&#39;;font-size:16px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div style=&quot;background-color:transparent;&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:Arial;color:rgb(0,0,0);background-color:rgb(255,255,255);font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;strong&gt;c&amp;#043;&amp;#043;filt&lt;br /&gt;
&lt;span style=&quot;font-family:Arial;font-size:15px;white-space:pre-wrap;&quot;&gt;decodes (demangles) low-level names into user-level names so that the linker can keep these overloaded functions from clashing.&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;background-color:transparent;&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:Arial;color:rgb(0,0,0);background-color:rgb(255,255,255);font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;background-color:transparent;&quot;&gt;&lt;span id=&quot;internal-source-marker_0.33872447651810944&quot; style=&quot;font-size:9pt;font-family:Arial;color:rgb(0,0,0);background-color:rgb(255,255,255);font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;You&lt;br /&gt;
 may use &lt;/span&gt;&lt;strong&gt;c&amp;#043;&amp;#043;filt &lt;/strong&gt;&lt;span style=&quot;font-size:9pt;font-family:Arial;color:rgb(0,0,0);background-color:rgb(255,255,255);font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;to demangle&lt;br /&gt;
 the symbols.&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-size:9pt;font-family:Arial;color:rgb(0,0,0);background-color:rgb(255,255,255);font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-size:9pt;font-family:Arial;color:rgb(0,0,0);background-color:rgb(238,238,238);font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;$ c&amp;#043;&amp;#043;filt _ZNSt8ios_base4InitD1Ev&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-size:9pt;font-family:Arial;color:rgb(0,0,0);background-color:rgb(238,238,238);font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;std::ios_base::Init::~Init()&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-size:9pt;font-family:Arial;color:rgb(0,0,0);background-color:rgb(255,255,255);font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-size:9pt;font-family:Arial;color:rgb(0,0,0);background-color:rgb(255,255,255);font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;You may try adding&lt;br /&gt;
&lt;/span&gt;&lt;strong&gt;-lstdc&amp;#043;&amp;#043;&lt;/strong&gt;&lt;span style=&quot;font-size:9pt;font-family:Arial;color:rgb(0,0,0);background-color:rgb(255,255,255);font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt; to your link command&lt;br /&gt;
 to resolve the issue.&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-size:11pt;font-family:Arial;color:rgb(0,0,0);background-color:transparent;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;strong&gt;&lt;a href=&quot;http://sources.redhat.com/binutils/docs-2.15/binutils/c--filt.html#c++filt&quot;&gt;c&amp;#043;&amp;#043;filt&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;span style=&quot;font-size:11pt;font-family:Arial;color:rgb(0,0,0);background-color:transparent;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;smallexample&quot; style=&quot;font-size:undefined;&quot;&gt;     c&amp;#043;&amp;#043;filt [&lt;code&gt;-_&lt;/code&gt;|&lt;code&gt;--strip-underscores&lt;/code&gt;]
             [&lt;code&gt;-j&lt;/code&gt;|&lt;code&gt;--java&lt;/code&gt;]
             [&lt;code&gt;-n&lt;/code&gt;|&lt;code&gt;--no-strip-underscores&lt;/code&gt;]
             [&lt;code&gt;-p&lt;/code&gt;|&lt;code&gt;--no-params&lt;/code&gt;]
             [&lt;code&gt;-s&lt;/code&gt; &lt;var&gt;format&lt;/var&gt;|&lt;code&gt;--format=&lt;/code&gt;&lt;var&gt;format&lt;/var&gt;]
             [&lt;code&gt;--help&lt;/code&gt;]  [&lt;code&gt;--version&lt;/code&gt;]  [&lt;var&gt;symbol&lt;/var&gt;...]
     &lt;/pre&gt;
&lt;p&gt;The C&amp;#043;&amp;#043; and Java languages provides function overloading, which means that you can write many functions with the same name (providing each takes parameters of different types). All C&amp;#043;&amp;#043; and Java function names are encoded into a low-level assembly label (this&lt;br /&gt;
 process is known as&amp;nbsp;mangling). The&amp;nbsp;&lt;code&gt;c&amp;#043;&amp;#043;filt&lt;/code&gt;&amp;nbsp;&lt;a rel=&quot;footnote&quot; href=&quot;http://sources.redhat.com/binutils/docs-2.15/binutils/c--filt.html#fn-1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&amp;nbsp;program does the inverse mapping: it decodes (demangles) low-level&lt;br /&gt;
 names into user-level names so that the linker can keep these overloaded functions from clashing.&lt;/p&gt;
&lt;p&gt;Every alphanumeric word (consisting of letters, digits, underscores, dollars, or periods) seen in the input is a potential label. If the label decodes into a C&amp;#043;&amp;#043; name, the C&amp;#043;&amp;#043; name replaces the low-level name in the output.&lt;/p&gt;
&lt;p&gt;You can use&amp;nbsp;&lt;code&gt;c&amp;#043;&amp;#043;filt&lt;/code&gt;&amp;nbsp;to decipher individual symbols:&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;     c&amp;#043;&amp;#043;filt &lt;var&gt;symbol&lt;/var&gt;
     &lt;/pre&gt;
&lt;p&gt;If no&amp;nbsp;&lt;var&gt;symbol&lt;/var&gt;&amp;nbsp;arguments are given,&amp;nbsp;&lt;code&gt;c&amp;#043;&amp;#043;filt&lt;/code&gt;&amp;nbsp;reads symbol names from the standard input and writes the demangled names to the standard output. All results are printed on the standard output.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;-_&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;--strip-underscores&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;On some systems, both the C and C&amp;#043;&amp;#043; compilers put an underscore in front of every name. For example, the C name&amp;nbsp;&lt;code&gt;foo&lt;/code&gt;&amp;nbsp;gets the low-level name&amp;nbsp;&lt;code&gt;_foo&lt;/code&gt;. This option removes the initial underscore. Whether&amp;nbsp;&lt;code&gt;c&amp;#043;&amp;#043;filt&lt;/code&gt;&amp;nbsp;removes&lt;br /&gt;
 the underscore by default is target dependent.&amp;nbsp;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;-j&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;--java&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Prints demangled names using Java syntax. The default is to use C&amp;#043;&amp;#043; syntax.&amp;nbsp;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;-n&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;--no-strip-underscores&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Do not remove the initial underscore.&amp;nbsp;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;-p&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;--no-params&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;When demangling the name of a function, do not display the types of the function&#39;s parameters.&amp;nbsp;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;-s&amp;nbsp;&lt;/code&gt;&lt;var&gt;format&lt;/var&gt;&lt;code&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;--format=&lt;/code&gt;&lt;var&gt;format&lt;/var&gt;&lt;code&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;c&amp;#043;&amp;#043;filt&lt;/code&gt;&amp;nbsp;can decode various methods of mangling, used by different compilers. The argument to this option selects which method it uses:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Automatic selection based on executable (the default method)&amp;nbsp;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;gnu&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the one used by the&amp;nbsp;&lt;small&gt;GNU&lt;/small&gt;&amp;nbsp;C&amp;#043;&amp;#043; compiler (g&amp;#043;&amp;#043;)&amp;nbsp;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;lucid&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the one used by the Lucid compiler (lcc)&amp;nbsp;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;arm&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the one specified by the C&amp;#043;&amp;#043; Annotated Reference Manual&amp;nbsp;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;hp&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the one used by the HP compiler (aCC)&amp;nbsp;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;edg&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the one used by the EDG compiler&amp;nbsp;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;gnu-v3&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the one used by the&amp;nbsp;&lt;small&gt;GNU&lt;/small&gt;&amp;nbsp;C&amp;#043;&amp;#043; compiler (g&amp;#043;&amp;#043;) with the V3 ABI.&amp;nbsp;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;java&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the one used by the&amp;nbsp;&lt;small&gt;GNU&lt;/small&gt;&amp;nbsp;Java compiler (gcj)&amp;nbsp;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;gnat&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the one used by the&amp;nbsp;&lt;small&gt;GNU&lt;/small&gt;&amp;nbsp;Ada compiler (GNAT).&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;--help&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Print a summary of the options to&amp;nbsp;&lt;code&gt;c&amp;#043;&amp;#043;filt&lt;/code&gt;&amp;nbsp;and exit.&amp;nbsp;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;--version&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Print the version number of&amp;nbsp;&lt;code&gt;c&amp;#043;&amp;#043;filt&lt;/code&gt;&amp;nbsp;and exit.&lt;/dd&gt;
&lt;/dl&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;Warning:&lt;/em&gt;&amp;nbsp;&lt;code&gt;c&amp;#043;&amp;#043;filt&lt;/code&gt;&amp;nbsp;is a new utility, and the details of its user interface are subject to change in future releases. In particular, a command-line option may be required in the the future to decode a name passed as an argument&lt;br /&gt;
 on the command line; in other words,&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;          c&amp;#043;&amp;#043;filt &lt;var&gt;symbol&lt;/var&gt;
          &lt;/pre&gt;
&lt;p&gt;may in a future release become&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;          c&amp;#043;&amp;#043;filt &lt;var&gt;option&lt;/var&gt; &lt;var&gt;symbol&lt;/var&gt;
          &lt;/pre&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;footnote&quot;&gt;
&lt;hr /&gt;
&lt;h4&gt;Footnotes&lt;/h4&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;a name=&quot;fn-1&quot;&gt;&lt;/a&gt;
&lt;p&gt;MS-DOS does not allow&amp;nbsp;&lt;kbd&gt;&amp;#043;&lt;/kbd&gt;&amp;nbsp;characters in file names, so on MS-DOS this program is named&amp;nbsp;&lt;code&gt;cxxfilt&lt;/code&gt;.&lt;/p&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;span style=&quot;font-size:11pt;font-family:Arial;color:rgb(0,0,0);background-color:transparent;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>RHEL5和RHEL6中的sctp_event_subscribe定义大不同</title>
   <link href="http://bo-yang.github.com//2011/08/24/sctp_event_subscribe-in-RHEL"/>
   <updated>2011-08-24T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/08/24/sctp_event_subscribe-in-RHEL</id>
   <content type="html">&lt;/p&gt;
&lt;p&gt;近来碰到一个关于SCTP的问题：某个产品跑在Monta Vista上，其内核版本号为2.6.21；可每次该产品泡在我们的Red Hat Enterprise Linux 5.5上时，都会报错错误信息如下：
&lt;pre&gt;^?0 2011-08-16 09:11:57.316267 coolnjmcl018 AMMServ 26555[26566] ../com/AMMSSctpLib.cc,369 [EAMMS1315] AMMSSctpLib::ammsSetSockOpt() setsockopt - Invalid argument
^?1 2011-08-16 09:11:57.316326 coolnjmcl018 AMMServ 26555[26566] ../com/AMMSAccessServer.cc,779 [EAMMS1036] AMMSAccessServer::setSocketOpts(): failed to set SCTP_EVENTS for socket 6&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;ammsSetSockOpt()调用了Linux API setsockopt()。产品的同事告诉我们他们升级过libsctp.so，于是我们copy了MV中的这个shared lib到RHEL中，问题依旧。后来我们以为是RHEL5.5的内核和Monta Vista的内核不一致，于是我把RHEL的内核从2.6.18-194.el5升级到2.6.18-238.9.1.el5，问题还在。当我们还在考虑要不要把我们的server替换为Monta Vista时，一位同事受&lt;a href=&quot;http://centos.org/modules/newbb/viewtopic.php?viewmode=threaded&amp;amp;order=ASC&amp;amp;topic_id=18994&amp;amp;forum=37&amp;amp;move=next&amp;amp;topic_time=1236769500&quot;&gt;http://centos.org/modules/newbb/viewtopic.php?viewmode=threaded&amp;amp;order=ASC&amp;amp;topic_id=18994&amp;amp;forum=37&amp;amp;move=next&amp;amp;topic_time=1236769500&lt;/a&gt;&lt;br /&gt;
 的启发，把setsockopt()最后一个参数由sizeof(events)改为8，竟然成功了！ events定义如下。
&lt;pre&gt;struct sctp_event_subscribe events; &lt;/pre&gt;&lt;/p&gt;
&lt;pre&gt;&lt;/pre&gt;
&lt;p&gt;最终，发现RHEL5和RHEL6中struct&lt;span style=&quot;font-family:&#39;Times New Roman&#39;;font-size:13px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family:monospace;white-space:pre;background-color:rgb(240,240,240);&quot;&gt;sctp_event_subscribe&lt;/span&gt;的定义竟然完全不同！要想根本解决上面的问题，只能升级操作系统到RHEL6了。&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;RHEL5中的定义：&lt;a href=&quot;http://rhkernel.org/RHEL5+2.6.18-194.el5/include/net/sctp/user.h#L367&quot;&gt;http://rhkernel.org/RHEL5&amp;#043;2.6.18-194.el5/include/net/sctp/user.h#L367&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;
&lt;pre&gt;/*
 364 * Described in Section 7.3
 365 *   Ancillary Data and Notification Interest Options
 366 */
 367struct sctp_event_subscribe {
 368        __u8 sctp_data_io_event;
 369        __u8 sctp_association_event;
 370        __u8 sctp_address_event;
 371        __u8 sctp_send_failure_event;
 372        __u8 sctp_peer_error_event;
 373        __u8 sctp_shutdown_event;
 374        __u8 sctp_partial_delivery_event;
 375        __u8 sctp_adaption_layer_event;
 376};&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;RHEL 6中的定义：&lt;a href=&quot;http://rhkernel.org/RHEL6+2.6.32-71.18.2.el6/include/net/sctp/user.h#L406&quot;&gt;http://rhkernel.org/RHEL6&amp;#043;2.6.32-71.18.2.el6/include/net/sctp/user.h#L406&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;
&lt;pre&gt;/*
 403 * Described in Section 7.3
 404 *   Ancillary Data and Notification Interest Options
 405 */
 406struct sctp_event_subscribe {
 407        __u8 sctp_data_io_event;
 408        __u8 sctp_association_event;
 409        __u8 sctp_address_event;
 410        __u8 sctp_send_failure_event;
 411        __u8 sctp_peer_error_event;
 412        __u8 sctp_shutdown_event;
 413        __u8 sctp_partial_delivery_event;
 414        __u8 sctp_adaptation_layer_event;
 415        __u8 sctp_authentication_event;
 416};
 417&lt;/pre&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Displacement Activity</title>
   <link href="http://bo-yang.github.com//2011/08/02/displacement-activity"/>
   <updated>2011-08-02T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/08/02/displacement-activity</id>
   <content type="html">&lt;p&gt;
&lt;span style=&quot;font-family:&#39;Times New Roman&#39;;font-size:16px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div style=&quot;font-family:Arial;background-color:rgb(255,255,255);overflow-y:scroll;word-wrap:break-word;word-break:break-all;line-height:1.6;font-size:14px;margin:1px 4px 2px 2px;&quot;&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;你是否有过这样的经历：&amp;#30524;看考试或某个任务、活动的大限将至，自己很是担心，可你却不是在努力准备，而是看电影、玩游戏或者和朋友聊天？ 至少对于我，这样的矛盾行为并不罕见。今天才知道，这种行为叫做Displacement Activity，是人和动物身上的一种普遍存在的行为。&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;Displacement Activity貌&amp;#20284;还没有确切的中文翻译，有在线词典译作“替换行为”，个人认为翻译不准确，不予采纳。根据我的理解，&lt;span style=&quot;font-family:楷体_GB2312;color:#ff0000;line-height:1.3em;&quot;&gt;&lt;strong&gt;Displacement Activity就是当你不得不去做某件事情的时候，你担心会失败于是产生一种不去做的消极心态，当你无法做出一个做还是不做的决定时，纠结中你下意识得选择逃避——不由自主的做一些让自己感觉舒服（但很明显不在状态）的事情，比如吃饭、看电影、睡觉、玩游戏、逛街等等。恰恰由于你的逃避，往往会使事情办的更糟，所以等到下一个你不得不面对的抉择时，你的这种表现会更严重，由此造成恶性的循环往复……&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;个人感觉Displacement Activity还是心理不够强大的表现。真的强者不会有这种表现的。悲哀的是这种状态已伴随我十几年，至少在高中时就有这种表现，目前看来已经越来越严重了。我能想到的解决这种现象的根本方法就是：1. 深入研究你要做的事情，搞清楚你要做什么，想清楚怎么做，多看一些别人成功的经验（以及别人失败的教训，当然这种东西比较少了）；2. 制定一个达到目标所需要的可行的计划；3. 每天坚持执行你的计划；4.&lt;br /&gt;
 尽量不要调整你的计划。这只是一个设想，目前本人还没有真正实践过。&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;下面是搜集的相关解释。&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;strong&gt;Displacement Activities are behaviors that animals(including human beings) have conflicting drives. Such behaviors are completely out of place.&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;strong&gt;Displacement behavior is usually thought of as self-grooming, touching, or scratching, which is displayed when an animal has a conflict between two drives, such as the desire to approach an object, while&lt;br /&gt;
 at the same time being fearful of that object.&amp;nbsp;&lt;/strong&gt;With the fall of drive theory into disfavor, animal behaviorists paid little attention to displacement behavior until Maestripieri et al. (1992) pointed out that displacement behavior might be a good&lt;br /&gt;
 measure of anxiety levels.&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;------------------------------&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;From Wiki:&amp;nbsp;&lt;a href=&quot;http://en.wikipedia.org/wiki/Displacement_activity&quot; target=&quot;_blank&quot; style=&quot;border-color:rgb(255,255,255);border-style:solid;border-width:0;&quot;&gt;http://en.wikipedia.org/wiki/Displacement_activity&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;strong&gt;A displacement activity is the result of two contradicting instincts in a particular situation.&amp;nbsp;&lt;/strong&gt;Birds, for example, may peck at grass when uncertain whether to attack or flee from an opponent;&lt;br /&gt;
 similarly, a human may scratch his or her head when they do not know which of two options to choose.&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;strong&gt;Displacement activities often involve actions to bring comfort such as scratching, drinking or feeding.&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;The first description of a displacement activity (though not the use of the term) is probably by Julian Huxley in 1914. The subsequent development of research on displacement activities was a direct consequence&lt;br /&gt;
 of Konrad Lorenz&#39;s works on instincts. However, the first mentions of the phenomenon came in 1940 by the two Dutch researchers Nikolaas Tinbergen and Adriaan Kortlandt.&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;---------------------------&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;From&amp;nbsp;&lt;a href=&quot;http://c2.com/cgi/wiki?DisplacementActivity&quot; target=&quot;_blank&quot; style=&quot;border-color:rgb(255,255,255);border-style:solid;border-width:0;&quot;&gt;http://c2.com/cgi/wiki?DisplacementActivity&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;strong&gt;Activity undertaken when some more important task&#39;s deadline is looming.&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;When I was studying for my final degree examinations I played more bridge than ever before. That was pretty much a pure DisplacementActivity.&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;I&#39;m wondering how much other authors and programmers suffer from this weakness -- SteveHolden&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;----------------------------&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;From&amp;nbsp;&lt;a href=&quot;http://baillement.com/displacement-delius.html&quot; target=&quot;_blank&quot; style=&quot;border-color:rgb(255,255,255);border-style:solid;border-width:0;&quot;&gt;http://baillement.com/displacement-delius.html&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;In 1940 Tinbergen and Kortlandt independently drew attention to a behavioural phenomenon which has since been called displacement activity and has received a good deal of attention. Although no binding rules exist&lt;br /&gt;
 by which displacement behaviour can be recognized, the term is applied to behaviour patterns which appear to be out of context with the behaviour which closely precedes or follows them either in the sense that they do not seem functionally integrated with&lt;br /&gt;
 the preceding or following behaviour or that they occur in situations in which causal factors usually responsible for them appear to be absent or at least weak compared with those determining the behavioural envelope.&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;strong&gt;Displacement activities occur in three situations: motivational, conflict, frustration of consummatory acts and physical thwarting of performance.&lt;/strong&gt;&amp;nbsp;Several theories have been put forward to explain&lt;br /&gt;
 the causal mechanism involved. A variety of behaviour patterns have been reported as displacement activities, even in a single species, but this variety needs revision.&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top:0;margin-bottom:.5em;&quot;&gt;Monographie treatments of the behaviour of any one species usually indicate only two or three activities which according te the judgment of the observer occur commonly as displacement. None of the theories on displacement&lt;br /&gt;
 activities gives cogent reasons why particular behaviour patterns should be more common than others as displacement activities, apart from stating that the causal agents which usually elicit them in non-displacement situations can also be presumed te be present,&lt;br /&gt;
 if only weakly, in the displacement context, or remarking that those patterns are prepotent in the repertoire of the animal.&lt;/p&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Immaneul Kant's Philosophy of Morality</title>
   <link href="http://bo-yang.github.com//2011/07/26/immaneul-kants-philosophy-of-morality"/>
   <updated>2011-07-26T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/07/26/immaneul-kants-philosophy-of-morality</id>
   <content type="html">&lt;p&gt;Following are part of my notes of the famous Harvard open course &lt;strong&gt;&lt;em&gt;Justice&lt;/em&gt;&lt;/strong&gt;. Kant&#39;s theory is too hard to be understood in a shot time. I think the best way is to record his main idea and try to digest in the future.&lt;/p&gt;
&lt;p&gt;===============================================================================================&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Part 1  Kant&#39;s Conception of Freedom&lt;/p&gt;
&lt;p&gt;&lt;/strong&gt;Kant thinks that the individual person, all human beings, have a certain dignity that commands our respect.&lt;/p&gt;
&lt;p&gt;The reason the individual is sacred or the bearer of rights, doesn&#39;t stem from the idea that we own ourselves, but instead from the we are all rational beings, which means we are beings who are capable of reason.&lt;/p&gt;
&lt;p&gt;We are also autonomous beings, which is to say that we are beings capable of acting and choosing freely.&lt;/p&gt;
&lt;p&gt;The capacity of reason and freedom, isn&#39;t the only capacity we have. It is our rational capacity that makes our distinctive.&lt;/p&gt;
&lt;p&gt;Freedom is the opposite of necessity.&lt;/p&gt;
&lt;p&gt;Kant&#39;s Conception of Freedom&lt;br /&gt;
Autonomy:&lt;br /&gt;
To act freely (= to act autonomously =)&lt;br /&gt;
To act according to a law I give myself&lt;br /&gt;
Heteronomy:&lt;br /&gt;
To act according to desires I haven&#39;t chosen myself&lt;/p&gt;
&lt;p&gt;To act freely is not to choose the best means to a given end; it&#39;s choose the end itself for its own sake. In so far we act on inclination or pursue pleasure, we act as means to the realization of ends given outside of us. We are instruments rather than  authors of the purposes we pursue, that&#39;s the heteronymous determination of the will.&lt;br /&gt;
On the other hand, in so fas as we act autonomously, according to a law we give ourselves, we do something for its own sake as an end in itself. When we act autonomously, wee seems to be instruments to purposes given outside us, we become as ends in ourselves. This capacity to act freely, is what gives human life its special dignity.&lt;br /&gt;
Respecting human dignity means regarding persons not just as means, but also as ends in themselves. This is why it is wrong to use people for the sake of other people&#39;s well-being or happiness. This is the real reason that utilitarianism goes wrong.&lt;/p&gt;
&lt;p&gt;------------------------------------&lt;br /&gt;
&lt;strong&gt;Part 2. Kant&#39;s Conception of Morality&lt;/p&gt;
&lt;p&gt;&lt;/strong&gt;Kant&#39;s Conception of Morality&lt;br /&gt;
*moral worth of an action depends on motive (do the right thing for the right reason, or for the sake of duty)&lt;/p&gt;
&lt;p&gt;What makes an action morally worthy, consists not in the consequences or in the results that flow from it, what makes an action morally worthy has to do with the motive, with the quality of the will, with the Intention for which the act is done. What matters is the motive, and the motive must be of a certain kind.&lt;/p&gt;
&lt;p&gt;A good will isn&#39;t good because of what it effects or accomplishes, it&#39;s good in itself. Even if by utmost effort the good will accomplishes nothing it would still shine like a jewel for it&#39;s own sake as something which has it&#39;s full value in itself. -- Immanuel Kant&lt;br /&gt;
The idea is that the motive confers the moral worth on an action and the only kind of motive that can confer moral worth on an action is the motive of duty.&lt;br /&gt;
The opposite of acting out of duty, is all of the motives having to do with our inclinations. Inclinations refer to all of our desires, all of our contingently given wants, preferences, impulses, and the like.&lt;br /&gt;
Only actions done for the sake of the moral law, for the sake of duty, only these actions have moral duty.&lt;/p&gt;
&lt;p&gt;-------------------------------&lt;br /&gt;
&lt;strong&gt;Part 3. Kant&#39;s Conception of Supreme Morality&lt;/p&gt;
&lt;p&gt;&lt;/strong&gt;What&#39;s the supreme principle of morality?&lt;br /&gt;
Only one kind of motive is consistent with morality, the motive of duty, doing the right thing for the right reason. Other motives are summed up by Kant in the category of inclination.&lt;br /&gt;
Every thine the motive for what we do is to satisfy a desire or a preference that we may have, to pursue some interest, we are acting of inclination.&lt;br /&gt;
It&#39;s fine to have sentiments and feelings that support the right thing provided they don&#39;t provide the reason for acting. One may have more than one motive, but it doesn&#39;t mean that the action is devoid of moral worth, just because he has one other motive -- the motive which involves duty is what gives the moral worth.&lt;/p&gt;
&lt;p&gt;Kant&#39;s Three Contrasts:&lt;br /&gt;
(MORALITY) Motives:                         Duty vs. Inclination&lt;br /&gt;
(FREEDOM)  Determination of will :   autonomous  vs. Heteronomous&lt;br /&gt;
(REASON) Imperatives:                      Categorical vs. Hypothetical&lt;/p&gt;
&lt;p&gt;If reason determines my will, then the will becomes a power to choose indecent of the dictates of nature, or inclination or circumstance. So, connected with Kant&#39;s demanding notions of morality and freedom, is a specially demanding notion of reason.&lt;/p&gt;
&lt;p&gt;How can reason determine the will?&lt;br /&gt;
There are two ways. There are two different commands of reason. One is an imperative. An imperative is an *ought*.&lt;br /&gt;
One kind of imperative, perhaps the most familiar kind, is a *hypothetical* imperative. Hypothetical imperatives use instrumental reason. If want X then do y. It&#39;s means-ends reason.&lt;br /&gt;
If the action would be good solely as a means to something else, the imperative is hypothetical; if the action is represented as good in itself and therefore as necessary... for a will which of itself accords with reason, then the imperative is *categorical*.&lt;/p&gt;
&lt;p&gt;What is the categorical imperative? What is the supreme principle of morality? What does it command of us?&lt;br /&gt;
THE CATEGORICAL IMPERATIVE&lt;br /&gt;
(1) The Formula of Universal Law&lt;br /&gt;
Act only on that maxim whereby you can at the same time will that is should become a universal law. &quot;the maxim&quot;, he means a rule that explains the reason for what you are doing, a principle. For example, promise keeping.&lt;br /&gt;
And the test, the way we can determine that the false promise is at odds with the categorical imperative, is try to universalize it, universalize the maxim upon which you are about to act. If the maxim universalized would undermine itself, then it&#39;s not categorical.&lt;/p&gt;
&lt;p&gt;(2) The Formula of Humanity as End&lt;br /&gt;
We can&#39;t base the categorical imperative on any particular interests, purposes, or ends, because then it would be only relative to the person whose ends they were. But suppose, however, there were something whose existence has in itself an absolute value.... an end in itself.... then in it, and in it alone, would there be the ground of a possible categorical imperative.&lt;br /&gt;
&quot;I say that man, and in general every rational being, exists as an end in himself, not merely as a means for arbitrary used by this or that will.&quot; -- Kant&lt;/p&gt;
&lt;p&gt;Act in such a way that you always treat humanity, whether in your own person or in the person of any other, never simply as a means, but always at the same time, as an end.&lt;/p&gt;
&lt;p&gt;Respect is respect for humanity which is universal, for a rational capacity which is universal, and that&#39;s why violating it, in my own case, is as objectionable as violating it in the case of any other.&lt;/p&gt;
&lt;p&gt;-------------------------------&lt;br /&gt;
&lt;strong&gt;Part 4. The Application of Kant&#39; Categorical Imperative on Lying&lt;/p&gt;
&lt;p&gt;&lt;/strong&gt;How is a categorical imperative possible? How is morality possible?&lt;/p&gt;
&lt;p&gt;&quot;when we think of ourselves as free, we transfer ourselves into the intelligible world as members and recognize the autonomy of the will.&quot; --immanuel Kant&lt;br /&gt;
Only because the idea of freedom makes me a member of an intelligible world, the categorical imperative is possible.&lt;/p&gt;
&lt;p&gt;Since we inhabits simultaneously the two standpoints, the two realms, the realm of freedom and the realm of necessity, there is always potentially a gap between what we do and what we ought to to, between is and ought.&lt;br /&gt;
Morality is not empirical. Whatever you see in the world, whatever you discover through science, can&#39;t decide moral questions. Morality stands at a certain distance from the world, from the empirical world. That&#39;s why no science could deliver moral truth.&lt;/p&gt;
&lt;p&gt;From Kant&#39;s point of view, there actually is a world of difference between a lie and a misleading truth.&lt;/p&gt;
&lt;p&gt;White lie 善意的谎言&lt;br /&gt;
Kant preferred leading truth(误导的真相) to a white lie.&lt;br /&gt;
Unlike a falsehood, unlike a lie, a misleading truth pays a certain homage to duty.&lt;/p&gt;
&lt;p&gt;-----------------------------------&lt;br /&gt;
&lt;strong&gt;Part 5  The Application of Kant&#39;s Categorical Imperative On Contract&lt;/p&gt;
&lt;p&gt;&lt;/strong&gt;Just laws arise from a certain kind of social contract, which is of an exceptional nature. What makes the contract exceptional is that it is not an actual contract, that happens when people come together and try to figure out what the constitution should be. That the contract generates justice is an idea of reason.&lt;/p&gt;
&lt;p&gt;A contract that generates principles of right is merely an idea of reason, but it has undoubted practical reality, because it can oblige every legislator to frame his laws in such a way that they could have been produced by the united will of the whole nation.&lt;/p&gt;
&lt;p&gt;&quot;Each person possesses an inviolability founded on justice that even the welfare of society as a whole cannot override... The rights secured by justice are not subject to political bargaining or to the calculus of social interests.&quot; -- John Rawls&lt;/p&gt;
&lt;p&gt;Moral Force of Actual Contracts&lt;br /&gt;
1. How do they bind or obligate?&lt;br /&gt;
(1) consent-based -&amp;gt; AUTONOMY(自律)&lt;br /&gt;
(2) benefit- based -&amp;gt; RECIPROCITY(互惠) : contracts sometimes bind us in so far as they are instruments of mutual benefit.&lt;/p&gt;
&lt;p&gt;2. How do they justify the terms they produce?&lt;br /&gt;
Actual contracts are not self-sufficient moral instruments of any actual contract or agreement. The fact of the agreement never guarantees the fairness of the agreement.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>选中Excel单元格自动导入多个Excel worksheets</title>
   <link href="http://bo-yang.github.com//2011/07/13/merge-excel-sheets-2"/>
   <updated>2011-07-13T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/07/13/merge-excel-sheets-2</id>
   <content type="html">&lt;p&gt;前日完成&lt;a href=&quot;http://blog.csdn.net/bonny95/article/details/6597776&quot;&gt;将多个Excel文件批量导入某个Excel文件中&lt;/a&gt;老婆规定的任务后，老婆又提出了新的要求：&lt;/p&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以update每个worksheet&lt;/li&gt;
&lt;li&gt;对导入的worksheets进行排序&lt;/li&gt;
&lt;li&gt;自动匹配代导入文件的文件名&lt;/li&gt;
&lt;li&gt;将导入的worksheets中的特定多个单元&amp;#26684;（cells）的内容自动填充到某一表&amp;#26684;的特定区域&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#ff0000;&quot;&gt;本文中用到的Excel文件及VBA宏可以在&lt;a href=&quot;http://download.csdn.net/detail/bonny95/3438424&quot;&gt;此处&lt;/a&gt;下载。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table border=&quot;1&quot; width=&quot;200&quot; cellspacing=&quot;1&quot; cellpadding=&quot;1&quot; style=&quot;text-align:center;&quot;&gt;
&lt;caption&gt;&lt;span style=&quot;font-size:16px;&quot;&gt;表1 &amp;nbsp;选中的单元&amp;#26684;&lt;/span&gt;&lt;br /&gt;
&lt;/caption&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;工作表 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;工作表 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;3&lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;工作表 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;4&lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;工作表 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;5&lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;工作表 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;6&lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;工作表 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;7&lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;工作表 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;8&lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;工作表 8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;9&lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;工作表 9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;10&lt;/td&gt;
&lt;td style=&quot;text-align:center;&quot;&gt;工作表 10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;对应的各个worksheet的名字(Name)是：&lt;em&gt;01&amp;nbsp;工作表 1，&amp;nbsp;02&amp;nbsp;工作表 2，03&amp;nbsp;工作表 3，……，10&amp;nbsp;工作表 10.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;img src=&quot;http://bonny95.files.wordpress.com/2011/07/0_1310521133c6e4.gif&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;待导入的Excel文件的名字为“&lt;em&gt;02 某某银行XX项目_工作表 1_20110701.xls&lt;/em&gt;”。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:#ff0000;&quot;&gt;&lt;em&gt;Update 2011-07-13 21:50&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;应老婆的要求，更新了程序，遇到并解决的问题有：&lt;/p&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Office 2003和2007不兼容——有些method在office2003中正常工作但在office2007中却不再支持，如判定某文件是否存在的函数，解决方法参见&lt;span style=&quot;font-family:monospace;white-space:pre-wrap;background-color:rgb(240,240,240);&quot;&gt;FindFileName函数。&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;如果某个表中的一些单元&amp;#26684;被筛选，则会遇到“不能复制合并的单元&amp;#26684;”(Can&#39;t copy merged cell)的问题，解决方法就是在copy前强制关闭autofilter: &amp;nbsp;&amp;nbsp;&lt;span style=&quot;font-family:monospace;white-space:pre-wrap;background-color:rgb(240,240,240);&quot;&gt;newWB.Sheets(SheetToBeCopy).AutoFilterMode = False &#39; disable auto filter&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-family:monospace;&quot;&gt;&lt;span style=&quot;white-space:pre-wrap;&quot;&gt;关闭打开的Excel文件或者copy单元&amp;#26684;时会有各种各样的对话框弹出来，解决办法就是加上下面语句：&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span style=&quot;font-family:monospace;&quot;&gt;&lt;span style=&quot;white-space:pre-wrap;&quot;&gt;&lt;span style=&quot;font-family:monospace;white-space:pre;background-color:rgb(240,240,240);&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre style=&quot;word-wrap:break-word;white-space:pre-wrap;&quot;&gt;&lt;span style=&quot;font-family:monospace;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;pre style=&quot;word-wrap:break-word;white-space:pre-wrap;&quot;&gt;Application.DisplayAlerts = True&lt;/pre&gt;
&lt;pre style=&quot;word-wrap:break-word;white-space:pre-wrap;&quot;&gt;newWB.Close SaveChanges:=False  &#39; close without change
Application.DisplayAlerts = True&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;span style=&quot;color:#ff0000;&quot;&gt;Update 2011-07-14 15:37&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;傻瓜型用户的需求就是无穷无尽啊……我老婆发现在选择不连续的区域时，只有第一个区域会被处理，其他的没有变化。顶着挨骂的压力Google之后才知道，原来Slection.Areas可以包含所有不连续的选择，然后通过遍历，处理所有的选择……程序改动如下。&lt;/p&gt;&lt;/p&gt;
&lt;pre&gt;       &#39; Create new worksheets
        &#39; Discontinuous selection is supported by Selection.Areas
        For Each Rng In Selection.Areas
            Set SelRange = Rng.Cells
            Set ColNo = Rng.Columns(1)
            Set ColDepart = Rng.Columns(2)
            idx = 1
            For Each cell In ColDepart.Cells
                no_str = ColNo.Cells(idx).Value
                If Len(no_str) = 1 Then
                    no_str = &amp;quot;0&amp;quot; + no_str
                End If
                Call CreateNewWorksheet(no_str, cell.Value, myFolder, SheetToBeCopy) &#39; call is needed here
                idx = idx + 1
            Next
        Next&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;实现以上所有需求的代码如下（&lt;em&gt;&lt;span style=&quot;color:#ff0000;&quot;&gt;Update 2011-07-14 15:37&lt;/span&gt;&lt;/em&gt;）：&lt;/p&gt;&lt;/p&gt;
&lt;pre&gt;&amp;lt;span style=&quot;font-family: &#39;Times New Roman&#39;;font-size:16px; &quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;pre style=&quot;word-wrap: break-word; white-space: pre-wrap; &quot;&amp;gt;                                         
Option Explicit
Dim curWS As Worksheet


Sub LoadWorksheets()
&#39;
&#39; LoadWorksheets Macro
&#39; Macro recorded 7/13/2011 by Bo Yang
&#39;
&#39; Keyboard Shortcut: Ctrl+Shift+L
&#39;
&#39; *How to use this macro?*
&#39; *Select columns &amp;quot;??(NO)&amp;quot; and &amp;quot;??(Deparment)&amp;quot; and then run this macro.*
&#39;
&amp;nbsp; &amp;nbsp; Application.ScreenUpdating = False &amp;nbsp;&#39; stop screen flickering
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; &#39; Create new sheets according to selected cells and copy the
&amp;nbsp; &amp;nbsp; &#39; contebts of other files into the new sheets
&amp;nbsp; &amp;nbsp; Dim YesNo As Variant, myFolder As String, MyLF As String
&amp;nbsp; &amp;nbsp; Dim SelRange As Range, ColNo As Range, ColDepart As Range, cell As Range, Rng As Range
&amp;nbsp; &amp;nbsp; Dim SheetName As String, SheetToBeCopy As String
&amp;nbsp; &amp;nbsp; Dim ColCnt As Integer
&amp;nbsp; &amp;nbsp; Dim no_str As String, idx As Integer
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; myFolder = &amp;quot;D:&amp;quot; &amp;nbsp; &#39;*****Change this value as you need*****
&amp;nbsp; &amp;nbsp; SheetToBeCopy = &amp;quot;信息资产风险评估&amp;quot; &amp;nbsp;&#39; *****Change this value as you need*****
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; MyLF = Chr(10) &amp;amp; Chr(13) &amp;nbsp; &amp;nbsp;&#39; a line feed command
&amp;nbsp; &amp;nbsp; Set curWS = ThisWorkbook.ActiveSheet &#39; Save current worksheet
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; &#39; check that if user select valid columns
&amp;nbsp; &amp;nbsp; ColCnt = Selection.Columns.Count
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; If ColCnt &amp;lt;&amp;gt; 2 Then
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MsgBox (&amp;quot;Please select 2 columns!!!&amp;quot; &amp;amp; MyLF &amp;amp; _
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;The first column must be digital numbers,&amp;quot; &amp;amp; MyLF &amp;amp; _
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;And the Second column must be department names&amp;quot; _
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; )
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Exit Sub
&amp;nbsp; &amp;nbsp; End If
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; YesNo = MsgBox(&amp;quot;This Macro is going to create new worksheets according to your selected cells.&amp;quot; &amp;amp; MyLF &amp;amp; _
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;Do you want to continue?&amp;quot;, _
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; vbYesNo, &amp;quot;Caution&amp;quot;)
&amp;nbsp; &amp;nbsp; Select Case YesNo
&amp;nbsp; &amp;nbsp; Case vbYes
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; myFolder = InputBox(&amp;quot;Please enter the folder where all your Excel files locates:&amp;quot;, Default:=myFolder)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SheetToBeCopy = InputBox(&amp;quot;Please enter the worksheet you want to copy:&amp;quot;, Default:=SheetToBeCopy)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39; Create new worksheets
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39; Discontinuous selection is supported by Selection.Areas
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; For Each Rng In Selection.Areas
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Set SelRange = Rng.Cells
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Set ColNo = Rng.Columns(1)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Set ColDepart = Rng.Columns(2)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; idx = 1
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; For Each cell In ColDepart.Cells
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; no_str = ColNo.Cells(idx).Value
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; If Len(no_str) = 1 Then
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; no_str = &amp;quot;0&amp;quot; + no_str
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End If
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Call CreateNewWorksheet(no_str, cell.Value, myFolder, SheetToBeCopy) &#39; call is needed here
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; idx = idx + 1
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Next
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Next
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; curWS.Activate
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39; Sort worksheets
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Call SortWorksheets
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; Case vbNo
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Application.ScreenUpdating = True
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Exit Sub
&amp;nbsp; &amp;nbsp; End Select
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; curWS.Activate
&amp;nbsp; &amp;nbsp; Application.ScreenUpdating = True
End Sub


Function CreateNewWorksheet(no As String, Depart As String, FolderName As String, SheetToBeCopy As String) As String
&amp;nbsp; &amp;nbsp; Dim oSheet As Worksheet, vRet As Variant
&amp;nbsp; &amp;nbsp; Dim SheetName As String, FileName As String
&amp;nbsp; &amp;nbsp; Dim Entry As Integer, i As Integer


&amp;nbsp; &amp;nbsp; &#39; Determine where to insert new worksheet
&amp;nbsp; &amp;nbsp; Entry = 0
&amp;nbsp; &amp;nbsp; For i = Sheets.Count To 1 Step -1
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; If Val(Worksheets(i).Name) &amp;gt; 0 Then
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Entry = i
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GoTo Determ_Entry
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End If
&amp;nbsp; &amp;nbsp; Next i
Determ_Entry:
&amp;nbsp; &amp;nbsp; If Entry = 0 Then
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Entry = Sheets.Count
&amp;nbsp; &amp;nbsp; End If
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; &#39;Example of one worksheet name:
&amp;nbsp; &amp;nbsp; &#39; &amp;nbsp; 07 oa祙?DDISMS?ㄩ????_D???钻2???_D?&#39;?轶???_20110705.xls
&amp;nbsp; &amp;nbsp; SheetName = no + &amp;quot; &amp;quot; + Depart
&amp;nbsp; &amp;nbsp; If Not SheetExists(SheetName) Then
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;worksheet XXX doesn&#39;t exist in current workbook
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;creating a new excel worksheet
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Set oSheet = Worksheets.Add
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; With oSheet
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .Name = SheetName
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .Move After:=Sheets(Entry)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .Activate
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End With
&amp;nbsp; &amp;nbsp; End If
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; FileName = FindFileName(no, Depart, FolderName)
&amp;nbsp; &amp;nbsp; If FileName &amp;lt;&amp;gt; &amp;quot;&amp;quot; Then
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Call CopyWorksheet(SheetName, FileName, SheetToBeCopy)
&amp;nbsp; &amp;nbsp; End If
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; Exit Function


End Function


Function SheetExists(SheetName As String) As Boolean
&#39; returns TRUE if the sheet exists in the active workbook
&amp;nbsp; &amp;nbsp; SheetExists = False
&amp;nbsp; &amp;nbsp; On Error GoTo NoSuchSheet
&amp;nbsp; &amp;nbsp; If Len(Sheets(SheetName).Name) &amp;gt; 0 Then
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SheetExists = True
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Exit Function
&amp;nbsp; &amp;nbsp; End If
NoSuchSheet:
End Function


Function CopyWorksheet(SheetName As String, FileName As String, SheetToBeCopy As String) As String
&amp;nbsp; &amp;nbsp; &#39;open Excel files and copy the contents to this sheet
&amp;nbsp; &amp;nbsp; Dim newWB As Workbook, curWB As Workbook
&amp;nbsp; &amp;nbsp; Dim startRange As Range
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; If Dir(FileName) &amp;lt;&amp;gt; &amp;quot;&amp;quot; Then
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39; file exists
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39; Clear all cells of current worksheet
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Sheets(SheetName).UsedRange.Clear
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Application.DisplayAlerts = False &#39; disable alerts
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39; Open workbooks to be copied
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Set curWB = ThisWorkbook &#39; For WorkBook and Range objects, set is necessary during assignment
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Set newWB = Workbooks.Open(FileName)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newWB.Sheets(SheetToBeCopy).AutoFilterMode = False &#39; disable auto filter
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Set startRange = newWB.Sheets(SheetToBeCopy).UsedRange &#39; Only used range will be copied
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newWB.Sheets(SheetToBeCopy).UsedRange.Copy
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39; paste to target worksheet
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; curWB.Activate
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Sheets(SheetName).Range(startRange.Address).PasteSpecial
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Application.CutCopyMode = False &amp;nbsp;&#39;Clear Clipboard
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newWB.Close SaveChanges:=False &amp;nbsp;&#39; close without change
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Application.DisplayAlerts = True
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; End If


End Function


Function FindFileName(no As String, Depart As String, FolderName As String) As String
&amp;nbsp; &amp;nbsp; Dim Coll_Docs As New Collection
&amp;nbsp; &amp;nbsp; Dim Search_path, Search_Filter, Search_Fullname As String
&amp;nbsp; &amp;nbsp; Dim DocName As String
&amp;nbsp; &amp;nbsp; Dim i As Long


&amp;nbsp; &amp;nbsp; Search_path = FolderName &amp;nbsp; &#39; where ?
&amp;nbsp; &amp;nbsp; Search_Filter = no + &amp;quot;*&amp;quot; + Depart + &amp;quot;*&amp;quot; + &amp;quot;.xls&amp;quot; &#39; what ?
&amp;nbsp; &amp;nbsp; Set Coll_Docs = Nothing


&amp;nbsp; &amp;nbsp; DocName = Dir(Search_path &amp;amp; &amp;quot;&amp;quot; &amp;amp; Search_Filter)


&amp;nbsp; &amp;nbsp; Do Until DocName = &amp;quot;&amp;quot; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&#39; build the collection
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Coll_Docs.Add Item:=DocName
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; DocName = Dir
&amp;nbsp; &amp;nbsp; Loop
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; If Coll_Docs.Count = 1 Then
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; FindFileName = Search_path &amp;amp; &amp;quot;&amp;quot; &amp;amp; Coll_Docs(1)
&amp;nbsp; &amp;nbsp; Else
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; FindFileName = &amp;quot;&amp;quot;
&amp;nbsp; &amp;nbsp; End If


End Function


Function SortWorksheetsByName() As String
&amp;nbsp; &amp;nbsp; &#39; sort worksheets in a workbook in ascending order
&amp;nbsp; &amp;nbsp; Dim sCount As Integer, i As Integer, j As Integer
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; Application.ScreenUpdating = False
&amp;nbsp; &amp;nbsp; sCount = Worksheets.Count
&amp;nbsp; &amp;nbsp; If sCount = 1 Then Exit Function
&amp;nbsp; &amp;nbsp; For i = 1 To sCount - 1
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; For j = i + 1 To sCount
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; If Worksheets(j).Name &amp;lt; Worksheets(i).Name Then
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Worksheets(j).Move Before:=Worksheets(i)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End If
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Next j
&amp;nbsp; &amp;nbsp; Next i
&amp;nbsp; &amp;nbsp;&amp;nbsp;
End Function


Function SortWorksheets() As String
&amp;nbsp; &amp;nbsp; &#39; sort worksheets in a workbook in ascending order
&amp;nbsp; &amp;nbsp; Dim cnt As Integer, i As Integer, j As Integer
&amp;nbsp; &amp;nbsp; Dim Entry As Integer
&amp;nbsp; &amp;nbsp; Dim curWS As Worksheet
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; Set curWS = ThisWorkbook.ActiveSheet
&amp;nbsp; &amp;nbsp; &#39;Application.ScreenUpdating = False
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; cnt = Worksheets.Count
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; &#39; Determine where to start sorting
&amp;nbsp; &amp;nbsp; Entry = 0
&amp;nbsp; &amp;nbsp; For i = 1 To cnt
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; If Val(Worksheets(i).Name) &amp;gt; 0 Then
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Entry = i
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GoTo Determ_Entry
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End If
&amp;nbsp; &amp;nbsp; Next i
Determ_Entry:
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; For i = Entry To cnt - 1
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; For j = i + 1 To cnt
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; If Val(Worksheets(i).Name) &amp;gt; Val(Worksheets(j).Name) Then
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Worksheets(j).Move Before:=Worksheets(i)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; End If
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Next j
&amp;nbsp; &amp;nbsp; Next i
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp; curWS.Activate
&amp;nbsp; &amp;nbsp; &#39;Application.ScreenUpdating = True
End Function
&lt;/pre&gt;
&lt;pre&gt;&lt;/pre&gt;
&lt;p&gt;如要自动导入每个worksheet的特定单元&amp;#26684;（L2:L6）到表2中的D，E，F，G，H列，可以使用下面的UpdateCells宏。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://bonny95.files.wordpress.com/2011/07/0_1310521124rpsk.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;
&lt;pre&gt;Option Explicit

Sub UpdateCells()
&#39;
&#39; UpdateCells Macro
&#39; Macro recorded 7/13/2011 by Bo Yang
&#39;
&#39; Keyboard Shortcut: Ctrl+Shift+C
&#39;
&#39; Risk:Cell
&#39; 5: L2 , 4: L3 , 3: L4 , 2: L5 , 1: L6
Dim Risk5 As Range
Dim num As String, depart As Range, idx As Integer
Dim SheetName As String
Dim SelRange As Range
Dim curWS As Worksheet

Application.ScreenUpdating = False

Set curWS = ActiveSheet
Set SelRange = Selection

idx = 1
For Each depart In SelRange.Columns(2).Cells
    num = SelRange.Columns(1).Cells(idx).value
    If Len(num) = 1 Then
        num = &amp;quot;0&amp;quot; + num
    End If
    SheetName = num + &amp;quot; &amp;quot; + depart.value
    
    Set Risk5 = SelRange.Columns(3).Cells(idx)
    
    ThisWorkbook.Sheets(SheetName).Range(&amp;quot;L2:L6&amp;quot;).Copy
    Risk5.Select
    Risk5.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=True
    Application.CutCopyMode = False &#39;Clear Clipboard
    
    idx = idx + 1
Next

Application.ScreenUpdating = True
End Sub
&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
&lt;pre&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Importing Multi-Excel Files/Worksheets Into An Excel Workbook</title>
   <link href="http://bo-yang.github.com//2011/07/13/importing-multi-excel-filesworksheets-into-an-excel-workbook"/>
   <updated>2011-07-13T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/07/13/importing-multi-excel-filesworksheets-into-an-excel-workbook</id>
   <content type="html">&lt;p&gt;Two days ago, my wife asked me to write an Excel VBA script to automatically import multi-Excel worksheets stored in different workbooks into an already opened Excel workbook.  Her requirements were:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select a range in a worksheet, which stores the names of worksheets to be imported. After executing the macro, worksheets will be created if it doesn&#39;t exist, or it will be updated according to the specified  Excel worksheet in another Excel workbook. Table 1 is the range selected in the worksheet, in which the first column is the serial number of worksheet, the second column denotes department name and the worksheet name should be like &quot;01 Department A&quot;.&lt;/li&gt;
&lt;li&gt;The imported/created worksheets should be sorted by the serial number of Table 1.&lt;/li&gt;
&lt;li&gt;The macro should be smart enough to match the Excel files to be imported. The name is like &quot;01 XXXX_Department  A_20110707.xls&quot;.&lt;/li&gt;
&lt;li&gt;After importing, specified cells in every other worksheets should be automatically copied to cells on the same row next to department.&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;Table 1  Selected Range of a worksheet&lt;/p&gt;
&lt;table class=&quot;aligncenter&quot; width=&quot;200&quot; border=&quot;1&quot; cellspacing=&quot;1&quot; cellpadding=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Department  A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Department  B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Department  C&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Department  D&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Department  E&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Department  F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Department  G&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Department  H&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Department  I&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Department  J&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Actually I am not familiar with VBA, although I studied Visual Basic 6.0 for several months, I rarely touched it after passing the Jiangsu Province Computer Rank Test Level 2 in 2003. Besides, almost all my work was done in Linux/UNIX last 3 years.  As a result, I have to Google every VBA syntax and tips all day long.&lt;/p&gt;
&lt;p&gt;Finally, I finishes the VBA macros and meet my wife&#39;s requirement in a inelegant way. Following is the verbose source code.&lt;/p&gt;
&lt;p&gt;Following the macro to implement first 3 requirements.&lt;br /&gt;
[sourcecode language=&quot;vb&quot;]&lt;br /&gt;
Option Explicit&lt;br /&gt;
Dim curWS As Worksheet&lt;/p&gt;
&lt;p&gt;Sub LoadWorksheets()&lt;br /&gt;
&#39;&lt;br /&gt;
&#39; LoadWorksheets Macro&lt;br /&gt;
&#39; Macro recorded 7/13/2011 by Bo Yang&lt;br /&gt;
&#39;&lt;br /&gt;
&#39; Keyboard Shortcut: Ctrl+Shift+L&lt;br /&gt;
&#39;&lt;br /&gt;
&#39; *How to use this macro?*&lt;br /&gt;
&#39; *Select columns &amp;quot;??(NO)&amp;quot; and &amp;quot;??(Deparment)&amp;quot; and then run this macro.*&lt;br /&gt;
&#39;&lt;br /&gt;
    Application.ScreenUpdating = False  &#39; stop screen flickering&lt;/p&gt;
&lt;p&gt;    &#39; Create new sheets according to selected cells and copy the&lt;br /&gt;
    &#39; contebts of other files into the new sheets&lt;br /&gt;
    Dim YesNo As Variant, myFolder As String, MyLF As String&lt;br /&gt;
    Dim SelRange As Range, ColNo As Range, ColDepart As Range, cell As Range, Rng As Range&lt;br /&gt;
    Dim SheetName As String, SheetToBeCopy As String&lt;br /&gt;
    Dim ColCnt As Integer&lt;br /&gt;
    Dim no_str As String, idx As Integer&lt;/p&gt;
&lt;p&gt;    myFolder = &amp;quot;D:\&amp;quot;   &#39;*****Change this value as you need*****&lt;br /&gt;
    SheetToBeCopy = &amp;quot;信息资产风险评估&amp;quot;  &#39; *****Change this value as you need*****&lt;/p&gt;
&lt;p&gt;    MyLF = Chr(10) &amp;amp;amp; Chr(13)    &#39; a line feed command&lt;br /&gt;
    Set curWS = ThisWorkbook.ActiveSheet &#39; Save current worksheet&lt;/p&gt;
&lt;p&gt;    &#39; check that if user select valid columns&lt;br /&gt;
    ColCnt = Selection.Columns.Count&lt;/p&gt;
&lt;p&gt;    If ColCnt  2 Then&lt;br /&gt;
        MsgBox (&amp;quot;Please select 2 columns!!!&amp;quot; &amp;amp;amp; MyLF &amp;amp;amp; _&lt;br /&gt;
            &amp;quot;The first column must be digital numbers,&amp;quot; &amp;amp;amp; MyLF &amp;amp;amp; _&lt;br /&gt;
            &amp;quot;And the Second column must be department names&amp;quot; _&lt;br /&gt;
        )&lt;br /&gt;
        Exit Sub&lt;br /&gt;
    End If&lt;/p&gt;
&lt;p&gt;    YesNo = MsgBox(&amp;quot;This Macro is going to create new worksheets according to your selected cells.&amp;quot; &amp;amp;amp; MyLF &amp;amp;amp; _&lt;br /&gt;
        &amp;quot;Do you want to continue?&amp;quot;, _&lt;br /&gt;
        vbYesNo, &amp;quot;Caution&amp;quot;)&lt;br /&gt;
    Select Case YesNo&lt;br /&gt;
    Case vbYes&lt;br /&gt;
        myFolder = InputBox(&amp;quot;Please enter the folder where all your Excel files locates:&amp;quot;, Default:=myFolder)&lt;br /&gt;
        SheetToBeCopy = InputBox(&amp;quot;Please enter the worksheet you want to copy:&amp;quot;, Default:=SheetToBeCopy)&lt;/p&gt;
&lt;p&gt;        &#39; Create new worksheets&lt;br /&gt;
        &#39; Discontinuous selection is supported by Selection.Areas&lt;br /&gt;
        For Each Rng In Selection.Areas&lt;br /&gt;
            Set SelRange = Rng.Cells&lt;br /&gt;
            Set ColNo = Rng.Columns(1)&lt;br /&gt;
            Set ColDepart = Rng.Columns(2)&lt;br /&gt;
            idx = 1&lt;br /&gt;
            For Each cell In ColDepart.Cells&lt;br /&gt;
                no_str = ColNo.Cells(idx).Value&lt;br /&gt;
                If Len(no_str) = 1 Then&lt;br /&gt;
                    no_str = &amp;quot;0&amp;quot; + no_str&lt;br /&gt;
                End If&lt;br /&gt;
                Call CreateNewWorksheet(no_str, cell.Value, myFolder, SheetToBeCopy) &#39; call is needed here&lt;br /&gt;
                idx = idx + 1&lt;br /&gt;
            Next&lt;br /&gt;
        Next&lt;/p&gt;
&lt;p&gt;        curWS.Activate&lt;/p&gt;
&lt;p&gt;        &#39; Sort worksheets&lt;br /&gt;
        Call SortWorksheets&lt;/p&gt;
&lt;p&gt;    Case vbNo&lt;br /&gt;
        Application.ScreenUpdating = True&lt;br /&gt;
        Exit Sub&lt;br /&gt;
    End Select&lt;/p&gt;
&lt;p&gt;    curWS.Activate&lt;br /&gt;
    Application.ScreenUpdating = True&lt;br /&gt;
End Sub&lt;/p&gt;
&lt;p&gt;Function CreateNewWorksheet(no As String, Depart As String, FolderName As String, SheetToBeCopy As String) As String&lt;br /&gt;
    Dim oSheet As Worksheet, vRet As Variant&lt;br /&gt;
    Dim SheetName As String, FileName As String&lt;br /&gt;
    Dim Entry As Integer, i As Integer&lt;/p&gt;
&lt;p&gt;    &#39; Determine where to insert new worksheet&lt;br /&gt;
    Entry = 0&lt;br /&gt;
    For i = Sheets.Count To 1 Step -1&lt;br /&gt;
        If Val(Worksheets(i).Name) &amp;amp;gt; 0 Then&lt;br /&gt;
            Entry = i&lt;br /&gt;
            GoTo Determ_Entry&lt;br /&gt;
        End If&lt;br /&gt;
    Next i&lt;br /&gt;
Determ_Entry:&lt;br /&gt;
    If Entry = 0 Then&lt;br /&gt;
        Entry = Sheets.Count&lt;br /&gt;
    End If&lt;/p&gt;
&lt;p&gt;    &#39;Example of one worksheet name:&lt;br /&gt;
    &#39;   07 oa祙?DDISMS?ㄩ????_D???钻2???_D?&#39;?轶???_20110705.xls&lt;br /&gt;
    SheetName = no + &amp;quot; &amp;quot; + Depart&lt;br /&gt;
    If Not SheetExists(SheetName) Then&lt;br /&gt;
        &#39;worksheet XXX doesn&#39;t exist in current workbook&lt;br /&gt;
        &#39;creating a new excel worksheet&lt;/p&gt;
&lt;p&gt;        Set oSheet = Worksheets.Add&lt;br /&gt;
        With oSheet&lt;br /&gt;
            .Name = SheetName&lt;br /&gt;
            .Move After:=Sheets(Entry)&lt;br /&gt;
            .Activate&lt;br /&gt;
        End With&lt;br /&gt;
    End If&lt;/p&gt;
&lt;p&gt;    FileName = FindFileName(no, Depart, FolderName)&lt;br /&gt;
    If FileName  &amp;quot;&amp;quot; Then&lt;br /&gt;
        Call CopyWorksheet(SheetName, FileName, SheetToBeCopy)&lt;br /&gt;
    End If&lt;/p&gt;
&lt;p&gt;    Exit Function&lt;/p&gt;
&lt;p&gt;End Function&lt;/p&gt;
&lt;p&gt;Function SheetExists(SheetName As String) As Boolean&lt;br /&gt;
&#39; returns TRUE if the sheet exists in the active workbook&lt;br /&gt;
    SheetExists = False&lt;br /&gt;
    On Error GoTo NoSuchSheet&lt;br /&gt;
    If Len(Sheets(SheetName).Name) &amp;amp;gt; 0 Then&lt;br /&gt;
        SheetExists = True&lt;br /&gt;
        Exit Function&lt;br /&gt;
    End If&lt;br /&gt;
NoSuchSheet:&lt;br /&gt;
End Function&lt;/p&gt;
&lt;p&gt;Function CopyWorksheet(SheetName As String, FileName As String, SheetToBeCopy As String) As String&lt;br /&gt;
    &#39;open Excel files and copy the contents to this sheet&lt;br /&gt;
    Dim newWB As Workbook, curWB As Workbook&lt;br /&gt;
    Dim startRange As Range&lt;/p&gt;
&lt;p&gt;    If Dir(FileName)  &amp;quot;&amp;quot; Then&lt;br /&gt;
        &#39; file exists&lt;br /&gt;
        &#39; Clear all cells of current worksheet&lt;br /&gt;
        Sheets(SheetName).UsedRange.Clear&lt;br /&gt;
        Application.DisplayAlerts = False &#39; disable alerts&lt;/p&gt;
&lt;p&gt;        &#39; Open workbooks to be copied&lt;br /&gt;
        Set curWB = ThisWorkbook &#39; For WorkBook and Range objects, set is necessary during assignment&lt;br /&gt;
        Set newWB = Workbooks.Open(FileName)&lt;br /&gt;
        newWB.Sheets(SheetToBeCopy).AutoFilterMode = False &#39; disable auto filter&lt;br /&gt;
        Set startRange = newWB.Sheets(SheetToBeCopy).UsedRange &#39; Only used range will be copied&lt;br /&gt;
        newWB.Sheets(SheetToBeCopy).UsedRange.Copy&lt;br /&gt;
        &#39; paste to target worksheet&lt;br /&gt;
        curWB.Activate&lt;br /&gt;
        Sheets(SheetName).Range(startRange.Address).PasteSpecial&lt;br /&gt;
        Application.CutCopyMode = False  &#39;Clear Clipboard&lt;br /&gt;
        newWB.Close SaveChanges:=False  &#39; close without change&lt;br /&gt;
        Application.DisplayAlerts = True&lt;/p&gt;
&lt;p&gt;    End If&lt;/p&gt;
&lt;p&gt;End Function&lt;/p&gt;
&lt;p&gt;Function FindFileName(no As String, Depart As String, FolderName As String) As String&lt;br /&gt;
    Dim Coll_Docs As New Collection&lt;br /&gt;
    Dim Search_path, Search_Filter, Search_Fullname As String&lt;br /&gt;
    Dim DocName As String&lt;br /&gt;
    Dim i As Long&lt;/p&gt;
&lt;p&gt;    Search_path = FolderName   &#39; where ?&lt;br /&gt;
    Search_Filter = no + &amp;quot;*&amp;quot; + Depart + &amp;quot;*&amp;quot; + &amp;quot;.xls&amp;quot; &#39; what ?&lt;br /&gt;
    Set Coll_Docs = Nothing&lt;/p&gt;
&lt;p&gt;    DocName = Dir(Search_path &amp;amp;amp; &amp;quot;\&amp;quot; &amp;amp;amp; Search_Filter)&lt;/p&gt;
&lt;p&gt;    Do Until DocName = &amp;quot;&amp;quot;            &#39; build the collection&lt;br /&gt;
        Coll_Docs.Add Item:=DocName&lt;br /&gt;
        DocName = Dir&lt;br /&gt;
    Loop&lt;/p&gt;
&lt;p&gt;    If Coll_Docs.Count = 1 Then&lt;br /&gt;
        FindFileName = Search_path &amp;amp;amp; &amp;quot;\&amp;quot; &amp;amp;amp; Coll_Docs(1)&lt;br /&gt;
    Else&lt;br /&gt;
        FindFileName = &amp;quot;&amp;quot;&lt;br /&gt;
    End If&lt;/p&gt;
&lt;p&gt;End Function&lt;/p&gt;
&lt;p&gt;Function SortWorksheetsByName() As String&lt;br /&gt;
    &#39; sort worksheets in a workbook in ascending order&lt;br /&gt;
    Dim sCount As Integer, i As Integer, j As Integer&lt;/p&gt;
&lt;p&gt;    Application.ScreenUpdating = False&lt;br /&gt;
    sCount = Worksheets.Count&lt;br /&gt;
    If sCount = 1 Then Exit Function&lt;br /&gt;
    For i = 1 To sCount - 1&lt;br /&gt;
        For j = i + 1 To sCount&lt;br /&gt;
            If Worksheets(j).Name  0 Then&lt;br /&gt;
            Entry = i&lt;br /&gt;
            GoTo Determ_Entry&lt;br /&gt;
        End If&lt;br /&gt;
    Next i&lt;br /&gt;
Determ_Entry:&lt;/p&gt;
&lt;p&gt;    For i = Entry To cnt - 1&lt;br /&gt;
            For j = i + 1 To cnt&lt;br /&gt;
                    If Val(Worksheets(i).Name) &amp;amp;gt; Val(Worksheets(j).Name) Then&lt;br /&gt;
                            Worksheets(j).Move Before:=Worksheets(i)&lt;br /&gt;
                    End If&lt;br /&gt;
            Next j&lt;br /&gt;
    Next i&lt;/p&gt;
&lt;p&gt;    curWS.Activate&lt;br /&gt;
    &#39;Application.ScreenUpdating = True&lt;br /&gt;
End Function&lt;br /&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;And here comes the macro to implement the 4th requirement.&lt;br /&gt;
[sourcecode language=&quot;vb&quot;]&lt;br /&gt;
Option Explicit&lt;/p&gt;
&lt;p&gt;Sub UpdateCells()&lt;br /&gt;
&#39;&lt;br /&gt;
&#39; UpdateCells Macro&lt;br /&gt;
&#39; Macro recorded 7/13/2011 by Bo Yang&lt;br /&gt;
&#39;&lt;br /&gt;
&#39; Keyboard Shortcut: Ctrl+Shift+C&lt;br /&gt;
&#39;&lt;br /&gt;
&#39; Risk:Cell&lt;br /&gt;
&#39; 5: L2 , 4: L3 , 3: L4 , 2: L5 , 1: L6&lt;br /&gt;
Dim Risk5 As Range&lt;br /&gt;
Dim num As String, depart As Range, idx As Integer&lt;br /&gt;
Dim SheetName As String&lt;br /&gt;
Dim SelRange As Range&lt;br /&gt;
Dim curWS As Worksheet&lt;/p&gt;
&lt;p&gt;Application.ScreenUpdating = False&lt;/p&gt;
&lt;p&gt;Set curWS = ActiveSheet&lt;br /&gt;
Set SelRange = Selection&lt;/p&gt;
&lt;p&gt;idx = 1&lt;br /&gt;
For Each depart In SelRange.Columns(2).Cells&lt;br /&gt;
    num = SelRange.Columns(1).Cells(idx).value&lt;br /&gt;
    If Len(num) = 1 Then&lt;br /&gt;
        num = &amp;quot;0&amp;quot; + num&lt;br /&gt;
    End If&lt;br /&gt;
    SheetName = num + &amp;quot; &amp;quot; + depart.value&lt;/p&gt;
&lt;p&gt;    Set Risk5 = SelRange.Columns(3).Cells(idx)&lt;/p&gt;
&lt;p&gt;    ThisWorkbook.Sheets(SheetName).Range(&amp;quot;L2:L6&amp;quot;).Copy&lt;br /&gt;
    Risk5.Select&lt;br /&gt;
    Risk5.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=True&lt;br /&gt;
    Application.CutCopyMode = False &#39;Clear Clipboard&lt;/p&gt;
&lt;p&gt;    idx = idx + 1&lt;br /&gt;
Next&lt;/p&gt;
&lt;p&gt;Application.ScreenUpdating = True&lt;br /&gt;
End Sub&lt;br /&gt;
[/sourcecode]&lt;br /&gt;
&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;line-height:normal;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>将多个Excel文件批量导入某个Excel文件中</title>
   <link href="http://bo-yang.github.com//2011/07/11/merge-multi-excel-sheets"/>
   <updated>2011-07-11T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/07/11/merge-multi-excel-sheets</id>
   <content type="html">&lt;p&gt;这是我老婆提出的一个需求：(1)选中Excel表格中的某些行或列，运行某个Macro，自动根据选中的cells创建新的worksheets，worksheets的名字就是选中的cells的名字。(2)创建新的worksheet的同时，要把某指定目录下与新的worksheet同名的Excel文件的内容copy到新的worksheet中去。&lt;/p&gt;
&lt;p&gt;下面是搜索了半天之后搞出来的Macro，没有异常处理，而且使用了copy/paste，文件太多时效率肯定不高。其实完全可以参照&lt;span style=&quot;font-family:Arial, Helvetica, sans-serif;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.exceltip.com/st/Copy_a_sheet_from_each_workbook_into_your_workbook_in_a_folder_using_VBA_in_Microsoft_Excel/560.html&quot;&gt;Copy a sheet from each workbook into your workbook in a folder using VBA in Microsoft Excel&lt;/a&gt;&amp;nbsp;和 &lt;a href=&quot;http://www.ozgrid.com/VBA/SpeedingUpVBACode.htm&quot;&gt;Optimize Slow VBA Code&lt;/a&gt; 中的方法来优化。&lt;/p&gt;&lt;/p&gt;
&lt;pre&gt;Sub LoadSheets()
    Application.ScreenUpdating = False  &#39; stop screen flickering
    
    &#39; Create new sheets according to selected cells and copy the
    &#39; contebts of other files into the new sheets
    Dim YesNo As Variant, myFolder As String, MyLF As String
        
    MyLF = Chr(10) &amp;amp; Chr(13)    &#39; a line feed command
    myFolder = &amp;quot;D:Documents and SettingsbonnyMy Documentstools&amp;quot;   &#39;change this to the location of saved XML files
    &#39;Windows 7下C盘默认不可写，请修改DefFolder的值
    
    YesNo = MsgBox(&amp;quot;This Macro is going to create new worksheets according to your selected cells.&amp;quot; &amp;amp; myclf &amp;amp; _
        &amp;quot;Do you want to continue?&amp;quot;, _
        vbYesNo, &amp;quot;Caution&amp;quot;)
    Select Case YesNo
    Case vbYes
        myFolder = InputBox(&amp;quot;Please enter the folder where all your Excel files locates&amp;quot;, Default:=myFolder)
        &#39;Create new worksheets
        For Each cell In Selection.Cells
            Call CreateNewWorksheet(cell.Value, myFolder)
        Next
    Case vbNo
        Exit Sub
    End Select
    
    Application.ScreenUpdating = True
End Sub

Function CreateNewWorksheet(SheetName As String, FolderName As String) As String

    Dim oSheet As Worksheet, vRet As Variant
    Dim fName As String
    
    &#39;creating a new excel worksheet
    Set oSheet = Worksheets.Add
    With oSheet
        .Name = SheetName
        .Move after:=Sheets(Sheets.Count) &#39;在当前所有worksheet后创建新的工作表
        .Activate
    End With
    
    &#39;open Excel files and copy the contents to this sheet
    Dim newWB As Workbook, curWB As Workbook
    Dim startRange As Range
    
    Set curWB = ThisWorkbook &#39; For WorkBook and Range objects, set is necessary during assignment
    fName = FolderName + &amp;quot;&amp;quot; + SheetName + &amp;quot;.xls&amp;quot;
    Set newWB = Workbooks.Open(fName)
    newWB.Activate
    newWB.Sheets(1).Activate &#39; 假定只有第一个worksheet需要copy
    Set startRange = newWB.Sheets(1).UsedRange &#39; Only used range will be copied
    newWB.Sheets(1).UsedRange.Copy
    
    &#39;select the destination cell
    curWB.Activate
    Sheets(SheetName).Activate
    Range(startRange.Address).Select
    ActiveSheet.Paste
    Application.CutCopyMode = False  &#39;Clear Clipboard
    newWB.Close
    
    Exit Function

End Function

&lt;/pre&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Solaris下/usr/lib/secure/0@0.so.1的错误</title>
   <link href="http://bo-yang.github.com//2011/06/22/solaris-shared-lib-error"/>
   <updated>2011-06-22T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/06/22/solaris-shared-lib-error</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;这两天一直被下面的错误所困扰：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;AP13: lb -m ccmscell uptime 
ld.so.1: uname: fatal: /usr/lib/secure/0@0.so.1: open failed: No such file or directory
ksh[216]: 4412 Killed
ld.so.1: uptime: fatal: /usr/lib/secure/0@0.so.1: open failed: No such file or directory
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;lb是一个调用rsh的脚本，ccmscell是一个server pool，uname是在lb中被调用的。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;仔细研究了N遍相关的脚本，Google了N次相关的错误信息，都没有找到有价&amp;#20540;的线索。后来问了一位做过IT的同事，她说以前遇见过类&amp;#20284;的问题，可她的解决方案最终被证明无效。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;最终发现不是所有的server上执行这条命令都有问题，有些是可以执行的。对比了之后发现，如果/usr/lib/secure/0@0.so.1的group设置为bin，owner设为root，就不会出现上面的问题。出问题的server上/usr/lib/secure/0@0.so.1的group为other。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;进一步调查后发现，/usr/lib/secure/0@0.so.1是在Solaris 5.8上被设为LD_PRELOAD_32的，因为很多程序要被setuid&amp;#043;chroot的伪root调用。当且仅当上面的命令被该伪root执行时，才会出现上面的错误！&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;幸亏Solaris 5.8已经开始走进坟墓了，即使在落后如我们公司的地方！&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;【update2011-06-23】：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;今天发现root cause 不是由于/usr/lib/secure/0@0.so.1的group不对，而是因为remote server（比如pool&amp;nbsp;ccmscell中的server）上没有/usr/lib/secure/0@0.so.1 —— 执行rsh命令的login是setuid&amp;#043;chroot实现的伪root，因此远程的server就需要/usr/lib/secure/0@0.so.1了。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:mceinline;font-weight:bold;&quot;&gt;【update 2012-03-12】&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;今天在Solaris 9上遇到了这样一个错误：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;&amp;nbsp; &amp;nbsp; ld.so.1: pt_chmod: warning: /lib/0@0.so.1: open failed: illegal insecure pathname&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;查了很久才想起来有可能是&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;/usr/lib/secure/0@0.so.1造成的。一检查&lt;/strong&gt;&lt;strong&gt;/usr/lib/secure/0@0.so.1，果然不存在。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;在一个正常工作的server上，&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;
&lt;pre&gt;AP31: echo $LD_PRELOAD_32
/usr/lib/secure/0@0.so.1&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;在不能工作的server上，&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;
&lt;pre&gt;AP13: echo $LD_PRELOAD_32
/lib/0@0.so.1&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;——仅仅升级了一个软件就又把这个library搞丢了，某些同志们啊，唉……&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>ksh中包含变量的命令调用</title>
   <link href="http://bo-yang.github.com//2011/06/03/ksh-IPCSCMD-variable"/>
   <updated>2011-06-03T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/06/03/ksh-IPCSCMD-variable</id>
   <content type="html">&lt;p&gt;当一个含有变量a的命令存储在某个变量b中时, 利用$($b)时有可能会报错。如下面的代码，有时可以成功执行，有时会发生&amp;ldquo;ipcs|grep xxx can not be found&quot;的错误。&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;IFS=&quot;
&quot;
if isLinux
then
	IPCSCMD=&quot;ipcs&quot;
else
	IPCSCMD=&quot;ipcs|grep $LOGNAME&quot;
fi
for Eachline in $($IPCSCMD)
do
	IFS=&quot; &quot; # Space
	# Handle IPCs
	...
done&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;究其根源，应该是对IPCSCMD的解析出了问题。将代码改为下面的形式，就可以正确执行了。注意IFS的变化&amp;mdash;&amp;mdash;改成下面的形式后必须将循环内的IFS改为Space和Tab。&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;IFS=&quot;
&quot;
if isLinux
then
	ipcs
else
	ipcs|grep $LOGNAME
fi | while read Eachline
do
	IFS=&quot; 	&quot; # Space and tab
	# Handle IPCs
	...
done
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>chroot, setuid() and set gid</title>
   <link href="http://bo-yang.github.com//2011/06/02/chroot-setuid-setgid"/>
   <updated>2011-06-02T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/06/02/chroot-setuid-setgid</id>
   <content type="html">&lt;p&gt;这篇文章搜集整理了网上chroot, setuid() &amp;amp; set gid相关的文章。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.unixwiz.net/techtips/chroot-practices.html&quot;&gt;Best Practices for UNIX chroot() Operations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://www.bpfh.net/simes/computing/chroot-break.html&quot;&gt;How to break out of a&amp;nbsp;&lt;tt&gt;chroot()&lt;/tt&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;&lt;a href=&quot;http://www.bpfh.net/simes/computing/chroot-break.html&quot;&gt;&amp;nbsp;jail&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://www.cs.berkeley.edu/~daw/papers/setuid-usenix02.pdf&quot;&gt;Setuid Demystifid&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://oldfield.wattle.id.au/luv/permissions.html&quot;&gt;Introduction to Unix file permissions&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>如何判断一个(压缩)文件的类型，以及zcat/gzcat</title>
   <link href="http://bo-yang.github.com//2011/05/20/zcat-gzcat"/>
   <updated>2011-05-20T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/05/20/zcat-gzcat</id>
   <content type="html">&lt;p&gt;恰似&amp;ldquo;一师是个好学校&amp;rdquo;，dd是个好工具&amp;mdash;&amp;mdash;只消用它逐字copy出某个文件第一个block的内容，就可以判断出该文件的类型！！！&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;bjbldd&amp;gt;1&amp;gt; dd if=MMEgolden.tar bs=512 count=1 &amp;gt; dd_tmp
1+0 records in
1+0 records out
bjbldd&amp;gt;&amp;gt; file dd_tmp
dd_tmp:         USTAR tar archive
bjbldd&amp;gt;&amp;gt; dd if=varofvar bs=512 count=1 &amp;gt; dd_tmp
0+1 records in
0+1 records out
bjbldd&amp;gt;&amp;gt; file dd_tmp
dd_tmp:         executable /bin/ksh script
bjbldd&amp;gt;&amp;gt; dd if=Tk-804.029.tar.gz bs=512 count=1 &amp;gt; dd_tmp
1+0 records in
1+0 records out
bjbldd&amp;gt;&amp;gt; file dd_tmp
dd_tmp:         gzip compressed data - deflate method , original file name , max compression
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;另外，zcat或者gzcat是用于cat gzip压缩文件的工具，只是在不同的平台有些差异：/bin/zcat在Linux上work的很好，可是当它在Solaris上cat gzip文件的内容时，就会报错。Solaris上cat gzip文件只能用/bin/gzcat. &amp;mdash;&amp;mdash;就是这个小小的差异，浪费了我一天的时间！&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;跨平台的cat gzip文件的代码如下：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;OS=&quot;`/bin/uname`&quot;
if [ &quot;${OS}&quot; != &quot;Linux&quot; ]
then
	ZCAT=&quot;/bin/zcat&quot;
else
	ZCAT=&quot;/bin/gzcat&quot;
fi
.......
${ZCAT} ${TMPDIR}/ngn_platform.cpio.Z | /bin/cpio -idmvu  -H odc ${SAT_CPIO_FLAG}&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;貌似cpio的用法也很强大哦～&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>yum的proxy设置</title>
   <link href="http://bo-yang.github.com//2011/05/16/yum-proxy"/>
   <updated>2011-05-16T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/05/16/yum-proxy</id>
   <content type="html">&lt;p&gt;方法一：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;export http_proxy=&quot;proxy:portnum&quot;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;方法二：（&lt;a href=&quot;http://www.fedoraforum.org/forum/showthread.php?t=742&quot;&gt;http://www.fedoraforum.org/forum/showthread.php?t=742&lt;/a&gt;）&lt;/p&gt;
&lt;table id=&quot;post4089&quot; class=&quot;tborder&quot; style=&quot;width:100%;&quot; border=&quot;0&quot; cellspacing=&quot;1&quot; cellpadding=&quot;6&quot; align=&quot;center&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;alt1&quot;&gt;
&lt;div id=&quot;post_message_4089&quot;&gt;create the following files in /etc/profile.d, and then this will work in *any* shell for *any* user of the system&lt;/p&gt;
&lt;pre&gt;#proxy.sh
export http_proxy=http://host.com:port/
export ftp_proxy=http://host.com:port/
export no_proxy=.domain.com
export HTTP_PROXY=http://host.com:port/
export FTP_PROXY=http://host.com:port/
#proxy.csh
setenv http_proxy http://host.com:port/
setenv ftp_proxy http://host.com:port/
setenv no_proxy .domain.com
setenv HTTP_PROXY http://host.com:port/
setenv FTP_PROXY http://host.com:port/&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
&lt;div&gt;方法三：(&lt;a href=&quot;http://linux.die.net/man/5/yum.conf&quot;&gt;http://linux.die.net/man/5/yum.conf&lt;/a&gt;)&lt;/div&gt;
&lt;div&gt;在/etc/yum.conf中设置proxy，prox_username和proxy_password选项。&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
 </entry>
 
 <entry>
   <title>Perl的library设置</title>
   <link href="http://bo-yang.github.com//2011/05/16/perl-library"/>
   <updated>2011-05-16T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/05/16/perl-library</id>
   <content type="html">&lt;p&gt;参考链接：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/841785/how-do-i-include-a-perl-module-thats-in-a-different-directory&quot;&gt;http://stackoverflow.com/questions/841785/how-do-i-include-a-perl-module-thats-in-a-different-directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/185114/how-do-i-use-a-perl-module-in-a-directory-not-in-inc&quot;&gt;http://stackoverflow.com/questions/185114/how-do-i-use-a-perl-module-in-a-directory-not-in-inc&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;在Fedora/RHEL/CentOS中，perl 的library默认安装路径为：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;@INC (@INC contains: /usr/lib64/perl5/site_perl/5.8.8/x86_64-linux-thread-multi /usr/lib/perl5/site_perl/5.8.8 /usr/lib/perl5/site_perl /usr/lib64/perl5/vendor_perl/5.8.8/x86_64-linux-thread-multi /usr/lib/perl5/vendor_perl/5.8.8 /usr/lib/perl5/vendor_perl /usr/lib64/perl5/5.8.8/x86_64-linux-thread-multi /usr/lib/perl5/5.8.8 .)&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;如果要使用自定义的perllib，就需要参考以下的设置了。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;EDIT: Putting the right solution first, originally from&amp;nbsp;&lt;a href=&quot;http://stackoverflow.com/questions/185114/how-do-i-use-a-perl-module-in-a-directory-not-in-inc&quot;&gt;this question&lt;/a&gt;. It&#39;s the only one that searches relative to the&amp;nbsp;&lt;strong&gt;module&lt;/strong&gt;&amp;nbsp;directory:&lt;/p&gt;
&lt;pre class=&quot;lang-perl prettyprint&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;FindBin&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# locate this script&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; lib &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;$FindBin::Bin/..&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# use the parent directory&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; yourlib&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There&#39;s many other ways that search for libraries relative to the&amp;nbsp;&lt;strong&gt;current&lt;/strong&gt;&amp;nbsp;directory. You can invoke perl with the -I argument, passing the directory of the other module:&lt;/p&gt;
&lt;pre class=&quot;lang-perl prettyprint&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;perl &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; yourscript&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;pl&lt;br /&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;You can include a line near the top of your perl script:&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;lang-perl prettyprint&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;use&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt; lib &lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;&#39;..&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;You can modify the environment variable PERL5LIB before you run the&lt;/span&gt;&amp;nbsp;script:&lt;/p&gt;
&lt;pre class=&quot;lang-perl prettyprint&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;export PERL5LIB&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$PERL5LIB&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:..&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The push(@INC) strategy can also work, but it has to be wrapped in BEGIN{} to make sure that the push is run before the module search:&lt;/p&gt;
&lt;pre class=&quot;lang-perl prettyprint&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;BEGIN&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;push &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;@INC&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;..&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; yourlib&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to list processes attached to a shared memory segment in linux?</title>
   <link href="http://bo-yang.github.com//2011/05/13/process-attached-to-shared-memory"/>
   <updated>2011-05-13T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/05/13/process-attached-to-shared-memory</id>
   <content type="html">&lt;p&gt;本文整理自网络，参考网页(references):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/5658568/how-to-list-processes-attached-to-a-shared-memory-segment-in-linux&quot;&gt;http://stackoverflow.com/questions/5658568/how-to-list-processes-attached-to-a-shared-memory-segment-in-linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://publib.boulder.ibm.com/infocenter/iseries/v5r4/index.jsp?topic=%2Frzahz%2Fipcs.htm&quot;&gt;http://publib.boulder.ibm.com/infocenter/iseries/v5r4/index.jsp?topic=%2Frzahz%2Fipcs.htm&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;[Question]:&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;How do I determine what process is attached to a shared memory segment?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;awagner@tree:/home/awagner$ ipcs -m

------ Shared Memory Segments --------
key        shmid      owner      perms      bytes      nattch     status      
0x00000000 0          root       777        102400     1                       
0x00000000 32769      root       774        96         1          dest         
0x00000000 98306      awagner    600        393216     2          dest         
0x00000000 131075     awagner    600        393216     2          dest    
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;i.e. how do I figure out which two processes are attached to segment 98305?&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;[Answer]:&lt;/p&gt;
&lt;p&gt;
&lt;span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I don&#39;t think you can do this with the standard tools. You can use&amp;nbsp;&lt;code&gt;ipcs -mp&lt;/code&gt;&amp;nbsp;to get the process ID of the&lt;em&gt;last&lt;/em&gt;&amp;nbsp;process to attach/detach but I&#39;m not aware of how to get&amp;nbsp;&lt;em&gt;all&lt;/em&gt;&amp;nbsp;attached processes with&amp;nbsp;&lt;code&gt;ipcs&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With a two-process-attached segment, assuming they both&amp;nbsp;&lt;em&gt;stayed&lt;/em&gt;&amp;nbsp;attached, you can possibly figure out from the creator PID&amp;nbsp;&lt;code&gt;cpid&lt;/code&gt;&amp;nbsp;and last-attached PID&amp;nbsp;&lt;code&gt;lpid&lt;/code&gt;&amp;nbsp;which are the two processes but that won&#39;t scale to more than two processes so its usefulness is limited.&lt;/p&gt;
&lt;p&gt;The&amp;nbsp;&lt;code&gt;cat /proc/sysvipc/shm&lt;/code&gt;&amp;nbsp;method seems similarly limited but I believe there&#39;s a way to do it with other parts of the&amp;nbsp;&lt;code&gt;/proc&lt;/code&gt;&amp;nbsp;filesystem, as shown below:&lt;/p&gt;
&lt;p&gt;When I do a&amp;nbsp;&lt;code&gt;grep&lt;/code&gt;&amp;nbsp;on the&amp;nbsp;&lt;code&gt;procfs&lt;/code&gt;&amp;nbsp;maps for all processes, I get entries containing lines for the&amp;nbsp;&lt;code&gt;cpid&lt;/code&gt;and&amp;nbsp;&lt;code&gt;lpid&lt;/code&gt;&amp;nbsp;processes.&lt;/p&gt;
&lt;p&gt;For example, I get the following shared memory segment from&amp;nbsp;&lt;code&gt;ipcs -m&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;------ Shared Memory Segments --------
key        shmid      owner      perms      bytes      nattch     status      
0x00000000 123456     pax        600        1024       2          dest
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;and, from&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;ipcs -mp&lt;/span&gt;&lt;/code&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;, the&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;cpid&lt;/span&gt;&lt;/code&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;&amp;nbsp;is 3956 and the&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;lpid&lt;/span&gt;&lt;/code&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;&amp;nbsp;is 9999 for that given shared memory segment (123456).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;Then, with the command&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;grep 123456&lt;/span&gt;&amp;nbsp;/proc/*/maps&lt;/code&gt;, I see:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/proc/3956/maps: blah blah blah 123456 /SYSV000000 (deleted)
/proc/9999/maps: blah blah blah 123456 /SYSV000000 (deleted)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So there&amp;nbsp;&lt;em&gt;is&lt;/em&gt;&amp;nbsp;a way to get the processes that attached to it. I&#39;m pretty certain that the&amp;nbsp;&lt;code&gt;dest&lt;/code&gt;&amp;nbsp;status and&lt;code&gt;(deleted)&lt;/code&gt;&amp;nbsp;indicator are because the creator has marked the segment for destruction once the final detach occurs, not that it&#39;s already been destroyed.&lt;/p&gt;
&lt;p&gt;So, by scanning of the&amp;nbsp;&lt;code&gt;/proc/*/maps&lt;/code&gt;&amp;nbsp;&quot;files&quot;, you should be able to discover which PIDs are currently attached to a given segment.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
&lt;span&gt;
&lt;dt&gt;&lt;strong&gt;CPID&lt;/strong&gt;&amp;nbsp;(-p, -a)&lt;/dt&gt;
&lt;dd&gt;The process ID of the job that created the shared memory segment.&lt;/dd&gt;
&lt;p&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;
&lt;dt&gt;&lt;strong&gt;LPID&lt;/strong&gt;&amp;nbsp;(-p, -a)&lt;/dt&gt;
&lt;dd&gt;The process ID of the last job to attach or detach from the shared memory segment or change the semaphore value.&lt;/dd&gt;
&lt;p&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Shell浮点数运算</title>
   <link href="http://bo-yang.github.com//2011/05/03/shell-floating-point"/>
   <updated>2011-05-03T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/05/03/shell-floating-point</id>
   <content type="html">&lt;p&gt;Shell本身不支持浮点数运算，(())之类的数学运算符只能进行整数运算。要想在shell中运算浮点数，只能借助于bc, Awk或者Perl。 如&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;a=0.1
b=0.2
c=$(echo &quot;$a+$b&quot; | bc -l)&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;perl -e &quot;print STDOUT $a + $b;&quot;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;需要注意的是，如果数学表达式中有负数，则必须确保运算符(+ - * /)与其前后的表达式之间至少有一空格。如：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;[bonn@bonn Downloads]$ echo $a $b
-0.1 -0.2
[bonn@bonn Downloads]$ echo &quot;$a - $b&quot; | bc -l
.1
[bonn@bonn Downloads]$ perl -e &quot;print STDOUT $a - $b;&quot;
0.1
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>groff初体验</title>
   <link href="http://bo-yang.github.com//2011/04/20/groff"/>
   <updated>2011-04-20T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/04/20/groff</id>
   <content type="html">&lt;p&gt;&amp;ldquo;所见即所得（WYSIWYG，What you see is what you get）&amp;rdquo;编辑器可以使简单的工作更简单，却无法完成某些复杂的工作。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;nroff/troff是UNIX下经典的typesetting工具，groff是GNU的*roff实现，并对troff的功能进行了增强。与LaTeX相比，体积较小，且大多为*nix自带，使用较为方便。虽说TeX为Donald Knuth所创，排版效果非常好，但体积相当庞大（安装完差不多3.5GB），而且通篇的/xx语法确实把我雷倒了&amp;mdash;&amp;mdash;还是先由groff入手吧。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;已经搜集到的*roff相关的资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a class=&quot;l&quot; href=&quot;http://www.angelfire.com/linux/mlaha/pdffiles/grofftut.pdfg&quot; target=&quot;_blank&quot;&gt;An Introduction to the GNU&amp;nbsp;&lt;em&gt;Groff&lt;/em&gt;&amp;nbsp;Text Processing System&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;a class=&quot;l&quot; href=&quot;http://www.angelfire.com/linux/mlaha/pdffiles/grofftut.pdfg&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/aix/tutorials/au-groff/index.html&quot;&gt;Produce device-independent documentation with Groff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.gnu.org/software/groff/manual/groff.pdf&quot;&gt;Groff Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/aix/tutorials/au-groff/index.html&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://troff.org/&quot;&gt;http://troff.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://oreilly.com/openbook/utp/UnixTextProcessing.pdf&quot;&gt;http://oreilly.com/openbook/utp/UnixTextProcessing.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://floppsie.comp.glam.ac.uk/Glamorgan/gaius/web/groff_www.html&quot;&gt;groff_www&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://floppsie.comp.glam.ac.uk/Glamorgan/gaius/web/groff.xhtml&quot;&gt;GROFF &amp;amp; [X]HTML&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;groff最吸引我的地方在于能够轻松的编辑数学公式、绘图、制表、排版并且转化为ps/pdf文件或者网页。为了体验这些功能，将下面的代码为输入纯文本文件html_test,&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;.URL http://netpbm.sourceforge.net/doc &quot;Netpbm manual&quot;
.URL pic.html &quot;Eric Raymond&#39;s pic guide&quot;
.LK TestLink
.LP
.EQ
G(z) ~=~ e sup { ln ~ G(z) }
    ~=~ exp left ( sum from k&amp;gt;=1 { S sub k z sup k } over k right )
    ~=~ prod from k&amp;gt;=1 e sup { S sub k z sup k /k }
.EN
.LP
.TS
tab(:);
c s s
c | c | c
l | l | n.
Major New York Bridges
=
Bridge:Designer:Length
_
Brooklyn:J. A. Roebling:1595
Manhattan:G. Lindenthal: 1470
Williamsburg:L. L. Buck:1600
_
Queensborough:Palmer &amp;amp;:1182
/^:  Hornbostel:/^
_
Triborough:O. H. Ammann:1380
/^:/^:383
_
Bronx Whitestone:O. H. Ammann:2300
Throgs Neck:O. H. Ammann:1800
_
George Washington:O. H. Ammann:3500
_
.TE
.LP
.PS
lineht = lineht / 2
box &quot;/fIletter.tr/fP&quot;
arrow
circle &quot;tbl&quot;
arrow
Eqn: circle &quot;eqn&quot;
arrow
Troff: circle &quot;troff&quot;
arc cw
line down
arc cw
left
arrow
circle &quot;grops&quot;
arrow
box &quot;/fIletter.ps/fP&quot;
up
line &amp;lt;- from Troff.n
arc
line
box &quot;/fItmac.m/fP&quot;
.PE
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;然后输入下列命令：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;pic html_test | eqn | tbl | groff -ms -Thtml &amp;gt; html_test.html&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;groff -p -e -t -ms -Thtml html_test &amp;gt; html_test.html&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;在处理pic时，宏-ms必不可少。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;如果不出错的话，链接将会在网页中正常显示，公式、表格以及图表会被转换为图片。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://bonny95.files.wordpress.com/2011/04/0_1303308743p06n.gif&quot; alt=&quot;&quot; width=&quot;402&quot; height=&quot;201&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://bonny95.files.wordpress.com/2011/04/0_13033087485aw7.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://bonny95.files.wordpress.com/2011/04/0_13033087538dbq.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;groff的groff_www扩展会调用pnmcut，netpbm的工具包中的一个工具。netpbm可以在&lt;a href=&quot;http://netpbm.sourceforge.net/&quot;&gt;http://netpbm.sourceforge.net/&lt;/a&gt;下载并安装。安装成功后，需要把netpbm的路径加入到PATH中，最好是在$HOME/.bashrc中加入。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Update 2011-04-21:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;今天试着用groff写了一个文件，并把它转化为html格式，那是相当的痛苦&amp;mdash;&amp;mdash;对于一个习惯了所见即所得的初学者，groff的学习曲线确实相当的陡峭。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>QEMU常用命令</title>
   <link href="http://bo-yang.github.com//2011/04/05/qemu-commands"/>
   <updated>2011-04-05T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/04/05/qemu-commands</id>
   <content type="html">&lt;p&gt;Following are excerpted from &lt;em&gt;Build appliances with QEMU and OpenBSD&lt;/em&gt;, &lt;em&gt;BSD Magazine,&lt;/em&gt; 2011.04.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boot from an ISO image: &amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:&#39;courier new&#39;, courier;&quot;&gt;qemu -cdrom &lt;em&gt;image.iso&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Create new hard disk for a VM: &amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:&#39;courier new&#39;, courier;&quot;&gt;qemu-img create &lt;em&gt;disk.bin&lt;/em&gt; &lt;em&gt;2G&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Install OS into the virtual disk: &amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:&#39;courier new&#39;, courier;&quot;&gt;qemu -hda &lt;em&gt;disk.bin &lt;/em&gt;-cdrom &lt;em&gt;image.iso&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Boot VM from virtual disk:&lt;span style=&quot;font-family:&#39;courier new&#39;, courier;&quot;&gt;&amp;nbsp; &amp;nbsp; qemu &lt;em&gt;disk.bin&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-family:&#39;courier new&#39;, courier;&quot;&gt;Boot VM with two virtual disks: &amp;nbsp; &lt;em&gt;&amp;nbsp;qemu -hda first.bin -hdb second.bin&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-family:&#39;courier new&#39;, courier;&quot;&gt;Start VM in bridge mode network:&lt;em&gt;&amp;nbsp; &amp;nbsp; qemu -net nic -net tap disk.bin&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-family:&#39;courier new&#39;, courier;&quot;&gt;Simulate multiple network cards:&lt;em&gt; &amp;nbsp; qemu -net nic,model=lance -net nic,model=pcnet -net nic,model=rt18139 disk.bin&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;QEMU can also be used with remote machines without X in -nographic mode. For this you have to have this in &lt;em&gt;boot.conf&lt;/em&gt;(FreeBSD):&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;&lt;em&gt;
&lt;pre&gt;# cat /etc/boot.conf
set tty com0&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;And start QEMU with command:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;qemu -nographic disk.bin&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Excel文件转换为XML以及Linux文件编码格式转换</title>
   <link href="http://bo-yang.github.com//2011/03/21/transfer-excel-to-xml"/>
   <updated>2011-03-21T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2011/03/21/transfer-excel-to-xml</id>
   <content type="html">&lt;p&gt;今天需要将多个Excel文档转换为XML&amp;#26684;式，本打算用MS Office自带的另存为XML文件的功能，结果转换成MS Office2003 XML之后的文件就是一坨屎！Office 2007自带的XML文档转换的功能也TMD超级繁琐，根据帮助手册自己建了.xsd文件导入到Excel之后也无法导出XML数据，白白浪费了时间。&lt;/p&gt;
&lt;p&gt;后来Google到了&lt;a href=&quot;http://www.meadinkent.co.uk/xl_xml1.htm&quot;&gt;这篇文章&lt;/a&gt;。文中提供了现成的VBA源代码，稍微修改一下即可拿来使用（中文注释为本人所加）：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;&#39;Attribute VB_Name = &amp;quot;XL_to_XML&amp;quot;
Sub MakeXML()
&#39; create an XML file from an Excel table
Dim MyRow As Integer, MyCol As Integer, Temp As String, YesNo As Variant, DefFolder As String
Dim XMLFileName As String, XMLRecSetName As String, MyLF As String, RTC1 As Integer
Dim RangeOne As String, RangeTwo As String, Tt As String, FldName(99) As String

MyLF = Chr(10) &amp;amp; Chr(13)    &#39; a line feed command
DefFolder = &amp;quot;C:MyXML&amp;quot;   &#39;change this to the location of saved XML files

YesNo = MsgBox(&amp;quot;This procedure requires the following data:&amp;quot; &amp;amp; MyLF _
 &amp;amp; &amp;quot;1 A filename for the XML file&amp;quot; &amp;amp; MyLF _
 &amp;amp; &amp;quot;2 A groupname for an XML record&amp;quot; &amp;amp; MyLF _
 &amp;amp; &amp;quot;3 A cellrange containing fieldnames (col titles)&amp;quot; &amp;amp; MyLF _
 &amp;amp; &amp;quot;4 A cellrange containing the data table&amp;quot; &amp;amp; MyLF _
 &amp;amp; &amp;quot;Are you ready to proceed?&amp;quot;, vbQuestion + vbYesNo, &amp;quot;MakeXML CiM&amp;quot;)
 
If YesNo = vbNo Then
 Debug.Print &amp;quot;User aborted with &#39;No&#39;&amp;quot;
 Exit Sub
End If

XMLFileName = FillSpaces(InputBox(&amp;quot;1. Enter the name of the XML file:&amp;quot;, &amp;quot;MakeXML CiM&amp;quot;, &amp;quot;GRE_Core_Words&amp;quot;))
If Right(XMLFileName, 4) &amp;lt;&amp;gt; &amp;quot;.xml&amp;quot; Then
 XMLFileName = XMLFileName &amp;amp; &amp;quot;.xml&amp;quot;
End If

XMLRecSetName = FillSpaces(InputBox(&amp;quot;2. Enter an identifying name of a record:&amp;quot;, &amp;quot;MakeXML CiM&amp;quot;, &amp;quot;item&amp;quot;))

RangeOne = InputBox(&amp;quot;3. Enter the range of cells containing the field names (or column titles):&amp;quot;, &amp;quot;MakeXML CiM&amp;quot;, &amp;quot;A2:D2&amp;quot;)
If MyRng(RangeOne, 1) &amp;lt;&amp;gt; MyRng(RangeOne, 2) Then
  MsgBox &amp;quot;Error: names must be on a single row&amp;quot; &amp;amp; MyLF &amp;amp; &amp;quot;Procedure STOPPED&amp;quot;, vbOKOnly + vbCritical, &amp;quot;MakeXML CiM&amp;quot;
  Exit Sub
End If
MyRow = MyRng(RangeOne, 1)
For MyCol = MyRng(RangeOne, 3) To MyRng(RangeOne, 4)
 If Len(Cells(MyRow, MyCol).Value) = 0 Then
  MsgBox &amp;quot;Error: names range contains blank cell&amp;quot; &amp;amp; MyLF &amp;amp; &amp;quot;Procedure STOPPED&amp;quot;, vbOKOnly + vbCritical, &amp;quot;MakeXML CiM&amp;quot;
  Exit Sub
 End If
 FldName(MyCol - MyRng(RangeOne, 3)) = FillSpaces(Cells(MyRow, MyCol).Value)
Next MyCol

RangeTwo = InputBox(&amp;quot;4. Enter the range of cells containing the data table:&amp;quot;, &amp;quot;MakeXML CiM&amp;quot;, &amp;quot;A3:D6257&amp;quot;)
If MyRng(RangeOne, 4) - MyRng(RangeOne, 3) &amp;lt;&amp;gt; MyRng(RangeTwo, 4) - MyRng(RangeTwo, 3) Then
  MsgBox &amp;quot;Error: number of field names &amp;lt;&amp;gt; data columns&amp;quot; &amp;amp; MyLF &amp;amp; &amp;quot;Procedure STOPPED&amp;quot;, vbOKOnly + vbCritical, &amp;quot;MakeXML CiM&amp;quot;
  Exit Sub
End If
RTC1 = MyRng(RangeTwo, 3)

If InStr(1, XMLFileName, &amp;quot;:&amp;quot;) = 0 Then
 XMLFileName = DefFolder &amp;amp; XMLFileName
End If

Open XMLFileName For Output As #1
Print #1, &amp;quot;&amp;lt;?xml version=&amp;quot; &amp;amp; Chr(34) &amp;amp; &amp;quot;1.0&amp;quot; &amp;amp; Chr(34) &amp;amp; &amp;quot; encoding=&amp;quot; &amp;amp; Chr(34) &amp;amp; &amp;quot;UTF-8&amp;quot; &amp;amp; Chr(34) &amp;amp; &amp;quot;?&amp;gt;&amp;quot;
Print #1, &amp;quot;&amp;lt;wordbook&amp;gt;&amp;quot;

For MyRow = MyRng(RangeTwo, 1) To MyRng(RangeTwo, 2)
Print #1, &amp;quot;&amp;lt;&amp;quot; &amp;amp; XMLRecSetName &amp;amp; &amp;quot;&amp;gt;&amp;quot;
  For MyCol = RTC1 To MyRng(RangeTwo, 4)
  &#39; the next line uses the FormChk function to format dates and numbers
     Print #1, &amp;quot;&amp;lt;&amp;quot; &amp;amp; FldName(MyCol - RTC1) &amp;amp; &amp;quot;&amp;gt;&amp;quot; &amp;amp; Cells(MyRow, MyCol).Value &amp;amp; &amp;quot;&amp;lt;/&amp;quot; &amp;amp; FldName(MyCol - RTC1) &amp;amp; &amp;quot;&amp;gt;&amp;quot;
  &#39; the next line does not apply any formatting
  &#39;  Print #1, &amp;quot;&amp;lt;&amp;quot; &amp;amp; FldName(MyCol - RTC1) &amp;amp; &amp;quot;&amp;gt;&amp;quot; &amp;amp; RemoveAmpersands(Cells(MyRow, MyCol).Value) &amp;amp; &amp;quot;&amp;lt;/&amp;quot; &amp;amp; FldName(MyCol - RTC1) &amp;amp; &amp;quot;&amp;gt;&amp;quot;
    Next MyCol
 Print #1, &amp;quot;&amp;lt;/&amp;quot; &amp;amp; XMLRecSetName &amp;amp; &amp;quot;&amp;gt;&amp;quot;

Next MyRow
Print #1, &amp;quot;&amp;lt;/wordbook&amp;gt;&amp;quot;
Close #1
MsgBox XMLFileName &amp;amp; &amp;quot; created.&amp;quot; &amp;amp; MyLF &amp;amp; &amp;quot;Process finished&amp;quot;, vbOKOnly + vbInformation, &amp;quot;MakeXML CiM&amp;quot;
Debug.Print XMLFileName &amp;amp; &amp;quot; saved&amp;quot;
End Sub
Function MyRng(MyRangeAsText As String, MyItem As Integer) As Integer
&#39; analyse a range, where MyItem represents 1=TR, 2=BR, 3=LHC, 4=RHC

Dim UserRange As Range
Set UserRange = Range(MyRangeAsText)
Select Case MyItem
 Case 1
 MyRng = UserRange.Row
 Case 2
 MyRng = UserRange.Row + UserRange.Rows.Count - 1
 Case 3
 MyRng = UserRange.Column
 Case 4
 MyRng = UserRange.Columns(UserRange.Columns.Count).Column
End Select
Exit Function

End Function
Function FillSpaces(AnyStr As String) As String
&#39; remove any spaces and replace with underscore character
Dim MyPos As Integer
MyPos = InStr(1, AnyStr, &amp;quot; &amp;quot;)
Do While MyPos &amp;gt; 0
 Mid(AnyStr, MyPos, 1) = &amp;quot;_&amp;quot;
 MyPos = InStr(1, AnyStr, &amp;quot; &amp;quot;)
Loop
FillSpaces = LCase(AnyStr)
End Function

Function FormChk(RowNum As Integer, ColNum As Integer) As String
&#39; formats numeric and date cell values to comma 000&#39;s and DD MMM YY
FormChk = Cells(RowNum, ColNum).Value
If IsNumeric(Cells(RowNum, ColNum).Value) Then
 FormChk = Format(Cells(RowNum, ColNum).Value, &amp;quot;#,##0 ;(#,##0)&amp;quot;)
End If
If IsDate(Cells(RowNum, ColNum).Value) Then
 FormChk = Format(Cells(RowNum, ColNum).Value, &amp;quot;dd mmm yy&amp;quot;)
End If
End Function

Function RemoveAmpersands(AnyStr As String) As String
Dim MyPos As Integer
&#39; replace Ampersands (&amp;amp;) with plus symbols (+)

MyPos = InStr(1, AnyStr, &amp;quot;&amp;amp;&amp;quot;)
Do While MyPos &amp;gt; 0
 Mid(AnyStr, MyPos, 1) = &amp;quot;+&amp;quot;
 MyPos = InStr(1, AnyStr, &amp;quot;&amp;amp;&amp;quot;)
Loop
RemoveAmpersands = AnyStr
End Function
&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;如果不想将文件中的&amp;amp;替换为&amp;#043;，可以将第55行的&lt;span&gt;RemoveAmpersands(FormChk(MyRow,&amp;nbsp;MyCol))替换为&lt;/span&gt;&lt;span&gt;Cells(MyRow,&amp;nbsp;MyCol).Value。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;需要注意的是在Excel文件中必须有一行是标题行——即改行存放各列的标题，否则生成的XML文件&amp;#26684;式不一定是你所需要的。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;由于我对XML文件的编码&amp;#26684;式有要求，必须是UTF-8，而Windows默认的编码&amp;#26684;式是GBXXXX，因此需要对生成的XML文件进行编码&amp;#26684;式转换。搜索到了&lt;a href=&quot;http://tech.16c.cn/linux/glpz/20100221/22560.html&quot;&gt;linux 查看文件编码以及修改编码&lt;/a&gt;一文，摘录重点如下：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;查看文件编码&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;　　在Linux中查看文件编码可以通过以下几种方式：&lt;/p&gt;
&lt;p&gt;　　1.在Vim中可以直接查看文件编码&lt;/p&gt;
&lt;p&gt;　　:set fileencoding&lt;/p&gt;
&lt;p&gt;　　即可显示文件编码&amp;#26684;式。&lt;/p&gt;
&lt;p&gt;　　如果你只是想查看其它编码&amp;#26684;式的文件或者想解决用Vim查看文件乱码的问题，那么你可以在~/.vimrc 文件中添加以下内容：&lt;/p&gt;
&lt;p&gt;　　set encoding=utf-8 fileencodings=ucs-bom,utf-8,cp936&lt;/p&gt;
&lt;p&gt;　　这样，就可以让vim自动识别文件编码（可以自动识别UTF-8或者GBK编码的文件），其实就是依照fileencodings提供的编码列表尝试，如果没有找到合适的编码，就用latin-1(ASCII)编码打开。&lt;/p&gt;
&lt;p&gt;　　2. enca (如果你的系统中没有安装这个命令，可以用sudo yum install -y enca 安装 )查看文件编码&lt;/p&gt;
&lt;p&gt;　　$ enca filename&lt;/p&gt;
&lt;p&gt;　　filename: Universal transformation format 8 bits; UTF-8&lt;/p&gt;
&lt;p&gt;　　CRLF line terminators&lt;/p&gt;
&lt;p&gt;　　需要说明一点的是，enca对某些GBK编码的文件识别的不是很好，识别时会出现：&lt;/p&gt;
&lt;p&gt;　　Unrecognized encoding&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;文件编码转换&lt;/p&gt;
&lt;p&gt;　　1.在Vim中直接进行转换文件编码,比如将一个文件转换成utf-8&amp;#26684;式&lt;/p&gt;
&lt;p&gt;　　:set fileencoding=utf-8&lt;/p&gt;
&lt;p&gt;　　2. enconv 转换文件编码，比如要将一个GBK编码的文件转换成UTF-8编码，操作如下&lt;/p&gt;
&lt;p&gt;　　enconv -L zh_CN -x UTF-8 filename&lt;/p&gt;
&lt;p&gt;　　3. iconv 转换，iconv的命令&amp;#26684;式如下：&lt;/p&gt;
&lt;p&gt;　　iconv -f encoding -t encoding inputfile&lt;/p&gt;
&lt;p&gt;　　比如将一个UTF-8 编码的文件转换成GBK编码&lt;/p&gt;
&lt;p&gt;　　iconv -f GBK -t UTF-8 file1 -o file2&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>在/etc/hosts中定义Linux的hostname</title>
   <link href="http://bo-yang.github.com//2011/03/10/hostname-in-etc-hosts"/>
   <updated>2011-03-10T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/03/10/hostname-in-etc-hosts</id>
   <content type="html">&lt;p&gt;今天碰到这样一个问题：一个程序在刚刚装好的Linux server上获取IP地址时永远都是0x7f000001。一开始没有注意，后来仔细一想，0x7f000001不正好就是127.0.0.1嘛！有同事查了一下/etc/hosts，发现在该文件中有这样一行：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;127.0.0.1     mylinuxsvr localhost.localhost.localdomain localhost
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;其中，mylinuxsvr是这个server的名字。难怪每次都只能获取到127.0.0.1呢。当然了，这台server的IP地址其实是配好了的，只是不知为什么，有一个不同server间通信的程序非要通过/etc/hosts来获取IP地址&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;找了一些Linux server网络配置的文章，记录于此：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.linuxhomenetworking.com/wiki/index.php/Quick_HOWTO_:_Ch03_:_Linux_Networking&quot;&gt;Quick HOWTO : Ch03 : Linux Networking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_Virtualization_for_Servers/2.2/html/Administration_Guide/Administration_Guide-Create_Objects-Add_Server.html&quot;&gt;Adding Red Hat Enterprise Linux Hosts&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下文摘自&lt;a href=&quot;http://www.linuxhomenetworking.com/wiki/index.php/Quick_HOWTO_:_Ch03_:_Linux_Networking&quot;&gt;Quick HOWTO : Ch03 : Linux Networking&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h1&gt;&lt;span id=&quot;Configuring_Your_.2Fetc.2Fhosts_File&quot; class=&quot;mw-headline&quot;&gt;Configuring Your /etc/hosts File&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0 goog_qs-tidbit-hilite&quot;&gt;The /etc/hosts file is just a list of IP addresses and their corresponding server names.&lt;/span&gt;&amp;nbsp;Your server will typically check this file before referencing DNS. If the name is found with a corresponding IP address then DNS won&#39;t be queried at all. Unfortunately, if the IP address for that host changes, you also have to also update the file. This may not be much of a concern for a single server, but can become laborious if it has to be done companywide. For ease of management, it is often easiest to limit entries in this file to just the loopback interface and also the server&#39;s own hostname, and use a centralized DNS server to handle most of the rest. Sometimes you might not be the one managing the DNS server, and in such cases it may be easier to add a quick /etc/hosts file entry till the centralized change can be made.&lt;/p&gt;
&lt;pre&gt;192.168.1.101  smallfry

&lt;/pre&gt;
&lt;p&gt;In the example above server smallfry has an IP address of 192.168.1.101. You can access 192.168.1.101 using the ping, telnet or any other network aware program by referring to it as smallfry. Here is an example using the ping command to see whether smallfry is alive and well on the network:&lt;/p&gt;
&lt;pre&gt;[root@bigboy tmp]# ping smallfry
PING zero (192.168.1.101) 56(84) bytes of data.
64 bytes from smallfry (192.168.1.101): icmp_seq=0 ttl=64 time=0.197 ms
64 bytes from smallfry (192.168.1.101): icmp_seq=1 ttl=64 time=0.047 ms


--- smallfry ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 2017ms
rtt min/avg/max/mdev = 0.034/0.092/0.197/0.074 ms, pipe 2
[root@bigboy tmp]#

&lt;/pre&gt;
&lt;p&gt;You can also add aliases to the end of the line which enable you to refer to the server using other names. Here we have set it up so that smallfry can also be accessed using the names&amp;nbsp;&lt;code&gt;tiny&lt;/code&gt;&amp;nbsp;and&amp;nbsp;&lt;code&gt;littleguy&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;192.168.1.101  smallfry  tiny  littleguy

&lt;/pre&gt;
&lt;p&gt;You should never have an IP address more than once in this file because Linux will use only the values in the first entry it finds.&lt;/p&gt;
&lt;pre&gt;192.168.1.101  smallfry    # (Wrong)
192.168.1.101  tiny        # (Wrong)
192.168.1.101  littleguy   # (Wrong)
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;The_loopback_Interface.27s_localhost_Entry&quot; class=&quot;mw-headline&quot;&gt;The loopback Interface&#39;s localhost Entry&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Usually the first entry in /etc/hosts defines the IP address of the server&#39;s virtual loopback interface. This is usually mapped to the name localhost.localdomain (the universal name used when a server refers to itself) and localhost (the shortened alias name). By default, Fedora inserts the hostname of the server between the 127.0.0.1 and the localhost entries like this:&lt;/p&gt;
&lt;pre&gt;127.0.0.1     bigboy    localhost.localdomain    localhost

&lt;/pre&gt;
&lt;p&gt;When the server is connected to the Internet this first entry after the 127.0.0.1 needs to be the fully qualified domain name (FQDN) of the server. For example,&amp;nbsp;&lt;code&gt;bigboy.mysite.com&lt;/code&gt;, like this:&lt;/p&gt;
&lt;pre&gt;127.0.0.1     bigboy.my-site.com    localhost.localdomain    localhost

&lt;/pre&gt;
&lt;p&gt;Some programs such as Sendmail are very sensitive to this and if they detect what they feel is an incorrect FQDN they will default to using the name localhost.localdomain when communicating with another server on the network. This can cause confusion, as the other server also feels it is localhost.localdomain.&lt;/p&gt;
&lt;p&gt;Note:&amp;nbsp;You must always have a localhost and localhost.localdomain entry mapping to 127.0.0.1 for Linux to work properly and securely.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Plan9 Files -- Notes of Introduction to OS Abstractions Using Plan 9 from Bell Labs(IV)</title>
   <link href="http://bo-yang.github.com//2011/03/07/plan9-intro-note-4"/>
   <updated>2011-03-07T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/03/07/plan9-intro-note-4</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;
&lt;h4 id=&quot;internal-source-marker_0.12957935757003725&quot;&gt;&lt;span&gt;2.1 Input/Output&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;Most of the times, standard input, standard output, and standard error go to &lt;/span&gt;&lt;span&gt;/dev/cons&lt;/span&gt;&lt;span&gt;. This file represents the console for your program.It is the interface to use the device that is known as the console, which corresponds to your terminal.&lt;/span&gt;&lt;span&gt;The file interface provided for each process in Plan 9 has a file that provides the list of open file descriptors for the process. For example, to know which file descriptors are open in the shell we are using we can do this.&lt;/span&gt;
&lt;pre&gt; term% cat /proc/$pid/fd/usr/glenda
 0 r  M   40 (0000000000000001 0 00)  8192       47 /dev/cons
 1 w  M   40 (0000000000000001 0 00)  8192     3506 /dev/cons
 2 w  M   40 (0000000000000001 0 00)  8192     3506 /dev/cons
 3 r  M    8 (000000000000166b 2 00)  8192      512 /rc/lib/rcmain
 4 r  M   40 (0000000000000001 0 00)  8192       47 /dev/cons&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;Each time you open a file, the system keeps track of a file offset for that open file, to know the offset in the file where to start working at the next &lt;/span&gt;&lt;span&gt;read&lt;/span&gt;&lt;span&gt; or &lt;/span&gt;&lt;span&gt;write&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;br /&gt;&lt;span&gt;The offset for a file descriptor can be changed using the &lt;/span&gt;&lt;span&gt;seek&lt;/span&gt;&lt;span&gt; system call.&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;2.2 Write games&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;A &lt;/span&gt;&lt;span&gt;Chan&lt;/span&gt;&lt;span&gt;(or Channel) is a data structure, which contains all the information needed to let the kernel reach the file server and perform operations on the file. A &lt;/span&gt;&lt;span&gt;Chan&lt;/span&gt;&lt;span&gt; is just something used by Plan 9 to speak to a server regarding a file. This may require doing remote procedure calls across the network, but that is up to your kernel, and you can forget. There is one &lt;/span&gt;&lt;span&gt;Chan&lt;/span&gt;&lt;span&gt; per file in use in the system.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The size of a file corresponds to the highest file offset ever written on it. All the bytes that we did not write were set to zero by Plan 9.&lt;/span&gt;&lt;br /&gt;&lt;span&gt;seek(fd, 0, 2); // move to the end&lt;/span&gt;&lt;br /&gt;&lt;span&gt;append only permission bit :&lt;/span&gt;&lt;br /&gt;&lt;span&gt;; chmod +a /sys/log/diagnostics&lt;/span&gt;&lt;br /&gt;&lt;span&gt;; ls -l /sys/log/diagnostics&lt;/span&gt;&lt;br /&gt;&lt;span&gt;a-rw-r--r-- M 19 nemo nemo 0 Jul 10 01:11 /sys/log/diagnostics&lt;/span&gt;&lt;br /&gt;&lt;span&gt;+a&lt;/span&gt;&lt;span&gt; permission bit guarantees that any write will happen at the end of existing data, no matter what the offset is.&lt;/span&gt;&lt;br /&gt;&lt;span&gt;Doing a &lt;/span&gt;&lt;span&gt;seek&lt;/span&gt;&lt;span&gt; in all programs using this file might not suffice. If there are multiple machines writing to this file, each machine would keep its own offset for the file. Therefore, there is some risk of overwriting some data in the file.&lt;/span&gt;&lt;br /&gt;&lt;span&gt;The &lt;/span&gt;&lt;span&gt;create&lt;/span&gt;&lt;span&gt; system call creates one file.&lt;/span&gt;&lt;br /&gt;&lt;span&gt;The system call &lt;/span&gt;&lt;span&gt;remove&lt;/span&gt;&lt;span&gt; removes the named file. &lt;/span&gt;&lt;br /&gt;&lt;span&gt;The system call &lt;/span&gt;&lt;span&gt;access&lt;/span&gt;&lt;span&gt; to check file properties.&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;2.3 Directory Entry&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;File &lt;/span&gt;&lt;span&gt;metadata&lt;/span&gt;&lt;span&gt; is simply what the system needs to know about the file to be able to implement it. File metadata includes the file name, the file size, the time for the last modification to the file, the time for the last access to the file, and other attributes for the file. Thus, file metadata is also known as file attributes.&lt;/span&gt;&lt;br /&gt;&lt;span&gt;Plan 9 stores attributes for a file in the directory that contains the file. Thus, the data structure that contains file metadata is known as a directory entry. A directory contains just a sequence of entries, each one providing the attributes for a file contained in it.&lt;/span&gt;&lt;br /&gt;&lt;span&gt;To obtain the directory entry for a file, i.e., its attributes, we can use &lt;/span&gt;&lt;span&gt;dirstat&lt;/span&gt;&lt;span&gt;. This function &amp;nbsp;uses the actual system call, &lt;/span&gt;&lt;span&gt;stat&lt;/span&gt;&lt;span&gt;, to read the data, and returns a Dir structure that is more convenient to use in C programs. This structure is stored in dynamic memory allocated with malloc &amp;nbsp;by dirstat, and the caller is responsible for calling free on it. &lt;/span&gt;&lt;br /&gt;&lt;span&gt;Because directories contain directory entries, reading from a directory is very similar to &amp;nbsp;what we have just done. The function &lt;/span&gt;&lt;span&gt;read&lt;/span&gt;&lt;span&gt; can be used to read directories as well as files. The &amp;nbsp;only difference is that the system will read only an integral number of directory entries. If one &amp;nbsp;more entry does not fit in the buffer you supply to read, it will have to wait until you read again. &lt;/span&gt;&lt;br /&gt;&lt;span&gt;The entries are stored in the directory in a portable, machine independent, and not amenable, format. Therefore, instead of using &lt;/span&gt;&lt;span&gt;read&lt;/span&gt;&lt;span&gt;, it is more convenient to use &lt;/span&gt;&lt;span&gt;dirread&lt;/span&gt;&lt;span&gt;. This &amp;nbsp;function calls read to read the data stored in the directory. But before returning to the caller, it &amp;nbsp;unpacks them into a, more convenient, array of Dir structures. &lt;/span&gt;&lt;br /&gt;&lt;span&gt;The function &lt;/span&gt;&lt;span&gt;dirwstat&lt;/span&gt;&lt;span&gt; is the counterpart of &lt;/span&gt;&lt;span&gt;dirstat&lt;/span&gt;&lt;span&gt;. It works in a similar way, but &amp;nbsp;instead of reading the attributes, it updates them. New values for the update are taken from a Dir &amp;nbsp;structure given as a parameter. However, the function ignores any field set to a null value, to &amp;nbsp;allow you to change just one attribute, or a few ones. Beware that zero is not a null value for some of the fields, because it would be a perfectly legal value for them. The function &lt;/span&gt;&lt;span&gt;nulldir&lt;/span&gt;&lt;span&gt; &amp;nbsp;is to be used to null all of the fields in a given Dir. &lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;2.4 Bio&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;The bio(2) library in Plan 9 provides buffered input/output. This is an abstraction that,although not provided by the underlying Plan 9, is so common that you really must know how it works. The idea is that your program creates a &lt;/span&gt;&lt;span&gt;Bio&lt;/span&gt;&lt;span&gt; buffer for reading or writing, called a &lt;/span&gt;&lt;span&gt;Biobuf&lt;/span&gt;&lt;span&gt;. Your program reads from the &lt;/span&gt;&lt;span&gt;Biobuf&lt;/span&gt;&lt;span&gt;, by calling a library function, and the library will call read only to refill the buffer each time you exhaust its contents. &lt;/span&gt;
&lt;pre&gt;#include &amp;lt;u.h&amp;gt;
#include &amp;lt;libc.h&amp;gt;
#include &amp;lt;bio.h&amp;gt;
static void
usage(void)
{
    fprint(2,&quot;usage: %s [-b bufsz] infile outfile/n&quot;, argv0);
    exits(&quot;usage&quot;);
}
void
main(int argc, char* argv[])
{
    char* buf;
    long nr, bufsz = 8*1024;
    Biobuf* bin;
    Biobuf* bout;
    ARGBEGIN{
    case &#39;b&#39;:
        bufsz = atoi(EARGF(usage()));
        break;
    default:
        usage();
    }ARGEND;
    if (argc !=2)
        usage();
    buf = malloc(bufsz);
    if (buf == nil)
        sysfatal(&quot;no more memory&quot;);
    bin = Bopen(argv[0], OREAD);
    if (bin == nil)
        sysfatal(&quot;%s: %s: %r&quot;, argv0, argv[0]);
    bout = Bopen(argv[1], OWRITE);
    if (bout == nil)
        sysfatal(&quot;%s: %s: %r&quot;, argv0, argv[1]);
    for(;;) {
        nr = Bread(bin, buf, bufsz);
        if (nr &amp;lt; 0)
            break;
        Bwrite(bout, buf, nr);
    }
    Bterm(bin);
    Bterm(bout);
    exits(nil);
}&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>regexp -line逐行匹配</title>
   <link href="http://bo-yang.github.com//2011/03/02/regexp-per-line"/>
   <updated>2011-03-02T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/03/02/regexp-per-line</id>
   <content type="html">&lt;p&gt;以前没注意到Tcl/Tk的正则表达式命令regexp还有一个逐行匹配的选项-line（其实是三个-line, &lt;span&gt;-lineanchor和&lt;/span&gt;&lt;span&gt;-linestop，第一个是后两者的综合&lt;/span&gt;），因此碰到需要在多行内容中匹配某一行的中的某字符（串）是总是不得不用AWK,PERL等其他工具，现在有了-line，直接regexp -line &amp;lt;pattern&amp;gt; &amp;lt;var&amp;gt;就搞定了！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Plan9 Environment Variables -- Notes of Introduction to OS Abstractions Using Plan 9 from Bell Labs(III)</title>
   <link href="http://bo-yang.github.com//2011/02/27/plan9-intro-note-3"/>
   <updated>2011-02-27T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/02/27/plan9-intro-note-3</id>
   <content type="html">&lt;p&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;The&lt;br /&gt;
interface for using environment variables in Plan 9 is a file&lt;br /&gt;
interface.&lt;br /&gt;
 All interfaces of environment variables can be found&lt;br /&gt;
under &lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;/env&lt;/span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;To&lt;br /&gt;
obtain the value for a environment variable, from a C program, we can&lt;br /&gt;
use the &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;getenv&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;br /&gt;
system call. If the variable is not defined, &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;getenv&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;br /&gt;
returns a null string. A related call is &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;putenv&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;,&lt;br /&gt;
which accepts a name and a value, and set the corresponding&lt;br /&gt;
environment variable accordingly.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;
&lt;pre&gt;#include &amp;lt;u.h&amp;gt;
#include &amp;lt;libc.h&amp;gt;
void main()
{
char * path;
path=getenv(&quot;path&quot;);
if(path==nil)
sysfatal(&quot;path not defined!&quot;);
print(&quot;PATH is %s /n&quot;, path);
exits(nil);
}&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;In&lt;br /&gt;
some cases it is convenient to define an environment variable just&lt;br /&gt;
for a command. This can be&lt;br /&gt;
 done by defining it in the same command&lt;br /&gt;
line, before the command, like in the following exam-ple:&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;
&lt;pre&gt;; temp=/tmp/foobar echo $temp
/tmp/foobar
; echo $temp
;
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;strong&gt;Useful&lt;br /&gt;
Environment Variables:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;status&lt;/span&gt;&lt;br /&gt;
is updated by the shell once it finds out how it went to the last&lt;br /&gt;
command it executed.&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;path&lt;/span&gt;&lt;br /&gt;
is a list of paths where the shell should&lt;br /&gt;
look for executable files&lt;br /&gt;
to run the user commands.&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;user&lt;/span&gt;&lt;br /&gt;
contains the user name&lt;br /&gt;
.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;sysname&lt;/span&gt;&lt;br /&gt;
contains the machine name.&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;The&lt;br /&gt;
file &lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;/dev/text &lt;/span&gt;represents&lt;br /&gt;
the&lt;br /&gt;
 text shown in the window (when used within that window). To make&lt;br /&gt;
a copy of your shell session,&lt;br /&gt;
 you already know what to do:&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;;&lt;br /&gt;
cp /dev/text $home/saved&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;The&lt;br /&gt;
same can be done for the image shown in the display for your window,&lt;br /&gt;
which is also represented as a file, &lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;/dev/window&lt;/span&gt;.&lt;br /&gt;
This is what we did to capture screen images .&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Notes of Introduction to OS Abstractions Using Plan 9 from Bell Labs(II)</title>
   <link href="http://bo-yang.github.com//2011/02/26/plan9-intro-note-2"/>
   <updated>2011-02-26T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/02/26/plan9-intro-note-2</id>
   <content type="html">&lt;p&gt;	&amp;lt;!--&lt;br /&gt;
		@page { margin: 0.79in }&lt;br /&gt;
		P { margin-bottom: 0.08in }&lt;br /&gt;
	--&amp;gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;man&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;:&lt;br /&gt;
section 1 is for commands, section 8 is fo&lt;/span&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;r&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;font-size:x-small;&quot;&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;commands&lt;br /&gt;
not commonly used by users (i.e., they are intended to administer the&lt;br /&gt;
system), and&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;section&lt;br /&gt;
2 is for C functions and libraries. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;To&lt;br /&gt;
read a manual page found at a particular&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;section,&lt;br /&gt;
you can type the section number and the page name after the man&lt;br /&gt;
command, like in&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;;&lt;br /&gt;
man 1 ls&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;lookman&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;is&lt;br /&gt;
used to search manual.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;sig&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;&lt;br /&gt;
displays the signature, i.e., the prototype for a C function&lt;br /&gt;
documented in section 2 of the manual.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;Flag&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;-m&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;&lt;br /&gt;
asks &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;ls&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;&lt;br /&gt;
to print the name of the user who last modified a file, along with&lt;br /&gt;
the file name.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;cp&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;&lt;br /&gt;
accepts more than one  (source) file name to copy to the destination&lt;br /&gt;
file name. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;We&lt;br /&gt;
can see a dump of the bytes kept within that file using the  program&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;xd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;&lt;br /&gt;
(hexadecimal dump). This program reads a file and writes its contents&lt;br /&gt;
so that it is &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;easy&lt;br /&gt;
for us to read. Option &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;-b&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;&lt;br /&gt;
asks &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;xd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;&lt;br /&gt;
to print the contents as a series of bytes:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;term%&lt;br /&gt;
xd -b TODO&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;0000000&lt;br /&gt;
 63 6f 70 79 20 6d 6b 64 65 70 20 66 72 6f 6d 20&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;0000010&lt;br /&gt;
 6c 65 66 66 65 20 28 2d 72 20 66 6c 61 67 29 0a&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;0000020&lt;br /&gt;
 0a&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;0000021&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;Adding&lt;br /&gt;
option &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;-c&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Trebuchet MS&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;,&lt;br /&gt;
the program prints the character for each byte when feasible:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;term%&lt;br /&gt;
xd -b -c TODO&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;0000000&lt;br /&gt;
 63 6f 70 79 20 6d 6b 64 65 70 20 66 72 6f 6d 20&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;0&lt;br /&gt;
  c  o  p  y     m  k  d  e  p     f  r  o  m   &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;0000010&lt;br /&gt;
 6c 65 66 66 65 20 28 2d 72 20 66 6c 61 67 29 0a&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;10&lt;br /&gt;
  l  e  f  f  e     (  -  r     f  l  a  g  ) /n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;0000020&lt;br /&gt;
 0a&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;20&lt;br /&gt;
 /n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;LEFT&quot;&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;0000021&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p align=&quot;LEFT&quot;&gt;The&lt;br /&gt;
command &lt;span style=&quot;font-family:&#39;Courier New&#39;, monospace;&quot;&gt;nm&lt;/span&gt; (name list)&lt;br /&gt;
displays the names of symbols (i.e., procedure names, variables) that&lt;br /&gt;
are contained or required by our object and executable files.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Plan9自动获取IP地址</title>
   <link href="http://bo-yang.github.com//2011/02/24/ip-addr-in-plan9"/>
   <updated>2011-02-24T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/02/24/ip-addr-in-plan9</id>
   <content type="html">&lt;p&gt;Plan 9的Manual和Wiki上面关于网络配置的介绍，都是以server为原型，前提条件是这些server都会有固定的IP地址，集成DHCP、DNS乃至自己的子网。可我的Plan 9是在VirtualBox4.0的虚拟机上装的，Host是Fedora 14，通过家用无线路由器上网，IP地址动态获取，不可能有固定IP和固定的DNS、Gateway等等。因此&lt;a href=&quot;http://cm.bell-labs.com/wiki/plan9/Network_configuration/index.html&quot;&gt;http://cm.bell-labs.com/wiki/plan9/Network_configuration/index.html&lt;/a&gt;和&lt;a href=&quot;http://plan9.escet.urjc.es/magic/man2html/8/ipconfig&quot;&gt;http://plan9.escet.urjc.es/magic/man2html/8/ipconfig&lt;/a&gt;的方法根本无效。&lt;/p&gt;
&lt;p&gt;VirtualBox4.0安装Plan9时，由于没有选择正确的网卡，Plan9使用了默认的Am79C970A网卡，而Plan 9自身并没有该网卡的驱动。要使用plan9自带的网卡驱动而无须自己编译内核的方法就是在plan9.ini中更改默认网卡的类型，可以参考&amp;nbsp;&lt;a href=&quot;http://plan9.escet.urjc.es/magic/man2html/8/plan9.ini&quot;&gt;http://plan9.escet.urjc.es/magic/man2html/8/plan9.ini&lt;/a&gt;。plan9.ini存储在9fat中，默认不挂载到fossil，因此需要在Rio的窗口中输入命令&amp;ldquo;&lt;span style=&quot;font-family:mceinline;&quot;&gt;9fat:&lt;/span&gt;&amp;rdquo;挂载9fat，然后&lt;span style=&quot;font-family:mceinline;&quot;&gt;cd /n/9fat/&lt;/span&gt;，编辑plan9.ini，加入一行&amp;ldquo;&lt;span style=&quot;font-family:mceinline;&quot;&gt;ether0=type=igbe&lt;/span&gt;&amp;rdquo;。同时VirtualBox的网卡也要选择NAT --&amp;gt; Intel Pro1000系列。重启Plan9之后，可以通过ip/ipconfig检查网卡是否能正常工作&amp;mdash;&amp;mdash;如果不报错，证明网卡正常。&lt;/p&gt;
&lt;p&gt;网卡正常工作后，我曾经尝试使用下列命令配置网络，DHCP可以正常工作，但DNS一直无法解析域名：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;ip/ipconfig -D -d ether /net/ether0&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;尝试更改/lib/ndb/local多次，仍然无效。无奈之下打开&lt;span style=&quot;font-family:mceinline;&quot;&gt;/rc/bin/termrc&lt;/span&gt;，发现其中依然有了网络配置的内容，只是默认被注释掉了，去掉if以及ip/ipconfig两行前面的#后，重启Plan 9，网络竟然正常了！&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;# start IP on the LAN, if not already configured.  diskless terminals
# are already configured by now.  It&#39;s commented out to avoid a long timeout
# on startup waiting for DHCP.
#
# If your site provides DHCP service,
#
#if(! test -e /net/ipifc/0/ctl)
#	ip/ipconfig
#
# Otherwise, see /cfg/$sysname/termrc (/cfg/example/termrc is an example).
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;另外，9vx本身没有虚拟网卡，因此在/net下没有ether0的选项；但是9vx默认是通过宿主机的网卡来上网的，因此一般情况下9vx的网络无须特殊配置（/rc/bin/termrc中也有对vx32的相应处理）。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Plan 9安装Go</title>
   <link href="http://bo-yang.github.com//2011/02/21/install-go-inplan9"/>
   <updated>2011-02-21T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/02/21/install-go-inplan9</id>
   <content type="html">&lt;p&gt;I、安装python和mercurial(hg)&lt;/p&gt;
&lt;p&gt;首先是在term中输入9fs sources, 然后cd到/n/sources/contrib下，参照Plan 9的&lt;a href=&quot;http://plan9.bell-labs.com/wiki/plan9/contrib_index/index.html&quot;&gt;contrib index&lt;/a&gt;，找到&quot;From fgb&#39;s contrib&quot;的python用户名。&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;% 9fs sources
% /n/sources/contrib/fgb/root/rc/bin/contrib/install fgb/contrib
% contrib/install -f bichued/python
% contrib/install -f bichued/hg&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;或者将/n/sources/extra/python.iso.bz2拷到自己的目录下，然后&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;% bunzip2 python.iso.bz2
% 9660srv -f python.iso
% 9fs 9660
% cd /n/9660
% cat README&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;
然后参照README中的说明来安装python。需要注意的是在执行setup脚本之前，应该9fs kfs，否则会出错。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;II、安装Go&lt;br /&gt;
参考&lt;a href=&quot;http://golang.org/doc/install.html&quot;&gt;http://golang.org/doc/install.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;% hg clone -r release https://go.googlecode.com/hg/ go&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;奇怪的是装完mercurial，执行上面的命令之后，总是会报如下的错误：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://bonny95.files.wordpress.com/2011/02/0_1298343128g5li.gif&quot; alt=&quot;plan9 hg error&quot; width=&quot;708&quot; height=&quot;441&quot; /&gt;&lt;/p&gt;
&lt;p&gt;后来在contrib index中找到了contrib/ericvh目录下的go-plan9，尝试用dircp拷到自己目录下，总是会报各种各样的问题。几次失败之后，决定用tar cvf $home/go.tar /n/sources/contrib/ericvh/go-plan9试试。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;2011-02-25更新：&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在VirtualBox的Plan 9虚拟机中按照contrib/install来安装Python, Mercurial和执行hg clone go时并未出现任何错误。看来9vx和Plan9比起来还是很不稳定的。可惜的是Go默认的编译脚本是bash写的，而Plan 9只支持rc，看来只能等将来有时间再研究如何把bash的脚本改成rc了。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Plan 9中使用Abaco</title>
   <link href="http://bo-yang.github.com//2011/02/21/abaco-in-plan9"/>
   <updated>2011-02-21T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/02/21/abaco-in-plan9</id>
   <content type="html">&lt;p&gt;Abaco是Plan 9的一个非常原始的浏览器，要想使用它，必须首先按照下列步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;term% &amp;nbsp;&lt;span&gt;webcookies (可选，如果webfs可以直接运行的话，不必运行webcookies)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;term% &amp;nbsp;webfs&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;term% &amp;nbsp;abaco&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果不启动webfs的话，很可能你会遇到这样的错误：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br /&gt;
&lt;/span&gt;
&lt;pre&gt;term% abaco
*abaco: can&#39;t initialize webfs: &#39;/mnt/web/ctl&#39; does not exist*&lt;/pre&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>xterm中删除键无法使用</title>
   <link href="http://bo-yang.github.com//2011/02/18/xterm-delete-key"/>
   <updated>2011-02-18T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/02/18/xterm-delete-key</id>
   <content type="html">&lt;p&gt;一个困扰了我很久得问题：xterm中&amp;lt;backspace&amp;gt;或&amp;lt;delete&amp;gt;键无法删除敲错的字符，只能使用Ctrl+H或者VI删除模式，很不方便。操作系统是Red Hat Enterprise Linux 5.5。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Google之后发现这个问题比较普遍，但是很多建议都不能解决问题。最终在&lt;a href=&quot;http://forums11.itrc.hp.com/service/forums/questionanswer.do?admit=109447626+1298028466012+28353475&amp;amp;threadId=1158640&quot;&gt;http://forums11.itrc.hp.com/service/forums/questionanswer.do?admit=109447626+1298028466012+28353475&amp;amp;threadId=1158640&lt;/a&gt;发现了一个可行的办法：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;stty erase &amp;lt;backspace&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;当然在设置之前要先用stty -a查看erase=XX是不是已经设置成了&amp;lt;backspace&amp;gt;，即^?。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;如果不想每次打开一个新的xterm之后都要手动输入stty erase &amp;lt;backspace&amp;gt;，可以在.env中加入&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;stty erase&amp;nbsp;^?&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;PS：发现了一个详细解释并彻底解决各种Unix/Linux窗口中&amp;lt;backspace&amp;gt;或&amp;lt;delete&amp;gt;不一致的文章：&lt;a href=&quot;http://www.ibb.net/~anne/keyboard.html&quot;&gt;http://www.ibb.net/~anne/keyboard.html&lt;/a&gt;。转载如下。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;div class=&quot;c1&quot;&gt;The Linux Hall of Shame&lt;/div&gt;
&lt;p class=&quot;c2&quot;&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard.html&quot;&gt;http://www.ibb.net/~anne/keyboard.html&lt;/a&gt;&lt;br /&gt;version 0.6&amp;nbsp;&lt;br /&gt;Last updated 11/18/2008 13:08:02&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;Main Page&lt;/span&gt;|&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboardprev.html&quot;&gt;The Alternative Way&lt;/a&gt;&amp;nbsp;|&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/troubleshooting.html&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;table border=&quot;0&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th colspan=&quot;9&quot;&gt;
&lt;h3&gt;Index&lt;/h3&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td colspan=&quot;5&quot;&gt;
&lt;div class=&quot;c3&quot;&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#intro&quot;&gt;Introduction&lt;/a&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;td colspan=&quot;4&quot;&gt;
&lt;div class=&quot;c3&quot;&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#term&quot;&gt;Terminology&lt;/a&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td colspan=&quot;3&quot;&gt;
&lt;div class=&quot;c3&quot;&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#prob&quot;&gt;The Problem&lt;/a&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;td colspan=&quot;3&quot;&gt;
&lt;div class=&quot;c3&quot;&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#sol&quot;&gt;Solution(work-arounds)&lt;/a&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;td colspan=&quot;3&quot;&gt;
&lt;div class=&quot;c3&quot;&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#overview&quot;&gt;Overview&lt;/a&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td colspan=&quot;9&quot;&gt;
&lt;div class=&quot;c3&quot;&gt;&lt;em&gt;Configuration of environments...&lt;/em&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td colspan=&quot;2&quot;&gt;
&lt;div class=&quot;c3&quot;&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#terminfo&quot;&gt;terminfo&lt;/a&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;td colspan=&quot;2&quot;&gt;
&lt;div class=&quot;c3&quot;&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#Xterm&quot;&gt;Xterm&lt;/a&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;div class=&quot;c3&quot;&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#X&quot;&gt;X&lt;/a&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;td colspan=&quot;2&quot;&gt;
&lt;div class=&quot;c3&quot;&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#Bash&quot;&gt;Bash&lt;/a&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;td colspan=&quot;2&quot;&gt;
&lt;div class=&quot;c3&quot;&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#Tcsh&quot;&gt;Tcsh&lt;/a&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td colspan=&quot;9&quot;&gt;
&lt;div class=&quot;c3&quot;&gt;&lt;em&gt;... and applications&lt;/em&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#athena&quot;&gt;Athena-apps&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#emacs&quot;&gt;Emacs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#joe&quot;&gt;Joe&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#kde&quot;&gt;KDE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#less&quot;&gt;Less&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#nedit&quot;&gt;Nedit&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#netscape&quot;&gt;Netscape&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#pico&quot;&gt;Pico and Pine&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#vim&quot;&gt;Vim&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#mutt&quot;&gt;Mutt&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#other&quot;&gt;Telnet&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;intro&quot;&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;These pages were originally written to address a nagging problem which bothered many people using&amp;nbsp;&lt;a href=&quot;http://www.linux.org/&quot;&gt;Linux&lt;/a&gt;. It has to do with the default behaviour of the BackSpace and Delete keys, which did not behave as expected. The goal of this document was and still is to make [&amp;lt;---] (i.e. the backspace-key on your keyboard) to erase to the left, and make [Delete](i.e. the delete-key) erase under the cursor. It seems all Linux distributions I am aware of have effectively dealt with the issue by now. However still lots of people visit these pages, presumably because the information presented here is applicable to other UNIX flavors and cross-platform environments and applications.&lt;/p&gt;
&lt;p&gt;The keymapping problem can be traced back to the time when computers used punched tapes. The only way to correct a wrongly punched character was to punch additional bits in the tape (or rather, punch additional bits _out_ of the tape). Characters with all the bits punched were treated as deleted characters. See &#39;man ascii&#39; for a list of the ASCII characterset, you&#39;ll see that DEL, (octal 177, decimal 127 and hexadecimal 7F) is the one with all the bits punched in (the ASCII code with the highest value). To be able to overwrite a character it is necessary to undo the feed between the characters first. For this the ASCII BS (octal 010, decimal 8, hexadecimal 08) was used. So to erase the last-typed character, you would have to press first BS to move back one character, and then DEL to delete the character. In newer computers either BS or DEL was chosen to move back and delete in one press.&lt;/p&gt;
&lt;p&gt;The question to use BS or DEL was (and is...) just a matter of choice, just as different operating systems chose different ways to represent newlines, which was done by first issuing a carriage return (CR) and then a line-feed (LF). UNIX chose ASCII LF (hexadecimal 0A) to do both at the same time, Macintosh chose CR and MS-DOS both. Unfortunately, in the BS-DEL case, Linux ended up with two possibilities.&lt;/p&gt;
&lt;p&gt;The essential point in this issue is to go for one way consistently. This page describes a way to consistently use DEL to erase the previous character, the page called&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboardprev.html&quot;&gt;The Alternative Way&lt;/a&gt;&amp;nbsp;describes a way to consistently use BS. On the latter page there are some tips which may be useful regardless of what approach you take.&lt;/p&gt;
&lt;p&gt;Since starting this page in 1997, most distributions have sorted out the issue. Still, some of the fixes/workarounds can be useful when working in a mixed environment, or when working on older systems. And evidently, given the number of hits the page still gets, it&#39;s a situation common to more then a few people ;-)&lt;/p&gt;
&lt;p&gt;If you miss an application on this page, it&#39;s either because the keys are ok in the application (&quot;If it ain&#39;t broken, don&#39;t fix it&quot;), or because I don&#39;t know about it. In either case, don&#39;t hesitate to mail me about it.&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;term&quot;&gt;Terminology&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;Throughout this document, [&amp;lt;---] and [Delete] are used to denote the physical keys on the keyboard, the things you actually press to erase characters. There are a few things to keep in mind: ASCII values can be represented in several equivalent ways. This means that ASCII BS is equivalent to 010 in octal, 8 in decimal and 08 in hexadecimal notation. To show that a number is in hexadecimal notation &#39;0x&#39; is put in front of it. Finally it should be noted that BS and DEL are known to applications by their corresponding control sequences. To sum it up:&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;table border=&quot;0&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;Note:&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ASCII BS == 0x08 == ^H&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ASCII DEL == 0x7f == 0177 == ^?&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;prob&quot;&gt;The problem:&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;The reason the keys (generally) do not work out-of-the-box is partly lack of configuration (as you will see later, simply creating&amp;nbsp;&lt;code&gt;.inputrc/.cshrc&lt;/code&gt;&amp;nbsp;already helps a lot) and a more difficult issue which I will try to describe below.&lt;/p&gt;
&lt;p&gt;The linux console emulates a vt220 terminal which has the following key-mapping:&lt;/p&gt;
&lt;pre&gt;&lt;a name=&quot;vt220&quot;&gt;Linux console/VT220&lt;/a&gt;
Key            KeySymName       Console characters
  --------------------------------------------------
  Ctrl+H   ---&amp;gt;  Control_H  ---&amp;gt;  ASCII  BS (0x08)
  [&amp;lt;---]   ---&amp;gt;  Backspace  ---&amp;gt;  ASCII DEL (0x7f)
  [Delete] ---&amp;gt;  Delete     ---&amp;gt;  &quot;/e[3~&quot;
&lt;/pre&gt;
&lt;p&gt;Note 1: BS (0x08) is equivalent to ^H, which is left to be used by applications (e.g. for help menus in emacs, but it could be anything). DEL is equivalent to ^?, or 0177 (octal) and 0x7f (hex) and &quot;/e[3~&quot; will show up in your xterm (using the&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#trick&quot;&gt;^v-trick&lt;/a&gt;) as ^[[3~. Xterms on the other hand, emulate the vt100 terminal, which didn&#39;t have a [Delete]. It did have a [&amp;lt;---] which generated ASCII BS (but it was in an awkward position and did not serve as rubout).&lt;/p&gt;
&lt;pre&gt;VT100
--
Key            KeySymName       Console characters
  --------------------------------------------------
  Ctrl+H   ---&amp;gt;  Control_H  ---&amp;gt;  ASCII  BS (0x08)
  [&amp;lt;---]   ---&amp;gt;  Backspace  ---&amp;gt;  ASCII DEL (0x7F)
&lt;/pre&gt;
&lt;p&gt;Now here&#39;s how xterm emulates the VT100 terminal:&lt;/p&gt;
&lt;pre&gt;&lt;a name=&quot;vt100&quot;&gt;Xterm&#39;s emulation of VT100&lt;/a&gt;
Key            KeySymName       Console characters
  --------------------------------------------------
  Ctrl+H   ---&amp;gt;  Control_H  ---&amp;gt;  ASCII  BS (0x08)
  [&amp;lt;---]   ---&amp;gt;  Backspace  ---&amp;gt;  ASCII BS (0x08)
  [Delete] ---&amp;gt;  Delete     ---&amp;gt;  ASCII DEL (0x7F)
&lt;/pre&gt;
&lt;p&gt;It may be clear that by default the keys are mapped differently on the console and in xterm. This would be ok if it weren&#39;t for the fact that while on the console ^H is free to be used by applications, in an xterm it is not (instead it&#39;s mapped to the [&amp;lt;---] key). Differences between terminal types are generally dealt with by the terminfo database (see below), mapping terminal specific strings to the correct key. However, in this case, the ^H should&amp;nbsp;&lt;strong&gt;not&lt;/strong&gt;&amp;nbsp;be mapped. Terminfo is not enough, the settings of the terminal (xterm) have to be modified such that ^H is not used.&lt;/p&gt;
&lt;p&gt;In&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboardprev.html&quot;&gt;my previous attempt&lt;/a&gt;&amp;nbsp;at working around the problem, I put most of my effort in trying to map all keys to suit xterm&#39;s vt100 emulation. However, I now propose another way to deal with the problem. This basically means getting xterm to work with the consoles&#39; default settings: [&amp;lt;---] will do ASCII DEL (0x7F, or ^?), and [Delete] will do &quot;/e[3~&quot;. This way ^H is not used for any terminal specific functions, it can be used by applications.&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;sol&quot;&gt;Solution (work-arounds)&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;There is no clear solution, but there are some pretty good work-arounds. What is needed is to tell&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#Xterm&quot;&gt;xterm&lt;/a&gt;&amp;nbsp;how to handle the keys, and then to tell other applications about it (i.e. how xterm handles the keys). The terminfo database contains descriptions of how all kinds of terminals handle (terminal specific) keys. Applications look at the TERM variable, and then search the corresponding database for the value of a certain key, e.g. the left-arrow key, and find the string that corresponds to it. This means that the strings in the database had better correspond to your current xterm settings. This involves modifying xterm&#39;s terminfo entry.&lt;/p&gt;
&lt;p&gt;When you change the keymapping on your own system, you may have problems when accessing other systems. Luckily, this can be worked-around by a script which changes the input it receives to the output that is expected by the application (telnet, rlogin). See the&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#other&quot;&gt;telnet&lt;/a&gt;&amp;nbsp;section.&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;overview&quot;&gt;Overview&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;This table summarizes the modifications needed in the different environments, and the tools it is done with:&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;table border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td rowspan=&quot;2&quot;&gt;
&lt;div class=&quot;c4&quot;&gt;Environment&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/div&gt;
&lt;/td&gt;
&lt;td colspan=&quot;2&quot;&gt;
&lt;div class=&quot;c4&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Configuration files&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/div&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;2&quot;&gt;
&lt;div class=&quot;c4&quot;&gt;Configuration&amp;nbsp;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;div class=&quot;c4&quot;&gt;user&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/div&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;div class=&quot;c4&quot;&gt;&amp;nbsp;systemwide&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#terminfo&quot;&gt;Terminfo&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;nbsp;-&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;terminfo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;infocmp/tic&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#Xterm&quot;&gt;Xterm&lt;/a&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;~/.Xdefaults (*)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;nbsp;/etc/X11/Xresources&amp;nbsp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;xrdb ~/.Xdefaults&amp;nbsp;(*)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#X&quot;&gt;X&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;nbsp;-&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;/etc/X11/xinit/.Xmodmap (**)&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;xmodmap .Xmodmap&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#Bash&quot;&gt;Bash&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;~/.inputrc&lt;/code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;/etc/inputrc&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;export INPUTRC=/etc/inputrc&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#Tcsh&quot;&gt;Tcsh&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;~/.cshrc&lt;/code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;/etc/cshrc&lt;/code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;bindkey (shellcommand)&lt;/code&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;* or&amp;nbsp;&lt;code&gt;.Xresources&lt;/code&gt;&lt;br /&gt;**&amp;nbsp;&lt;code&gt;/etc/X11/XF86Config&lt;/code&gt;&amp;nbsp;also affects the keyboard settings under X&lt;/p&gt;
&lt;hr /&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;terminfo&quot;&gt;Terminfo&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;This is often a problem. When you find that the keys are fine in e.g. vi on the console, but not in an xterm (or vice versa, or both) it means that your xterm-settings do not correspond to the settings listed in the terminfo database. I am not really comfortable with telling you to fiddle with terminfo, please be careful, make backups! If you run the tic command on the modified de-compiled terminfo entry as root, your system&#39;s terminfo database will be modified automagically. Put the original file in a save place so you can run tic on it and restore the original state. Read the manpage. First try it as non-privileged user. You can start with testing a modified xterminfo file (see below) as explained, however, since these are likely to differ from your system&#39;s entry at other points, it&#39;s probably better to modify your own instead. At any rate, first find out whether the terminfo entry for xterm is in accordance with your xterm settings:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;infocmp | grep kbs&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;should return a line which includes&amp;nbsp;&lt;code&gt;kbs=/177&lt;/code&gt;. This means DEL (or ^?) is mapped to the backspace key, which is what we want.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;infocmp | grep kdch1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;should return a line with&amp;nbsp;&lt;code&gt;kdch1=/E[3~&lt;/code&gt;. This means that /E[3~ is mapped to the delete key. Often you will find kbs=^H and/or kdch1=/177, or there will be no kdch1 at all. You can either edit the terminfo entry as described on the&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/troubleshooting.html#termcap&quot;&gt;Troubleshooting-page&lt;/a&gt;&amp;nbsp;(simply setting or adding&amp;nbsp;&lt;code&gt;kdch1=/E[3~&lt;/code&gt;&amp;nbsp;and&amp;nbsp;&lt;code&gt;kbs=/177&lt;/code&gt;, but make a backup first!). Put the file in&amp;nbsp;&lt;code&gt;~/.terminfo/x/xterm&lt;/code&gt;&amp;nbsp;(for testing purposes) and do for bash:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export TERMINFO=~/.terminfo&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and/or for tcsh:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;setenv TERMINFO ~/.terminfo&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Make sure that the TERM variable is set to xterm:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo $TERM&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;should return &quot;xterm&quot;. If it works as intended (do &#39;toe&#39; to check whether the terminfo dir you specified is indeed used, toe will return a list of available terminfo types, only xterm in this case), you can run tic as root, which will copy the file to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/etc/terminfo/x/xterm&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(&lt;a href=&quot;http://www.debian.org/&quot;&gt;debian&lt;/a&gt;) or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/usr/lib/terminfo/x/xterm&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(&lt;a href=&quot;http://www.redhat.com/&quot;&gt;redhat&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;http://www.cdrom.com/&quot;&gt;slackware&lt;/a&gt;). Make backups first, and test it before you replace any files!&lt;/p&gt;
&lt;hr /&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;Xterm&quot;&gt;Xterm&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;The xterm (and friends) only needs little configuration. In the&amp;nbsp;&lt;code&gt;/etc/X11/Xresources&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;~/.Xdefaults&lt;/code&gt;&amp;nbsp;(or wherever it&#39;s merged with the other xresources) add the line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*VT100.Translations: #override /
              &amp;lt;Key&amp;gt;BackSpace: string(0x7F)/n/
              &amp;lt;Key&amp;gt;Delete:    string(&quot;/033[3~&quot;)/n/
              &amp;lt;Key&amp;gt;Home:      string(&quot;/033[1~&quot;)/n/
              &amp;lt;Key&amp;gt;End:       string(&quot;/033[4~&quot;)
*ttyModes: erase ^? 
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Rxvt only uses&amp;nbsp;&lt;code&gt;Xresources&lt;/code&gt;&amp;nbsp;if it is compiled with this option. Since rxvt uses readline, to get home and end to work you will have to edit&amp;nbsp;&lt;code&gt;.inputrc&lt;/code&gt;, see the&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#Bash&quot;&gt;Bash&lt;/a&gt;&amp;nbsp;section).&amp;nbsp;&lt;a href=&quot;http://www.redhat.com/&quot;&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0 goog_qs-tidbit-hilite&quot;&gt;Redhat&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0 goog_qs-tidbit-hilite&quot;&gt;&amp;nbsp;users can pick up the SRPM (source) and compile rxvt themselves&lt;/span&gt;&amp;nbsp;with this&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/feature.h&quot;&gt;feature.h&lt;/a&gt;, ensuring the right keybindings.&lt;/p&gt;
&lt;p&gt;Putting&amp;nbsp;&lt;code&gt;xterm&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;nxterm&lt;/code&gt;&amp;nbsp;in front of&amp;nbsp;&lt;code&gt;*vt100.translations&lt;/code&gt;&amp;nbsp;makes the settings specific for xterm or nxterm. Sometimes this does not seem to work properly, in that case try using both&lt;code&gt;nxterm*VT100.Translations&lt;/code&gt;&amp;nbsp;and&amp;nbsp;&lt;code&gt;xterm*VT100.Translations&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;trick&quot;&gt;BTW, have I told you that&amp;nbsp;&lt;code&gt;Ctrl-v &amp;lt;key&amp;gt;&lt;/code&gt;&amp;nbsp;will tell you what sequence is sent to the shell? Try&amp;nbsp;&lt;code&gt;Ctrl-v [Delete]&lt;/code&gt;, it should give a&amp;nbsp;&lt;code&gt;^[[3~&lt;/code&gt;&amp;nbsp;in your xterm or console (try it with [ESC] and you&#39;ll find ^[, which corresponds to /e for readline apps, and /033 for Xresources).&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1. The syntax of the&amp;nbsp;&lt;code&gt;Xresources&lt;/code&gt;&amp;nbsp;files is very strict, make sure you don&#39;t leave blank spaces after the backslash on each line. Also watch the newline (&lt;code&gt;/n/&lt;/code&gt;) sequences, there shouldn&#39;t be one at the last line of an entry.&lt;br /&gt;2. The sections are named, if you only use&amp;nbsp;&lt;code&gt;*VT100.Translations&lt;/code&gt;&amp;nbsp;it will work for all xterm and friends.&lt;br /&gt;3. For info about&amp;nbsp;&lt;code&gt;Xresources&lt;/code&gt;&amp;nbsp;and other X related stuff refer to&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/X.html&quot;&gt;&lt;code&gt;&#39;man X&#39;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;X&quot;&gt;X&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;If you use&amp;nbsp;&lt;a href=&quot;http://www.xfree86.org/&quot;&gt;XFree86&lt;/a&gt;, make sure you have enable the XKB extensions in&amp;nbsp;&lt;code&gt;/etc/X11/XF86Config&lt;/code&gt;. It is enable by default, so it should be okay. Note the different keyboard layout-options. Now XFree86 will translate the console mapping, and everything should work in X. If you have problems, or want to fiddle with additional characters and things, create an&amp;nbsp;&lt;code&gt;Xmodmap&lt;/code&gt;. Also if you want the keyboard to generate special characters in X,&amp;nbsp;&lt;code&gt;xmodmap&lt;/code&gt;&amp;nbsp;can also be used to configure the function-keys. This is adequately described in the manual page (&lt;code&gt;&#39;man xmodmap&#39;&lt;/code&gt;. Make sure that the following lines are included in your&lt;code&gt;Xmodmap&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;keycode 22 = BackSpace&lt;/code&gt;&lt;br /&gt;&lt;code&gt;keycode 107 = Delete&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Note that the keycodes in X are&amp;nbsp;&lt;strong&gt;not&lt;/strong&gt;&amp;nbsp;the same as in a VT. Use&amp;nbsp;&lt;code&gt;showkey&lt;/code&gt;&amp;nbsp;to see the keycodes generated by the keyboard in a VT, and&amp;nbsp;&lt;code&gt;xev&lt;/code&gt;&amp;nbsp;in X. There is an excellent graphical front end for X-keyboard configuration:&amp;nbsp;&lt;code&gt;xkeycaps&lt;/code&gt;. Refer to the&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#netscape&quot;&gt;Netscape section&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another way of generating special characters in X (without using&amp;nbsp;&lt;code&gt;xmodmap&lt;/code&gt;) is by defining a Compose-key (for use as a &quot;dead key&quot;) in&amp;nbsp;&lt;code&gt;XF86Config&lt;/code&gt;&amp;nbsp;in the Keyboard section:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  RightCtl        Compose
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now you have a compose-key with the same properties as the one described in the&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboardprev#VT&quot;&gt;VT&lt;/a&gt;&amp;nbsp;section. Remember to set the environment variable&amp;nbsp;&lt;code&gt;LC_CTYPE=iso-8859-1&lt;/code&gt;&amp;nbsp;(see&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboardprev.html#VTopt&quot;&gt;VT optional...&lt;/a&gt;). Consult&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/XF86Config.man.html&quot;&gt;&lt;code&gt;&#39;man XF86Config&#39;&lt;/code&gt;&lt;/a&gt;&amp;nbsp;if you want to know more.&amp;nbsp;&lt;strong&gt;Note&lt;/strong&gt;: this doesn&#39;t seem work rxvt.&lt;br /&gt;Alternatively, owners of a windows keyboard (one with extra buttons, it need not be a M$ natural keyboard) can enable the&amp;nbsp;&lt;code&gt;XKEYBOARD&lt;/code&gt;&amp;nbsp;extension (enabled per default) in&amp;nbsp;&lt;code&gt;XF86Config&lt;/code&gt;&amp;nbsp;and uncomment the line (follow the instructions in the file):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  XkbModel    &quot;microsoft&quot; 
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now you can use the button with the windows flag on it to produce a great number of exotic characters, just press it in combination with e.g. a, producing &amp;aacute; (a clear disadvantage is that there is no logic in the location of the special characters at all...).&lt;/p&gt;
&lt;p&gt;Yet another way to use &quot;dead keys&quot; in X is by installing a modified version of libX11 which includes support for dead keys (transparent for all apps). First, get the modified version of libX11 (make sure you get the right version, if you use glibc replace both libX11, ELF-libc5 and ELF-libc6). Now, deactivate the XKB extension of XFree86 (edit&amp;nbsp;&lt;code&gt;XF86Config&lt;/code&gt;&amp;nbsp;and run xmodmap on a Xmodmap file with dead keys like dead_acute, dead_grave, dead_cedilla, dead_ogonek and a Multi_keys one too.&lt;/p&gt;
&lt;p&gt;A special case is if you use xdm, you need to deactivate XKB from the&amp;nbsp;&lt;code&gt;/etc/X11/xdm/Xservers&lt;/code&gt;&amp;nbsp;file, passing a -kb parameter to the server like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:0 local /usr/X11R6/bin/X -kb
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;then in&amp;nbsp;&lt;code&gt;/etc/X11/xdm/Xsetup_0&lt;/code&gt;&amp;nbsp;file add a line to load the Xmodmap, like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if [ -r /etc/X11/xinit/.Xmodmap ]; then
        /usr/X11R6/bin/xmodmap /etc/X11/xinit/.Xmodmap
fi
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now chars accesible by AltGr, dead keys or compose are usable in xdm too.&lt;/p&gt;
&lt;h4&gt;More Composing Talk&lt;/h4&gt;
&lt;p&gt;A problem common to all compose schemes is that while some composing systems make more sense than others, none of them make all of the iso_8859_1 characters readily accessible, simply because it is impossible to remember the combinations for all characters. So instead of, or in addition to getting special libraries, it is often desirable to simply have a list of characters you can copy from, a poor man&#39;s iso_8859_1 table so to speak. Just grab you favorite editor, open a file called iso_8859_1 (or any other name, but check the name and path) and put in all iso_8859_1 characters. Wait, here they are (you may want to create a different order):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;iexcl; &amp;cent; &amp;pound; &amp;curren; &amp;yen; &amp;brvbar; &amp;sect; &amp;uml; &amp;copy; &amp;ordf; &amp;laquo; &amp;not; &amp;shy; &amp;reg; &amp;macr; &amp;deg; &amp;plusmn; &amp;amp;sup2; &amp;amp;sup3; &amp;acute; &amp;micro; &amp;para; &amp;middot; &amp;cedil; &amp;amp;sup1; &amp;ordm; &amp;raquo; &amp;amp;frac14; &amp;amp;frac12; &amp;amp;frac34; &amp;iquest; &amp;Agrave; &amp;Aacute; &amp;Acirc; &amp;Atilde; &amp;Auml; &amp;Aring; &amp;AElig; &amp;Ccedil;
&amp;Egrave; &amp;Eacute; &amp;Ecirc; &amp;Euml; &amp;Igrave; &amp;Iacute; &amp;Icirc; &amp;Iuml; &amp;ETH; &amp;Ntilde; &amp;Ograve; &amp;Oacute; &amp;Ocirc; &amp;Otilde; &amp;Ouml; &amp;times; &amp;Oslash; &amp;Ugrave; &amp;Uacute; &amp;Ucirc; &amp;Uuml; &amp;Yacute; &amp;THORN; &amp;szlig; &amp;agrave; &amp;aacute; &amp;acirc; &amp;atilde; &amp;auml; &amp;aring; &amp;aelig; &amp;ccedil; &amp;egrave; &amp;eacute; &amp;ecirc; &amp;euml; &amp;igrave; &amp;iacute; &amp;icirc;
&amp;iuml; &amp;eth; &amp;ntilde; &amp;ograve; &amp;oacute; &amp;ocirc; &amp;otilde; &amp;ouml; &amp;divide; &amp;oslash; &amp;ugrave; &amp;uacute; &amp;ucirc; &amp;uuml; &amp;yacute; &amp;thorn; &amp;yuml; 
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now you need a way to display them (millions of options here, I bet you can do all kinds of crazy things with fonts, colors, pixmaps, borders...). The script assumes the file with the characters is in&lt;code&gt;/usr/local/lib&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 

#!/bin/bash 
export LESSCHARSET=latin1 
exec xterm -T Iso_8859_1-TABLE -geometry 77x4 +sb -bg SteelBlue -fg white /
-fn lucidasanstypewriter-bold-12 -e less /usr/local/lib/iso_8859_1

&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Refer to the manual page of iso_8859_1. If you do &#39;man iso_8859_1&#39; but you don&#39;t see any special characters, edit&amp;nbsp;&lt;code&gt;/etc/man.config&lt;/code&gt;, and change the following line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NROFF         /usr/bin/groff -Tascii -mandoc
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NROFF         /usr/bin/groff -Tlatin1 -mandoc
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now try &#39;man -c iso_8859_1&#39; (the -c option is to make sure man does not use an old cat file).&lt;/p&gt;
&lt;hr /&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;Bash&quot;&gt;Bash&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;Create a file,&amp;nbsp;&lt;code&gt;/etc/inputrc&lt;/code&gt;&amp;nbsp;for system wide use or&amp;nbsp;&lt;code&gt;~/.inputrc&lt;/code&gt;&amp;nbsp;for personal use. Actually, this is the readline initialization file, readline is a library that some programs (bash, kvt) use to read input (try&amp;nbsp;&lt;code&gt;bind -v&lt;/code&gt;&amp;nbsp;to see a list of readline key and function bindings). Cut and paste the following in the file to make the Delete key delete characters under the cursor, and make Home and End work as well:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&quot;/e[3~&quot;: delete-char
# this is actually equivalent to &quot;/C-?&quot;: delete-char
# VT
&quot;/e[1~&quot;: beginning-of-line
&quot;/e[4~&quot;: end-of-line
# kvt
&quot;/e[H&quot;:beginning-of-line
&quot;/e[F&quot;:end-of-line
# rxvt and konsole (i.e. the KDE-app...)
&quot;/e[7~&quot;:beginning-of-line
&quot;/e[8~&quot;:end-of-line
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If a system-wide&amp;nbsp;&lt;code&gt;/etc/inputrc&lt;/code&gt;&amp;nbsp;was created, add the following line to&amp;nbsp;&lt;code&gt;/etc/profile&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export INPUTRC=/etc/inputrc&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Make sure that the stty erase character is set to&amp;nbsp;&lt;code&gt;^?&lt;/code&gt;. Type&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;stty -a | grep erase&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and check if it says&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;erase = ^?;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If it is set to something else (e.g.&amp;nbsp;&lt;code&gt;^H&lt;/code&gt;) then put the following line in both&amp;nbsp;&lt;code&gt;.bashrc&lt;/code&gt;&amp;nbsp;and in either&amp;nbsp;&lt;code&gt;.bash_profile&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;/etc/profile&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  if tty --quiet ; then
    stty erase &#39;^?&#39;
  fi
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and for xterm and rxvt add this to&amp;nbsp;&lt;code&gt;.Xdefaults&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*ttyModes: erase ^?
&lt;/code&gt;            
&lt;/pre&gt;
&lt;p&gt;If you create&amp;nbsp;&lt;code&gt;/etc/inputrc&lt;/code&gt;, note that Bash will ignore&amp;nbsp;&lt;code&gt;~/.inputrc&lt;/code&gt;&amp;nbsp;(currently this happens in all distributions except Debian, however, this might change in the future). As an alternative, you can edit&lt;code&gt;~/.inputrc&lt;/code&gt;, and copy this to&amp;nbsp;&lt;code&gt;/etc/skel/&lt;/code&gt;, so it&#39;s in the home directories of all new users.&lt;br /&gt;Push the key-combination &#39;&lt;code&gt;Ctrl-x-r&lt;/code&gt;&#39; (push the control-key, the x-key. release it, push the r-key, release it, and then release the control-key) to see if the changes in&amp;nbsp;&lt;code&gt;inputrc&lt;/code&gt;&amp;nbsp;take effect. Or just login again, and it will work.&lt;/p&gt;
&lt;p&gt;You can also change the keybindings on the fly with the&amp;nbsp;&lt;code&gt;bind&lt;/code&gt;&amp;nbsp;command, e.g:&lt;/p&gt;
&lt;pre&gt;[localhost]&amp;gt; bind &quot;/C-?&quot;: backward-delete-char
&lt;/pre&gt;
&lt;p&gt;This is useful to test different keybindings, if they work you can put them in&amp;nbsp;&lt;code&gt;~/.inputrc&lt;/code&gt;. Read all about it in the readline manpage.&lt;/p&gt;
&lt;p&gt;People using keymaps with e.g. Scandinavian characters who would like bash to display these characters (&amp;oslash;l;-) have to add the following lines in&amp;nbsp;&lt;code&gt;.inputrc&lt;/code&gt;:&lt;br /&gt;&lt;code&gt;set convert-meta off&lt;/code&gt;&lt;br /&gt;&lt;code&gt;set output-meta on&lt;/code&gt;&lt;br /&gt;&lt;code&gt;set input-meta on&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For more info, check the&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/Danish-HOWTO.gz&quot;&gt;&lt;code&gt;Danish-HOWTO&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;Tcsh&quot;&gt;Tcsh&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;If you use the tcsh shell, put the following lines in your&amp;nbsp;&lt;code&gt;/etc/cshrc&lt;/code&gt;&amp;nbsp;or your personal&amp;nbsp;&lt;code&gt;~/.cshrc file:&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#.cshrc
 if ($term == &quot;xterm&quot; || $term == &quot;vt100&quot; /
            || $term == &quot;vt102&quot; || $term !~ &quot;con*&quot;) then
          # bind keypad keys for console, vt100, vt102, xterm
          bindkey &quot;/e[1~&quot; beginning-of-line  # Home
          bindkey &quot;/e[7~&quot; beginning-of-line  # Home rxvt
          bindkey &quot;/e[2~&quot; overwrite-mode     # Ins
          bindkey &quot;/e[3~&quot; delete-char        # Delete
          bindkey &quot;/e[4~&quot; end-of-line        # End
          bindkey &quot;/e[8~&quot; end-of-line        # End rxvt
      endif
 &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To see whether it works or not, type:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[localhost]&amp;gt; source .cshrc&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;hr /&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;athena&quot;&gt;Athena Applications&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;For programs using the Athena widgets (xpaint, xbmbrowser, xman, xmh, xedit, pixmap, bitmap, editres...) put the following in&amp;nbsp;&lt;code&gt;.Xdefaults&lt;/code&gt;&amp;nbsp;to get Delete to work:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*Text.translations:    #override / 
    ~Shift ~Meta &amp;lt;Key&amp;gt;Delete: delete-next-character()
&lt;/code&gt;
&lt;/pre&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;emacs&quot;&gt;Emacs&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;In emacs, [&amp;lt;---] and [Delete] are by default configured to both erase the character on the left of the cursor. To change this, you can either edit the file&amp;nbsp;&lt;code&gt;x-win.el&lt;/code&gt;&amp;nbsp;in the emacs root directory, and find the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
;; Map certain keypad keys into ASCII characters
;; that people usually expect.
(define-key function-key-map [backspace] [127])
(define-key function-key-map [delete] [127])

&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and change the last line to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(define-key function-key-map [delete] [deletechar])

&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Alternatively you can add&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(define-key function-key-map [delete] [deletechar])

&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;to your ~/.emacs file. On a related note, by default in emacs the HOME key brings you to the beginning of the buffer (i.e. top of the document). Likewise the END key brings you to the end of the buffer. Adding the lines&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
(define-key global-map [home] `beginning-of-line)
(define-key global-map [end] `end-of-line)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;to your&amp;nbsp;&lt;code&gt;~/.emacs&lt;/code&gt;&amp;nbsp;make these keys move you to the beginning and end of the current line. Note that the M-&amp;lt; and M-&amp;gt; keybindings remain untouched and can still be used to go to the beginning and end of the buffer.&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;joe&quot;&gt;Joe&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;First find the file joerc. It is most likely&amp;nbsp;&lt;code&gt;/usr/lib/joe/joerc&lt;/code&gt;, but sometimes&amp;nbsp;&lt;code&gt;/etc/joerc&lt;/code&gt;, or maybe even&amp;nbsp;&lt;code&gt;/usr/local/lib/joerc&lt;/code&gt;. Try&amp;nbsp;&lt;code&gt;&#39;locate joerc&#39;&lt;/code&gt;&amp;nbsp;if you can&#39;t find the file. Make a backup for safety, or copy it to .joerc in your home directory, and change/add the following lines in the section &quot;Standard JOE user interface&quot; in joerc:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bol              ^[ [ H          # Standard xterm escape seq.
bol              ^[ [ 1 ~        # Standard VT escape seq.
bol              ^[ [ 7 ~        # rxvt
eol              ^[ [ F          # Standard xterm escape seq.
eol              ^[ [ 4 ~        # Standard VT escape seq.
eol              ^[ [ 8 ~        # rxvt
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&amp;nbsp;that you first have to make sure that Home and End work in an&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#Xterm&quot;&gt;xterm&lt;/a&gt;. Check out&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/joe.html&quot;&gt;&lt;code&gt;&#39;man joe&#39;&lt;/code&gt;&lt;/a&gt;. BTW, these modifications apply to&amp;nbsp;&lt;code&gt;jpicorc&lt;/code&gt;,&amp;nbsp;&lt;code&gt;jstarrc&lt;/code&gt;&amp;nbsp;and&amp;nbsp;&lt;code&gt;jmacsrc&lt;/code&gt;&amp;nbsp;as well.&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;kde&quot;&gt;KDE&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://www.kde.org/&quot;&gt;KDE&lt;/a&gt;&amp;nbsp;provides a new alternative to kvt called konsole. To get the home/end keys to work in konsole you have to put:&lt;/p&gt;
&lt;pre&gt; 
&lt;code&gt;&quot;/e[H&quot;:beginning-of-line
&quot;/e[F&quot;:end-of-line
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;in&amp;nbsp;&lt;code&gt;.inputrc&lt;/code&gt;. Additionally, make sure that you have checked the &#39;&lt;code&gt;BS sends DEL&lt;/code&gt;&#39; checkbox (right mouse click, or through the &#39;Options&#39; pulldown menu). In kvt,&amp;nbsp;&lt;a href=&quot;http://www.kde.org/&quot;&gt;KDE&#39;s&lt;/a&gt;&amp;nbsp;home and end can be configured by editing&amp;nbsp;&lt;code&gt;~/.inputrc&lt;/code&gt;&amp;nbsp;(&lt;code&gt;tcsh&lt;/code&gt;&amp;nbsp;users too, it uses readline):&lt;/p&gt;
&lt;pre&gt; 
&lt;code&gt;&quot;/e[H&quot;:beginning-of-line
&quot;/e[F&quot;:end-of-line
&lt;/code&gt;
&lt;/pre&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;less&quot;&gt;Less&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;Less is ok on some systems. If it is not on yours, try the following. Create a file,&amp;nbsp;&lt;code&gt;/etc/lesskey&lt;/code&gt;, for system-wide use. This will be a&amp;nbsp;&lt;code&gt;lesskey&lt;/code&gt;&amp;nbsp;input file. Put the following lines in the file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#line-edit
/e[3~          delete
/e[1~          home
/e[4~          end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Save the file, and compile it as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[localhost]&amp;gt; lesskey -o /etc/less /etc/lesskey&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Add the following line to /etc/profile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export LESS=&quot;-MM -k/etc/less&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now type:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[localhost]&amp;gt; . /etc/profile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;By fiddling with these settings you should be able to get less to accept (all of) the holy keycodes, at least, it works on my computer. For some exciting reading, check&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/lesskey.html&quot;&gt;&lt;code&gt;&#39;man lesskey&#39;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;nedit&quot;&gt;Nedit&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;Put the following in&amp;nbsp;&lt;code&gt;~/.Xdefaults&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; nedit.remapDeleteKey: False&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Save the file, and the next time you start&amp;nbsp;&lt;a href=&quot;http://www-pat.fnal.gov/nirvana/nedit.html&quot;&gt;nedit&lt;/a&gt;&amp;nbsp;the Delete key will do what we want it to: delete under the cursor. Note: you can also put the line in&amp;nbsp;&lt;code&gt;~/.nedit&lt;/code&gt;, but every time you save the default settings, the&lt;code&gt;.nedit&lt;/code&gt;&amp;nbsp;file will be overwritten, and you&#39;ll have to (n)edit it again.&lt;/p&gt;
&lt;p&gt;Note the nedit, as e.g. netscape, is a motif application. This means that it uses the XKeysymDB, see thet netscape section.&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;netscape&quot;&gt;Netscape&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;The keys should be ok, as long as the XKeysymDB is installed in one of the places where netscape looks (where netscape itself is installed, or&amp;nbsp;&lt;code&gt;/usr/X11R6/lib/X11/&lt;/code&gt;). XKeysymDB is similar to an xmodmap file, but with a very cryptic and poorly documented syntax. Luckily, it does do the delete/backspace thing right, so no sweat.&lt;/p&gt;
&lt;p&gt;If you use xmodmap, you may want to check out the graphical front end for X-keyboard configuration:&amp;nbsp;&lt;code&gt;xkeycaps&lt;/code&gt;. Get the .rpm at&amp;nbsp;&lt;a href=&quot;ftp://ftp.redhat.com/pub/redhat/&quot;&gt;RedHat Powertools&lt;/a&gt;, or get the&amp;nbsp;&lt;a href=&quot;http://www.debian.org/Packages/stable/x11/xkeycaps.html&quot;&gt;Debian-package&lt;/a&gt;&amp;nbsp;(or plain tarball). It&#39;s a nice tool. You can also look for a default Xmodmap file on your system. At any rate, make sure that the following is in the file:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;keycode 22 = BackSpace&lt;br /&gt;keycode 107 = Delete&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;alternatively, you can put it in e.g. your .Xclients file, or in&amp;nbsp;&lt;code&gt;/etc/X11/xdm/Xsetup_0&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# map the [&amp;lt;---] key to the [BackSpace] keysym.
xmodmap -e &quot;keycode 22 = BackSpace&quot;
# map the [Delete] key to the [Delete] keysym.
xmodmap -e &quot;keycode 107 = Delete&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;pico&quot;&gt;Pico and Pine&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;I found that while the keys worked in a VT, in xterms only backspace works. This was caused by the&amp;nbsp;&lt;code&gt;.Xdefaults&lt;/code&gt;&amp;nbsp;modifications. If you use the&amp;nbsp;&lt;code&gt;~/.inputrc&lt;/code&gt;&amp;nbsp;to get Delete to work in xterms (and then pico and pine will be able to use Delete), however, this creates problems with other apps (e.g. joe) which cannot be easily solved because joe relies on the&amp;nbsp;&lt;code&gt;.Xdefaults&lt;/code&gt;&amp;nbsp;modifications to get the keys right. Anyway, it turns out that&amp;nbsp;&lt;a href=&quot;http://www.washington.edu/pine/&quot;&gt;pine&lt;/a&gt;&amp;nbsp;and pico are simply broken, as the workaround will clearly demonstrate. Admittedly broken is a relative thing in all this keyboard-confusion: from the other method&#39;s perspective they are perfectly ok. One thing is for sure, these two apps are exceptions. Try the following: make an expect script (let&#39;s call it picofix):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/usr/bin/expect

eval spawn -noecho $argv

interact {
 /177        {send &quot;/010&quot;}
 &quot;/033/[3~&quot;  {send &quot;/004&quot;}
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Make picofix executable, and start the editor (or pine) with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;picofix pico&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and it will work (then you can make an alias or a wrapper). Thanks to Philip Hands for this ingenious (and powerful!) workaround. You can also use an alternate editor. Edit&amp;nbsp;&lt;code&gt;.pinerc&lt;/code&gt;&amp;nbsp;and find the following lines:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# Specifies the program invoked by ^_ in the Composer,&lt;br /&gt;# or the &quot;enable-alternate-editor-implicitly&quot; feature.&lt;br /&gt;editor=&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can enter the command for any editor here, e.g.&amp;nbsp;&lt;code&gt;joe&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;vi&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you want the editor to be started right away, start&amp;nbsp;&lt;code&gt;pine&lt;/code&gt;, enter&amp;nbsp;&lt;code&gt;SETUP&lt;/code&gt;&amp;nbsp;and&amp;nbsp;&lt;code&gt;Config&lt;/code&gt;&amp;nbsp;and select the&amp;nbsp;&lt;code&gt;enable-alternate-editor-implicitly&lt;/code&gt;&amp;nbsp;option. Now the editor of choice will be started automagically when you start writing a message.&lt;/p&gt;
&lt;p&gt;Pico fans may want to try jpico, which is basically joe with pico keybindings (and all the extra&#39;s joe offers). Others my be even smarter and switch to&amp;nbsp;&lt;a href=&quot;http://www.vim.org/&quot;&gt;vim&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&quot;http://www.mutt.org/&quot;&gt;mutt&lt;/a&gt;. Note that the first can be taught to do the&lt;code&gt;Ctrl-j&lt;/code&gt;-trick, the latter can use pine keybindings.&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;vim&quot;&gt;Vim&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;Vim uses&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#terminfo&quot;&gt;terminfo&lt;/a&gt;, so the keys should be ok if your terminfo is. However, if it is not, you can still get the keys to work in vim. Type&amp;nbsp;&lt;code&gt;:help fixdel&lt;/code&gt;&amp;nbsp;in vim and read all about it.&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;mutt&quot;&gt;Mutt&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;Put the following line in&amp;nbsp;&lt;code&gt;~/.muttrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;bind editor &amp;lt;delete&amp;gt; delete-char
&lt;/pre&gt;
&lt;p&gt;This will make [Delete] do its job in&amp;nbsp;&lt;a href=&quot;http://www.mutt.org/&quot;&gt;mutt&#39;s&lt;/a&gt;&amp;nbsp;internal pager.&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;other&quot;&gt;Telnet&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;If you have modified&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#terminfo&quot;&gt;terminfo&lt;/a&gt;&amp;nbsp;and you are e.g. telnetting to a machine with a default terminfo (for xterm usually), you can use the following script (let&#39;s call it kbdfix) to change the keysequences you generate to the ones the program expects:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/usr/bin/expect

eval spawn -noecho $argv

interact {
 /177        {send &quot;/010&quot;}
 &quot;/033/[3~&quot;  {send &quot;/177&quot;}
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you press [&amp;lt;---], expect will receive /177 (equivalent to 0x7F and ^?, see the&amp;nbsp;&lt;a href=&quot;http://www.ibb.net/~anne/keyboard/keyboard.html#vt220&quot;&gt;VT220 table&lt;/a&gt;) and it will send /010 (equivalent to ^H) along to telnet, which will result in [&amp;lt;---] at the other end. Make it executable and use&amp;nbsp;&lt;code&gt;kbdfix telnet brokenhost&lt;/code&gt;. Thanks to Philip Hands for this clever workaround.&lt;/p&gt;
&lt;p&gt;The logical next step is to automate the trick. Create a file,&amp;nbsp;&lt;code&gt;/etc/broken-backspace-hosts&lt;/code&gt;&amp;nbsp;(or a shorter name...). In this file, list the hosts which expect ^H and ^? instead of ^? and ^[[3~. Now you can make a wrapper for telnet as shown below. This particular script assumes that the telnet binary has been renamed telnet.orig, and that the kbdfix script described in the previous section is somewhere in your path):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
#!/bin/sh

if [ &quot;$#&quot; -ge 1 ]; then
        if grep -wq &quot;$@&quot; /etc/broken-backspace-hosts ; then
                exec kbdfix telnet.orig &quot;$@&quot;
        else
                exec telnet.orig &quot;$@&quot;
        fi
else
        exec telnet.orig
fi

&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;From now on, when you use telnet, the script will check whether the host you are telnetting to is considered broken (listed in the /etc/broken-backspace-hosts file). If it is, the expect script (kbdfix) will be used, if not, telnet will be started directly. Without arguments the original telnet executable will run (thanks to Jason Bonser for this addition). You can do the same for rlogin, although rlogin can&#39;t be moved (i.e. won&#39;t work when it isn&#39;t called rlogin).&lt;/p&gt;
&lt;hr /&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;h2&gt;&lt;a name=&quot;ref&quot;&gt;References&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;The Linux Keyboard and Console HOWTO&lt;/li&gt;
&lt;li&gt;Linux Keyboard Setup Mini-Howto&lt;/li&gt;
&lt;li&gt;Consistent Keyboard Configuration&#39; article (&lt;a href=&quot;http://www.ssc.com/lj/&quot;&gt;LJ&lt;/a&gt;&amp;nbsp;issue #38, June 97)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Danish-HOWTO&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&lt;a href=&quot;http://www.cnr.berkeley.edu/~casterln/tcsh&quot;&gt;Tcsh documentation&lt;/a&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fixkeys Mini Howto&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Bash&lt;/code&gt;&amp;nbsp;documentation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;man showkey&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;man X&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;man XF86Config&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;man lesskey&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;man joe&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Dead keys under X11&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;This document was put together by Anne Baretta&amp;nbsp;&lt;em&gt;(anne (at) ibb.net)&lt;/em&gt;. Please mail me if you find mistakes, tY-pO&#39;s, alternative or plain better solutions. A few people have already pointed out many mistakes (there simply cannot be that many left...), which improved the document a lot.&amp;nbsp;I would like to thank all the people who contributed to the page, and Thomas Telkamp for hosting the site.&lt;/p&gt;
&lt;div class=&quot;c3&quot;&gt;&lt;a href=&quot;http://www.nedstat.nl/cgi-bin/viewstat?name=keyboardtel&quot;&gt;&lt;img src=&quot;http://www.nedstat.nl/cgi-bin/nedstat.gif?name=keyboardtel&quot; border=&quot;0&quot; alt=&quot;page statistics&quot; width=&quot;16&quot; height=&quot;16&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;c3&quot;&gt;
&lt;address class=&quot;c5&quot;&gt;This page is maintained by Anne Baretta.&amp;nbsp;&lt;br /&gt;Last updated 11/18/2008 13:08:02&lt;/address&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>9vx tutorial: running a cpu server from kfs (RFC)</title>
   <link href="http://bo-yang.github.com//2011/02/16/pvx-tutorial"/>
   <updated>2011-02-16T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/02/16/pvx-tutorial</id>
   <content type="html">&lt;p&gt;原文：&lt;a href=&quot;http://groups.google.com/group/comp.os.plan9/browse_thread/thread/2db7a483a46f9acd&quot;&gt;&amp;nbsp;http://groups.google.com/group/comp.os.plan9/browse_thread/thread/2db7a483a46f9acd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;
&lt;p&gt;&lt;span&gt;【说明】&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;本文是yiyus发布在9fans上的一篇教程。文中用到的9vx是yiyus维护的分支：&lt;/span&gt;&lt;a href=&quot;http://bytebucket.org/yiyus/vx32/overview&quot;&gt;http://bytebucket.org/yiyus/vx32/overview&lt;/a&gt;。根据yiyus在9fans中的说明，他的9vx分支是从ron的分支上更改的。vx32/9vx的创始人Russ Cox最近在9fans中声明他本人已经放弃了对9vx的维护，准备将所有权限转交给ron minnich（八卦一下：Russ Cox现在是Google Go语言的核心成员之一，正与Rob Pike，Ken Tompson等原plan9的元老一起维护Go&amp;hellip;&amp;hellip;）。&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;&amp;nbsp;-------------------------------------------------------&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;
&lt;h1 id=&quot;zw-12e2e7c010cc6H2Tp3916c&quot;&gt;&lt;span id=&quot;zw-12e2ede98aavnmvgj3916c&quot;&gt;9vx tutorial:&lt;/span&gt;&lt;span id=&quot;zw-12e2edec946BgJF9J3916c&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2ede99882FtZgu3916c&quot;&gt;running a cpu server from kfs (RFC)&lt;/span&gt;&lt;span id=&quot;zw-12e2ede9988SM7byw3916c&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/h1&gt;
&lt;p id=&quot;zw-12e2e7c3536WlOKdt3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c3537XVH5MS3916c&quot;&gt;This tutorial is a work in progress (it will eventually be added to&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e7c3537arcii83916c&quot;&gt;the 9vx documentation and probably to the Plan 9 wiki). Please let me&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e7c3537TL8RB33916c&quot;&gt;know if you see anything I&#39;m doing wrong (unfortunately I don&#39;t have&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e7c3537whmwf43916c&quot;&gt;too much experience&amp;nbsp;with real Plan 9 systems of more than one&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e7c3537XtRCA3916c&quot;&gt;machine). In particular, I don&#39;t know why I could not use mkfs instead&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e7c3537gPJh1d3916c&quot;&gt;of dircp. The line&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e94864bSyqBpZ3916c&quot;&gt;&lt;span id=&quot;zw-12e2e94864bEE4NC33916c&quot;&gt;&amp;nbsp;&amp;nbsp;
&lt;pre&gt; % disk/mkfs -s /n/9660 /sys/lib/sysconfig/proto/allproto &lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e3eEKEBu13916c&quot;&gt;&lt;span id=&quot;zw-12e2e95854a9D-czm3916c&quot;&gt;gave me this error:&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2edec95bhi6LFZ3916c&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1df8QFHSYZ3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1df9E8SbsK3916c&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e960dcaLCGKRy3916c&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;&lt;span id=&quot;zw-12e2edf46e0GLLVZ3916c&quot;&gt;mkfs: /sys/lib/sysconfig/proto/allproto:1: can&#39;t move tmp file to&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e95e07btk4zLw3916c&quot;&gt;/n/kfs/dist/replica/plan9.compressed.db: wstat -- unknown type/mode&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1dfaWgaIQN3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1dfbpYEmbw3916c&quot;&gt;Anyway, these instructions are working here. Please, let me know if&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e965525WjSCTn3916c&quot;&gt;they work for you too.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1dfcHzaUAw3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1dfdxBy3T73916c&quot;&gt;By the way, this tutorial is only the first one, but I&#39;d like to have&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e967f47zy0X-O3916c&quot;&gt;some more. For example, to run several 9vx instances in a private&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e9686a5ISlVW83916c&quot;&gt;network using the tap device and to run 9vx from fossil backed up by&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e968f83cjlZom3916c&quot;&gt;p9p&#39;s venti. Contributions are welcomed ;-)&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e00sZ2bi3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e01DWUEbQ3916c&quot;&gt;----------------------------------------------------------------------&lt;/span&gt;&lt;span id=&quot;zw-12e2edec95cu_sRsD3916c&quot;&gt;​&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e02ZfffOa3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e03rCtzas3916c&quot;&gt;This is a brief tutorial on how to run a 9vx cpu server from a kfs&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e970b10h9TSbm3916c&quot;&gt;file system. You will need 9vx, a plan9.iso and some free disk space.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e04R1Jx63916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e05bbvaaI3916c&quot;&gt;First, go to the destination directory and install 9vx:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e05svn39h3916c&quot;&gt;&lt;span id=&quot;zw-12e2eefeb87mcWL1O3916c&quot;&gt;&amp;nbsp;&amp;nbsp;
&lt;pre&gt;$ hg clone http://bitbucket.org/yiyus/vx32/ 
$ cd vx32/src/ 
$ make 9vx/9vx &amp;amp;&amp;amp; sudo make 9vx/install &lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e09V3a83916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e09GQZ4fp3916c&quot;&gt;(&lt;strong&gt;Commands run on the host are preceded by $, commands run from inside&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;span id=&quot;zw-12e2e988e4bNr603d3916c&quot;&gt;&lt;strong&gt;9vx are preceded with %&lt;/strong&gt;)&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e0aSQCEmh3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e0b-b3A9E3916c&quot;&gt;You can check that 9vx is working running the minimal system embedded&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e98ab92nzZNTv3916c&quot;&gt;in the executable. The rcvx script should take you to a vx32% rc&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e98b4ffnklqHV3916c&quot;&gt;prompt in the current directory. Once you have played a bit with a&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e98c1bbOW6Z2h3916c&quot;&gt;rootless 9vx type exit to go back to your host system.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e0d_O1Dd3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e0eZiwMVZ3916c&quot;&gt;rcvx is cool but you will want a full Plan 9 tree to have real fun.&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2edec95f8uPmz3916c&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e41YAeJd_3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e0ezorRNc3916c&quot;&gt;Let&#39;s boot from the iso file:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e0f5rF-Fj3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e0fW1F1Cf3916c&quot;&gt;&amp;nbsp;&amp;nbsp;
&lt;pre&gt; $ 9vx -r plan9.iso -u glenda &quot;CWD=#Z`pwd`&quot; &quot;nvram=#Z`pwd`/plan9.nvr&quot; &lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e41-SWd8A3916c&quot;&gt;&lt;span id=&quot;zw-12e2e99b018PJMlg63916c&quot;&gt;You should be in rio now, have an acme and a rio window, stats,&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e9a8581RJi33V3916c&quot;&gt;faces... This is the live system in the iso that you probably already&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e9a93b7IDfw_43916c&quot;&gt;know. The CWD=... and nvram=... arguments are interpreted as plan9.ini&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e9a9a949Ka7In3916c&quot;&gt;lines and passed as environment variables, we will use them later.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e13HHsmwG3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e14E_-xFU3916c&quot;&gt;Open a new rio window:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e14r-aZU3916c&quot;&gt;&lt;span id=&quot;zw-12e2ef48ddf7wmF-E3916c&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;
&lt;pre&gt;% cd $CWD 
% dd -if /dev/random -of plan9.nvr -bs 512 -count 1 
% dd -if /dev/zero -of plan9.kfs -bs 1024 -count 320000 &lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e16Q2tDoO3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e178Xvjp33916c&quot;&gt;Those files will be our nvram and kfs partitions (check the size of&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2ebb332fVCtHPl3916c&quot;&gt;your kfs file, 320Mb is not too much, but will be enough). Nvram needs&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2ebb437bvlQGlr3916c&quot;&gt;to be initialized:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e18-UPMoz3916c&quot;&gt;
&lt;pre&gt;    % auth/wrkey 
    authid: bootes 
    authdom: 9vx 
    secstore key: 
    password: &lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e1cJK0W053916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e1cHkXjtz3916c&quot;&gt;We can populate the file system now:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e43SMA8A3916c&quot;&gt;&lt;span style=&quot;font-family:monospace;font-size:x-small;&quot;&gt;&lt;span style=&quot;white-space:pre-wrap;&quot;&gt;
&lt;pre&gt;% 9660srv -f plan9.iso 
% 9fs 9660 
% disk/kfs -f plan9.kfs 
File system main inconsistent 
Would you like to ream it (y/n)? y 
% 9fs kfs 
% dircp /n/9660 /n/kfs &lt;/pre&gt;
&lt;p&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e21S6igCx3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e22xV5I8q3916c&quot;&gt;The system is now installed. You should be able to open a new 9vx&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e9d16dcxMQUuw3916c&quot;&gt;instance from your new root:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e22cfR4fL3916c&quot;&gt;&lt;span id=&quot;zw-12e2ef4e62b1b7gn83916c&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;
&lt;pre&gt;$ 9vx &quot;nvram=#Z`pwd`/plan9.nvr&quot; -r plan9.kfs -u glenda &lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e43i5zhP3916c&quot;&gt;&lt;span id=&quot;zw-12e2e9d829dcizCED3916c&quot;&gt;You can also boot a cpu server. We will use the canopenpath option, so&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e9d8d67pWo5o3916c&quot;&gt;that only the files which begin with `pwd`/plan9 can be opened from&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e9d940dlOmSsY3916c&quot;&gt;9vx, the -ic flags tell 9vx to pass -c to /386/init:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e252kexP-3916c&quot;&gt;&lt;span id=&quot;zw-12e2ef4fea6GrOSQ3916c&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e9db9feHedRAA3916c&quot;&gt;&amp;nbsp;
&lt;pre&gt;$ 9vx -gic -r plan9.kfs &quot;nvram=#Z`pwd`/plan9.nvr&quot; &quot;canopenpath=`pwd`/plan9&quot; -u bootes &lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e27kMzC7K3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e27aKeSLj3916c&quot;&gt;When you see the vx32# prompt add a key so that you can cpu as glenda:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e44wabKIv3916c&quot;&gt;&lt;span id=&quot;zw-12e2ef51c08DQfrMq3916c&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;
&lt;pre&gt;vx32# echo &#39;key proto=p9sk1 dom=9vx user=glenda !password=password&#39; &amp;gt;/mnt/factotum/ctl &lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e29dHLgZ3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e2a_uAPXD3916c&quot;&gt;Now you can cpu to your new server. From another 9vx instance (for&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2ea171ccTkGuT3916c&quot;&gt;example, booted from the iso):&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e2aM_7KT83916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e2bZTc5Ep3916c&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;
&lt;pre&gt;% cpu -h 127.0.0.1 &lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e44vK_Dc3916c&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e2bmcFPV3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e2dErEswl3916c&quot;&gt;If it worked we are done.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e44N-mz8b3916c&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e2dlCMKe73916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e2dz_k0Ct3916c&quot;&gt;Now you will probably want to adjust to your needs the 9vxc script to&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2ef0574aISfLe3916c&quot;&gt;launch cpu servers (also, think about adding a /cfg/vx32/cpurc file).&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e451b74Pj3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e2eN3pQF3916c&quot;&gt;You could be interested in the options localroot, canopenpath,&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e7c1e2fXsSTFb3916c&quot;&gt;cpulimit and memsize. Or maybe you want to setup a virtual ethernet&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e7c1e2fCMPtOk3916c&quot;&gt;device (have a look at the tap script and the 9vx man page).&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e2frKWNh93916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e30E_qQB83916c&quot;&gt;Have fun! (and please, report bugs)&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e45ChSS03916c&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e31k8xSAq3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e32ahNphh3916c&quot;&gt;--&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e45mXjHMA3916c&quot;&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e45WjjzbV3916c&quot;&gt;&lt;span id=&quot;zw-12e2e7c1e33mjLvWi3916c&quot;&gt;- yiyus || JGL . 4l77.com&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12e2e7c1e330DFFyj3916c&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12e2e7c1e4d8qBIi3916c&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Tools for Manipulating Object Files</title>
   <link href="http://bo-yang.github.com//2011/01/19/tools-for-manipulate-object-files"/>
   <updated>2011-01-19T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/01/19/tools-for-manipulate-object-files</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;There are a number of tools available on Unix systems to help you understand and manipulate object files.&amp;nbsp;In particular, the GNU binutils package is especially helpful and runs on every Unix platform.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;AR&lt;/strong&gt; :&amp;nbsp;Creates static libraries, and inserts, deletes, lists, and extracts members.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;STRINGS&lt;/strong&gt;: Lists all of the printable strings contained in an object file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;STRIP&lt;/strong&gt;:&amp;nbsp;Deletes symbol table information from an object file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NM &lt;/strong&gt;:&amp;nbsp;Lists the symbols defined in the symbol table of an object file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SIZE&lt;/strong&gt;:&amp;nbsp;Lists the names and sizes of the sections in an object file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;READELF&lt;/strong&gt;:&amp;nbsp;Displays the complete structure of an object file, including all of the information encoded in the&amp;nbsp;ELF header. Subsumes the functionality of SIZE and NM.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OBJDUMP&lt;/strong&gt;:&amp;nbsp;The mother of all binary tools. Can display all of the information in an object file. Its most&amp;nbsp;useful function is disassembling the binary instructions in the .text section.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LDD &lt;/strong&gt;:&amp;nbsp;Lists the shared libraries that an executable needs at run time.&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;--- From &lt;em&gt;Computer Systems: A Programmer&#39;s Perspective&lt;/em&gt;.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;p&gt;PS: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A very good webpage introducing Linux libraries:&amp;nbsp;&lt;a href=&quot;http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html&quot;&gt;Static, Shared Dynamic and Loadable Linux Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html&quot;&gt;&lt;/a&gt;How to Write Shared Libraries?&amp;nbsp;&lt;a href=&quot;http://www.akkadia.org/drepper/dsohowto.pdf&quot;&gt;http://www.akkadia.org/drepper/dsohowto.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Program Library HOWTO:&amp;nbsp;&lt;a href=&quot;http://tldp.org/HOWTO/Program-Library-HOWTO/index.html&quot;&gt;http://tldp.org/HOWTO/Program-Library-HOWTO/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Commenting out a range of lines in VIM</title>
   <link href="http://bo-yang.github.com//2011/01/18/multi-line-operations-in-vim"/>
   <updated>2011-01-18T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/01/18/multi-line-operations-in-vim</id>
   <content type="html">&lt;p&gt;Reference:&amp;nbsp;&lt;a href=&quot;http://vim.wikia.com/wiki/Commenting_out_a_range_of_lines&quot;&gt;http://vim.wikia.com/wiki/Commenting_out_a_range_of_lines&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0 goog_qs-tidbit-hilite&quot;&gt;A -VISUAL BLOCK- can also be used to comment out lines.&lt;/span&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Start by typing &quot;Ctrl-V&quot; and then highlight a strip downwards by hitting &quot;down/j&quot;.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;After that, type capital &quot;I&quot; to insert for all highlighted lines. Type the comment, in this case &quot;#&amp;lt;Space&amp;gt;&quot;. Then hit &quot;Esc&quot;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>如何查看Ksh Version</title>
   <link href="http://bo-yang.github.com//2011/01/17/ksh-version"/>
   <updated>2011-01-17T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/01/17/ksh-version</id>
   <content type="html">&lt;ol&gt;
&lt;li&gt;echo $KSH_VERSION. 若没有输出，&lt;span&gt;echo ${.sh.version}，Ksh93有效&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span&gt;/bin/ksh --version 应该只在Linux下有效&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;strings /bin/ksh | grep -i version，直接到二进制文件里查找&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;set -o vi ；ESC；Ctrl+V，详见&lt;a href=&quot;http://unix.ittoolbox.com/groups/technical-functional/shellscript-l/command-to-find-the-version-of-ksh-1490264&quot;&gt;http://unix.ittoolbox.com/groups/technical-functional/shellscript-l/command-to-find-the-version-of-ksh-1490264&lt;/a&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于KSH88，估计只有3、4有效。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>利用在线词典批量查询英语单词</title>
   <link href="http://bo-yang.github.com//2011/01/02/translate-words-in-batch"/>
   <updated>2011-01-02T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2011/01/02/translate-words-in-batch</id>
   <content type="html">&lt;p&gt;进来遇到很多英语生词，工具书上给的解释错误百出，而很多在线词典不但可以给出某个单词的解释，而且有大量的示例，因此猜想利用在线词典批量查询这些单词。怎么实现呢？&lt;/p&gt;
&lt;p&gt;首要问题是如何自动获取某个单词的解释。搜索之后，发现可以用curl实现，如&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;curl -s &quot;http://www.google.com/dictionary?aq=f&amp;amp;langpair=en|en&amp;amp;q=&quot;$1&quot;&amp;amp;hl=en&quot; | html2text -nobs | sed &#39;1,/^ *Dictionary/]/d&#39; | head -n -5 | less&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;请参见&lt;a href=&quot;http://ubuntuforums.org/showthread.php?t=1591389&quot;&gt;http://ubuntuforums.org/showthread.php?t=1591389&lt;/a&gt;&amp;nbsp;和&amp;nbsp;&lt;a href=&quot;http://stackoverflow.com/questions/1617152/using-google-as-a-dictionary-lookup-via-bash-how-can-one-grab-the-first-definiti&quot;&gt;http://stackoverflow.com/questions/1617152/using-google-as-a-dictionary-lookup-via-bash-how-can-one-grab-the-first-definiti&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;试过Google Dictionary之后发现， curl下来的网页用html2text转换时会报错：Input recoding failed due to invalid input sequence. 尝试了Python版的html2text之后，依然有大量的javascript和HTML代码残留。于是转而求助于百度词典&amp;mdash;&amp;mdash;因为百度词典的搜索结果中没有Javascript语句，html2text一般可以完美转换。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;转换完之后的文件如下，编码为UTF-8.&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;�新闻   网页   贴吧   知道   MP3   图片   视频   词典   
            [antiseptic                                ] 设置 | 帮助
               [查百度词典]   
                                     把百度设为首页
语法标注解释 antiseptic英音：[,&amp;aelig;nti&#39;septik]美音：[,&amp;aelig;ntə&#39;sɛptɪk]
 
*****   *****
**** 以下结果由[bddict/source/img/logo.gif]译典通提供词典解释 ****
形容词 a.
1.
抗菌的,防腐的
2.
使用抗菌剂的,使用防腐剂的
antiseptic treatment
防腐处理
3.
未受感染的,无菌的,消过毒的
The technician had on an antiseptic white jacket.
那个技术员穿着消毒白色夹克。
4.
非常整洁的
5.
冷淡的,缺乏热情的
He nodded an antiseptic greeting.
他冷冷地点头打了个招呼。
名词 n.
1.
抗菌剂,防腐剂[C]
**** 以下结果来自互联网网络释义 ****
antiseptic
1.
防腐剂/消毒药
大学英语相似词辨析(13):ante-,a...
antiseptic 防腐剂/消毒药
http://www.english-ex...
2.
防霉剂
北京译邦达翻译公司-2008 Januar...
防霉剂 antiseptic
http://www.t-bond.com...
3.
防腐的；防腐剂
石油英语|能源动力行业英语第1521页
antiseptic防腐的；防腐剂
http://www.b2b99.com/...
4.
抗菌剂， 防腐剂
SAT化学词汇表Chapter 6_SAT...
antiseptic抗菌剂， 防腐剂
http://www.24en.com/s...
Antiseptic
1.
防腐剂
词博英语社区(生物词汇 A-F (1)[c...
Antiseptic 防腐剂
http://www.cibo.biz/f...
 显示更多网络释义结果
&amp;copy;2011 Baidu 此内容系百度根据您的指令自动搜索的结果，不代表百度赞成被搜索网站的内容或立场
[http://c.baidu.com/c.gif?t=0&amp;amp;q=antiseptic&amp;amp;p=0&amp;amp;pn=0]
      [wd                  ] [s]
**** 搜索框提示 ****
*** 是否希望搜索汉字和英语时显示搜索框提示 ***
 #显示 o不显示
[Unknown INPUT type]
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;显然上面的内容是不便于阅读的。为了提取有用信息，需要对上面的内容进行处理&amp;mdash;&amp;mdash;下面的脚本参考了&lt;a href=&quot;http://blog.csdn.net/jallin2001/archive/2009/11/13/4808618.aspx&quot;&gt;http://blog.csdn.net/jallin2001/archive/2009/11/13/4808618.aspx&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:monospace;font-size:x-small;&quot;&gt;&lt;span style=&quot;white-space:pre-wrap;&quot;&gt;
&lt;pre&gt;#!/usr/bin/perl -w
############### censor.pl #################
# Handle the explanations got from online dictionary.
# Inputs:
#	ARGV[0] -- temparory file containning the explanations
#	ARGV[1] -- keyword
############################################
use strict;
use Encode;
my $syntax = Encode::decode(&#39;utf8&#39;, &#39;语法标注解释 &#39;);
my $internet = Encode::decode(&#39;utf8&#39;, &#39;以下结果来自互联网网络释义&#39;);
my $yingyin = Encode::decode(&#39;utf8&#39;, &#39;英音&#39;);
my $meiyin = Encode::decode(&#39;utf8&#39;, &#39;美音&#39;);
my $write_flag=0;
open(EXP,$ARGV[0]);
while (my $nextline=&amp;lt;EXP&amp;gt;) {
	chomp($nextline);
	$nextline = Encode::decode(&#39;utf8&#39;, $nextline);
	if ($nextline =~ m/.*$syntax.*/) {
		$write_flag=1;
		$nextline =~ s/$syntax//;
	} elsif ($nextline =~ m/.*$internet.*/) {
		$write_flag=0;
	}
			
	if ($write_flag eq 1) {
		if ($nextline !~ m/.*/*/*/*/*.*/) { # Excluse lines containning ****
			# Add a space between the keyword and 英音/美音
			$nextline =~ s/$ARGV[1]([$yingyin|$meiyin])/$ARGV[1] $1/; 
			print encode(&quot;utf8&quot;,$nextline),&quot;/r/n&quot;; # In perl, /r/n is needed to add a new line
		}
	}
}&lt;/pre&gt;
&lt;p&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:mceinline;font-size:xx-small;&quot;&gt;&lt;span style=&quot;white-space:pre-wrap;&quot;&gt;运行上面的脚本后，可以得到如下的输出：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:monospace;font-size:xx-small;&quot;&gt;&lt;span style=&quot;white-space:pre-wrap;&quot;&gt;
&lt;pre&gt;antiseptic 英音：[,&amp;aelig;nti&#39;septik]美音：[,&amp;aelig;ntə&#39;sɛptɪk]
&amp;nbsp;
形容词 a.
1.
抗菌的,防腐的
2.
使用抗菌剂的,使用防腐剂的
antiseptic treatment
防腐处理
3.
未受感染的,无菌的,消过毒的
The technician had on an antiseptic white jacket.
那个技术员穿着消毒白色夹克。
4.
非常整洁的
5.
冷淡的,缺乏热情的
He nodded an antiseptic greeting.
他冷冷地点头打了个招呼。
名词 n.
1.
抗菌剂,防腐剂[C]
&lt;/pre&gt;
&lt;p&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;另外，如果要自动化查询一批英文单词，可以把它们写到一个文件中，然后用下面的脚本进行自动查询&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:monospace;font-size:x-small;&quot;&gt;&lt;span style=&quot;white-space:pre-wrap;&quot;&gt;
&lt;pre&gt;#!/bin/bash
# Command line look up using Google&#39;s define feature - command line dictionary
WORDS=$(cat ./words)
for word in $WORDS
do
#	word=$1
	#curl -s -A &#39;Mozilla/4.0&#39;  &#39;http://www.google.com/dictionary?langpair=zh-CN|en&amp;amp;hl=en&amp;amp;aq=f&amp;amp;q=&#39;$word &amp;gt;&amp;gt; test.html
	curl -s -A &#39;Mozilla/4.0&#39; &quot;http://dict.baidu.com/s?tn=dict&amp;amp;wd=&quot;$word | html2text &amp;gt; tmp 2&amp;gt;/dev/null
	echo &quot;------------------ $word -------------------&quot; &amp;gt;&amp;gt; mywords
	./censor.pl tmp $word &amp;gt;&amp;gt; mywords
	rm -f tmp
done&lt;/pre&gt;
&lt;p&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Update 2011-01-02:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;终于找到了查询Google Dictionary的一种方法。&lt;/p&gt;
&lt;p&gt;Google Dictionary对于单词abandon的解释可以利用URL：&lt;a href=&quot;http://www.google.com/dictionary?langpair=en|zh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;aq=f&quot;&gt;http://www.google.com/dictionary?langpair=en|zh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;aq=f&lt;/a&gt;&amp;nbsp;得到，而网页的信息如下：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:monospace;font-size:x-small;&quot;&gt;&lt;span style=&quot;white-space:pre-wrap;&quot;&gt;
&lt;pre&gt; 
&amp;lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&amp;gt; 
&amp;lt;html&amp;gt; 
&amp;lt;head&amp;gt; 
&amp;lt;mce:script type=&quot;text/javascript&quot;&amp;gt;&amp;lt;!--
 
(function(){function a(d){this.t={};this.tick=function(e,f,b){b=b?b:(new Date).getTime();this.t[e]=[b,f]};this.tick(&quot;start&quot;,null,d)}var c=new a;window.jstiming={Timer:a,load:c};try{var g=null;if(window.chrome&amp;amp;&amp;amp;window.chrome.csi)g=Math.floor(window.chrome.csi().pageT);if(g==null)if(window.gtbExternal)g=window.gtbExternal.pageT();if(g==null)if(window.external)g=window.external.pageT;if(g)window.jstiming.pt=g}catch(h){};})();
// --&amp;gt;&amp;lt;/mce:script&amp;gt; 
&amp;lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot;&amp;gt; 
&amp;lt;meta name=&quot;keywords&quot; content=&quot;dictionary, dict, language, translate, translation, define, definition, glossary, online dictionary, language tool, multilingual dictionary of abandon , Arabic, Bengali, Bulgarian, Chinese (Simplified), Chinese (Traditional), Croatian, Czech, Dutch, English, Finnish, French, German, Greek, Gujarati, Hebrew, Hindi, Italian, Kannada, Korean, Malayalam, Marathi, Portuguese, Russian, Serbian, Spanish, Tamil, Telugu, Thai&quot;&amp;gt; 
&amp;lt;meta name=&quot;description&quot; content=&quot;abandon : （不顾责任、义务等）离弃，遗弃，抛弃, 不得已而放弃；舍弃, 停止（支持或帮助）；放弃（信念）, 中止；放弃；不再有, 陷入，沉湎于（某种情感）, 放任；放纵 - Google&#39;s free online dictionary service.&quot;&amp;gt; 
&amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=EmulateIE7&quot;&amp;gt; 
&amp;lt;link rel=&quot;canonical&quot; href=&quot;/dictionary?hl=en&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;q=abandon&quot; mce_href=&quot;dictionary?hl=en&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;q=abandon&quot;&amp;gt; 
&amp;lt;title&amp;gt; 
abandon in Chinese (Simplified) - Google Dictionary
&amp;lt;/title&amp;gt; 
&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/dictionary/css/google-common_post20090706.css&quot; mce_href=&quot;dictionary/css/google-common_post20090706.css&quot; type=&quot;text/css&quot;&amp;gt; 
&amp;lt;mce:style type=&quot;text/css&quot;&amp;gt;&amp;lt;!--
  
  #gbar,#guser{font-size:13px;padding-right:1px;padding-top:2px !important}#gbar{padding-left:1px;float:left;height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}#gbs,.gbm{background:#fff;left:0;position:absolute;text-align:left;visibility:hidden;z-index:1000}.gbm{border:1px solid;border-color:#c9d7f1 #36c #36c #a2bae7;z-index:1001}.gb1{margin-right:.5em}#gbar .gbsup{color:#c00;font-size:9px;font-weight:normal;line-height:9px;margin-left:-.5em;margin-right:.5em;*margin-left:-.5em;*margin-right:.5em}.gb1,.gb3{zoom:1}.gb2{display:block;padding:.2em .5em}.gb2,.gb3{text-decoration:none;border-bottom:none}a.gb1,a.gb2,a.gb3,a.gb4{color:#00c !important}.gbi .gb3,.gbi .gb2,.gbi .gb4{color:#dd8e27 !important}.gbf .gb3,.gbf .gb2,.gbf .gb4{color:#900 !important}a.gb2:hover{background:#36c;color:#fff !important}
--&amp;gt;&amp;lt;/mce:style&amp;gt;&amp;lt;style type=&quot;text/css&quot; mce_bogus=&quot;1&quot;&amp;gt;  
  #gbar,#guser{font-size:13px;padding-right:1px;padding-top:2px !important}#gbar{padding-left:1px;float:left;height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}#gbs,.gbm{background:#fff;left:0;position:absolute;text-align:left;visibility:hidden;z-index:1000}.gbm{border:1px solid;border-color:#c9d7f1 #36c #36c #a2bae7;z-index:1001}.gb1{margin-right:.5em}#gbar .gbsup{color:#c00;font-size:9px;font-weight:normal;line-height:9px;margin-left:-.5em;margin-right:.5em;*margin-left:-.5em;*margin-right:.5em}.gb1,.gb3{zoom:1}.gb2{display:block;padding:.2em .5em}.gb2,.gb3{text-decoration:none;border-bottom:none}a.gb1,a.gb2,a.gb3,a.gb4{color:#00c !important}.gbi .gb3,.gbi .gb2,.gbi .gb4{color:#dd8e27 !important}.gbf .gb3,.gbf .gb2,.gbf .gb4{color:#900 !important}a.gb2:hover{background:#36c;color:#fff !important}&amp;lt;/style&amp;gt; 
&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/dictionary/css/dictionary-search_post20100310.css&quot; mce_href=&quot;dictionary/css/dictionary-search_post20100310.css&quot; type=&quot;text/css&quot;&amp;gt; 
&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/dictionary/css/gselectbox_post20090113.css&quot; mce_href=&quot;dictionary/css/gselectbox_post20090113.css&quot; type=&quot;text/css&quot;&amp;gt; 
&amp;lt;mce:script type=&quot;text/javascript&quot; src=&quot;/dictionary/js/dictionary_compiled_post20091026.js&quot; mce_src=&quot;dictionary/js/dictionary_compiled_post20091026.js&quot;&amp;gt;&amp;lt;!--
 
// --&amp;gt;&amp;lt;/mce:script&amp;gt; 
&amp;lt;mce:script type=&quot;text/javascript&quot;&amp;gt;&amp;lt;!--
 
(function(){function i(a,b,c){var d=&quot;on&quot;+b;if(a.addEventListener)a.addEventListener(b,c,false);else if(a.attachEvent)a.attachEvent(d,c);else{var h=a[d];a[d]=function(){var g=h.apply(this,arguments),e=c.apply(this,arguments);return g==undefined?e:e==undefined?g:e&amp;amp;&amp;amp;g}}};var j,k,l,m=window.gbar={};function _tvs(a,b){return a||b}function _tvn(a,b){var c=parseInt(a,10);return isNaN(c)?b:c}function _tvf(a,b){var c=parseFloat(a);return isNaN(c)?b:c}function _tvb(a,b){return a==&quot;true&quot;?true:a==&quot;false&quot;?false:b}var n,o,p;function q(a){var b=window.a&amp;amp;&amp;amp;(document.forms[0].b||&quot;&quot;).value;if(b)a.href=a.href.replace(/([?&amp;amp;])q=[^&amp;amp;]*|$/,function(c,d){return(d||&quot;&amp;amp;&quot;)+&quot;q=&quot;+encodeURIComponent(b)})}l=q;
function r(a,b,c,d,h,g){var e=document.getElementById(a);if(e){var f=e.style;f.left=d?&quot;auto&quot;:b+&quot;px&quot;;f.right=d?b+&quot;px&quot;:&quot;auto&quot;;f.top=c+&quot;px&quot;;f.visibility=o?&quot;hidden&quot;:&quot;visible&quot;;if(h&amp;amp;&amp;amp;g){f.width=h+&quot;px&quot;;f.height=g+&quot;px&quot;}else{r(n,b,c,d,e.offsetWidth,e.offsetHeight);o=o?&quot;&quot;:a}}}
var s=[],v=function(a){a=a||window.event;var b=a.target||a.srcElement;a.cancelBubble=true;if(n==null){a=document.createElement(Array.every||window.createPopup?&quot;iframe&quot;:&quot;div&quot;);a.frameBorder=&quot;0&quot;;n=a.id=&quot;gbs&quot;;a.src=&quot;javascript:&#39;&#39;&quot;;b.parentNode.appendChild(a);i(document,&quot;click&quot;,t)}var c=b;b=0;if(c.className!=&quot;gb3&quot;)c=c.parentNode;a=c.getAttribute(&quot;aria-owns&quot;)||&quot;gbi&quot;;var d=c.offsetWidth,h=c.offsetTop&amp;gt;20?46:24;if(document.getElementById(&quot;tphdr&quot;))h-=3;var g=false;do b+=c.offsetLeft||0;while(c=c.offsetParent);
c=(document.documentElement.clientWidth||document.body.clientWidth)-b-d;var e;d=document.body;var f=document.defaultView;if(f&amp;amp;&amp;amp;f.getComputedStyle){if(d=f.getComputedStyle(d,&quot;&quot;))e=d.direction}else e=d.currentStyle?d.currentStyle.direction:d.style.direction;e=e==&quot;rtl&quot;;if(a==&quot;gbi&quot;){for(d=0;f=s[d++];)f();u(null,window.navExtra);if(e){b=c;g=true}}else if(!e){b=c;g=true}o!=a&amp;amp;&amp;amp;t();r(a,b,h,g)},t=function(){o&amp;amp;&amp;amp;r(o,0,0)},u=function(a,b){var c,d=document.getElementById(&quot;gbi&quot;),h=a;if(!h)h=d.firstChild;for(;b&amp;amp;&amp;amp;
(c=b.pop());){var g=d,e=c,f=h;p||(p=&quot;gb2&quot;);g.insertBefore(e,f).className=p}},w=function(a,b,c){if((b=document.getElementById(b))&amp;amp;&amp;amp;a){a.className=&quot;gb4&quot;;var d=document.createElement(&quot;span&quot;);d.appendChild(a);d.appendChild(document.createTextNode(&quot; | &quot;));d.id=c;b.appendChild(d)}};m.qs=l;m.setContinueCb=k;m.pc=j;m.tg=v;m.close=t;m.addLink=w;m.almm=u;})();
// --&amp;gt;&amp;lt;/mce:script&amp;gt; 
&amp;lt;mce:script type=&quot;text/javascript&quot; src=&quot;/dictionary/js/autocomplete_compiled_post20090416.js&quot; mce_src=&quot;dictionary/js/autocomplete_compiled_post20090416.js&quot;&amp;gt;&amp;lt;!--
 
// --&amp;gt;&amp;lt;/mce:script&amp;gt; 
&amp;lt;/head&amp;gt; 
&amp;lt;body onload=&quot;document.f.q.select();tickBodyLoadAndReport();&quot; bgcolor=&quot;#ffffff&quot; &amp;gt; 
&amp;lt;div id=gbar&amp;gt;&amp;lt;nobr&amp;gt;&amp;lt;a href=&quot;http://www.google.com/search?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=Dw&quot; mce_href=&quot;http://www.google.com/search?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=Dw&quot; onclick=gbar.qs(this) class=gb1&amp;gt;Web&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://www.google.com/images?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=Di&quot; mce_href=&quot;http://www.google.com/images?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=Di&quot; onclick=gbar.qs(this) class=gb1&amp;gt;Images&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://www.google.com/search?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;tbo=u&amp;amp;tbs=vid:1&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=Dv&quot; mce_href=&quot;http://www.google.com/search?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;tbo=u&amp;amp;tbs=vid:1&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=Dv&quot; onclick=gbar.qs(this) class=gb1&amp;gt;Videos&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://maps.google.com/maps?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=Dl&quot; mce_href=&quot;http://maps.google.com/maps?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=Dl&quot; onclick=gbar.qs(this) class=gb1&amp;gt;Maps&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://www.google.com/search?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;tbo=u&amp;amp;tbs=nws:1&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=Dn&quot; mce_href=&quot;http://www.google.com/search?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;tbo=u&amp;amp;tbs=nws:1&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=Dn&quot; onclick=gbar.qs(this) class=gb1&amp;gt;News&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://www.google.com/search?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;tbo=u&amp;amp;tbs=shop:1&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=Df&quot; mce_href=&quot;http://www.google.com/search?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;tbo=u&amp;amp;tbs=shop:1&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=Df&quot; onclick=gbar.qs(this) class=gb1&amp;gt;Shopping&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://mail.google.com/mail/?hl=en&amp;amp;tab=Dm&quot; mce_href=&quot;http://mail.google.com/mail/?hl=en&amp;amp;tab=Dm&quot; class=gb1&amp;gt;Gmail&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://www.google.com/intl/en/options/&quot; mce_href=&quot;http://www.google.com/intl/en/options/&quot; onclick=&quot;this.blur();gbar.tg(event);return !1&quot; aria-haspopup=true class=gb3&amp;gt;&amp;lt;u&amp;gt;more&amp;lt;/u&amp;gt; &amp;lt;small&amp;gt;▼&amp;lt;/small&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;div class=gbm id=gbi&amp;gt;&amp;lt;a href=&quot;http://www.google.com/search?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;tbo=u&amp;amp;tbs=bks:1&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=Dp&quot; mce_href=&quot;http://www.google.com/search?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;tbo=u&amp;amp;tbs=bks:1&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=Dp&quot; onclick=gbar.qs(this) class=gb2&amp;gt;Books&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://www.google.com/finance?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=De&quot; mce_href=&quot;http://www.google.com/finance?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=De&quot; onclick=gbar.qs(this) class=gb2&amp;gt;Finance&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://translate.google.com/translate_t?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=DT&quot; mce_href=&quot;http://translate.google.com/translate_t?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=DT&quot; onclick=gbar.qs(this) class=gb2&amp;gt;Translate&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://scholar.google.com/scholar?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=Ds&quot; mce_href=&quot;http://scholar.google.com/scholar?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=Ds&quot; onclick=gbar.qs(this) class=gb2&amp;gt;Scholar&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://www.google.com/search?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;tbo=u&amp;amp;tbs=blg:1&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=Db&quot; mce_href=&quot;http://www.google.com/search?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;tbo=u&amp;amp;tbs=blg:1&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=Db&quot; onclick=gbar.qs(this) class=gb2&amp;gt;Blogs&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://www.google.com/search?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;tbo=u&amp;amp;tbs=mbl:1&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=DY&quot; mce_href=&quot;http://www.google.com/search?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;tbo=u&amp;amp;tbs=mbl:1&amp;amp;source=og&amp;amp;sa=N&amp;amp;tab=DY&quot; onclick=gbar.qs(this) class=gb2&amp;gt;Realtime&amp;lt;/a&amp;gt; &amp;lt;div class=gb2&amp;gt;&amp;lt;div class=gbd&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;a href=&quot;http://www.youtube.com/results?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=D1&quot; mce_href=&quot;http://www.youtube.com/results?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=D1&quot; onclick=gbar.qs(this) class=gb2&amp;gt;YouTube&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://www.google.com/calendar/render?hl=en&amp;amp;tab=Dc&quot; mce_href=&quot;http://www.google.com/calendar/render?hl=en&amp;amp;tab=Dc&quot; class=gb2&amp;gt;Calendar&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://picasaweb.google.com/lh/view?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=Dq&quot; mce_href=&quot;http://picasaweb.google.com/lh/view?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=Dq&quot; onclick=gbar.qs(this) class=gb2&amp;gt;Photos&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://docs.google.com/?hl=en&amp;amp;tab=Do&amp;amp;authuser=0&quot; mce_href=&quot;http://docs.google.com/?hl=en&amp;amp;tab=Do&amp;amp;authuser=0&quot; class=gb2&amp;gt;Documents&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://www.google.com/reader/view/?hl=en&amp;amp;tab=Dy&quot; mce_href=&quot;http://www.google.com/reader/view/?hl=en&amp;amp;tab=Dy&quot; class=gb2&amp;gt;Reader&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://sites.google.com/?hl=en&amp;amp;tab=D3&quot; mce_href=&quot;http://sites.google.com/?hl=en&amp;amp;tab=D3&quot; class=gb2&amp;gt;Sites&amp;lt;/a&amp;gt; &amp;lt;a href=&quot;http://groups.google.com/groups?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=Dg&quot; mce_href=&quot;http://groups.google.com/groups?langpair=en%7Czh-CN&amp;amp;q=abandon&amp;amp;hl=en&amp;amp;sa=N&amp;amp;tab=Dg&quot; onclick=gbar.qs(this) class=gb2&amp;gt;Groups&amp;lt;/a&amp;gt; &amp;lt;div class=gb2&amp;gt;&amp;lt;div class=gbd&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;a href=&quot;http://www.google.com/intl/en/options/&quot; mce_href=&quot;http://www.google.com/intl/en/options/&quot; class=gb2&amp;gt;even more &amp;raquo;&amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div id=guser width=100%&amp;gt;&amp;lt;nobr&amp;gt;&amp;lt;span id=gbn class=gbi&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span id=gbf class=gbf&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;b class=gb4&amp;gt;bonny95@gmail.com&amp;lt;/b&amp;gt; | &amp;lt;span id=gbe&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;a id=&quot;gb_67&quot; href=&quot;http://www.google.com/history/?hl=en&quot; mce_href=&quot;http://www.google.com/history/?hl=en&quot; class=gb4&amp;gt;Web History&amp;lt;/a&amp;gt; | &amp;lt;a id=&quot;gb_97&quot; href=&quot;https://www.google.com/accounts/ManageAccount?hl=en&quot; mce_href=&quot;https://www.google.com/accounts/ManageAccount?hl=en&quot; class=gb4&amp;gt;My Account&amp;lt;/a&amp;gt; | &amp;lt;a id=&quot;gb_71&quot; href=&quot;http://www.google.com/accounts/Logout?continue=http://www.google.com/dictionary%3Flangpair%3Den%257Czh-CN%26q%3Dabandon%26hl%3Den%26aq%3Df&quot; mce_href=&quot;http://www.google.com/accounts/Logout?continue=http://www.google.com/dictionary%3Flangpair%3Den%257Czh-CN%26q%3Dabandon%26hl%3Den%26aq%3Df&quot; class=gb4&amp;gt;Sign out&amp;lt;/a&amp;gt;&amp;lt;/nobr&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=gbh style=left:0&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=gbh style=right:0&amp;gt;&amp;lt;/div&amp;gt; 
&amp;lt;div id=cnt&amp;gt; 
&amp;lt;table class=&quot;tb&quot; style=&quot;clear:both&quot; mce_style=&quot;clear:both&quot; width=&quot;100%&quot;&amp;gt; 
&amp;lt;tr&amp;gt; 
&amp;lt;form name=&quot;f&quot; action=&quot;/dictionary&quot;&amp;gt; 
&amp;lt;td class=&quot;tc&quot; valign=&quot;top&quot;&amp;gt; 
&amp;lt;a id=&quot;logo&quot; href=&quot;http://www.google.com/webhp?hl=en&quot; mce_href=&quot;http://www.google.com/webhp?hl=en&quot; title=&quot;Go to Google Home&quot;&amp;gt; 
Go to Google Home&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt; 
&amp;lt;/a&amp;gt; 
&amp;lt;/td&amp;gt; 
&amp;lt;td style=&quot;padding:25px 0 7px 8px;position:relative;&quot; mce_style=&quot;padding:25px 0 7px 8px;position:relative;&quot; valign=&quot;top&quot; width=&quot;100%&quot;&amp;gt; 
&amp;lt;select id=&quot;dct-slc&quot; name=&quot;langpair&quot; onchange=&quot;onUpdateLangpair(this)&quot;&amp;gt; 
&amp;lt;option value=&quot;ar|en&quot;&amp;gt;Arabic &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;bn|en&quot;&amp;gt;Bengali &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;bg|en&quot;&amp;gt;Bulgarian &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;zh-CN|zh-CN&quot;&amp;gt;Chinese (Simplified) dictionary&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;zh-CN|en&quot;&amp;gt;Chinese (Simplified) &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;zh-TW|zh-TW&quot;&amp;gt;Chinese (Traditional) dictionary&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;zh-TW|en&quot;&amp;gt;Chinese (Traditional) &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;hr|en&quot;&amp;gt;Croatian &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;cs|cs&quot;&amp;gt;Czech dictionary&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;cs|en&quot;&amp;gt;Czech &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;nl|nl&quot;&amp;gt;Dutch dictionary&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|ar&quot;&amp;gt;English &amp;lt;&amp;gt; Arabic&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|bn&quot;&amp;gt;English &amp;lt;&amp;gt; Bengali&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|bg&quot;&amp;gt;English &amp;lt;&amp;gt; Bulgarian&amp;lt;/option&amp;gt; 
&amp;lt;option selected  value=&quot;en|zh-CN&quot;&amp;gt;English &amp;lt;&amp;gt; Chinese (Simplified)&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|zh-TW&quot;&amp;gt;English &amp;lt;&amp;gt; Chinese (Traditional)&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|hr&quot;&amp;gt;English &amp;lt;&amp;gt; Croatian&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|cs&quot;&amp;gt;English &amp;lt;&amp;gt; Czech&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|en&quot;&amp;gt;English dictionary&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|fi&quot;&amp;gt;English &amp;lt;&amp;gt; Finnish&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|fr&quot;&amp;gt;English &amp;lt;&amp;gt; French&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|de&quot;&amp;gt;English &amp;lt;&amp;gt; German&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|el&quot;&amp;gt;English &amp;lt;&amp;gt; Greek&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|gu&quot;&amp;gt;English &amp;lt;&amp;gt; Gujarati&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|iw&quot;&amp;gt;English &amp;lt;&amp;gt; Hebrew&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|hi&quot;&amp;gt;English &amp;lt;&amp;gt; Hindi&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|it&quot;&amp;gt;English &amp;lt;&amp;gt; Italian&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|kn&quot;&amp;gt;English &amp;lt;&amp;gt; Kannada&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|ko&quot;&amp;gt;English &amp;lt;&amp;gt; Korean&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|ml&quot;&amp;gt;English &amp;lt;&amp;gt; Malayalam&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|mr&quot;&amp;gt;English &amp;lt;&amp;gt; Marathi&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|pt&quot;&amp;gt;English &amp;lt;&amp;gt; Portuguese&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|ru&quot;&amp;gt;English &amp;lt;&amp;gt; Russian&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|sr&quot;&amp;gt;English &amp;lt;&amp;gt; Serbian&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|es&quot;&amp;gt;English &amp;lt;&amp;gt; Spanish&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|ta&quot;&amp;gt;English &amp;lt;&amp;gt; Tamil&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|te&quot;&amp;gt;English &amp;lt;&amp;gt; Telugu&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;en|th&quot;&amp;gt;English &amp;lt;&amp;gt; Thai&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;fi|en&quot;&amp;gt;Finnish &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;fr|en&quot;&amp;gt;French &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;fr|fr&quot;&amp;gt;French dictionary&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;de|en&quot;&amp;gt;German &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;de|de&quot;&amp;gt;German dictionary&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;el|en&quot;&amp;gt;Greek &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;gu|en&quot;&amp;gt;Gujarati &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;iw|en&quot;&amp;gt;Hebrew &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;hi|en&quot;&amp;gt;Hindi &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;it|en&quot;&amp;gt;Italian &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;it|it&quot;&amp;gt;Italian dictionary&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;kn|en&quot;&amp;gt;Kannada &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;ko|en&quot;&amp;gt;Korean &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;ko|ko&quot;&amp;gt;Korean dictionary&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;ml|en&quot;&amp;gt;Malayalam &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;mr|en&quot;&amp;gt;Marathi &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;pt|en&quot;&amp;gt;Portuguese &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;pt|pt&quot;&amp;gt;Portuguese dictionary&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;ru|en&quot;&amp;gt;Russian &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;ru|ru&quot;&amp;gt;Russian dictionary&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;sr|en&quot;&amp;gt;Serbian &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;es|en&quot;&amp;gt;Spanish &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;es|es&quot;&amp;gt;Spanish dictionary&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;ta|en&quot;&amp;gt;Tamil &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;te|en&quot;&amp;gt;Telugu &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;option value=&quot;th|en&quot;&amp;gt;Thai &amp;lt;&amp;gt; English&amp;lt;/option&amp;gt; 
&amp;lt;/select&amp;gt; 
&amp;lt;mce:script type=&quot;text/javascript&quot;&amp;gt;&amp;lt;!--
 
if (!window.google) { window.google = {}; }
var installLanguageSelection = function() {
var language_code = {
&#39;ar&#39;:&#39;Arabic&#39;,
&#39;bn&#39;:&#39;Bengali&#39;,
&#39;bg&#39;:&#39;Bulgarian&#39;,
&#39;zh-CN&#39;:&#39;Chinese (Simplified)&#39;,
&#39;zh-TW&#39;:&#39;Chinese (Traditional)&#39;,
&#39;hr&#39;:&#39;Croatian&#39;,
&#39;cs&#39;:&#39;Czech&#39;,
&#39;nl&#39;:&#39;Dutch&#39;,
&#39;en&#39;:&#39;English&#39;,
&#39;fi&#39;:&#39;Finnish&#39;,
&#39;fr&#39;:&#39;French&#39;,
&#39;de&#39;:&#39;German&#39;,
&#39;el&#39;:&#39;Greek&#39;,
&#39;gu&#39;:&#39;Gujarati&#39;,
&#39;iw&#39;:&#39;Hebrew&#39;,
&#39;hi&#39;:&#39;Hindi&#39;,
&#39;it&#39;:&#39;Italian&#39;,
&#39;kn&#39;:&#39;Kannada&#39;,
&#39;ko&#39;:&#39;Korean&#39;,
&#39;ml&#39;:&#39;Malayalam&#39;,
&#39;mr&#39;:&#39;Marathi&#39;,
&#39;pt&#39;:&#39;Portuguese&#39;,
&#39;ru&#39;:&#39;Russian&#39;,
&#39;sr&#39;:&#39;Serbian&#39;,
&#39;es&#39;:&#39;Spanish&#39;,
&#39;ta&#39;:&#39;Tamil&#39;,
&#39;te&#39;:&#39;Telugu&#39;,
&#39;th&#39;:&#39;Thai&#39;
};
window.google.installLanguageSelect(&#39;dct-slc&#39;, language_code);
};
window.setTimeout(installLanguageSelection, 10);
// --&amp;gt;&amp;lt;/mce:script&amp;gt; 
&amp;lt;input autocomplete=&quot;off&quot; type=&quot;text&quot; name=&quot;q&quot; size=&quot;40&quot; maxlength=&quot;2048&quot;
             value=&quot;abandon&quot;
         title=&quot;Search Dictionary&quot;&amp;gt; 
&amp;lt;input type=&quot;hidden&quot; name=&quot;hl&quot;
             value=&quot;en&quot;&amp;gt; 
&amp;lt;input type=&quot;submit&quot; value=&quot;Search Dictionary&quot;
         style=&quot;padding:0 .25em 0 .25em; width:auto; overflow:visible&quot;&amp;gt; 
&amp;lt;/td&amp;gt; 
&amp;lt;/form&amp;gt; 
&amp;lt;/tr&amp;gt; 
&amp;lt;/table&amp;gt; 
&amp;lt;table width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; class=&quot;t bt&quot;&amp;gt; 
&amp;lt;tbody&amp;gt; 
&amp;lt;tr&amp;gt; 
&amp;lt;td style=&quot;white-space:nowrap&quot; mce_style=&quot;white-space:nowrap&quot;&amp;gt; 
&amp;lt;span id=&quot;sd&quot; style=&quot;float:left&quot; mce_style=&quot;float:left&quot;&amp;gt;Dictionary&amp;lt;/span&amp;gt; 
&amp;lt;a id=&quot;dct-clk-a&quot;&amp;gt; 
&amp;lt;div id=&quot;dct-clk-im&quot;&amp;gt;&amp;lt;!- ie6 doesn&#39;t allow empty div. -&amp;gt;&amp;lt;/div&amp;gt; 
&amp;lt;span id=&quot;dct-clk-show&quot;&amp;gt;Show examples&amp;lt;/span&amp;gt; 
&amp;lt;span id=&quot;dct-clk-hide&quot;&amp;gt;Hide examples&amp;lt;/span&amp;gt; 
&amp;lt;/a&amp;gt; 
&amp;lt;/td&amp;gt; 
&amp;lt;td style=&quot;white-space:nowrap&quot; mce_style=&quot;white-space:nowrap&quot; align=&quot;right&quot;&amp;gt; 
&amp;lt;/td&amp;gt; 
&amp;lt;/tr&amp;gt; 
&amp;lt;/tbody&amp;gt; 
&amp;lt;/table&amp;gt; 
&amp;lt;div class=&quot;dct-srch-otr&quot;&amp;gt; 
&amp;lt;div class=&quot;dct-srch-inr rt-sct-exst&quot;&amp;gt; 
&amp;lt;div class=&quot;dct-srch-rslt&quot;&amp;gt; 
&amp;lt;p&amp;gt;Found in dictionary: &amp;lt;b&amp;gt;English &amp;gt; Chinese (Simplified)&amp;lt;/b&amp;gt;.
&amp;lt;/p&amp;gt; 
&amp;lt;ul class=&quot;dct-e2&quot; id=&quot;pr-root&quot; &amp;gt; 
&amp;lt;li class=&quot;dct-eh&quot;
             &amp;gt; 
&amp;lt;div  class=&quot;dct-eh&quot;&amp;gt; 
&amp;lt;span class=&quot;wl-st&quot; id=&quot;wl-st-number1&quot;
      onclick=&quot;window.google.addWord(&#39;abandon&#39;,&#39;en|zh-CN&#39;,&#39;number1&#39;);&quot;&amp;gt;&amp;lt;img alt=&quot;Add star&quot;
    src=&quot;/dictionary/image/unstarred.gif&quot; mce_src=&quot;dictionary/image/unstarred.gif&quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;wl-ust&quot;
  id=&quot;wl-ust-number1&quot; onclick=&quot;window.google.removeWord(&#39;abandon&#39;,&#39;en|zh-CN&#39;,&#39;number1&#39;);&quot;&amp;gt;&amp;lt;img alt=&quot;Remove star&quot;
    src=&quot;/dictionary/image/starred.gif&quot; mce_src=&quot;dictionary/image/starred.gif&quot;&amp;gt;&amp;lt;/span&amp;gt; 
&amp;lt;mce:script type=&quot;text/javascript&quot;&amp;gt;&amp;lt;!--
window.google.lookupWord(&#39;abandon&#39;,&#39;en|zh-CN&#39;,&#39;number1&#39;);
// --&amp;gt;&amp;lt;/mce:script&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;abandon&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;dct-tp&quot;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;dct-tp&quot;&amp;gt;/əˈb&amp;aelig;ndən/
&amp;lt;span class=&quot;dct-tlb&quot; title=&quot;Phonetic&quot;&amp;gt;DJ&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;prn-btn&quot;&amp;gt;&lt;a href=&quot;/dictionary/flash/SpeakerApp16.swf&quot;&gt;/dictionary/flash/SpeakerApp16.swf&lt;/a&gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;dct-tp&quot;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;dct-tp&quot;&amp;gt;/ə&#39;b&amp;aelig;ndən/
&amp;lt;span class=&quot;dct-tlb&quot; title=&quot;Phonetic&quot;&amp;gt;KK&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li class=&quot;dct-ec&quot;
               &amp;gt; 
&amp;lt;div  class=&quot;dct-ec&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-elb&quot; title=&quot;Part-of-Speech&quot;&amp;gt;verb&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li class=&quot;dct-em&quot;
               &amp;gt; 
&amp;lt;div  class=&quot;dct-em&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;to leave somebody, especially somebody you are responsible for, with no intention of returning&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;（不顾责任、义务等）离弃，遗弃，抛弃
&amp;lt;span class=&quot;dct-tlb&quot; title=&quot;Complement&quot;&amp;gt;~ sb (to sth)&amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;dct-tlb&quot; title=&quot;Grammar&quot;&amp;gt;VN&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li class=&quot;dct-ee&quot;
              style=&quot;display:none&quot; mce_style=&quot;display:none&quot; &amp;gt; 
&amp;lt;div  class=&quot;dct-ee&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;The baby had been abandoned by its mother.&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;这个婴儿被母亲遗弃了。&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li class=&quot;dct-ee&quot;
              style=&quot;display:none&quot; mce_style=&quot;display:none&quot; &amp;gt; 
&amp;lt;div  class=&quot;dct-ee&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;People often simply abandon their pets when they go abroad.&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;人们出国时常常丢下宠物不管，一走了之。&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li class=&quot;dct-ee&quot;
              style=&quot;display:none&quot; mce_style=&quot;display:none&quot; &amp;gt; 
&amp;lt;div  class=&quot;dct-ee&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;The study showed a deep fear among the elderly of being abandoned to the care of strangers.&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;研究表明，老人十分害怕被丢给陌生人照管。&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li class=&quot;dct-em&quot;
               &amp;gt; 
&amp;lt;div  class=&quot;dct-em&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;to leave a thing or place, especially because it is impossible or dangerous to stay&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;不得已而放弃；舍弃
&amp;lt;span class=&quot;dct-tlb&quot; title=&quot;Complement&quot;&amp;gt;~ sth (to sb/sth)&amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;dct-tlb&quot; title=&quot;Grammar&quot;&amp;gt;VN&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li class=&quot;dct-ee&quot;
              style=&quot;display:none&quot; mce_style=&quot;display:none&quot; &amp;gt; 
&amp;lt;div  class=&quot;dct-ee&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;Snow forced many drivers to abandon their vehicles.&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;大雪迫使许多驾驶者弃车步行。&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li class=&quot;dct-ee&quot;
              style=&quot;display:none&quot; mce_style=&quot;display:none&quot; &amp;gt; 
&amp;lt;div  class=&quot;dct-ee&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;They had to abandon their lands and property to the invading forces.&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;他们不得不放弃土地和财产，让侵略军占领。&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li class=&quot;dct-ee&quot;
              style=&quot;display:none&quot; mce_style=&quot;display:none&quot; &amp;gt; 
&amp;lt;div  class=&quot;dct-ee&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;He gave the order to abandon ship(= to leave the ship because it was sinking).&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;他下令弃船（因船快要沉没）。&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li class=&quot;dct-em&quot;
               &amp;gt; 
&amp;lt;div  class=&quot;dct-em&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;to stop supporting or helping somebody; to stop believing in something&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;停止（支持或帮助）；放弃（信念）
&amp;lt;span class=&quot;dct-tlb&quot; title=&quot;Grammar&quot;&amp;gt;VN&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li class=&quot;dct-ee&quot;
              style=&quot;display:none&quot; mce_style=&quot;display:none&quot; &amp;gt; 
&amp;lt;div  class=&quot;dct-ee&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;The country abandoned its political leaders after the war.&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;战后该国人民不再拥护他们的政治领袖。&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li class=&quot;dct-ee&quot;
              style=&quot;display:none&quot; mce_style=&quot;display:none&quot; &amp;gt; 
&amp;lt;div  class=&quot;dct-ee&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;By 1930 he had abandoned his Marxist principles.&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;1930 年时他已放弃了马克思主义信念。&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li class=&quot;dct-em&quot;
               &amp;gt; 
&amp;lt;div  class=&quot;dct-em&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;to stop doing something, especially before it is finished; to stop having something&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;中止；放弃；不再有
&amp;lt;span class=&quot;dct-tlb&quot; title=&quot;Grammar&quot;&amp;gt;VN&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li class=&quot;dct-ee&quot;
              style=&quot;display:none&quot; mce_style=&quot;display:none&quot; &amp;gt; 
&amp;lt;div  class=&quot;dct-ee&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;They had to abandon the match because of rain.&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;因为下雨，他们只好中止比赛。&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li class=&quot;dct-ee&quot;
              style=&quot;display:none&quot; mce_style=&quot;display:none&quot; &amp;gt; 
&amp;lt;div  class=&quot;dct-ee&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;I have abandoned hope of any reconciliation.&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;我已对任何和解都不再抱希望。&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li class=&quot;dct-em&quot;
               &amp;gt; 
&amp;lt;div  class=&quot;dct-em&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;to feel an emotion so strongly that you can feel nothing else&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;陷入，沉湎于（某种情感）
&amp;lt;span class=&quot;dct-tlb&quot; title=&quot;Complement&quot;&amp;gt;~ yourself to sth&amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;dct-tlb&quot; title=&quot;Register&quot;&amp;gt;literary&amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;dct-tlb&quot; title=&quot;Grammar&quot;&amp;gt;VN&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li class=&quot;dct-ee&quot;
              style=&quot;display:none&quot; mce_style=&quot;display:none&quot; &amp;gt; 
&amp;lt;div  class=&quot;dct-ee&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;He abandoned himself to despair.&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;他陷入绝望。&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li class=&quot;dct-ec&quot;
               &amp;gt; 
&amp;lt;div  class=&quot;dct-ec&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-elb&quot; title=&quot;Part-of-Speech&quot;&amp;gt;noun&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li class=&quot;dct-em&quot;
               &amp;gt; 
&amp;lt;div  class=&quot;dct-em&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;an uncontrolled way of behaving that shows that somebody does not care what other people think&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;放任；放纵
&amp;lt;span class=&quot;dct-tlb&quot; title=&quot;Grammar&quot;&amp;gt;uncountable&amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;dct-tlb&quot; title=&quot;Register&quot;&amp;gt;written&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li class=&quot;dct-ee&quot;
              style=&quot;display:none&quot; mce_style=&quot;display:none&quot; &amp;gt; 
&amp;lt;div  class=&quot;dct-ee&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;He signed cheques with careless abandon.&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;dct-tt&quot;&amp;gt;他无所顾忌地乱开支票。&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li class=&quot;dct-er&quot;
               &amp;gt; 
&amp;lt;div  class=&quot;dct-er&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-elb&quot; title=&quot;Word&quot;&amp;gt;See also:&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div  class=&quot;dct-er&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;q=with+gay+abandon&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot; mce_href=&quot;dictionary?hl=en&amp;amp;q=with+gay+abandon&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot;&amp;gt;with gay abandon&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;h3&amp;gt;English dictionary&amp;lt;/h3&amp;gt; 
&amp;lt;ul class=&quot;dct-e2&quot;  &amp;gt; 
&amp;lt;li class=&quot;dct-eh&quot;
             &amp;gt; 
&amp;lt;div  class=&quot;dct-eh&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;a&amp;middot;ban&amp;middot;don&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li class=&quot;dct-em&quot;
               &amp;gt; 
&amp;lt;div  class=&quot;dct-em&quot;&amp;gt; 
&amp;lt;span class=&quot;dct-tt&quot;&amp;gt;Complete lack of inhibition or restraint&amp;lt;/span&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;div class=&quot;mr-wds&quot;&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;q=abandon&amp;amp;sl=en&amp;amp;tl=en&amp;amp;oi=dict_mo&quot; mce_href=&quot;dictionary?hl=en&amp;amp;q=abandon&amp;amp;sl=en&amp;amp;tl=en&amp;amp;oi=dict_mo&quot;&amp;gt; 
More English dictionary results &amp;raquo;&amp;lt;/a&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;h3&amp;gt;Related phrases&amp;lt;/h3&amp;gt; 
&amp;lt;ul class=&quot;rlt-snt&quot;&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;div&amp;gt; 
&amp;lt;b&amp;gt;&amp;lt;a href=&quot; 
  /dictionary?q=abandon+oneself+to&amp;amp;hl=en&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_re
&quot; mce_href=&quot; 
  /dictionary?q=abandon+oneself+to&amp;amp;hl=en&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_re
&quot;&amp;gt;abandon oneself to&amp;lt;/a&amp;gt;&amp;lt;/b&amp;gt; 
&amp;lt;/div&amp;gt; 
沉溺于
&amp;lt;/li&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;div&amp;gt; 
&amp;lt;b&amp;gt;&amp;lt;a href=&quot; 
  /dictionary?q=with+gay+abandon&amp;amp;hl=en&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_re
&quot; mce_href=&quot; 
  /dictionary?q=with+gay+abandon&amp;amp;hl=en&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_re
&quot;&amp;gt;with gay abandon&amp;lt;/a&amp;gt;&amp;lt;/b&amp;gt; 
&amp;lt;/div&amp;gt; 
不考虑后果；轻率
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;h3&amp;gt;Related languages&amp;lt;/h3&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;strong&amp;gt;abandon&amp;lt;/strong&amp;gt; is also a word in:
&amp;lt;a href=&quot;/dictionary?q=abandon&amp;amp;hl=en&amp;amp;sl=fr&amp;amp;tl=en
&quot; mce_href=&quot;dictionary?q=abandon&amp;amp;hl=en&amp;amp;sl=fr&amp;amp;tl=en
&quot;&amp;gt;fran&amp;ccedil;ais&amp;lt;/a&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;h3&amp;gt;Synonyms&amp;lt;/h3&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;span class=&quot;dct-elb&quot; title=&quot;Part-of-speech&quot;&amp;gt;verb&amp;lt;/span&amp;gt;:&amp;lt;span class=&quot;dct-tt&quot;&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;q=leave&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot; mce_href=&quot;dictionary?hl=en&amp;amp;q=leave&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot;&amp;gt;leave&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;,&amp;lt;span class=&quot;dct-tt&quot;&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;q=relinquish&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot; mce_href=&quot;dictionary?hl=en&amp;amp;q=relinquish&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot;&amp;gt;relinquish&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;,&amp;lt;span class=&quot;dct-tt&quot;&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;q=forsake&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot; mce_href=&quot;dictionary?hl=en&amp;amp;q=forsake&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot;&amp;gt;forsake&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;,&amp;lt;span class=&quot;dct-tt&quot;&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;q=quit&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot; mce_href=&quot;dictionary?hl=en&amp;amp;q=quit&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot;&amp;gt;quit&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;,&amp;lt;span class=&quot;dct-tt&quot;&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;q=give+up&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot; mce_href=&quot;dictionary?hl=en&amp;amp;q=give+up&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot;&amp;gt;give up&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;,&amp;lt;span class=&quot;dct-tt&quot;&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;q=desert&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot; mce_href=&quot;dictionary?hl=en&amp;amp;q=desert&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot;&amp;gt;desert&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;,&amp;lt;span class=&quot;dct-tt&quot;&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;q=renounce&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot; mce_href=&quot;dictionary?hl=en&amp;amp;q=renounce&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot;&amp;gt;renounce&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;,&amp;lt;span class=&quot;dct-tt&quot;&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;q=drop&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot; mce_href=&quot;dictionary?hl=en&amp;amp;q=drop&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot;&amp;gt;drop&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;,&amp;lt;span class=&quot;dct-tt&quot;&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;q=vacate&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot; mce_href=&quot;dictionary?hl=en&amp;amp;q=vacate&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;oi=dict_lk&quot;&amp;gt;vacate&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;h3&amp;gt;Web translations&amp;lt;/h3&amp;gt; 
&amp;lt;div&amp;gt; 
&amp;lt;h2 class=&quot;wd&quot;&amp;gt;abandon&amp;lt;/h2&amp;gt; 
&amp;lt;div class=&quot;wbtr_cnt&quot;&amp;gt; 
&amp;lt;ol&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;span class=&quot;wbtr_mn&quot;&amp;gt;放弃&amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;wbtr_snp&quot;&amp;gt;&amp;lt;b&amp;gt;abandon放弃&amp;lt;/b&amp;gt;离弃遗弃They were accused of abandoning their own principles &amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;wbtr_url&quot;&amp;gt; 
&amp;lt;a href=&quot;http://www.google.com/url?q=http://i.eol.cn/gchat.php%3Fid%3D5402&amp;amp;source=dictionary&amp;amp;type=we&amp;amp;usg=AFQjCNFpn25cb8sXwZ7B4vxhy9Rzg2Q33Q&quot; mce_href=&quot;http://www.google.com/url?q=http://i.eol.cn/gchat.php%3Fid%3D5402&amp;amp;source=dictionary&amp;amp;type=we&amp;amp;usg=AFQjCNFpn25cb8sXwZ7B4vxhy9Rzg2Q33Q&quot; target=&quot;_blank&quot;&amp;gt;i.eol.cn&amp;lt;/a&amp;gt; 
&amp;lt;/span&amp;gt; -
&amp;lt;span class=&quot;wbtr_rs&quot;&amp;gt; 
&amp;lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=%22abandon%22+%22%E6%94%BE%E5%BC%83%22&amp;amp;ie=UTF-8&amp;amp;oi=dict_we&quot; mce_href=&quot;http://www.google.com/search?hl=en&amp;amp;q=%22abandon%22+%22%E6%94%BE%E5%BC%83%22&amp;amp;ie=UTF-8&amp;amp;oi=dict_we&quot; target=&quot;_blank&quot;&amp;gt; 
Related search
&amp;lt;/a&amp;gt; 
&amp;lt;/span&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;span class=&quot;wbtr_mn&quot;&amp;gt;抛弃&amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;wbtr_snp&quot;&amp;gt;&amp;lt;b&amp;gt;抛弃&amp;lt;/b&amp;gt;放弃 &amp;lt;b&amp;gt;abandon&amp;lt;/b&amp;gt; 阿巴诺喹 Abanoquil 减轻减少消除 abate. 在线英语学习. 阿贝氏&amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;wbtr_url&quot;&amp;gt; 
&amp;lt;a href=&quot;http://www.google.com/url?q=http://www.scientrans.com/vocabulary/pages/20080202134324_34_65_1.html&amp;amp;source=dictionary&amp;amp;type=we&amp;amp;usg=AFQjCNHP7exeD0Iw8ck0Ps1yqu1yyu52SQ&quot; mce_href=&quot;http://www.google.com/url?q=http://www.scientrans.com/vocabulary/pages/20080202134324_34_65_1.html&amp;amp;source=dictionary&amp;amp;type=we&amp;amp;usg=AFQjCNHP7exeD0Iw8ck0Ps1yqu1yyu52SQ&quot; target=&quot;_blank&quot;&amp;gt;www.scientrans.com&amp;lt;/a&amp;gt; 
&amp;lt;/span&amp;gt; -
&amp;lt;span class=&quot;wbtr_rs&quot;&amp;gt; 
&amp;lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=%22abandon%22+%22%E6%8A%9B%E5%BC%83%22&amp;amp;ie=UTF-8&amp;amp;oi=dict_we&quot; mce_href=&quot;http://www.google.com/search?hl=en&amp;amp;q=%22abandon%22+%22%E6%8A%9B%E5%BC%83%22&amp;amp;ie=UTF-8&amp;amp;oi=dict_we&quot; target=&quot;_blank&quot;&amp;gt; 
Related search
&amp;lt;/a&amp;gt; 
&amp;lt;/span&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;span class=&quot;wbtr_mn&quot;&amp;gt;遗弃&amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;wbtr_snp&quot;&amp;gt;&amp;lt;b&amp;gt;abandon&amp;lt;/b&amp;gt;放弃离弃&amp;lt;b&amp;gt;遗弃&amp;lt;/b&amp;gt;They were accused of abandoning their own principles &amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;wbtr_url&quot;&amp;gt; 
&amp;lt;a href=&quot;http://www.google.com/url?q=http://i.eol.cn/gchat.php%3Fid%3D5402&amp;amp;source=dictionary&amp;amp;type=we&amp;amp;usg=AFQjCNFpn25cb8sXwZ7B4vxhy9Rzg2Q33Q&quot; mce_href=&quot;http://www.google.com/url?q=http://i.eol.cn/gchat.php%3Fid%3D5402&amp;amp;source=dictionary&amp;amp;type=we&amp;amp;usg=AFQjCNFpn25cb8sXwZ7B4vxhy9Rzg2Q33Q&quot; target=&quot;_blank&quot;&amp;gt;i.eol.cn&amp;lt;/a&amp;gt; 
&amp;lt;/span&amp;gt; -
&amp;lt;span class=&quot;wbtr_rs&quot;&amp;gt; 
&amp;lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=%22abandon%22+%22%E9%81%97%E5%BC%83%22&amp;amp;ie=UTF-8&amp;amp;oi=dict_we&quot; mce_href=&quot;http://www.google.com/search?hl=en&amp;amp;q=%22abandon%22+%22%E9%81%97%E5%BC%83%22&amp;amp;ie=UTF-8&amp;amp;oi=dict_we&quot; target=&quot;_blank&quot;&amp;gt; 
Related search
&amp;lt;/a&amp;gt; 
&amp;lt;/span&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;span class=&quot;wbtr_mn&quot;&amp;gt;舍弃&amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;wbtr_snp&quot;&amp;gt;&amp;lt;b&amp;gt;舍弃 abandon&amp;lt;/b&amp;gt; 缩写地址呼号 abbreviated address calling 异常终止倾印 abend dump &amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;wbtr_url&quot;&amp;gt; 
&amp;lt;a href=&quot;http://www.google.com/url?q=http://www.scientrans.com/vocabulary/pages/20080317172247_106_65_1.html&amp;amp;source=dictionary&amp;amp;type=we&amp;amp;usg=AFQjCNExbMe6li2ZJzqgDvGM23Qdt1smpw&quot; mce_href=&quot;http://www.google.com/url?q=http://www.scientrans.com/vocabulary/pages/20080317172247_106_65_1.html&amp;amp;source=dictionary&amp;amp;type=we&amp;amp;usg=AFQjCNExbMe6li2ZJzqgDvGM23Qdt1smpw&quot; target=&quot;_blank&quot;&amp;gt;www.scientrans.com&amp;lt;/a&amp;gt; 
&amp;lt;/span&amp;gt; -
&amp;lt;span class=&quot;wbtr_rs&quot;&amp;gt; 
&amp;lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=%22abandon%22+%22%E8%88%8D%E5%BC%83%22&amp;amp;ie=UTF-8&amp;amp;oi=dict_we&quot; mce_href=&quot;http://www.google.com/search?hl=en&amp;amp;q=%22abandon%22+%22%E8%88%8D%E5%BC%83%22&amp;amp;ie=UTF-8&amp;amp;oi=dict_we&quot; target=&quot;_blank&quot;&amp;gt; 
Related search
&amp;lt;/a&amp;gt; 
&amp;lt;/span&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;span class=&quot;wbtr_mn&quot;&amp;gt;丢弃&amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;wbtr_snp&quot;&amp;gt;&amp;lt;b&amp;gt;abandon&amp;lt;/b&amp;gt; vt&amp;lt;b&amp;gt;丢弃&amp;lt;/b&amp;gt;放弃抛弃 ability n能力能耐本领 able a有能力的出色的 abnormal a不&amp;lt;/span&amp;gt; 
&amp;lt;span class=&quot;wbtr_url&quot;&amp;gt; 
&amp;lt;a href=&quot;http://www.google.com/url?q=http://www.51jnjj.cn/news_info.asp%3Fid%3D1602&amp;amp;source=dictionary&amp;amp;type=we&amp;amp;usg=AFQjCNGk60J0xWH-ue-l_HZKfm3O1PNfgQ&quot; mce_href=&quot;http://www.google.com/url?q=http://www.51jnjj.cn/news_info.asp%3Fid%3D1602&amp;amp;source=dictionary&amp;amp;type=we&amp;amp;usg=AFQjCNGk60J0xWH-ue-l_HZKfm3O1PNfgQ&quot; target=&quot;_blank&quot;&amp;gt;www.51jnjj.cn&amp;lt;/a&amp;gt; 
&amp;lt;/span&amp;gt; -
&amp;lt;span class=&quot;wbtr_rs&quot;&amp;gt; 
&amp;lt;a href=&quot;http://www.google.com/search?hl=en&amp;amp;q=%22abandon%22+%22%E4%B8%A2%E5%BC%83%22&amp;amp;ie=UTF-8&amp;amp;oi=dict_we&quot; mce_href=&quot;http://www.google.com/search?hl=en&amp;amp;q=%22abandon%22+%22%E4%B8%A2%E5%BC%83%22&amp;amp;ie=UTF-8&amp;amp;oi=dict_we&quot; target=&quot;_blank&quot;&amp;gt; 
Related search
&amp;lt;/a&amp;gt; 
&amp;lt;/span&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ol&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;h3&amp;gt;Usage examples&amp;lt;/h3&amp;gt; 
&amp;lt;ul class=&quot;rlt-snt&quot;&amp;gt; 
&amp;lt;li&amp;gt;&amp;lt;div&amp;gt;&quot;People died for this tournament, others were injured. We can&#39;t &amp;lt;b&amp;gt;abandon&amp;lt;/b&amp;gt; them and leave like cowards,&quot; Alaixys Romao told French sports agency L&#39;Equipe. &quot;If we stay here, it&#39;s for them. But also so as not to give satisfaction to the rebels....&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span class=&quot;grey&quot;&amp;gt;Jan 10, 2010&amp;lt;/span&amp;gt;&amp;nbsp;-&amp;nbsp;&amp;lt;span&amp;gt; 
&amp;lt;a class=&quot;lightblue&quot; href=&quot;http://www.google.com/url?q=http://en.wikipedia.org/wiki/Alaixys_Romao&amp;amp;source=dictionary&amp;amp;usg=AFQjCNG0zCsZW1KyoHGeZnumG5E2-qMhSg&quot; mce_href=&quot;http://www.google.com/url?q=http://en.wikipedia.org/wiki/Alaixys_Romao&amp;amp;source=dictionary&amp;amp;usg=AFQjCNG0zCsZW1KyoHGeZnumG5E2-qMhSg&quot;&amp;gt;Alaixys Romao&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;nbsp;-&amp;nbsp;&amp;lt;span&amp;gt; 
&amp;lt;a class=&quot;green&quot; href=&quot;http://www.google.com/url?q=http://www.bbc.co.uk/blogs/piersedwards/2010/01/gun_attack_overshadows_africa.html&amp;amp;source=dictionary&amp;amp;usg=AFQjCNFXePJzwrZ-RG_9bgFB4QdVuCMbhg&quot; mce_href=&quot;http://www.google.com/url?q=http://www.bbc.co.uk/blogs/piersedwards/2010/01/gun_attack_overshadows_africa.html&amp;amp;source=dictionary&amp;amp;usg=AFQjCNFXePJzwrZ-RG_9bgFB4QdVuCMbhg&quot;&amp;gt;BBC Sport (blog)&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/li&amp;gt; 
&amp;lt;li&amp;gt;&amp;lt;div&amp;gt;&quot;The president would have us believe there are two choices: keep all of our troops in Iraq or &amp;lt;b&amp;gt;abandon&amp;lt;/b&amp;gt; these Iraqis,&quot; Obama said. &quot;I reject this choice.&quot;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span class=&quot;grey&quot;&amp;gt;Sep 12, 2007&amp;lt;/span&amp;gt;&amp;nbsp;-&amp;nbsp;&amp;lt;span&amp;gt; 
&amp;lt;a class=&quot;lightblue&quot; href=&quot;http://www.google.com/url?q=http://en.wikipedia.org/wiki/Barack_Obama&amp;amp;source=dictionary&amp;amp;usg=AFQjCNHQ0yfPaaXFGqLKymRgcres0I2nuA&quot; mce_href=&quot;http://www.google.com/url?q=http://en.wikipedia.org/wiki/Barack_Obama&amp;amp;source=dictionary&amp;amp;usg=AFQjCNHQ0yfPaaXFGqLKymRgcres0I2nuA&quot;&amp;gt;Barack Obama&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;nbsp;-&amp;nbsp;&amp;lt;span&amp;gt; 
&amp;lt;a class=&quot;green&quot; href=&quot;http://www.google.com/url?q=http://www.forbes.com/feeds/ap/2007/09/12/ap4108235.html&amp;amp;source=dictionary&amp;amp;usg=AFQjCNE9DqEquDtHBRoJSv9cfvjUPrgevg&quot; mce_href=&quot;http://www.google.com/url?q=http://www.forbes.com/feeds/ap/2007/09/12/ap4108235.html&amp;amp;source=dictionary&amp;amp;usg=AFQjCNE9DqEquDtHBRoJSv9cfvjUPrgevg&quot;&amp;gt;Forbes&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/li&amp;gt; 
&amp;lt;li&amp;gt;&amp;lt;div&amp;gt;&quot;I am deeply disappointed that the governor has decided to &amp;lt;b&amp;gt;abandon&amp;lt;/b&amp;gt; the state and her constituents before her term has concluded,&quot; Murkowski said.&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span class=&quot;grey&quot;&amp;gt;Jul 3, 2009&amp;lt;/span&amp;gt;&amp;nbsp;-&amp;nbsp;&amp;lt;span&amp;gt; 
&amp;lt;a class=&quot;lightblue&quot; href=&quot;http://www.google.com/url?q=http://en.wikipedia.org/wiki/Lisa_Murkowski&amp;amp;source=dictionary&amp;amp;usg=AFQjCNGfUU0pjzbEuDwnY81jySj6rKn9pA&quot; mce_href=&quot;http://www.google.com/url?q=http://en.wikipedia.org/wiki/Lisa_Murkowski&amp;amp;source=dictionary&amp;amp;usg=AFQjCNGfUU0pjzbEuDwnY81jySj6rKn9pA&quot;&amp;gt;Lisa Murkowski&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;nbsp;-&amp;nbsp;&amp;lt;span&amp;gt; 
&amp;lt;a class=&quot;green&quot; href=&quot;http://www.google.com/url?q=http://www.politico.com/blogs/bensmith/0709/L_Murkowski_Deeply_disappointed_Palin_has_decided_to_abandon_the_state_.html&amp;amp;source=dictionary&amp;amp;usg=AFQjCNGtnwsoPi3e6Y5XTizOkg87g-_AsQ&quot; mce_href=&quot;http://www.google.com/url?q=http://www.politico.com/blogs/bensmith/0709/L_Murkowski_Deeply_disappointed_Palin_has_decided_to_abandon_the_state_.html&amp;amp;source=dictionary&amp;amp;usg=AFQjCNGtnwsoPi3e6Y5XTizOkg87g-_AsQ&quot;&amp;gt;Politico&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;h3&amp;gt;Web definitions&amp;lt;/h3&amp;gt; 
&amp;lt;ul class=&quot;gls&quot;&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li&amp;gt; 
forsake, leave behind; &quot;We abandoned the old car in the empty parking lot&quot; &amp;lt;br&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;div&amp;gt; 
&amp;lt;a href=&quot;http://www.google.com/url?q=http://wordnetweb.princeton.edu/perl/webwn%3Fs%3Dabandon&amp;amp;source=dictionary&amp;amp;type=de&amp;amp;usg=AFQjCNHqLML70dHqzi04RiOEhnZ9Jvl71g&quot; mce_href=&quot;http://www.google.com/url?q=http://wordnetweb.princeton.edu/perl/webwn%3Fs%3Dabandon&amp;amp;source=dictionary&amp;amp;type=de&amp;amp;usg=AFQjCNHqLML70dHqzi04RiOEhnZ9Jvl71g&quot;&amp;gt; 
wordnetweb.princeton.edu/perl/webwn
&amp;lt;/a&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li&amp;gt; 
give up with the intent of never claiming again; &quot;Abandon your life to God&quot;; &quot;She gave up her children to her ex-husband when she moved to Tahiti&quot;; &quot;We gave the drowning victim up for dead&quot; &amp;lt;br&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;div&amp;gt; 
&amp;lt;a href=&quot;http://www.google.com/url?q=http://wordnetweb.princeton.edu/perl/webwn%3Fs%3Dabandon&amp;amp;source=dictionary&amp;amp;type=de&amp;amp;usg=AFQjCNHqLML70dHqzi04RiOEhnZ9Jvl71g&quot; mce_href=&quot;http://www.google.com/url?q=http://wordnetweb.princeton.edu/perl/webwn%3Fs%3Dabandon&amp;amp;source=dictionary&amp;amp;type=de&amp;amp;usg=AFQjCNHqLML70dHqzi04RiOEhnZ9Jvl71g&quot;&amp;gt; 
wordnetweb.princeton.edu/perl/webwn
&amp;lt;/a&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li&amp;gt; 
vacate: leave behind empty; move out of; &quot;You must vacate your office by tonight&quot; &amp;lt;br&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;div&amp;gt; 
&amp;lt;a href=&quot;http://www.google.com/url?q=http://wordnetweb.princeton.edu/perl/webwn%3Fs%3Dabandon&amp;amp;source=dictionary&amp;amp;type=de&amp;amp;usg=AFQjCNHqLML70dHqzi04RiOEhnZ9Jvl71g&quot; mce_href=&quot;http://www.google.com/url?q=http://wordnetweb.princeton.edu/perl/webwn%3Fs%3Dabandon&amp;amp;source=dictionary&amp;amp;type=de&amp;amp;usg=AFQjCNHqLML70dHqzi04RiOEhnZ9Jvl71g&quot;&amp;gt; 
wordnetweb.princeton.edu/perl/webwn
&amp;lt;/a&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;div class=&quot;mr-wds&quot;&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;q=abandon&amp;amp;sl=en&amp;amp;tl=en&quot; mce_href=&quot;dictionary?hl=en&amp;amp;q=abandon&amp;amp;sl=en&amp;amp;tl=en&quot;&amp;gt; 
Show more Web definitions &amp;raquo;&amp;lt;/a&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&quot;dct-rt-sct&quot;&amp;gt; 
&amp;lt;div class=&quot;wl-hd&quot;&amp;gt; 
&amp;lt;img src=&quot;/dictionary/image/starred.png&quot; mce_src=&quot;dictionary/image/starred.png&quot;&amp;gt; 
&amp;lt;a href=&quot;/dictionary/wordlist?hl=en&quot; mce_href=&quot;dictionary/wordlist?hl=en&quot;&amp;gt;Starred words &amp;raquo;&amp;lt;/a&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div id=&quot;dict-hist&quot; class=&quot;rt-sct-blk&quot;&amp;gt; 
&amp;lt;h4&amp;gt;Recent searches&amp;lt;/h4&amp;gt; 
&amp;lt;div&amp;gt; 
&amp;lt;ul&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;sl=en&amp;amp;tl=en&amp;amp;q=abeyance&quot; mce_href=&quot;dictionary?hl=en&amp;amp;sl=en&amp;amp;tl=en&amp;amp;q=abeyance&quot;&amp;gt;abeyance&amp;lt;/a&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;q=abeyance&quot; mce_href=&quot;dictionary?hl=en&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;q=abeyance&quot;&amp;gt;abeyance&amp;lt;/a&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;q=abandon&quot; mce_href=&quot;dictionary?hl=en&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;q=abandon&quot;&amp;gt;abandon&amp;lt;/a&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;q=abet&quot; mce_href=&quot;dictionary?hl=en&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;q=abet&quot;&amp;gt;abet&amp;lt;/a&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;li&amp;gt; 
&amp;lt;a href=&quot;/dictionary?hl=en&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;q=Phonetic&quot; mce_href=&quot;dictionary?hl=en&amp;amp;sl=en&amp;amp;tl=zh-CN&amp;amp;q=Phonetic&quot;&amp;gt;Phonetic&amp;lt;/a&amp;gt; 
&amp;lt;/li&amp;gt; 
&amp;lt;/ul&amp;gt; 
&amp;lt;div class=&quot;mrhist&quot;&amp;gt; 
&amp;lt;a href=&quot;http://www.google.com/history/lookup?hl=en&amp;amp;st=dict&quot; mce_href=&quot;http://www.google.com/history/lookup?hl=en&amp;amp;st=dict&quot;&amp;gt; 
All recent searches &amp;raquo;&amp;lt;/a&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;br class=&quot;clear&quot;&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&quot;dscl-dct&quot;&amp;gt;&amp;lt;p&amp;gt; 
Results partly provided by &amp;lt;a href=&quot;http://www.dreye.com.cn&quot; mce_href=&quot;http://www.dreye.com.cn&quot;&amp;gt;Dr.eye&amp;lt;/a&amp;gt;.
&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt; 
&amp;lt;div class=&quot;dscl-glb&quot;&amp;gt; 
The usage examples, images and web definitions on this page were selected automatically by a computer program. They do not necessarily reflect the views of Google Inc. or its employees.
&amp;lt;/div&amp;gt; 
&amp;lt;center&amp;gt; 
&amp;lt;p/&amp;gt; 
&amp;lt;hr class=&quot;z&quot;&amp;gt; 
&amp;lt;div class=&quot;&quot; style=&quot;border-top: 1px solid rgb(204, 204, 240); padding: 15px 2px 2px;&quot; mce_style=&quot;border-top: 1px solid #ccccf0; padding: 15px 2px 2px;&quot;&amp;gt; 
&amp;lt;font size=&quot;-1&quot;&amp;gt; 
&amp;lt;span &amp;gt;&amp;copy;2009 Google&amp;lt;/span&amp;gt; 
-
&amp;lt;a href=&quot;http://www.google.com/webhp?hl=en&quot; mce_href=&quot;http://www.google.com/webhp?hl=en&quot;&amp;gt;Google&amp;nbsp;Home&amp;lt;/a&amp;gt; 
-
&amp;lt;a href=&quot;http://www.google.com/intl/en/about.html&quot; mce_href=&quot;http://www.google.com/intl/en/about.html&quot;&amp;gt;All About Google&amp;lt;/a&amp;gt; 
&amp;lt;/font&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/center&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;/body&amp;gt; 
&amp;lt;mce:script type=&quot;text/javascript&quot;&amp;gt;&amp;lt;!--
 
(function() {
})();
if (!window.google) { window.google = {}; }
(function(){if(window.jstiming){window.jstiming.a={};window.jstiming.c=1;var j=function(a,c,e){var b=a.t[c],g=a.t.start;if(b&amp;amp;&amp;amp;(g||e)){b=a.t[c][0];g=e!=undefined?e:g[0];return b-g}},n=function(a,c,e){var b=&quot;&quot;;if(window.jstiming.pt){b+=&quot;&amp;amp;srt=&quot;+window.jstiming.pt;delete window.jstiming.pt}try{if(window.external&amp;amp;&amp;amp;window.external.tran)b+=&quot;&amp;amp;tran=&quot;+window.external.tran;else if(window.gtbExternal&amp;amp;&amp;amp;window.gtbExternal.tran)b+=&quot;&amp;amp;tran=&quot;+window.gtbExternal.tran();else if(window.chrome&amp;amp;&amp;amp;window.chrome.csi)b+=&quot;&amp;amp;tran=&quot;+window.chrome.csi().tran}catch(g){}var d=
window.chrome;if(d)if(d=d.loadTimes){if(d().wasFetchedViaSpdy)b+=&quot;&amp;amp;p=s&quot;;if(d().wasNpnNegotiated)b+=&quot;&amp;amp;npn=1&quot;;if(d().wasAlternateProtocolAvailable)b+=&quot;&amp;amp;apa=1&quot;}if(a.b)b+=&quot;&amp;amp;&quot;+a.b;d=a.t;var m=d.start,k=[],h=[];for(var f in d)if(f!=&quot;start&quot;)if(f.indexOf(&quot;_&quot;)!=0){var i=d[f][1];if(i)d[i]&amp;amp;&amp;amp;h.push(f+&quot;.&quot;+j(a,f,d[i][0]));else m&amp;amp;&amp;amp;k.push(f+&quot;.&quot;+j(a,f))}delete d.start;if(c)for(var l in c)b+=&quot;&amp;amp;&quot;+l+&quot;=&quot;+c[l];return a=[e?e:&quot;http://csi.gstatic.com/csi&quot;,&quot;?v=3&quot;,&quot;&amp;amp;s=&quot;+(window.jstiming.sn||&quot;dictionary&quot;)+&quot;&amp;amp;action=&quot;,a.name,
h.length?&quot;&amp;amp;it=&quot;+h.join(&quot;,&quot;):&quot;&quot;,&quot;&quot;,b,&quot;&amp;amp;rt=&quot;,k.join(&quot;,&quot;)].join(&quot;&quot;)};window.jstiming.report=function(a,c,e){a=n(a,c,e);if(!a)return&quot;&quot;;c=new Image;var b=window.jstiming.c++;window.jstiming.a[b]=c;c.onload=c.onerror=function(){delete window.jstiming.a[b]};c.src=a;c=null;return a}};})();
(function(){var b=true,g=null,h=h||{};h.global=this;h.v=b;h.w=&quot;en&quot;;h.d=g;h.Z=function(a){h.g(a)};h.g=function(a,c,d){a=a.split(&quot;.&quot;);d=d||h.global;!(a[0]in d)&amp;amp;&amp;amp;d.execScript&amp;amp;&amp;amp;d.execScript(&quot;var &quot;+a[0]);for(var e;a.length&amp;amp;&amp;amp;(e=a.shift());)if(!a.length&amp;amp;&amp;amp;h.p(c))d[e]=c;else d=d[e]?d[e]:d[e]={}};h.K=function(a,c){for(var d=a.split(&quot;.&quot;),e=c||h.global,f;f=d.shift();)if(e[f])e=e[f];else return g;return e};h.M=function(a,c){var d=c||h.global;for(var e in a)d[e]=a[e]};h.A=function(){};h.da=false;h.aa=function(){};h.D=&quot;&quot;;
h.X=function(){};h.N=function(){return arguments[0]};h.z=function(){throw Error(&quot;unimplemented abstract method&quot;);};h.B=function(a){a.I=function(){return a.o||(a.o=new a)}};
h.a=function(a){var c=typeof a;if(c==&quot;object&quot;)if(a){if(a instanceof Array||!(a instanceof Object)&amp;amp;&amp;amp;Object.prototype.toString.call(a)==&quot;[object Array]&quot;||typeof a.length==&quot;number&quot;&amp;amp;&amp;amp;typeof a.splice!=&quot;undefined&quot;&amp;amp;&amp;amp;typeof a.propertyIsEnumerable!=&quot;undefined&quot;&amp;amp;&amp;amp;!a.propertyIsEnumerable(&quot;splice&quot;))return&quot;array&quot;;if(!(a instanceof Object)&amp;amp;&amp;amp;(Object.prototype.toString.call(a)==&quot;[object Function]&quot;||typeof a.call!=&quot;undefined&quot;&amp;amp;&amp;amp;typeof a.propertyIsEnumerable!=&quot;undefined&quot;&amp;amp;&amp;amp;!a.propertyIsEnumerable(&quot;call&quot;)))return&quot;function&quot;}else return&quot;null&quot;;
else if(c==&quot;function&quot;&amp;amp;&amp;amp;typeof a.call==&quot;undefined&quot;)return&quot;object&quot;;return c};h.s=function(a,c){if(c in a)for(var d in a)if(d==c&amp;amp;&amp;amp;Object.prototype.hasOwnProperty.call(a,c))return b;return false};h.Y=function(a,c){return a instanceof Object?Object.prototype.propertyIsEnumerable.call(a,c):h.s(a,c)};h.p=function(a){return a!==undefined};h.U=function(a){return a===g};h.S=function(a){return a!=g};h.O=function(a){return h.a(a)==&quot;array&quot;};
h.P=function(a){var c=h.a(a);return c==&quot;array&quot;||c==&quot;object&quot;&amp;amp;&amp;amp;typeof a.length==&quot;number&quot;};h.R=function(a){return h.q(a)&amp;amp;&amp;amp;typeof a.getFullYear==&quot;function&quot;};h.W=function(a){return typeof a==&quot;string&quot;};h.Q=function(a){return typeof a==&quot;boolean&quot;};h.V=function(a){return typeof a==&quot;number&quot;};h.T=function(a){return h.a(a)==&quot;function&quot;};h.q=function(a){a=h.a(a);return a==&quot;object&quot;||a==&quot;array&quot;||a==&quot;function&quot;};h.n=function(a){return a[h.b]||(a[h.b]=++h.u)};
h.t=function(a){&quot;removeAttribute&quot;in a&amp;amp;&amp;amp;a.removeAttribute(h.b);try{delete a[h.b]}catch(c){}};h.b=&quot;closure_uid_&quot;+Math.floor(Math.random()*2147483648).toString(36);h.u=0;h.H=h.n;h.$=h.t;h.l=function(a){var c=h.a(a);if(c==&quot;object&quot;||c==&quot;array&quot;){if(a.k)return a.k();c=c==&quot;array&quot;?[]:{};for(var d in a)c[d]=h.l(a[d]);return c}return a};
h.c=function(a,c){var d=c||h.global;if(arguments.length&amp;gt;2){var e=Array.prototype.slice.call(arguments,2);return function(){var f=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(f,e);return a.apply(d,f)}}else return function(){return a.apply(d,arguments)}};h.r=function(a){var c=Array.prototype.slice.call(arguments,1);return function(){var d=Array.prototype.slice.call(arguments);d.unshift.apply(d,c);return a.apply(this,d)}};h.i=function(a,c){for(var d in c)a[d]=c[d]};
h.now=Date.now||function(){return+new Date};
h.L=function(a){if(h.global.execScript)h.global.execScript(a,&quot;JavaScript&quot;);else if(h.global.eval){if(h.d==g){h.global.eval(&quot;var _et_ = 1;&quot;);if(typeof h.global._et_!=&quot;undefined&quot;){delete h.global._et_;h.d=b}else h.d=false}if(h.d)h.global.eval(a);else{var c=h.global.document,d=c.createElement(&quot;script&quot;);d.type=&quot;text/javascript&quot;;d.defer=false;d.appendChild(c.createTextNode(a));c.body.appendChild(d);c.body.removeChild(d)}}else throw Error(&quot;goog.globalEval not available&quot;);};h.ca=b;
h.G=function(a,c){var d=a+(c?&quot;-&quot;+c:&quot;&quot;);return h.f&amp;amp;&amp;amp;d in h.f?h.f[d]:d};h.ba=function(a){h.f=a};h.J=function(a,c){var d=c||{};for(var e in d){var f=(&quot;&quot;+d[e]).replace(//$/g,&quot;$$&quot;);a=a.replace(RegExp(&quot;//{//$&quot;+e+&quot;//}&quot;,&quot;gi&quot;),f)}return a};h.m=function(a,c,d){h.g(a,c,d)};h.F=function(a,c,d){a[c]=d};h.h=function(a,c){function d(){}d.prototype=c.prototype;a.e=c.prototype;a.prototype=new d;a.prototype.constructor=a};
h.C=function(a,c){var d=arguments.callee.caller;if(d.e)return d.e.constructor.apply(a,Array.prototype.slice.call(arguments,1));for(var e=Array.prototype.slice.call(arguments,2),f=false,i=a.constructor;i;i=i.e&amp;amp;&amp;amp;i.e.constructor)if(i.prototype[c]===d)f=b;else if(f)return i.prototype[c].apply(a,e);if(a[c]===d)return a.constructor.prototype[c].apply(a,e);else throw Error(&quot;goog.base called from a method of one name to a method of a different name&quot;);};h.scope=function(a){a.call(h.global)};h.j=b;
if(h.j){Function.prototype.c=function(a){if(arguments.length&amp;gt;1){var c=Array.prototype.slice.call(arguments,1);c.unshift(this,a);return h.c.apply(g,c)}else return h.c(this,a)};Function.prototype.r=function(){var a=Array.prototype.slice.call(arguments);a.unshift(this,g);return h.c.apply(g,a)};Function.prototype.h=function(a){h.h(this,a)};Function.prototype.i=function(a){h.i(this.prototype,a)}};function j(){var a=window.jstiming.load;a.tick(&quot;ol&quot;);window.jstiming.report(a)}h.m(&quot;tickBodyLoadAndReport&quot;,j);})();
var installFunctions = function() {
window.google.ac.install(document.f,document.f.q,&quot;d&quot;,true,
&quot;close&quot;,true,&quot;&quot;,&quot;&quot;,&quot;&quot;);
onUpdateLangpair(document.f[&#39;dct-slc&#39;]);
};
var hideShowEl = document.getElementById(&#39;dct-clk-a&#39;);
if (hideShowEl) {
hideShowEl.href = &#39;javascript:google.toggleDictionaryExample()&#39;;
}
function onUpdateLangpair(sel) {
langpair = sel.options[sel.selectedIndex].value;
window.google.ac.update(langpair);
};
window.setTimeout(installFunctions, 10);
// --&amp;gt;&amp;lt;/mce:script&amp;gt; 
&amp;lt;/html&amp;gt; &lt;/pre&gt;
&lt;p&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;注意到有一行信息：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;&amp;lt;meta name=&quot;description&quot; content=&quot;abandon : （不顾责任、义务等）离弃，遗弃，抛弃, 不得已而放弃；舍弃, 停止（支持或帮助）；放弃（信念）, 中止；放弃；不再有, 陷入，沉湎于（某种情感）, 放任；放纵 - Google&#39;s free online dictionary service.&quot;&amp;gt; &lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;包含单词abandon的中文释义。于是可以利用curl获取到Google Dictionary的翻译网页，然后直接在获取的网页中查找上面那一行信息。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:monospace;font-size:x-small;&quot;&gt;&lt;span style=&quot;white-space:pre-wrap;&quot;&gt;
&lt;pre&gt;#!/bin/bash
# Command line look up using Google&#39;s define feature - command line dictionary
# gd -i &amp;lt;input_file&amp;gt; -o &amp;lt;output_file&amp;gt; [-w &amp;lt;word&amp;gt;]
function query
{
	typeset wd=$1
	typeset TMPFILE=tmp.$wd
	typeset i=0
	while ((i&amp;lt;5))
	do
		curl -s -A &#39;Mozilla/4.0&#39; &quot;http://www.google.com/dictionary?langpair=zh-CN|en&amp;amp;hl=en&amp;amp;aq=f&amp;amp;q=$wd&quot; &amp;gt;$TMPFILE 2&amp;gt;/dev/null
		if [ -s $TMPFILE ]; then
			break
		elif ((i=4)); then
			echo $wd &amp;gt;&amp;gt; failed.gd.$input
		fi
		((i=i+1))
		sleep 1
	done
	perl -i -p -e &quot;print STDOUT /$1,/&quot;/r/n/&quot; if (m/($wd.*:.*)- Google.*/);&quot; $TMPFILE
	rm -f $TMPFILE
}
##############################################
#	MAIN LINE START HERE
##############################################
typeset input=
typeset output=
typeset word=
typeset -i flag=0
while getopts &#39;i:o:w:&#39; OPT
do
        case $OPT in
        i)	input=${OPTARG};;
        o)	output=${OPTARG};;
        w)	word=${OPTARG};flag=1;;
        *)      echo -u2 &quot;ERROR: Invalid argument [$OPT]&quot;
                ;;
        esac
done
shift `expr $OPTIND - 1`
if ((flag==0)); then
	perl -i.bk -p -e &quot;s/^(/w+).*[/[//].*[/]//]//$1/;&quot; $input # Eliminate the phonetic symbol
	WORDS=$(cat $input)
	for word in $WORDS
	do
		word_exp=$(query $word)
		if [ ${#word_exp} != 0 ]; then
			echo $word_exp &amp;gt;&amp;gt; $output
		else
			echo &quot;$word:&quot; &amp;gt;&amp;gt; $output
		fi
	done
else
	word_exp=$(query $word)
	if [ ${#word_exp} != 0 ]; then
		echo $word_exp
	else
		echo &quot;$word:&quot;
	fi
fi
&lt;/pre&gt;
&lt;p&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;2011-01-03 Update:&lt;/p&gt;
&lt;p&gt;奉上完整版的程序：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;#!/bin/bash
# Command line look up using Google&#39;s define feature - command line dictionary
# od [-b] [-g]-i &amp;lt;input_file&amp;gt; -o &amp;lt;output_file&amp;gt; [-w &amp;lt;word&amp;gt;]
# gd - Query words using Google Dictionary
function gd
{
	typeset wd=$1
	typeset TMPFILE=tmp.gd.$wd
	typeset -i i=0
	while ((i&amp;lt;5))
	do
		curl -s -A &#39;Mozilla/4.0&#39; &quot;http://www.google.com/dictionary?langpair=zh-CN|en&amp;amp;hl=en&amp;amp;aq=f&amp;amp;q=$wd&quot; &amp;gt;$TMPFILE 2&amp;gt;/dev/null
		if [ -s $TMPFILE ]; then
			break
		elif ((i=4)); then
			echo $wd &amp;gt;&amp;gt; failed.gd.$input
		fi
		((i=i+1))
		sleep 1
	done
	perl -i -p -e &quot;print STDOUT /$1,/&quot;/r/n/&quot; if (m/($wd.*:.*)- Google.*/);&quot; $TMPFILE
	rm -f $TMPFILE
}
# bd - Query words using Baidu Dictionary
#
function bd
{
	typeset wd=$1
	typeset TMPFILE=tmp.bd.$wd
	typeset -i i=0
	while ((i&amp;lt;5))
	do
		curl -s -A &#39;Mozilla/4.0&#39; &quot;http://dict.baidu.com/s?tn=dict&amp;amp;wd=&quot;$word | html2text &amp;gt; $TMPFILE 2&amp;gt;/dev/null
		if [ -s $TMPFILE ]; then
			break
		elif ((i=4)); then
			echo $wd &amp;gt;&amp;gt; failed.bd.$input
		fi
		((i=i+1))
		sleep 1
	done
	./censor.pl $TMPFILE $wd
	rm -f $TMPFILE
}
##############################################
#	MAIN LINE START HERE
##############################################
typeset input=
typeset output=
typeset word=
typeset dict=z&quot;gd bd&quot;
typeset -i word_flag=0
while getopts &#39;agbi:o:w:&#39; OPT
do
        case $OPT in
        g)	dict=gd;;
        b)	dict=bd;;
        i)	input=${OPTARG};;
        o)	output=${OPTARG};;
        w)	word=${OPTARG};word_flag=1;;
        *)      echo -u2 &quot;ERROR: Invalid argument [$OPT]&quot;
                ;;
        esac
done
shift `expr $OPTIND - 1`
if ((word_flag==0)); then
#	perl -i.bk -p -e &quot;s/^(/w+).*[/[//].*[/]//]//$1/;&quot; $input # Eliminate the phonetic symbols
	WORDS=$(cat $input)
	for word in $WORDS
	do
		case $dict in
		*bd*)	echo &quot;------------------ $word -------------------&quot; &amp;gt;&amp;gt; $output;;
		esac
		
		for d in $dict
		do
			word_exp=$($d $word)
			if [ ${#word_exp} != 0 ]; then
				echo $word_exp &amp;gt;&amp;gt; $output
			else
				echo &quot;$word:&quot; &amp;gt;&amp;gt; $output
			fi
		done
	done
else
	for d in $dict
	do
		$d $word
	done
fi&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;#!/usr/bin/perl -w
############### censor.pl #################
# Handle the explanations got from online dictionary.
# Inputs:
#	ARGV[0] -- temparory file containning the explanations
#	ARGV[1] -- keyword
############################################
use strict;
use Encode;
my $syntax = Encode::decode(&#39;utf8&#39;, &#39;语法标注解释 &#39;);
my $internet = Encode::decode(&#39;utf8&#39;, &#39;以下结果来自互联网网络释义&#39;);
my $yingyin = Encode::decode(&#39;utf8&#39;, &#39;英音&#39;);
my $meiyin = Encode::decode(&#39;utf8&#39;, &#39;美音&#39;);
my $baidu = Encode::decode(&#39;utf8&#39;, &#39;此内容系百度根据您的指令自动搜索的结果&#39;);
my $write_flag=0;
open(EXP,$ARGV[0]);
while (my $nextline=&amp;lt;EXP&amp;gt;) {
	chomp($nextline);
	$nextline = Encode::decode(&#39;utf8&#39;, $nextline);
	if ($nextline =~ m/.*$syntax.*/) {
		$write_flag=1;
		$nextline =~ s/$syntax//;
	} elsif ($nextline =~ m/.*$internet.*/ || $nextline =~ m/.*$baidu.*/) {
		$write_flag=0;
	}
			
	if ($write_flag eq 1) {
		if ($nextline !~ m/.*/*/*/*/*.*/) { # Excluse lines containning ****
			# Add a space between the keyword and 英音/美音
			$nextline =~ s/$ARGV[1]([$yingyin|$meiyin])/$ARGV[1] $1/; 
			print encode(&quot;utf8&quot;,$nextline),&quot;/r/n&quot;; # In perl, /r/n is needed to add a new line
		}
	}
}
close(EXP);&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Linux Shared Memory的查看与设置</title>
   <link href="http://bo-yang.github.com//2010/12/31/linux-shared-memory"/>
   <updated>2010-12-31T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2010/12/31/linux-shared-memory</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h1 class=&quot;entry-title&quot;&gt;1.&amp;nbsp;&lt;a href=&quot;http://www.cyberciti.biz/faq/linux-check-memory-usage/&quot;&gt;Linux Check Memory Usage&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h1 id=&quot;nointelliTXT&quot; class=&quot;Heading1a&quot;&gt;2.&amp;nbsp;&lt;a href=&quot;http://www.ehow.com/how_6849046_check-shared-memory-linux.html&quot;&gt;How to Check Shared Memory on Linux&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h1&gt;3.&amp;nbsp;&lt;a href=&quot;http://www.unidata.ucar.edu/software/mcidas/2004/users_guide/workstation.html&quot;&gt;Shared Memory Configuration&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;共享内存就是进程之间可以共享的一段内存，通过一个唯一的KEY值绑定&lt;br /&gt;shmget()创建或获取&lt;br /&gt;shmat()连接&lt;br /&gt;shmdt()断连&lt;/p&gt;
&lt;p&gt;共享内存的访问涉及同步措施，通常与信号灯一起使用&lt;br /&gt;用ipcs -m命令可以查看系统中已有的共享内存段&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;/proc/sys/kernel/shm开头的几个文件是共享内存的参数&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br /&gt;共享内存的访问涉及同步措施，通常与信号灯一起使用&lt;br /&gt;用ipcs -m命令可以查看系统中已有的共享内存段&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;ipcs&amp;nbsp;&lt;/span&gt;&lt;/span&gt;-m 看Shared Memory 共享内存&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;ipcs -q 看Message Queues 消息队列&lt;br /&gt;ipcs -s 看Semaphore Arrays 信号量&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;使用命令：ipcs -al&lt;/p&gt;
&lt;p&gt;------ Shared Memory Limits --------&lt;br /&gt;max number of segments = 4096&lt;br /&gt;max seg size (kbytes) = 4091826&lt;br /&gt;max total shared memory (pages) = 2097152&lt;br /&gt;min seg size (bytes) = 1&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;headline_area&quot;&gt;
&lt;h1 class=&quot;entry-title&quot;&gt;1.&amp;nbsp;&lt;a href=&quot;http://www.cyberciti.biz/faq/linux-check-memory-usage/&quot;&gt;Linux Check Memory Usage&lt;/a&gt;&lt;/h1&gt;
&lt;p class=&quot;headline_meta&quot;&gt;by&amp;nbsp;&lt;span class=&quot;author vcard fn&quot;&gt;VIVEK GITE&lt;/span&gt;&amp;nbsp;on&amp;nbsp;&lt;abbr class=&quot;published&quot; title=&quot;2006-04-06&quot;&gt;APRIL 6, 2006&lt;/abbr&gt;&amp;nbsp;&amp;middot;&amp;nbsp;&lt;span&gt;&lt;a rel=&quot;nofollow&quot; href=&quot;http://www.cyberciti.biz/faq/linux-check-memory-usage/#comments&quot;&gt;36 COMMENTS&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;format_text entry-content&quot;&gt;
&lt;p&gt;&lt;span class=&quot;drop_cap&quot;&gt;H&lt;/span&gt;ow do I check used and free RAM memory usage under Linux operating systems using command line and GUI tools?&lt;/p&gt;
&lt;p&gt;Linux comes with different set of commands to check memory usage. The free command displays  the  total amount of free and used physical and swap memory in the system, as well as the buffers used by the kernel. The  vmstat command reports information about processes, memory, paging, block IO, traps, and cpu activity. Finally, you can use the top command which provides a dynamic real-time view of a running system.  It can display system summary information as well as a list of tasks currently being managed by the Linux kernel.&lt;/p&gt;
&lt;h2&gt;free command &lt;/h2&gt;
&lt;p&gt;Display free memory size in MB:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ free -m&lt;/code&gt;Output:&lt;/p&gt;
&lt;pre&gt;             total       used       free     shared    buffers     cached
Mem:           750        625        125          0         35        335
-/+ buffers/cache:        254        496
Swap:          956          0        956&lt;/pre&gt;
&lt;p&gt;Displays a line containing the totals memory in MB:&lt;br /&gt;
&lt;code&gt;$ free -t -m&lt;/code&gt;&lt;br /&gt; &lt;br /&gt;
Output:&lt;/p&gt;
&lt;pre&gt;       total       used       free     shared    buffers     cached
Mem:           750        625        125          0         35        335
-/+ buffers/cache:        253        496
Swap:          956          0        956
Total:        1707        625       1082&lt;/pre&gt;
&lt;h2&gt;vmstat command&lt;/h2&gt;
&lt;p&gt;Type vmstat command at shell prompt:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ vmstat&lt;/code&gt;&lt;br /&gt; &lt;br /&gt;
Output:&lt;/p&gt;
&lt;pre&gt;procs -----------memory---------- ---swap-- -----io---- --system-- ----cpu----
r  b   swpd   free   buff  cache   si   so    bi    bo   in    cs us sy id wa
1  0      0 131620  35432 341496    0    0    42    82  737  1364 15  3 81  1&lt;/pre&gt;
&lt;h2&gt;top command&lt;/h2&gt;
&lt;p&gt;Type top command at the shell prompt:&lt;br /&gt;
&lt;code&gt;$ top&lt;/code&gt;&lt;br /&gt; &lt;br /&gt;
Sample outputs:&lt;/p&gt;
&lt;div id=&quot;attachment_8468&quot; class=&quot;wp-caption alignnone&quot; style=&quot;width:599px;&quot;&gt;
&lt;a rel=&quot;attachment wp-att-8468&quot; href=&quot;http://www.cyberciti.biz/faq/linux-check-memory-usage/linux-memory-usage-monitor-top-command/&quot;&gt;&lt;img class=&quot;size-full wp-image-8468&quot; title=&quot;Find: Linux process memory usage command&quot; src=&quot;http://files.cyberciti.biz/uploads/faq/2006/04/Linux-memory-usage-monitor-top-command.png&quot; alt=&quot;Fig.01: top command displaying used memory&quot; width=&quot;599&quot; height=&quot;397&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Fig.01: top command displaying used memory&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt; &lt;br /&gt;
To exit from top command type q key. Read man page of free, vmstat, top command for more information.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;GNOME Desktop: GUI Tool&lt;/h2&gt;
&lt;p&gt;The Gnome System Monitor application enables you to display basic system information and monitor system processes, usage of system resources, and file systems. You can also use System Monitor to modify the behavior of your system. You can start System Monitor by visiting &lt;span style=&quot;color:#996633;&quot;&gt;System&lt;/span&gt; menu &amp;gt; Choose &lt;span style=&quot;color:#996633;&quot;&gt;Administration&lt;/span&gt; &amp;gt; &lt;span style=&quot;color:#996633;&quot;&gt;System Monitor&lt;/span&gt; option. Or type the following command at the shell prompt:&lt;/p&gt;
&lt;pre class=&quot;bash&quot;&gt;&amp;nbsp;
gnome-system-monitor
&amp;nbsp;&lt;/pre&gt;
&lt;p&gt;Sample outputs:&lt;/p&gt;
&lt;div id=&quot;attachment_8471&quot; class=&quot;wp-caption alignnone&quot; style=&quot;width:599px;&quot;&gt;
&lt;a rel=&quot;attachment wp-att-8471&quot; href=&quot;http://www.cyberciti.biz/faq/linux-check-memory-usage/screenshot-system-monitor/&quot;&gt;&lt;img class=&quot;size-full wp-image-8471&quot; title=&quot;Linux See Memory Usage With GUI System Monitor Tool&quot; src=&quot;http://files.cyberciti.biz/uploads/faq/2006/04/Screenshot-System-Monitor.png&quot; alt=&quot;Fig.02: Linux See Memory Usage With GUI System Monitor Tool&quot; width=&quot;599&quot; height=&quot;468&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Fig.02: Linux See Memory Usage With GUI System Monitor Tool&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;----------------------------------------------------------------------------------------&lt;/p&gt;
&lt;div class=&quot;intro FLC&quot;&gt;
&lt;h1 id=&quot;nointelliTXT&quot; class=&quot;Heading1a&quot;&gt;2. &lt;a href=&quot;http://www.ehow.com/how_6849046_check-shared-memory-linux.html&quot;&gt;How to Check Shared Memory on Linux&lt;/a&gt;&lt;/h1&gt;
&lt;div class=&quot;info&quot;&gt;
&lt;div class=&quot;byLine&quot;&gt;
&lt;div class=&quot;author&quot;&gt;&lt;cite&gt;&lt;span&gt;By&lt;/span&gt;&amp;nbsp;&lt;a class=&quot;jsNoFollow&quot; rel=&quot;http://www.ehow.com/members/ds_8351f73d-556e-44c4-8811-e5f67070c254.html&quot; href=&quot;http://www.ehow.com/members/ds_8351f73d-556e-44c4-8811-e5f67070c254.html&quot;&gt;Garrett Genet&lt;/a&gt;,&amp;nbsp;&lt;span&gt;eHow Contributor&lt;/span&gt;&lt;/cite&gt;&lt;/div&gt;
&lt;div class=&quot;dateUpdated&quot;&gt;&lt;span&gt;updated: August 11, 2010&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;Details&quot;&gt;
&lt;p id=&quot;intelliTxt&quot;&gt;Shared memory is responsible for the smooth operation of your system; it acts as a space that multiple programs can access at once. This enables those programs to communicate in sync, while avoiding file redundancy. Shared memory can exist in the system&#39;s physical RAM or the swap file (which is virtual memory). In&amp;nbsp;&lt;a class=&quot;iAs&quot; href=&quot;http://www.ehow.com/how_6849046_check-shared-memory-linux.html&quot; target=&quot;_blank&quot;&gt;Linux&lt;/a&gt;&amp;nbsp;operating systems, check the details of shared memory by typing in a few simple commands.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;article FLC&quot;&gt;
&lt;div class=&quot;sectionTitle FLC&quot;&gt;
&lt;div class=&quot;difficulty&quot;&gt;&lt;span&gt;Difficulty:&lt;/span&gt;&amp;nbsp;Moderately Easy&lt;/div&gt;
&lt;h2 class=&quot;Heading1a Underline header&quot;&gt;&lt;span&gt;Instructions&lt;/span&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;ol id=&quot;intelliTxt&quot;&gt;
&lt;li id=&quot;jsArticleStep1&quot;&gt;
&lt;div class=&quot;stepNumber&quot;&gt;1&lt;/div&gt;
&lt;p&gt;Power on your&amp;nbsp;&lt;a class=&quot;iAs&quot; href=&quot;http://www.ehow.com/how_6849046_check-shared-memory-linux.html&quot; target=&quot;_blank&quot;&gt;system&lt;/a&gt;&amp;nbsp;and log in.&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;jsArticleStep2&quot;&gt;
&lt;div class=&quot;stepNumber&quot;&gt;2&lt;/div&gt;
&lt;p&gt;Open a &quot;Terminal&quot; window.&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&quot;jsArticleStep3&quot;&gt;
&lt;div class=&quot;stepNumber&quot;&gt;3&lt;/div&gt;
&lt;p&gt;Type in &quot;cat /proc/sys/kernel/shmall&quot; and press &quot;Enter.&quot; You&#39;ll see the total amount of shared memory available displayed in bytes.&amp;nbsp;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;The max size of a shared memory segment is displayed with &quot;cat&lt;/span&gt;&amp;nbsp;/proc/sys/kernel/shmmax&quot;, and the total number of segments in the system is displayed with &quot;cat /proc/sys/kernel/shmmni&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/p&gt;
&lt;p&gt;Read more:&amp;nbsp;&lt;a href=&quot;http://www.ehow.com/how_6849046_check-shared-memory-linux.html#ixzz19eUg5rtL&quot;&gt;How to Check Shared Memory on Linux | eHow.com&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;http://www.ehow.com/how_6849046_check-shared-memory-linux.html#ixzz19eUg5rtL&quot;&gt;http://www.ehow.com/how_6849046_check-shared-memory-linux.html#ixzz19eUg5rtL&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;-------------------------------------------------------------------------------------------&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;3. &lt;a href=&quot;http://www.unidata.ucar.edu/software/mcidas/2004/users_guide/workstation.html&quot;&gt;Shared Memory Configuration&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;
&lt;span&gt;&lt;img src=&quot;http://www.unidata.ucar.edu/software/mcidas/2004/users_guide/images/blueline.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;McIDAS-X 200&lt;em&gt;x&lt;/em&gt;&amp;nbsp;uses shared memory for a variety of tasks including frame allocation. By default, the shared memory facility is activated and should have sufficient maximum segment size on HP, IBM and SGI systems. However, this is not true for Sun systems running Solaris 2.&lt;em&gt;x&lt;/em&gt;&amp;nbsp;or Digital systems running True64.&amp;nbsp;&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-0&quot;&gt;On Linux systems, the amount of available shared memory appears is equivalent to&lt;/span&gt;&amp;nbsp;the combination of physical RAM and swap.&lt;/p&gt;
&lt;p class=&quot;Body-Text&quot;&gt;The system administrator should complete the steps below the first time McIDAS-X 200&lt;em&gt;x&lt;/em&gt;&amp;nbsp;is installed on Sun Solaris or Digital True64 workstations or if they desire to increase shared memory defaults on HP, IBM, or SGI systems.&lt;/p&gt;
&lt;p&gt;
&lt;span&gt;&lt;a href=&quot;http://www.unidata.ucar.edu/software/mcidas/2004/users_guide/workstation.html#solaris&quot;&gt;Sun Solaris 2.X&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;http://www.unidata.ucar.edu/software/mcidas/2004/users_guide/workstation.html#irix&quot;&gt;SGI IRIX 6.x&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;http://www.unidata.ucar.edu/software/mcidas/2004/users_guide/workstation.html#hpux10&quot;&gt;HP HP-UX 10, 11&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;http://www.unidata.ucar.edu/software/mcidas/2004/users_guide/workstation.html#aix&quot;&gt;IBM AIX&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;http://www.unidata.ucar.edu/software/mcidas/2004/users_guide/workstation.html#osf1&quot;&gt;Compaq Tru64 UNIX&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;http://www.unidata.ucar.edu/software/mcidas/2004/users_guide/workstation.html#linux&quot;&gt;RedHat Linux&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;http://www.unidata.ucar.edu/software/mcidas/2004/users_guide/workstation.html#freebsd&quot;&gt;FreeBSD 4.[789]&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;http://www.unidata.ucar.edu/software/mcidas/2004/users_guide/workstation.html#macos&quot;&gt;MacOS-X 7.4.0&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2 class=&quot;D-Head&quot;&gt;&lt;a name=&quot;solaris&quot;&gt;&lt;/a&gt;Sun Solaris 2.x&lt;/h2&gt;
&lt;p class=&quot;Body-Text&quot;&gt;&lt;a name=&quot;pgfId=31995&quot;&gt;&lt;/a&gt;The system administrator must complete the steps below the first time McIDAS-X is installed on a Sun workstation running Solaris 2.&lt;em&gt;&amp;nbsp;x&lt;/em&gt;&amp;nbsp;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;nbsp;
&lt;ul&gt;
&lt;p class=&quot;Type/Press&quot;&gt;&lt;a name=&quot;pgfId=28226&quot;&gt;&lt;/a&gt;Type:&amp;nbsp;&lt;strong&gt;/usr/sbin/sysdef | grep SHMMAX&lt;/strong&gt;&lt;/p&gt;
&lt;table border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign=&quot;TOP&quot;&gt;
&lt;pre class=&quot;Screen&quot;&gt;&lt;a name=&quot;pgfId=124517&quot;&gt;&lt;/a&gt;
536870912 max shared memory segment size (SHMMAX)&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;p class=&quot;firstnum&quot;&gt;&lt;a name=&quot;pgfId=28222&quot;&gt;&lt;/a&gt;1.	Force the kernel to activate the shared memory system at boot time by adding the line below to the appropriate location in the file&amp;nbsp;&lt;br /&gt;&lt;strong&gt;/etc/system&lt;/strong&gt;&amp;nbsp;.&lt;/p&gt;
&lt;table border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign=&quot;TOP&quot;&gt;
&lt;pre class=&quot;Screen&quot;&gt;&lt;a name=&quot;pgfId=28466&quot;&gt;&lt;/a&gt;
forceload: sys/shmsys&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p class=&quot;Numbers&quot;&gt;&lt;a name=&quot;pgfId=28225&quot;&gt;&lt;/a&gt;2.	Check the maximum size of a shared memory segment using the command below. The value is indicated in bytes; the example lists a 512 MB maximum shared memory segment.&lt;/p&gt;
&lt;p class=&quot;Numbers-Text&quot;&gt;&lt;a name=&quot;pgfId=28228&quot;&gt;&lt;/a&gt;If your value is less than 512 MB, go to step 3. If your value is 512 MB or greater, go to step 4.&lt;/p&gt;
&lt;p class=&quot;Numbers&quot;&gt;&lt;a name=&quot;pgfId=28230&quot;&gt;&lt;/a&gt;3.	&lt;span class=&quot;goog_qs-tidbit goog_qs-tidbit-1 goog_qs-tidbit-hilite&quot;&gt;Set the shared memory size to 512 MB by adding the line below to the&lt;/span&gt;&amp;nbsp;appropriate location in the file&amp;nbsp;&lt;strong&gt;/etc/system&lt;/strong&gt;&amp;nbsp;.&lt;/p&gt;
&lt;table border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign=&quot;TOP&quot;&gt;
&lt;pre class=&quot;Screen&quot;&gt;&lt;a name=&quot;pgfId=28496&quot;&gt;&lt;/a&gt;
set shmsys:shminfo_shmmax = 536870912&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p class=&quot;Numbers&quot;&gt;&lt;a name=&quot;pgfId=28233&quot;&gt;&lt;/a&gt;4.	Reboot the system so the forceload entry and 512 MB maximum shared memory size take effect.&lt;/p&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span&gt;&lt;a name=&quot;irix&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 class=&quot;D-Head&quot;&gt;SGI IRIX 6.x&lt;/h2&gt;
&lt;p class=&quot;Body-Text&quot;&gt;On Irix, SHMMAX defaults to 512 MB (0x20000000 bytes), so tuning this parameter is unlikely to be needed. SHMMAX is found in&amp;nbsp;&lt;strong&gt;/var/sysgen/mtune/shm&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;span&gt;&lt;a name=&quot;hpux10&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;HP HP-UX 10, 11&lt;/h2&gt;
&lt;p&gt;On HP-UX 10 and 11, the maximum value for SHMMAX is 1024 MB (0x40000000; the default value for 64 MB (0x04000000). SHMMAX is found in&amp;nbsp;&lt;strong&gt;/etc/conf/master.d/core-hpux&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The procedure for changing the parameter is similar, if not identical, to the one described for HP-UX 9.&lt;/p&gt;
&lt;p&gt;One way to check the current value of SHMMAX is to enter the following command:&lt;/p&gt;
&lt;p class=&quot;Type/Press&quot;&gt;Type:&amp;nbsp;&lt;strong&gt;grep SHMMAX /etc/master&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If the grep does not print anything, you are using the default value of 64 MB. If the grep prints something, the output might look like this:&lt;/p&gt;
&lt;table border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign=&quot;TOP&quot;&gt;
&lt;pre class=&quot;Screen&quot;&gt; shmmax          SHMMAX              0X20000000 &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The value is&amp;nbsp;&lt;em&gt;bytes&lt;/em&gt;, so here the maximum segment size has been set to 512 MB.&lt;/p&gt;
&lt;p&gt;
&lt;span&gt;&lt;a name=&quot;aix&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;IBM AIX 4.x&lt;/h2&gt;
&lt;p&gt;The shmget(2) man page says that the maximum shared-memory segment size is 256 MB (0x10000000); this limit does not appear to be tunable.&lt;/p&gt;
&lt;p&gt;
&lt;span&gt;&lt;a name=&quot;osf1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;Compaq Tru64 UNIX&lt;/h2&gt;
&lt;p&gt;The easiest way to increase shared-memory allocation on True64 is to use the GUI called&amp;nbsp;&lt;strong&gt;dxkerneltuner&lt;/strong&gt;, but one can also use the&amp;nbsp;&lt;strong&gt;sysconfigdb&lt;/strong&gt;&amp;nbsp;command-line interface.&lt;/p&gt;
&lt;p&gt;Running&amp;nbsp;&lt;strong&gt;dxkerneltuner&lt;/strong&gt;&amp;nbsp;and increasing the shared-memory size to 64 MB will result in the following entry in the file /etc/sysconfigtab:&lt;/p&gt;
&lt;p&gt;
&lt;span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt; ipc:
       shm-max=67108864
&lt;/pre&gt;
&lt;p&gt;
&lt;span&gt;The following are the out-of-the-box defaults for the ipc subsystem for OSF/1 Version 4.0. They may be helpful for True64:&lt;/span&gt;&lt;span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;% sysconfig -q ipc
ipc:
msg-max = 8192
msg-mnb = 16384
msg-mni = 64
msg-tql = 40
shm-max = 4194304
shm-min = 1
shm-mni = 128
shm-seg = 32
sem-mni = 16
sem-msl = 25
sem-opm = 10
sem-ume = 10
sem-vmx = 32767
sem-aem = 16384
num-of-sems = 60
max-kernel-ports = 22487
port-hash-max-num = 1124350
port-reserved-max-num = 22487
set-max-num = 1029
ssm-threshold = 8388608
ssm-enable-core-dump = 1
&lt;/pre&gt;
&lt;p&gt;
&lt;span&gt;&lt;a name=&quot;linux&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;RedHat Linux&lt;/h2&gt;
&lt;p&gt;There appears to be two ways of (re)defining the amount of shared memory in your system (tips thanks to Dave Glowacki of SSEC):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add this line to your /etc/rc.d/rc.local file:
&lt;p&gt;&lt;tt&gt;echo&lt;/tt&gt;&amp;nbsp;&lt;em&gt;shared_memory_size&lt;/em&gt;&amp;nbsp;&lt;tt&gt;&amp;gt; /proc/sys/kernel/shmmax&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;(where&amp;nbsp;&lt;em&gt;shared_memory_size&lt;/em&gt;&amp;nbsp;is the amount of shared memory you want to declare in bytes) and reboot.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&amp;nbsp;since this will be the last thing run before your system comes up, your McIDAS session won&#39;t get a larger shared memory segment if it&#39;s started during the boot process).&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;a more permanent solution would be to change the value of SHMMAX in&amp;nbsp;&lt;tt&gt;/usr/src/linux/include/asm/shmparam.h&lt;/tt&gt;&amp;nbsp;and rebuild your kernel&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&quot;freebsd&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;FreeBSD 4.[789]&lt;/h2&gt;
&lt;p&gt;Shared memory parameters are only read when the system goes from single user to multi user mode.&lt;/p&gt;
&lt;p&gt;Add setting of shared memory max to&amp;nbsp;&lt;strong&gt;/etc/sysctl.conf&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
&lt;span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;# $FreeBSD: src/etc/sysctl.conf,v 1.1.2.3 2002/04/15 00:44:13 dougb Exp $
#
#  This file is read when going to multi-user and its contents piped thru
#  ``sysctl&#39;&#39; to adjust kernel values.  ``man 5 sysctl.conf&#39;&#39; for details.
#
kern.ipc.shmmax=536870912
&lt;/pre&gt;
&lt;p&gt;
&lt;span&gt;and then reboot.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;macos&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;MacOS-X 7.4.0 (Panther)&lt;/h2&gt;
&lt;p&gt;In the Panther release of MacOS-X, shared memory is set in the file&amp;nbsp;&lt;strong&gt;/etc/rc&lt;/strong&gt;. The default settings will look something like:&lt;/p&gt;
&lt;p&gt;
&lt;span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;# System tuning
sysctl -w kern.maxvnodes=$(echo $(sysctl -n hw.physmem) &#39;33554432 / 512 * 1024 +p&#39;|dc)
sysctl -w kern.sysv.shmmax=4194304
sysctl -w kern.sysv.shmmin=1
sysctl -w kern.sysv.shmmni=32
sysctl -w kern.sysv.shmseg=8
sysctl -w kern.sysv.shmall=1024
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;We recommend changing this to:&lt;/p&gt;
&lt;p&gt;
&lt;span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;# System tuning
sysctl -w kern.maxvnodes=$(echo $(sysctl -n hw.physmem) &#39;33554432 / 512 * 1024 +p&#39;|dc)
sysctl -w kern.sysv.shmmax=536870912
sysctl -w kern.sysv.shmmin=1
sysctl -w kern.sysv.shmmni=4096
sysctl -w kern.sysv.shmseg=4096
sysctl -w kern.sysv.shmall=131072
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;After making these changes, the system will need to be rebooted for the changes to take effect.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.unidata.ucar.edu/software/mcidas/2004/users_guide/images/blueline.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Ksh的几点小技巧</title>
   <link href="http://bo-yang.github.com//2010/12/02/kshell-tips"/>
   <updated>2010-12-02T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2010/12/02/kshell-tips</id>
   <content type="html">&lt;ol&gt;
&lt;li&gt;在一个函数(function)中，如果不希望局部变量影响到全局变量或环境变量，可以用typeset来定义。&lt;/li&gt;
&lt;li&gt;对于多个参数的函数或脚本，对多个输入参数的处理有两种办法：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;一是利用如下方式：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;pre&gt;while (($# != 0)) 
do 
      # process $1 
      shift 
done &lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;另一种方法是利用如下方式：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;pre&gt;while getopts :A:B:c:d:e:E:C:i:G:L:M:R:hD:V OPT; do
	case $OPT in
	A)	export E_CONFIG=${OPTARG}
		;;
	B)	Banner=$(echo &quot;$OPTARG&quot; | tr &#39;%&#39; &#39; &#39;);;
	C)	Mach=&quot;-m $OPTARG&quot;; MachName=$OPTARG;;
	D)	DBDir=$OPTARG;;
	G)	TRCellGen=$OPTARG;;
	i)	iconic=&#39;-iconic&#39;;;
	L)  Lab3BEM=$OPTARG;;
	M)  NumMobileSub=$OPTARG;;
	esac
done
shift OPTIND-1&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Notes of Introduction to OS Abstractions Using Plan 9 from Bell Labs(I)</title>
   <link href="http://bo-yang.github.com//2010/11/28/plan9-intro-note-1"/>
   <updated>2010-11-28T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2010/11/28/plan9-intro-note-1</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;zw-1290949398860sDJ1ah&quot;&gt;&lt;span id=&quot;zw-1290949398861ePu1_6&quot;&gt;1. Loaded Programs&lt;/span&gt;&lt;/h3&gt;
&lt;h4 id=&quot;zw-1290949398861DeKRaD&quot;&gt;&lt;span id=&quot;zw-1290949398861A4v4rA&quot;&gt;1.1 Command&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398861w1u2Ml&quot;&gt;nm&lt;/span&gt;&lt;/h4&gt;
&lt;p id=&quot;zw-1290949398861M8Fq2q&quot;&gt;&lt;span id=&quot;zw-1290949398861Bp3Ccc&quot;&gt;Command&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398861G3bweg&quot;&gt;nm&lt;/span&gt;&lt;span id=&quot;zw-1290949398861scTbjG&quot;&gt;&amp;nbsp;can be used to display symbol information in both objects and binary files, because it looks at the symbol table stored in the binary for debugging purposes. Command&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398861vCM8Bc&quot;&gt;strip&lt;/span&gt;&lt;span id=&quot;zw-1290949398862uxpNeZ&quot;&gt;&amp;nbsp;can be used to remove the symbol table.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398862fWV4Na&quot;&gt;&lt;span id=&quot;zw-1290949398862lx4zWW&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398862puncr7&quot;&gt;&lt;span id=&quot;zw-1290949398862bTX1vU&quot;&gt;Option&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398862xqkLFX&quot;&gt;&amp;ndash;n&lt;/span&gt;&lt;span id=&quot;zw-1290949398862uZgaHC&quot;&gt;&amp;nbsp;asks&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398862bL2tUS&quot;&gt;nm&lt;/span&gt;&lt;span id=&quot;zw-1290949398862J8ZHZT&quot;&gt;&amp;nbsp;to sort the output by symbol address. The addresses are virtual memory addresses, because the system uses the virtual memory hardware to keep each process in its own virtual address space.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398862k6pDEH&quot;&gt;&lt;span id=&quot;zw-1290949398862DVbJhp&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398862O_WbxH&quot;&gt;&lt;span id=&quot;zw-1290949398863UiL4fd&quot;&gt;In the output of nm,&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398863YoRHZ6&quot;&gt;etext&lt;/span&gt;&lt;span id=&quot;zw-1290949398863HprQPn&quot;&gt;&amp;nbsp;is a symbol defined by the linker to let you know where the end of test is, and&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398863xgx-UA&quot;&gt;edata&lt;/span&gt;&lt;span id=&quot;zw-1290949398863_mjveS&quot;&gt;&amp;nbsp;reports the address where the initialized data terminates.&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;zw-1290949398863NmsG5X&quot;&gt;&lt;span id=&quot;zw-1290949398863tm46dV&quot;&gt;1.2 What does the system (kernel) loader do?&lt;/span&gt;&lt;/h4&gt;
&lt;p id=&quot;zw-1290949398863Jg06Kq&quot;&gt;&lt;span id=&quot;zw-1290949398863AZoq7F&quot;&gt;&amp;middot;&lt;/span&gt;&lt;span id=&quot;zw-1290949398864Pw2OoW&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398864Tl2rEF&quot;&gt;The header in the binary file reports the memory size required for the program text, and the file keeps the memory image of that text. Therefore, the system can just copy all this into memory. For a given system and architecture, there is a convention regarding which addresses the program must use. Therefore, the system knows where to load the program.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12909493988641Ah34P&quot;&gt;&lt;span id=&quot;zw-1290949398864MwPqj1&quot;&gt;&amp;middot;&lt;/span&gt;&lt;span id=&quot;zw-129094939886431kLs_&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12909493988644HOTq2&quot;&gt;The header in the binary reports the memory size required for initialized variables (global) and file contains a memory image for them. Thus, the system can copy those bytes to memory. Note that the system has no idea regarding where does one variable start or how big it is. The system only knows how many bytes it has to copy to memory, and at which address should they be copied.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398864lF3mfu&quot;&gt;&lt;span id=&quot;zw-1290949398864Qa1fiF&quot;&gt;&amp;middot;&lt;/span&gt;&lt;span id=&quot;zw-1290949398864I57fm8&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398864_vLJAo&quot;&gt;For uninitialized global variables, the binary header reports their total size. The system allocates that amount of memory for the program. That is all it has to do. As a courtesy, Plan 9 guarantees that such memory is initialized with all bytes being zero. This means that all your global variables are initialized to null values by default.&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;zw-1290949398864GGzoov&quot;&gt;&lt;span id=&quot;zw-1290949398865GPNwpr&quot;&gt;1.3 Memory image for the global program&lt;/span&gt;&lt;/h4&gt;
&lt;p id=&quot;zw-1290949398865-KYSgI&quot;&gt;&lt;img src=&quot;http://xiexie.baihui.com/image.do?imgurl=3babf56062fe04d195271acb7edaebe17c7335448c4ed3af69eac61090566d9dffab3b423280599ed59da39279912dc4&quot; alt=&quot;&quot; align=&quot;bottom&quot; /&gt;&lt;/p&gt;
&lt;p id=&quot;zw-129094939886505L7F-&quot;&gt;&lt;span id=&quot;zw-1290949398865sZMOgN&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398865fHb7OC&quot;&gt;&lt;span id=&quot;zw-1290949398865R52pna&quot;&gt;The virtual memory of a process in Plan 9 has several segments. A memory segment is a portion of contiguous memory with some properties. Segments used by a Plan 9 process are:&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398865WLGo3b&quot;&gt;&lt;span id=&quot;zw-129094939886516vPlJ&quot;&gt;&amp;middot;&lt;/span&gt;&lt;span id=&quot;zw-1290949398865ayOOVt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398865VpK3iM&quot;&gt;The&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398866OAh3Sy&quot;&gt;test segment&lt;/span&gt;&lt;span id=&quot;zw-1290949398866zwgO7E&quot;&gt;. It contains instructions that can be executed but not modified. The hardware is used by the system to enforce these permissions. The memory is initialized by the system with the program text (code) kept within the binary file for the program.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398866DzjDRR&quot;&gt;&lt;span id=&quot;zw-1290949398866kzzKuu&quot;&gt;&amp;middot;&lt;/span&gt;&lt;span id=&quot;zw-1290949398866dWZ4WJ&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398866rxmiFl&quot;&gt;The&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398866XM0SSt&quot;&gt;data segment&lt;/span&gt;&lt;span id=&quot;zw-1290949398866rdIwt5&quot;&gt;. It contains the initialized data for the program. Protection is set to allow both read and write operations on it, but you cannot execute instructions on it. The memory is initialized by the system using the initialized data kept within the binary file for the program.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12909493988665NjJfd&quot;&gt;&lt;span id=&quot;zw-12909493988668LYe2n&quot;&gt;&amp;middot;&lt;/span&gt;&lt;span id=&quot;zw-1290949398866H86UPQ&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398867ujbq5l&quot;&gt;The uninitialized data segment, called&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398867z9DJ4Q&quot;&gt;bss segment&lt;/span&gt;&lt;span id=&quot;zw-1290949398867jBIH8H&quot;&gt;, which is almost like the data segment. However, this one is initialized by zeroing its memory. The name of the segment comes from an arcane instruction used to implement it on a machine that no longer exists. How much memory is given depends on the size recorded in the binary file. Moreover, this segment can&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398867woapo8&quot;&gt;grow&lt;/span&gt;&lt;span id=&quot;zw-1290949398867eXmEXm&quot;&gt;, by using a system call that allocates more memory for it. Function libraries like&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398867LZTz0R&quot;&gt;malloc&lt;/span&gt;&lt;span id=&quot;zw-12909493988674pKHmJ&quot;&gt;&amp;nbsp;cause this segment to grow when they consume all the available memory in this segment. This is the reason for the gap between this segment and the stack segment, to leave room for the segment to grow.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12909493988678T1Cts&quot;&gt;&lt;span id=&quot;zw-1290949398867O08V4b&quot;&gt;&amp;middot;&lt;/span&gt;&lt;span id=&quot;zw-1290949398867sojzlo&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398868wui-dY&quot;&gt;The&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398868EUaLcV&quot;&gt;stack segment&lt;/span&gt;&lt;span id=&quot;zw-1290949398868txeB9B&quot;&gt;&amp;nbsp;is also used for reading and writing memory. Unlike other segments, this segment seems to grow automatically when more space is used. It is used to keep the stack for the process.&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;zw-1290949398868bt1ji2&quot;&gt;&lt;span id=&quot;zw-12909493988683H5_S8&quot;&gt;1.4 Process Arguments&lt;/span&gt;&lt;/h4&gt;
&lt;p id=&quot;zw-1290949398868k0kuo-&quot;&gt;&lt;span id=&quot;zw-1290949398868acWAD4&quot;&gt;The macros&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398868jo_aR3&quot;&gt;ARGBEGIN&lt;/span&gt;&lt;span id=&quot;zw-1290949398868GtChIf&quot;&gt;&amp;nbsp;and&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398868F52ej8&quot;&gt;ARGEND&lt;/span&gt;&lt;span id=&quot;zw-1290949398869bjzOxh&quot;&gt;&amp;nbsp;loop through the argument list, removing and processing&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398869EpgRq7&quot;&gt;&lt;span id=&quot;zw-1290949398869-ejVsC&quot;&gt;options. After ARGEND, both argc and argv reflect the argument list without any option.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398869-WyGTM&quot;&gt;&lt;span id=&quot;zw-1290949398869Gzm4-H&quot;&gt;Between both macros, we must write the body for a switch statement (supplied by&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398869cUXFi3&quot;&gt;&lt;span id=&quot;zw-1290949398869ydg8j3&quot;&gt;ARGBEGIN), with a case per option.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12909493988690ytyjT&quot;&gt;&lt;span id=&quot;zw-1290949398869PmpX8D&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398869qAGTtJ&quot;&gt;&lt;span id=&quot;zw-1290949398870g5fJpf&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398870w7UeKc&quot;&gt;&lt;span id=&quot;zw-1290949398870VnjgC1&quot;&gt;Macros defined in plan9.h&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398870B0qO8e&quot;&gt;
&lt;pre&gt;extern char *argv0;
#define ARGBEGIN for((void)(argv0||(argv0=*argv)),argv++,argc--;/
       argv[0] &amp;amp;&amp;amp; argv[0][0]==&#39;-&#39; &amp;amp;&amp;amp; argv[0][1];/
       argc--, argv++) {/
    char *_args, *_argt;/
    Rune _argc;/
    _args = &amp;amp;argv[0][1];/
    if(_args[0]==&#39;-&#39; &amp;amp;&amp;amp; _args[1]==0){/
     argc--; argv++; break;/
    }/
    _argc = 0;/
    while(*_args &amp;amp;&amp;amp; (_args += chartorune(&amp;amp;_argc, _args)))/
    switch(_argc)
#define ARGEND  SET(_argt);USED(_argt);USED(_argc);USED(_args);}/
     USED(argv);USED(argc);
#define ARGF()  (_argt=_args, _args=&quot;&quot;,/
    (*_argt? _argt: argv[1]? (argc--, *++argv): 0))
#define EARGF(x)  (_argt=_args, _args=&quot;&quot;,/
    (*_argt? _argt: argv[1]? (argc--, *++argv): ((x), abort(), (char*)0)))
 
#define ARGC()  _argc
 
#define SET(x) (x) = 0
#define USED(x) (void)(x)&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398889_XtEPK&quot;&gt;&lt;span id=&quot;zw-1290949398889kDGLRd&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12909493988895SfS4z&quot;&gt;&lt;span id=&quot;zw-1290949398889ZrdrFv&quot;&gt;Most of the Plan 9 programs that accept multiple options use these macros to process their&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12909493988894ZVhLV&quot;&gt;&lt;span id=&quot;zw-12909493988902Xxg3y&quot;&gt;argument list in search for options. This means that the invocation syntax is similar for most pro-grams. You may combine options in a single argument, use multiple arguments, supply arguments for options immediately after the option letter, or use another argument,&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12909493988907I3lpd&quot;&gt;&lt;span id=&quot;zw-12909493988905VTK78&quot;&gt;terminate the option list by giving a -- argument, and so on.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398890bVD_ls&quot;&gt;&lt;span id=&quot;zw-1290949398890H5Ub46&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398890kIS9C9&quot;&gt;&lt;span id=&quot;zw-1290949398890-gm04p&quot;&gt;Source code of bind.c&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398890dTxp09&quot;&gt;&lt;span id=&quot;zw-1290949398890_CB4vy&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-129094939889033vUJu&quot;&gt;
&lt;pre&gt;#include &amp;lt;u.h&amp;gt;
#include &amp;lt;libc.h&amp;gt;
 
void usage(void);
 
void
main(int argc, char *argv[])
{
 ulong flag = 0;
 int qflag = 0;
 
 ARGBEGIN{
 case &#39;a&#39;:
  flag |= MAFTER;
  break;
 case &#39;b&#39;:
  flag |= MBEFORE;
  break;
 case &#39;c&#39;:
  flag |= MCREATE;
  break;
 case &#39;q&#39;:
  qflag = 1;
  break;
 default:
  usage();
 }ARGEND
 
 if(argc != 2 || (flag&amp;amp;MAFTER)&amp;amp;&amp;amp;(flag&amp;amp;MBEFORE))
  usage();
 
 if(bind(argv[0], argv[1], flag) &amp;lt; 0){
  if(qflag)
   exits(0);
  /* try to give a less confusing error than the default */
  if(access(argv[0], 0) &amp;lt; 0)
   fprint(2, &quot;bind: %s: %r/n&quot;, argv[0]);
  else if(access(argv[1], 0) &amp;lt; 0)
   fprint(2, &quot;bind: %s: %r/n&quot;, argv[1]);
  else
   fprint(2, &quot;bind %s %s: %r/n&quot;, argv[0], argv[1]);
  exits(&quot;bind&quot;);
 }
 exits(0);
}
 
void
usage(void)
{
 fprint(2, &quot;usage: bind [-b|-a|-c|-bc|-ac] new old/n&quot;);
 exits(&quot;usage&quot;);
}&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p id=&quot;zw-12909493989145UBIdA&quot;&gt;&lt;span id=&quot;zw-1290949398914vjkUvQ&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;zw-1290949398915ChZiV0&quot;&gt;&lt;span id=&quot;zw-1290949398915TCUl-e&quot;&gt;1.5 System call errors&lt;/span&gt;&lt;/h4&gt;
&lt;p id=&quot;zw-1290949398915_VKY7S&quot;&gt;&lt;span id=&quot;zw-1290949398915F5dVz0&quot;&gt;There are several ways of printing out the error string. The most convenient way is using the format &amp;ldquo;%r&amp;rdquo; in print.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12909493989157rVDOc&quot;&gt;&lt;img src=&quot;http://xiexie.baihui.com/image.do?imgurl=3babf56062fe04d195271acb7edaebe1bcd1e98698a1ec92775ff5b32fbc87711fb8c1f0d288bb2569e488233a0046f0&quot; alt=&quot;&quot; width=&quot;553&quot; height=&quot;360&quot; /&gt;&lt;br /&gt;&lt;span id=&quot;zw-1290949398915QTjDll&quot;&gt;T&lt;/span&gt;&lt;span id=&quot;zw-12909493989150XDKGb&quot;&gt;here is a function that both prints a message and exits. It is called&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398915Bp-iGv&quot;&gt;sysfatal&lt;/span&gt;&lt;span id=&quot;zw-1290949398915qZW_Qg&quot;&gt;, and is used like follows.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398915JM2CbI&quot;&gt;&lt;img src=&quot;http://xiexie.baihui.com/image.do?imgurl=3babf56062fe04d195271acb7edaebe1bcd1e98698a1ec92775ff5b32fbc87714333f017beea4d0004e0d5dd93db05f9&quot; alt=&quot;&quot; width=&quot;553&quot; height=&quot;54&quot; /&gt;&lt;br /&gt;&lt;span id=&quot;zw-1290949398916lQU6kE&quot;&gt;T&lt;/span&gt;&lt;span id=&quot;zw-1290949398916JAEBUs&quot;&gt;he system call&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398916UPzKnY&quot;&gt;rerrstr&lt;/span&gt;&lt;span id=&quot;zw-12909493989164aLHY8&quot;&gt;&amp;nbsp;reads the error string. It stores the string at the buffer you supply.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398916skGOn9&quot;&gt;&lt;img src=&quot;http://xiexie.baihui.com/image.do?imgurl=3babf56062fe04d195271acb7edaebe1bcd1e98698a1ec92775ff5b32fbc8771160ef69fcdf2c7af6f12e05e8ca4c254&quot; alt=&quot;&quot; width=&quot;453&quot; height=&quot;74&quot; /&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12909493989169W1gXj&quot;&gt;&lt;span id=&quot;zw-1290949398916MxAr7x&quot;&gt;The system call&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12909493989161fVjqL&quot;&gt;werrstr&lt;/span&gt;&lt;span id=&quot;zw-1290949398917h2rCfn&quot;&gt;&amp;nbsp;writes a new value for the error string. It is used like the&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398917qviIxD&quot;&gt;print&lt;/span&gt;&lt;span id=&quot;zw-12909493989175CwNJH&quot;&gt;. Using it, we can implement a function that&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12909493989175OAYWp&quot;&gt;pops&lt;/span&gt;&lt;span id=&quot;zw-1290949398917S6aKR1&quot;&gt;&amp;nbsp;an element from a stack and reports errors nicely:&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398917hDQMag&quot;&gt;&lt;img src=&quot;http://xiexie.baihui.com/image.do?imgurl=3babf56062fe04d195271acb7edaebe1bcd1e98698a1ec92775ff5b32fbc87719994ac148aa292b2e7ef0f1a2485d55f&quot; alt=&quot;&quot; width=&quot;553&quot; height=&quot;348&quot; /&gt;&lt;/p&gt;
&lt;h4 id=&quot;zw-1290949398917aCF5lL&quot;&gt;&lt;span id=&quot;zw-1290949398917qHrEEA&quot;&gt;1.6 Environment&lt;/span&gt;&lt;/h4&gt;
&lt;p id=&quot;zw-1290949398917jwrhJO&quot;&gt;&lt;span id=&quot;zw-1290949398918MSMy13&quot;&gt;To obtain the value for a environment variable, from a C program, we can use the&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12909493989185bMn7Y&quot;&gt;getenv&lt;/span&gt;&lt;span id=&quot;zw-1290949398918bQHoi3&quot;&gt;&amp;nbsp;system call. If the variable is not defined,&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398918wEHPTG&quot;&gt;getenv&lt;/span&gt;&lt;span id=&quot;zw-1290949398918l_JfXG&quot;&gt;&amp;nbsp;returns a null string. A related call is&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398918oWlB7I&quot;&gt;putenv&lt;/span&gt;&lt;span id=&quot;zw-1290949398918HwNsEz&quot;&gt;, which accepts a name and a value, and set the corresponding environment variable accordingly.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12909493989186BVTwQ&quot;&gt;&lt;span id=&quot;zw-1290949398918bg2D2m&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398918McGxWt&quot;&gt;&lt;span id=&quot;zw-1290949398918uivMkt&quot;&gt;&amp;nbsp;
&lt;pre&gt;#include &amp;lt;u.h&amp;gt;
#include &amp;lt;libc.h&amp;gt;
 
void main()
 
{
 char * path;
 
 path=getenv(&quot;path&quot;);
 if(path==nil)
  sysfatal(&quot;path not defined!&quot;);
 print(&quot;PATH is %s /n&quot;, path);
 
 exits(nil);
}&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;zw-1290949398922zFzlXN&quot;&gt;&lt;span id=&quot;zw-1290949398922cjDuqK&quot;&gt;1.7 Process States&lt;/span&gt;&lt;/h4&gt;
&lt;h4 id=&quot;zw-1290949398922FHaTF_&quot;&gt;&lt;img src=&quot;http://xiexie.baihui.com/image.do?imgurl=3babf56062fe04d195271acb7edaebe1bcd1e98698a1ec92775ff5b32fbc8771c6957ae765ad8d3426137f5235e54399&quot; alt=&quot;&quot; width=&quot;554&quot; height=&quot;238&quot; /&gt;&lt;br /&gt;&lt;span id=&quot;zw-1290949398923RrMZM8&quot;&gt;1&lt;/span&gt;&lt;span id=&quot;zw-1290949398923Hc3DDf&quot;&gt;.8 Debugging&lt;/span&gt;&lt;/h4&gt;
&lt;p id=&quot;zw-1290949398923k00tpl&quot;&gt;&lt;span id=&quot;zw-1290949398923s7rFjn&quot;&gt;The program&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398923yroZES&quot;&gt;src&lt;/span&gt;&lt;span id=&quot;zw-1290949398923kwDqpL&quot;&gt;&amp;nbsp;knows how to obtain the source file name and line number that corresponds to that program counter.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398923mpe_pi&quot;&gt;&lt;span id=&quot;zw-129094939892316ZOlD&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398923wSLiq0&quot;&gt;&lt;img class=&quot;zohotab&quot; src=&quot;http://xiexie.baihui.com/images/spacer.gif&quot; alt=&quot;&quot; height=&quot;1px&quot; /&gt;&lt;span id=&quot;zw-12909493989230nQWXw&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398924-7QokX&quot;&gt;; &lt;em&gt;src -n -s 0x000016ff 8.hi&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12909493989244YZqMH&quot;&gt;&lt;span id=&quot;zw-1290949398924unvzWE&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;img class=&quot;zohotab&quot; src=&quot;http://xiexie.baihui.com/images/spacer.gif&quot; alt=&quot;&quot; height=&quot;1px&quot; /&gt;&lt;span id=&quot;zw-1290949398924OBCoqn&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-1290949398924iOBEui&quot;&gt;/sys/src/libc/fmt/dofmt.c:37&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398924tRfkHj&quot;&gt;&lt;span id=&quot;zw-1290949398924RdI--q&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398924PoVDYf&quot;&gt;&lt;span id=&quot;zw-1290949398924aW_tFP&quot;&gt;Option -n causes the source file name and line to be printed. Otherwise src would ask your editor to display your file and line. Option -s permits you to give a memory address or a symbol name to locate its source.&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398924oOAlGc&quot;&gt;&lt;span id=&quot;zw-1290949398924KsySpY&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-1290949398925BOhqJ0&quot;&gt;&lt;span id=&quot;zw-1290949398925hOxtFT&quot;&gt;acid&lt;/span&gt;&lt;span id=&quot;zw-1290949398925xmeTc4&quot;&gt;&amp;nbsp;is the debugger can be used to dump the stack (function stk()), memory (function mem()) and so on.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Plan 9安装初体验</title>
   <link href="http://bo-yang.github.com//2010/11/22/install-plan9"/>
   <updated>2010-11-22T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2010/11/22/install-plan9</id>
   <content type="html">&lt;p&gt;不知道什么是Plan 9? 请参见&lt;a href=&quot;http://plan9.bell-labs.com/plan9/about.html&quot;&gt;http://plan9.bell-labs.com/plan9/about.html&lt;/a&gt;&amp;nbsp;和&amp;nbsp;&lt;a href=&quot;http://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs&quot;&gt;http://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;有5种方式可以安装或体验Plan 9：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span id=&quot;zw-12bb0636f736ACMzR3916c&quot;&gt;在物理server上安装Plan 9操作系统，基本配置包括网络、文件服务器、CPU服务器以及终端，一般而言不适合个人体验。Plan 9已经被移植到IBM的&lt;/span&gt;Blue Gene/P上，和CNK一起工作（&lt;a href=&quot;http://doc.cat-v.org/plan_9/blue_gene/&quot;&gt;http://doc.cat-v.org/plan_9/blue_gene/&lt;/a&gt;）。&lt;/li&gt;
&lt;li&gt;在虚拟机中安装Plan 9。支持&lt;a href=&quot;http://plan9.bell-labs.com/plan9/download/plan9.iso.bz2&quot;&gt;Plan 9 ISO&lt;/a&gt;的虚拟机有QUME， VMware和Xen，VirtualBox支持的很差，很少有人能成功安装。&lt;/li&gt;
&lt;li&gt;如果你有Plan9的CPU server而没有终端，可以使用drawterm在Unix/Linux上使用Plan 9。drawterm是跑在Unix/Linux上的一个应用程序。&lt;/li&gt;
&lt;li&gt;在UNIX/Linux上使用&lt;a href=&quot;http://swtch.com/plan9port/&quot;&gt;plan9port&lt;/a&gt;。Plan 9项目失败后（2002～2003年）很多一直使用plan9的大牛们（如Russ Cox）回到*nix操作系统，他们把很多plan9的程序移植到了*nix上。&lt;/li&gt;
&lt;li&gt;使用Russ Cox开发的vx32虚拟机的Plan 9实现&lt;a href=&quot;http://swtch.com/9vx/&quot;&gt;9vx&lt;/a&gt;。9vx就像原生应用程序一样运行在Linux/FreeBSD/Solaris上，但是Windows暂不支持。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;另外，推荐一篇非常好的Plan9使用入门的文章：&lt;a href=&quot;http://www.quanstro.net/newbie-guide.pdf&quot;&gt;A Plan9 Newbie&#39;s Guide&lt;/a&gt;。更多Plan9的资源可以在&lt;a href=&quot;http://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs&quot;&gt;http://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs&lt;/a&gt;的下面的连接处找到。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Your browser will not accept this data because of its Content-Encoding</title>
   <link href="http://bo-yang.github.com//2010/11/22/Your-browser-will-not-accept-this-data-because-of-its-Content-Encoding"/>
   <updated>2010-11-22T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2010/11/22/Your-browser-will-not-accept-this-data-because-of-its-Content-Encoding</id>
   <content type="html">&lt;p&gt;今天打算在某个网站下载一个.bz2的文件时，遇到这样一个问题：&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Your browser will not accept this data, /mirror.9grid.fr/plan9-1290391203/plan9.iso.bz2, because of its Content-Encoding.&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;Its Content-Type is application/octet-stream, and Content-Encoding is bzip2.&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;Your browser accepts Content-Type: */*, image/png, text/plain, text/html, application/xhtml+xml, application/xml.&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;Your browser accepts Content-Encoding: sdch, deflate, gzip.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我的浏览器是Chrome9 beta。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Google之后看到这样一个Firefox的解决方法：（原文&amp;nbsp;&lt;a href=&quot;http://blog.1911census.co.uk/2009/01/content-encoding-error/&quot;&gt;http://blog.1911census.co.uk/2009/01/content-encoding-error/&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p id=&quot;zw-12c71de42d3UCbog3916c&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;1) In the address bar type &amp;ldquo;about:config&amp;rdquo; (but without the inverted commas)&lt;br /&gt;2) Tell it that you will be careful, Promise!!&lt;br /&gt;3) In the filter type encoding&lt;br /&gt;4) There should be one option reading &amp;ldquo;network.http.accept-encoding&amp;rdquo;&lt;br /&gt;5) Click in the value column and type &amp;ldquo;true&amp;rdquo; (again without the inverted commas)&lt;br /&gt;6) This should fix it and you can search to your hearts content.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;试了一下，果然可行。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;然后又搜索针对Chrome的类似的解决方案，半小时之后仍然无果 &amp;mdash;&amp;mdash; Chrome里没有&amp;ldquo;about:config&amp;rdquo;的支持。好在在&amp;nbsp;&lt;a href=&quot;http://www.surfchen.org/archives/582&quot;&gt;http://www.surfchen.org/archives/582&lt;/a&gt;&amp;nbsp;看到这样一句话：&amp;ldquo;chrome支持sdch压缩，另外不再支持bzip2压缩&amp;rdquo;，很是郁闷。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;期待Chrome能早日支持&amp;ldquo;about:config&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Debugging Perl</title>
   <link href="http://bo-yang.github.com//2010/11/16/debugging-perl"/>
   <updated>2010-11-16T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2010/11/16/debugging-perl</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;&amp;nbsp;How to Debug Perl Library and Scripts?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span lang=&quot;ru-RU&quot;&gt;&lt;strong&gt;1.&amp;nbsp;Changing&lt;br /&gt;
@INC - where Perl loads its modules&lt;br /&gt;
&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#bb0000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Arial Narrow&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;http://www.wellho.net/mouth/588_Changing-INC-where-Perl-loads-its-modules.html&quot;&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;http://www.wellho.net/mouth/588_Changing-INC-where-Perl-loads-its-modules.html&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#bb0000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Arial Narrow&#39;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;The&lt;br /&gt;
@&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;strong&gt;INC&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&amp;nbsp;array&lt;br /&gt;
is a list of directories&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;strong&gt;Perl&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&amp;nbsp;searches&lt;br /&gt;
when attempting to load modules.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;Where&lt;br /&gt;
does Perl load modules from in its&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;&lt;span&gt;use&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;&amp;nbsp;and&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;&lt;span&gt;require&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;&amp;nbsp;statements?&lt;br /&gt;
It loads them from directorys in a special list called&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;&lt;span&gt;@INC&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;,&lt;br /&gt;
from files with a .pm extension in those directorys.&amp;nbsp;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;When&lt;br /&gt;
Perl&#39;s installed, @INC is set to a list of directorys that includes&lt;br /&gt;
generic locations for its standard modules, some release specific&lt;br /&gt;
directories, and &quot;.&quot; the current directory, which are&lt;br /&gt;
checked in order each time you do a&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;&lt;span&gt;use&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;&amp;nbsp;or&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;&lt;span&gt;require&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;.&amp;nbsp;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;&lt;span&gt;Some&lt;br /&gt;
ways to modify @INC&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;**&lt;br /&gt;
	You can add to the list in @INC by using the -I command line option:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;&lt;span&gt;perl&lt;br /&gt;
-I /Users/grahamellis/jan06 i2&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;br /&gt;says&lt;br /&gt;
&quot;run the perl program i2, additionally checking the jan06&lt;br /&gt;
directory for modules&quot;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;**&lt;br /&gt;
	You can add to the list within your program by doing so in a BEGIN&lt;br /&gt;
	block prior to the&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;&lt;span&gt;use&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;&amp;nbsp;statements:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;BEGIN&lt;br /&gt;
{&amp;nbsp;&lt;br /&gt;push @INC,&quot;/Users/grahamellis/jan06&quot;;&amp;nbsp;&lt;br /&gt;}&amp;nbsp;&lt;br /&gt;use&lt;br /&gt;
demo;&amp;nbsp;&lt;br /&gt;print &quot;hello world&quot;;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;Rather&lt;br /&gt;
curiously,&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;&lt;span&gt;use&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;&amp;nbsp;calls&lt;br /&gt;
are run at compile time not at run time ... but then so are BEGIN&lt;br /&gt;
blocks ... so you put your manipulation of @INC into one of those to&lt;br /&gt;
get it to happen early enough.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;**&lt;br /&gt;
	You can add to the beginning of the list by setting the PERL5LIB&lt;br /&gt;
	environment variable prior to running your program:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;&lt;span&gt;export&lt;br /&gt;
PERL5LIB=/Users/grahamellis/jan06&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;and&lt;br /&gt;
you can use a colon separated list for that if you want to pre-pend&lt;br /&gt;
more than one directory.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;**There&lt;br /&gt;
	is also the &quot;use lib&quot; pragma - this is probably the most&lt;br /&gt;
	common approach. And $PERL5LIB can also be called just $PERLLIB.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;western&quot;&gt;2.&lt;br /&gt;
Debugging Perl&amp;nbsp;&lt;a href=&quot;http://ralphie.perlmonk.org/mosix/debug.html&quot;&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;&lt;span style=&quot;font-family:Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;&lt;span&gt;http://ralphie.perlmonk.org/mosix/debug.html&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Times New Roman&#39;, serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;To&lt;br /&gt;
check the syntax of your scripts, type &quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#ff0000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Times New Roman&#39;, serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;&lt;span&gt;perl&lt;br /&gt;
-c&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#ff0000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Times New Roman&#39;, serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;scriptname&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#ff0000;&quot;&gt;&lt;span style=&quot;font-family:&#39;Times New Roman&#39;, serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;&lt;span&gt;.pl&lt;br /&gt;
&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Times New Roman&#39;, serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span&gt;&quot;&lt;br /&gt;
. It is also worthwhile to add the -w switch (&quot;perl -cw ...&quot;),&lt;br /&gt;
to turn on warning mode. If you were wise enough to &quot;use strict&quot;&lt;br /&gt;
in the body of the code, the syntax check will also specify&lt;br /&gt;
inappropriate scalar scoping, which goes a little beyond the normal&lt;br /&gt;
syntactical problems that are identified. Once your script will pass&lt;br /&gt;
through the syntax check with a &quot;syntax ok&quot; message, you&lt;br /&gt;
will have a legal perl script from the standpoint that all of the&lt;br /&gt;
statements are legal perl statements. That doesn&#39;t mean that the&lt;br /&gt;
manner in which any given statement is expressed will return the&lt;br /&gt;
result that you are looking for, that the functions that are used in&lt;br /&gt;
the code are the right ones for the job, or that the overall&lt;br /&gt;
structure of the script does anything like what you think it supposed&lt;br /&gt;
to do. It just means that all of the perl i&#39;s are dotted and t&#39;s are&lt;br /&gt;
crossed. (On the other hand, this is not such a minor thing, either.)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span lang=&quot;ru-RU&quot;&gt;&lt;strong&gt;3.&lt;br /&gt;
perldebug&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;br /&gt;
(&lt;/span&gt;&lt;span style=&quot;color:#000080;&quot;&gt;&lt;span lang=&quot;zxx&quot;&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;&lt;a href=&quot;http://perldoc.perl.org/perldebug.html&quot;&gt;http://perldoc.perl.org/perldebug.html&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Calling&lt;br /&gt;
the debugger&lt;/span&gt;&lt;/p&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;There&lt;br /&gt;
are several ways to call the debugger:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;a name=&quot;perl--d-program_name&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;perl -d program_name&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;On&lt;br /&gt;
the given program identified by&amp;nbsp;program_name&amp;nbsp;.&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;a name=&quot;perl--d--e-0&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;perl -d -e 0&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Interactively&lt;br /&gt;
supply an arbitrary&amp;nbsp;expression&amp;nbsp;using&amp;nbsp;-e&amp;nbsp;.&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;a name=&quot;perl--d%3APtkdb-program_name&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;perl -d:Ptkdb program_name&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Debug&lt;br /&gt;
a given program via the&amp;nbsp;Devel::Ptkdb&amp;nbsp;GUI.&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;a name=&quot;perl--dt-threaded_program_name&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;perl -dt&lt;br /&gt;
	threaded_program_name&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Debug&lt;br /&gt;
a given program using threads (experimental).&lt;/span&gt;&lt;/p&gt;
&lt;h3 class=&quot;western&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;4. &lt;/span&gt;&lt;span lang=&quot;en-US&quot;&gt;Summary&lt;br /&gt;
of Subprocess Operations&lt;/span&gt;&lt;/h3&gt;
&lt;table style=&quot;width:590px;&quot; border=&quot;1&quot; cellspacing=&quot;3&quot; cellpadding=&quot;3&quot;&gt;
&lt;col width=&quot;191&quot; /&gt;
&lt;col width=&quot;90&quot; /&gt;
&lt;col width=&quot;91&quot; /&gt;
&lt;col width=&quot;87&quot; /&gt;
&lt;col width=&quot;84&quot; /&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;td colspan=&quot;5&quot; width=&quot;578&quot;&gt;
&lt;p lang=&quot;en-US&quot; align=&quot;CENTER&quot;&gt;&lt;a name=&quot;ch14-pgfId-121&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Table&lt;br /&gt;
				14.1: Summary of Subprocess Operations&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td width=&quot;191&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;Operation&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;90&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;Standard&lt;br /&gt;
				Input&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;91&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;Standard&lt;br /&gt;
				Output&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;87&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;Standard&lt;br /&gt;
				Error&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;84&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;Waited&lt;br /&gt;
				for?&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td width=&quot;191&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;system()&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;90&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Inherited&lt;br /&gt;
				from program&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;91&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Inherited&lt;br /&gt;
				from program&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;87&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Inherited&lt;br /&gt;
				from program&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;84&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Yes&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td width=&quot;191&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Backquoted&lt;br /&gt;
				string&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;90&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Inherited&lt;br /&gt;
				from program&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;91&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Captured as&lt;br /&gt;
				string value&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;87&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Inherited&lt;br /&gt;
				from program&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;84&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Yes&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td width=&quot;191&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;open()&amp;nbsp;command&lt;br /&gt;
				as filehandle for output&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;90&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Connected to&lt;br /&gt;
				filehandle&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;91&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Inherited&lt;br /&gt;
				from program&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;87&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Inherited&lt;br /&gt;
				from program&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;84&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Only at time&lt;br /&gt;
				of&amp;nbsp;close()&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td width=&quot;191&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;open()&amp;nbsp;command&lt;br /&gt;
				as filehandle for input&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;90&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Inherited&lt;br /&gt;
				from program&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;91&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Connected to&lt;br /&gt;
				filehandle&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;87&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Inherited&lt;br /&gt;
				from program&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;84&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Only at time&lt;br /&gt;
				of&amp;nbsp;close()&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td width=&quot;191&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;fork,&amp;nbsp;exec,&amp;nbsp;wait,&amp;nbsp;waitpid&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;90&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;User&lt;br /&gt;
				selected&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;91&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;User&lt;br /&gt;
				selected&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;87&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;User&lt;br /&gt;
				selected&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;84&quot;&gt;
&lt;p lang=&quot;en-US&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;User&lt;br /&gt;
				selected&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p lang=&quot;en-US&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;Above&lt;br /&gt;
table is from the book &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;&lt;em&gt;&lt;strong&gt;Learning&lt;br /&gt;
Perl&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span lang=&quot;en-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>升级Fedora 12到最新的Fedora 14</title>
   <link href="http://bo-yang.github.com//2010/11/05/update-fedora12-to-fedora14"/>
   <updated>2010-11-05T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/11/05/update-fedora12-to-fedora14</id>
   <content type="html">&lt;p&gt;Fedora 14于11月2号正式发布了，而我的Fedora 12已经用了1年多了，尽管仍然十分稳定，但还是想着赶赶潮流。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;完全重装当然是舍不得的，于是Google了一下，发现了preupgrade这个Tool可以用来升级系统，详情参见：&lt;a href=&quot;http://fedoraproject.org/wiki/PreUpgrade&quot;&gt;http://fedoraproject.org/wiki/PreUpgrade&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;升级还是很傻瓜话的，惟一的问题就是由于我家网络不太好，下载升级包的过程中找不到mirror而终端过一次。重新开始之后，正好是凌晨5~6点，以平均600K的速度疯狂下载，很快就把1917个升级包下好了，然后就是安装，没什么好说的。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;升级完之后检查了一下软件的兼容性，发现除极个别的软件之外，如aMule和Vim (vi可以)，其它都可以正常工作。aMule又得重新编译了。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;升级之后，用package-cleanup --orphans查了一下垃圾软件包，不是很多。看见这些垃圾我就很不爽，于是就准备手动删除它们。第一个要删的就是ModemManager，用的命令是yum remove XXX，由于没仔细看它的dependency，结果直接输入y之后把所有depend on它的NetworkManager们都给删了，于是乎我的网络中断了&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;好在我为防不测，已经下好了Fedora14的DVD ISO文件，于是挂载上ISO之后到它的Packages里面找到ModemManager和NetworkManager们，统统装上，重启，网络又OK了！&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;由此可见，升级有风险，删包需谨慎。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;总体而言，Fedora14和以前版本Gnome界面上变化不是很大，感觉稳定性资源利用率有所提高，某些软件的易用性有所增强&amp;mdash;&amp;mdash;每次进步一点点，这就够了！&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>国外网友对我天河-1A成为世界最快计算机的评论</title>
   <link href="http://bo-yang.github.com//2010/10/29/tianhe-1a"/>
   <updated>2010-10-29T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/10/29/tianhe-1a</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;
&lt;h1 id=&quot;zw-12bf62e940fsmdD0S3916c&quot;&gt;&lt;span style=&quot;font-weight:normal;font-size:12px;&quot;&gt;&lt;span id=&quot;zw-12bf62e9410QREo_V3916c&quot;&gt;某国外的网友贴出了这样一则消息（&lt;/span&gt;&lt;a id=&quot;zw-12bf62e94101SduHA3916c&quot; href=&quot;http://tech.slashdot.org/story/10/10/28/1220247/China-Makes-Worlds-Fastest-Supercomputer&quot;&gt;&lt;span id=&quot;zw-12bf62e9411wRz5o03916c&quot;&gt;http://tech.slashdot.org/story/10/10/28/1220247/China-Makes-Worlds-Fastest-Supercomputer&lt;/span&gt;&lt;/a&gt;&lt;span id=&quot;zw-12bf62e9411p82gF3916c&quot;&gt;）：&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12bf62e9412uHrXcI3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e94125hqCV3916c&quot;&gt;&quot;China has replaced the United States&amp;nbsp;&lt;span&gt;&lt;a id=&quot;zw-12bf62e9413YB7FOJ3916c&quot; href=&quot;http://www.ibtimes.com/articles/76731/20101028/tianhe-1a-tianhe-supercomputer-fastest-supercomputer-china-us-nvidia-amd-gpum-cpu-chip-semiconductor.htm&quot;&gt;&lt;span id=&quot;zw-12bf62e9414fTBghw3916c&quot;&gt;as the maker of the world&#39;s fastest supercomputer&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span id=&quot;zw-12bf62e9415ocXyUJ3916c&quot;&gt;. A Chinese research center has made the world&#39;s faster super computer &amp;mdash; named as Tianhe-1A, which was released at a national conference on high-performance computers (HPC) in China. Made at a cost of over $88 million, Tianhe-1A is theoretically able to do more than 1 quadrillion calculations per second (one petaflop) at peak speed. Tianhe-1A &#39;s peak performance reaches 1.206 petaflops, and it runs at 563.1 teraflops (1,000 teraflops is equal to one petaflop) on the Linpack benchmark.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12bf62e9415QPOGpp3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e9415P43W2W3916c&quot;&gt;其他外国网友们的回复，很有意思（【】中是我的点评）：&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12bf62e9416YWL68b3916c&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;ol id=&quot;zw-12bf62e941d86XE0C3916c&quot;&gt;
&lt;li id=&quot;zw-12bf62e9417PYFRGZ3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e9417fts3P3916c&quot;&gt;But does it run (Red Flag) Linux? 【虽然我也不知道是不是跑得红旗&amp;ldquo;国产操作系统&amp;rdquo;，但这位哥们竟然知道Red Flag Linux的存在，&amp;ldquo;核高基&amp;rdquo;的那群砖家叫兽们还不得内牛满面？】&lt;/span&gt;&lt;/li&gt;
&lt;li id=&quot;zw-12bf62e94179SBbA83916c&quot;&gt;&lt;span id=&quot;zw-12bf62e9418Xp5a6T3916c&quot;&gt;China: &quot;We made the fastest super-computer!!!&quot; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12bf62e9419c_cWLp3916c&quot;&gt;Intel and NVidia: &quot;Uh - no you didn&#39;t, We are own all your processors!!!&quot; &amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12bf62e9419cB-0FM3916c&quot;&gt;【我也这么认为】&lt;/span&gt;&lt;/li&gt;
&lt;li id=&quot;zw-12bf62e9419YPcv_43916c&quot;&gt;&lt;span id=&quot;zw-12bf6313cd4XEdq1-3916c&quot;&gt;Yeah, lets borrow more money from the Chinese Government so we can build a useless supercomputer to outdo them - just to say we did it! Thanks, grandkids! 【&lt;/span&gt;&lt;span id=&quot;zw-12bf6313d3aDEFzy3916c&quot;&gt;看来景德镇政府这个土大款声名远播了&lt;/span&gt;&lt;span id=&quot;zw-12bf6313cd55X9Zc43916c&quot;&gt;】&lt;/span&gt;&lt;/li&gt;
&lt;li id=&quot;zw-12bf62e941aPDMvMg3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e941a_tcYVd3916c&quot;&gt;Sadly, China needed to build this computer simply to calculate the interest on the US debt in realtime. 【这哥们肯定是美国人】&lt;/span&gt;&lt;/li&gt;
&lt;li id=&quot;zw-12bf62e941bEOGmUt3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e941bMP5pKv3916c&quot;&gt;Competitive in what, exactly? We have many supercomputers in the USA; we have no idea what to do with them, though, and many of them are spending a lot of time idle. Some supercomputers are now being rented out to investors, because the people the computers were built for -- the scientists -- are not using enough computer time. 【美国的HPC真的多的用不了了？貌似不是吧&amp;hellip;&amp;hellip;模拟一次军事演习或者核爆，就需要N多HPC。不过这哥们的评论要是把USA改成景德镇，那倒是无可争辩的事实&amp;mdash;&amp;mdash;想想研究生期间实验室里闲置了好几年的好几台IBM服务器，买了之后就没人动过它们&amp;hellip;&amp;hellip;】&lt;/span&gt;&lt;/li&gt;
&lt;p id=&quot;zw-12bf62e941buEYRKn3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e941cV0pU83916c&quot;&gt;What we really need to do is look at the state of research in this country.【这句话说到点子上了。】 Also, maybe if we had a more solid economic base, one in which we solve the trade imbalance by exporting real goods rather than copyrights, we could spend more money on science and supercomputing. Oh well, in your words, &quot;who am I kidding?&quot; 【这句话就说明上段评论是酸葡萄心理了。】&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12bf62e941buEYRKn3916c&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;li&gt;Oh my. When have I heard this before? Oh yes, back in the 1980s when there was panic and hyperbole over Japan, Inc. overtaking the USA in everything. How did that pan out exactly? I don&#39;t see how the current situation with China is any different. 【严重同意这位美国哥们的观点】&lt;/li&gt;
&lt;li id=&quot;zw-12bf62e941eAb7jw_3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e941eLorx_13916c&quot;&gt;另一哥们对上条评论的回复：&lt;/span&gt;&lt;/li&gt;
&lt;p id=&quot;zw-12bf62e941f6PKvln3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e941fx2ST93916c&quot;&gt;China is way different from Japan. For starters, it has resources, and it can play the game any way it wants to. Japan could only play hardball (&lt;/span&gt;&lt;span id=&quot;zw-12bf62e941fqbYpPj3916c&quot;&gt;采取强硬态度&lt;/span&gt;&lt;span id=&quot;zw-12bf62e941fbe67lL3916c&quot;&gt;)&amp;nbsp;economically. China can at any time choose to overrun Korea and Taiwan at any time if they choose to, and the only recourse would either be a hard fought conventional war, or a nuclear exchange.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12bf62e941flTXoAn3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e9420RngW13916c&quot;&gt;China can fight dirty(下黑手). Japan cannot. And China is good at fighting dirty, because they &quot;won&quot; two wars (Korea and Vietnam) by proxy, sending in men and materials to do what the native population couldn&#39;t. If China chose to, they could easily turn up the heat in other areas hostile to the US by sending in troops and munitions. China could hand Iran the tools to seize control of the Strait of Hormuz and there would be nothing the US could do about it except engage in another theater of war which would be unwinnable. 【看来这哥们对景德镇政府的成见很深啊】&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12bf62e9420RTqSrt3916c&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;li id=&quot;zw-12bf62e9420D6Zrn13916c&quot;&gt;&lt;span id=&quot;zw-12bf62e9420eUz3ug3916c&quot;&gt;一哥们回复说把这世界上&amp;ldquo;最牛逼&amp;rdquo;的超级电脑装在世界上&amp;ldquo;最牛逼&amp;rdquo;的和谐号上会如何？&lt;/span&gt;&lt;/li&gt;
&lt;blockquote id=&quot;zw-12bf62e9420CqmsNq3916c&quot;&gt;
&lt;div id=&quot;zw-12bf62e94201g9eHG3916c&quot;&gt;
&lt;p id=&quot;zw-12bf62e9420VDT7uw3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e9421vPYLjP3916c&quot;&gt;Would there be a benefit to putting the fastest computer in the fastest train?&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;zw-12bf62e9421z2nvB_3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e94224Mjie13916c&quot;&gt;Hmmm.... if the train was going fast enough for relativistic effects to kick in, then this would make the computer *even faster*. You, sir / ma&#39;am, are brilliant! 【这哥们的回答很无厘头】&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12bf62e942209Bsf3916c&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;li id=&quot;zw-12bf62e94221i1hyD3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e9422qTdofz3916c&quot;&gt;Finally they will be able to computerize the national census procedures.【直接怀疑这哥们是间谍，竟然连我景德镇人口普查的具体方式都了若指掌&amp;mdash;&amp;mdash;在2010年的今天，还让街道大妈挨家挨户拿着表格手工填&amp;hellip;&amp;hellip; 不过这哥们应该还是不了解我景德镇的镇情，如此一来解决了多少社会闲散人员的就业，拉动了多少内需，满足了多少文革遗老遗少（街道的那些人）的虚荣心，加强了多少社会的和谐啊！】&lt;/span&gt;&lt;/li&gt;
&lt;li id=&quot;zw-12bf62e9423twMN0K3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e94237NMxnQ3916c&quot;&gt;Supercomputing is largely a solved problem...do a regression analysis on the variables on the Top 500 sometime. Primarily it&#39;s a function of the number of cores. I&#39;ve told people in my own workplace - you want a machine on the Top 500 then write me a cheque - making a supercomputer isn&#39;t the feat of skill or engineering that it was in the days of Cray. This doesn&#39;t even touch on what the hell you use these things for the problem space for parallel processing is clearly smaller than that of serial processing. Add to that the assertion that the number of useful applications drops off steeply as you add more cores (at some point you are left with only the &quot;embarrassingly parallel&quot; ones) and creating the largest supercomputer in the world is akin to saying you are creating the least useful computer in the world. Not to mention probably one of the least power efficient, highest maintenance costs, etc.. 【我相信这哥们说的是事实】&lt;/span&gt;&lt;/li&gt;
&lt;p id=&quot;zw-12bf62e9423YX7CJm3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e9424WWb2zt3916c&quot;&gt;we went to the moon during a period of nationalist chest thumping, and when the nationalist chest thumping subsided, we haven&#39;t been back. countries that are interested in nationalist chest thumping: china, india, etc, are still pumping up their space programs&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12bf62e9424-vH37l3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e94243UGizb3916c&quot;&gt;what i am saying is, for all the evils of nationalism, scientific advancement in the realm of large projects seems to be a positive byproduct&lt;/span&gt;&lt;span id=&quot;zw-12bf62e9425jUYNDl3916c&quot;&gt;【至理名言啊！自建镇以来，我景德镇的所有的重大科技成果，那个不是副产品？记得大学期间，一位东南大学的老教授去给我们做讲座，回忆起当年许世友主政南京军区时，逼着他们在极端恶劣的环境下没日没夜的搞永动机，老教授唏嘘不已&amp;hellip;&amp;hellip;】&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12bf62e9425qg4frQ3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e94255-YaJ3916c&quot;&gt;for example, if we were still in a cold war with the ussr in the 1990s, i will bet you anything that this would have been completed and would be producing amazing science at this point in time:&lt;/span&gt;&lt;a id=&quot;zw-12bf62e9426mtxNZb3916c&quot; title=&quot;wikipedia.org&quot; href=&quot;http://en.wikipedia.org/wiki/Superconducting_Super_Collider&quot;&gt;&lt;span id=&quot;zw-12bf62e9426te9YNw3916c&quot;&gt;http://en.wikipedia.org/wiki/Superconducting_Super_Collider&lt;/span&gt;&lt;/a&gt;&lt;span id=&quot;zw-12bf62e9427NGYjD3916c&quot;&gt;&amp;nbsp;[wikipedia.org] 【在我景德镇，这种例子俯拾皆是】&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12bf62e9427o4aFfF3916c&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;li id=&quot;zw-12bf62e9427aQydKt3916c&quot;&gt;&lt;span id=&quot;zw-12bf62e9427VE2g9k3916c&quot;&gt;There is absolutely no consistency in numbers in this story. Some measurements show this computer to be about 45% slower than the Cray XT5 and some show it to be faster.&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-12bf62e94288iUhtS3916c&quot;&gt;Given China&#39;s history of arbitrarily throwing out numbers to try to prop themselves up in the international community I cannot accept this as fact without some sort of independent verification.&lt;/span&gt;&lt;span id=&quot;zw-12bf62e9428Sa1hdi3916c&quot;&gt;&amp;nbsp;If China has in fact created the worlds fastest supercomputer, I congratulate them on a job well done. But I am still skeptical about this story. Sounds like my government (US) is just looking for an excuse to spend billions more on a new supercomputer. 【兄弟，别说你一老美，连我一景德镇居民都不信！老外都知道我景德镇的浮夸之风了。】&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span id=&quot;zw-12bf6545f50fkLGSD3916c&quot;&gt;对于天河-1A是否是世界上最快的计算机，我不敢妄下结论，但可以肯定的是，&lt;/span&gt;&lt;span id=&quot;zw-12bf6545f9as0ImxV3916c&quot;&gt;天河-1A肯定是比上一代取得不小进步的，因此向工作在这个项目上的最底层的同志们致敬，道一声&amp;ldquo;你们辛苦了！&amp;rdquo; 活永远是你们这些基层人的来干，油水永远是领导们捞，功劳和荣耀永远是属于领导的，出了问题责任永远是你们的&amp;mdash;&amp;mdash;这是景德镇的传统。&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Chrome 8 进程的疑惑</title>
   <link href="http://bo-yang.github.com//2010/10/15/chrome8-processes"/>
   <updated>2010-10-15T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/10/15/chrome8-processes</id>
   <content type="html">&lt;p&gt;最近一直习惯用Chrome打开多个网页，时间一长，就发现硬盘一直在高速旋转。一开始以为是公司的监控软件的原因，就忍了。知道今天早上，电脑持续很长时间的没反应之后，弹出对话框说某个plug-in一直在运行&amp;hellip;&amp;hellip;当时只有Chrome浏览器在工作，这个plugin只可能是Chrome的&amp;hellip;&amp;hellip; 关掉chrome后，硬盘还是高速旋转，打开任务管理器，发现还是有很多chrome进程在运行，很明显这些是跑飞了的chrome进程了。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;杀死所有chrome残留进程之后，我重新打开chrome浏览器，打开几个tab，对比Windows任务管理器、chrome任务管理器，发现了一些有趣的现象：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;img src=&quot;http://bonny95.files.wordpress.com/2010/10/0_128711145593hi.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;Chrome运行时截图&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;img src=&quot;http://bonny95.files.wordpress.com/2010/10/0_1287111468b1zv.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;Windows任务管理器中的Chrome进程&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;img src=&quot;http://bonny95.files.wordpress.com/2010/10/0_1287111476mcts.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;Chrome任务管理器中的Chrome进程&lt;/p&gt;
&lt;p style=&quot;text-align:left;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;text-align:left;&quot;&gt;可以看出：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Chrome任务管理器中所耗内存的数值比Windows任务管理器中显示的要小很多；&lt;/li&gt;
&lt;li&gt;实际打开了8个Tab，在Chrome任务管理器中却有12个；&lt;/li&gt;
&lt;li&gt;Chrome任务管理器显示有17个Chrome进程，而Windows任务管理器却显示有18个Chrome进程。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;等将来有时间时，好好研究一下这些问题。&lt;/p&gt;
&lt;p&gt;-----------------------------------------------------------------------------------------------------------&lt;/p&gt;
&lt;p&gt;Update: 2010-100-26&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Chrome 8 dev升级到8.0.552.11已经有一段时间了，虽说该升级版本已经修复了一些Chrome进程僵死的bug,但运行时间一长，该问题还是会出现的。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>手机引发的思维定势</title>
   <link href="http://bo-yang.github.com//2010/09/28/sick-in-phone"/>
   <updated>2010-09-28T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/09/28/sick-in-phone</id>
   <content type="html">&lt;div&gt;
&lt;p id=&quot;zw-12b55e53d82WN4si15bea0&quot;&gt;早晨你一睁眼，发现早已天光大亮，不禁疑惑为什么手机的闹钟没有响。爬起来打开手机一看，满屏八糟&lt;span id=&quot;zw-12b56bc5cc4JOP35J15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56bc5c44td-05U15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56bc5bc56RLN-15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56bc5b1c2zjOFn15bea0&quot;&gt;​&lt;/span&gt;的英文字母&amp;mdash;&amp;mdash;Oh, my god&lt;span id=&quot;zw-12b56bca6ebdi8_mo15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56bca5dbFHNez15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56bca49bDmE0mg15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56bca3cbUr433S15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56bca22b5msouI15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56bca12bDtMNIv15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56bc9fccz4uS7i15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56bc9f1b86HFJf15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56bc923bsvbK7515bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56bc913beknohb15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56bc8e2bQsDmYr15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56bc8d3c_T9wHh15bea0&quot;&gt;​&lt;/span&gt;，你的手机怎么了?!凭着自己几年程序员的经验，匆匆瞥一眼最后一行的提示，按下&amp;lt;Home&amp;gt;键，满屏的英文字母变成了一个巨大的惊叹号，然后就无论你怎么操作都不再有反应了&amp;hellip;&amp;hellip;病毒？系统崩溃？还是硬件错误？&lt;/p&gt;
&lt;p id=&quot;zw-12b56be971c0FstCk15bea0&quot;&gt;你略加思索，然后打开手机后盖，拆掉电池然后重新装上，开机，终于等来了久违的&amp;ldquo;HTC&amp;rdquo;这三个字母。你沾沾自喜，大多数软件问题都可以通过重启系统解决&amp;hellip;&amp;hellip;&amp;ldquo;HTC&amp;rdquo;这三个字母很快就变成了Sprint的开机动画&amp;mdash;&amp;mdash;你的手机是水货，Sprint定制的HTC的EVDO Android手机&lt;span id=&quot;zw-12b56c1b795s3FbOQ15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56c11a883NK-S15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56c11a48yZcw9-15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56c119a8hmriSA15bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56c11918JgGv0415bea0&quot;&gt;​&lt;/span&gt;&lt;span id=&quot;zw-12b56c11858cKktT15bea0&quot;&gt;​&amp;mdash;&amp;mdash;当你的信息更加坚定之时，突然手机左上角的提示等闪了两下，整个屏幕黑暗了&amp;hellip;&amp;hellip;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12b56c2d25aTuBKvr15bea0&quot;&gt;&lt;span id=&quot;zw-12b56c2d25ayqbo6J15bea0&quot;&gt;你重新开机，重新看到HTC，重新看到Sprint，这次还看到了Android的小机器人，你开始紧张，左上角的红灯又闪了两下，屏幕再次变暗&amp;hellip;&amp;hellip;反复几次，重启并没有解决问题&amp;hellip;&amp;hellip;OMG，花几千块钱刚买了不到一年的手机竟然无法开机！你抓狂了&amp;hellip;&amp;hellip;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12b56c5afa4q-idaS15bea0&quot;&gt;&lt;span id=&quot;zw-12b56c5afa4DlbViG15bea0&quot;&gt;中秋那天你陪你老婆去天安门看巨型牡丹，拍照时你那素有&amp;ldquo;破坏之王&amp;rdquo;美誉的老婆把你的手机摔了一下&amp;mdash;&amp;mdash;一下摔倒了手机的右下角和右上角&amp;mdash;&amp;mdash;感谢毛爷爷，你的手机捡起来还能继续用。是的，是能用的，因为昨天晚上你还用它给你妈妈打电话。但会不会是因为摔了那一下把某个芯片的焊点摔松了，尽管当时能work，时间一长就脱焊了？很有可能。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12b56c9da83ERlIP015bea0&quot;&gt;&lt;span id=&quot;zw-12b56c9da83EYncvR15bea0&quot;&gt;不管是不是硬件的问题，你都得先试试通过软件能不能修复&amp;mdash;&amp;mdash;这也是你唯一有可能控制的东西。你想按一下&amp;lt;Reset&amp;gt;回复到出厂设置，但你又担心这样一来不仅删除了所有已经保存的信息，而且由于中美CDMA手机之间的差异，这手机必须得破解、写号之后才能用，而这，是非常恐怖的事情&amp;hellip;&amp;hellip;好在你终于还是无法找到那个&amp;lt;Reset&amp;gt;小孔，否则你很难保证能战胜心中按下它的欲望。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12b56cd9ffelZfZud15bea0&quot;&gt;&lt;span id=&quot;zw-12b56cd9ffeSWSW8I15bea0&quot;&gt;看来这手机只能慢慢修了。可是你最近又非常忙，忙工作，忙自己的事情，根本没时间也没心情去搞一部坏了的手机。即使有了时间有了心情，你对于Android只有一个肤浅的认识，怎么进入debug模式都不知道，又谈何修复？于是你的头越来越大&amp;hellip;&amp;hellip;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12b56e282f9Xrr-3G15bea0&quot;&gt;&lt;span id=&quot;zw-12b56e282f9s_0vC615bea0&quot;&gt;好在还有去年的一部旧手机可以用，虽说破了点，但能打电话，将就一下吧。你翻箱倒柜把它找出来，插上卡，开机，果然还能用。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12b56cff0269jLnoH15bea0&quot;&gt;&lt;span id=&quot;zw-12b56cff026KlJynG15bea0&quot;&gt;你稍稍冷静了一下，边洗脸刷牙边考虑接下买什么手机&amp;hellip;&amp;hellip;HTC的？算了，坏了的这个就是HTC质量的写照，本来去年就是本着支持国产（虽说HTC是台湾的企业，但你坚信台湾是中国不可分割的一部分，因此你对所有的台资企业和大陆企业一视同仁）品牌和Google去买的这款手机。Moto？高端的贵了点，低端的差了点。Nokia、三星直流不予考虑。iPhone?贵了点，还得换运营商，而且那两家运营商的资费都很不靠谱，还三天两头骗我们，算了&amp;hellip;&amp;hellip;要不就还是先用这个能用破手机，然后等iPad2出来买个iPad吧，反正买智能机也不过就是为了能在漫长的等待的过程中看电子书，比如等班车的时候，等着下车的时候，等着上菜的时候&amp;hellip;&amp;hellip;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12b56d6cb17wO1bRk15bea0&quot;&gt;&lt;span id=&quot;zw-12b56d6cb17wGBnSB15bea0&quot;&gt;吃早饭的时候，你决定边吃饭边再做一下最后的努力来看看那个HTC的手机能不能修复。你又重启了两次，还是那个样子。突然，你意识到，左上角红灯闪的时候，都是电池没电的征兆&amp;hellip;&amp;hellip;可这手机是昨天晚上才充好电的啊&amp;hellip;&amp;hellip;你试着插上电源，开机，你成功了！&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12b56d95b67Auy9ZA15bea0&quot;&gt;&lt;span id=&quot;zw-12b56d95b67_ig0eT15bea0&quot;&gt;于是你终于搞清楚了问题的所在：昨晚睡觉前，你的手机还可以正常工作，可是在夜里不知道某个时候，手机的某个程序崩溃了，这就是你今早第一次开机时看到的满屏英文字母要说的事情&amp;hellip;&amp;hellip;这个问题应该是可以通过重启系统解决的，可由于昨夜系统崩溃后，手机的电源控制模块不能正常工作，很快就把手机电池的电耗光了，于是今天早晨你每次开机的时候，都只能开到一半，因为系统检测到剩余电量不足，就强行关机了。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-12b56dcaf74HRJ_B515bea0&quot;&gt;本来是个非常简单的问题，而你的惯性思维斗了一个大大的圈子，才发现其本质所在。你应该庆幸，你也有了经验，不再是乳臭未干的小子。你应该悲哀，因为不知道什么时候，你就会为你的思维定势所累。&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Ksh中的$*和$@</title>
   <link href="http://bo-yang.github.com//2010/09/21/special-var-in-ksh"/>
   <updated>2010-09-21T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/09/21/special-var-in-ksh</id>
   <content type="html">&lt;p&gt;The meaning of $* and $@ is identical when not quoted or when used as a&lt;br /&gt;
parameter assignment value or as a file name.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;However, when used as a command argument, &quot;$*&quot; is equivalent to &quot;$1&lt;span class=&quot;docEmphasis&quot;&gt;d&lt;/span&gt;$2&lt;span class=&quot;docEmphasis&quot;&gt;d&lt;/span&gt;...&quot; , where &lt;span class=&quot;docEmphasis&quot;&gt;d&lt;/span&gt; is the first character of the &lt;span class=&quot;docEmphStrong&quot;&gt;IFS&lt;/span&gt; parameter, whereas &quot;$@&quot; is equivalent to &quot;$1&quot;&lt;br /&gt;
&quot;$2&quot; ....&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to Clone VMs in ESXi</title>
   <link href="http://bo-yang.github.com//2010/09/14/clone-vm-in-ESXi"/>
   <updated>2010-09-14T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/09/14/clone-vm-in-ESXi</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;1. Create a new VM (clone2) without a disk equipped.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;2. Use the VM tool to clone the disk from&lt;br /&gt;
the existing VM to the new VM. Usually, you can find all the VMs in the /vmfs/volumes/datastore1/.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;
&lt;pre&gt;vmkfstools -i /vmfs/volumes/4c3b50b8-d57dc2fc-d2b7-00241d1852fa/Test_wjh/Test_wjh.vmdk /vmfs/volumes/4c3b50b8-d57dc2fc-d2b7-00241d1852fa/clone2/disk1.vmdk&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;3. On the client add the cloned disk to the&lt;br /&gt;
VM clone2&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&amp;ldquo;edit settings&amp;hellip; -&amp;gt;&lt;span&gt;&amp;nbsp; &lt;/span&gt;Harware -&amp;gt; add &amp;ldquo;hard disk&amp;rdquo; -&amp;gt; &amp;ldquo;using&lt;br /&gt;
existing virtual disk&amp;rdquo; -&amp;gt; find the &amp;ldquo;disk1.vmdk&amp;rdquo; and choose it.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;4. Power on the VM.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;[Warning]:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You must shutdown the VM which you want to clone.&lt;/li&gt;
&lt;li&gt;The cloned VM is identical to the original one, including the physical address(MAC) of the network card, the network configuration and so on. So, please change such config after clone.&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Linux下如何删除已安装的realplayer</title>
   <link href="http://bo-yang.github.com//2010/09/03/delete-realplayer"/>
   <updated>2010-09-03T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/09/03/delete-realplayer</id>
   <content type="html">&lt;p&gt;由于realplayer在Linux下只能通过realplay*.bin来安装，装好后不能通过yum或rpm卸载。现在的realplayer已然成为名副其实的垃圾软件，Linux下尤其如此。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;卸载它的办法就是通过locate realplay命令找到所有realplay相关的文件，然后统统删除之！&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:monospace;font-size:small;&quot;&gt;&lt;span style=&quot;white-space:pre-wrap;&quot;&gt;
&lt;pre&gt;realplayer=$(locate realplay)
echo $realplayer
rm -rf $realplayer
&lt;/pre&gt;
&lt;p&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Splashtop Remote——让你在iPad上也能用Windows下的应用</title>
   <link href="http://bo-yang.github.com//2010/09/02/splashtop-remote"/>
   <updated>2010-09-02T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/09/02/splashtop-remote</id>
   <content type="html">&lt;p&gt;今天看到这样一篇博文：&lt;a href=&quot;http://blog.sina.com.cn/s/blog_679720260100ky5a.html?tj=1&quot;&gt;在iPad上也能用Windows下的应用？我能！&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;对于文中介绍的可以在iPad上也能用Windows软件的Splashtop Remote很感兴趣，因为传说Chrome OS也会用类似的机制来解决Windows软件的兼容问题，即&amp;ldquo;一部分运行在PC上，起daemon的作用，另外一个运行在iPad上，跟PC的软件进行通信，使用户能够控制或管理PC上的软件程序和数据。&amp;rdquo; 这应该和VNC起的作用类似。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;估计iPad和即将发布的gPad（Chrome OS Tablet）乃至Android Pad们很快就会利用这种方式开拓市场，甚至蚕食PC市场了。试想如果将来有公司（比如这个DeviceVM）推出一项服务（可以免费，也可收费），为用户提供现成的Windows应用，而用户所需要做的就是在iPad或gPad上安装Splashtop Remote，打开这个应用就可以自动连接到DeviceVM的Windows PC/Server，利用现成的Windows程序了&amp;mdash;&amp;mdash;省去了自己购买并维护PC的很多麻烦，节省了购买大量Windows软件的开支，何乐而不为呢？而且这也正契合了时下的云计算潮流。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;我能想到的问题是，这种方式使用Windows软件的体验会不会大打折扣？因为在使用VNC登录到Mac OS X的时候，即使在局域网内，图像质量很差，操作很不流畅。也许像Splashtop Remote这样的应用可以保证图像的质量，但是网络本身也会成为一个瓶颈，尤其是3G网络。看来在LTE普及之前，这种应用只能使用WIFI了。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;顺便到Apple App Store里看了一下，发现了几张官方的截图，可以看出，图像质量还是有一定的损失的：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://a1.phobos.apple.com/us/r1000/053/Purple/c5/a5/f6/mzl.vcvzpnec.480x480-75.jpg&quot; alt=&quot;&quot; width=&quot;480&quot; height=&quot;360&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://a1.phobos.apple.com/us/r1000/036/Purple/ff/b6/63/mzl.ncmtyrzu.480x480-75.jpg&quot; alt=&quot;&quot; width=&quot;480&quot; height=&quot;360&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://a1.phobos.apple.com/us/r1000/026/Purple/a7/73/4a/mzl.zngpsfkj.480x480-75.jpg&quot; alt=&quot;&quot; width=&quot;480&quot; height=&quot;360&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://a1.phobos.apple.com/us/r1000/033/Purple/34/71/31/mzl.nzoufixg.480x480-75.jpg&quot; alt=&quot;&quot; width=&quot;480&quot; height=&quot;360&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://a1.phobos.apple.com/us/r1000/004/Purple/1c/8b/bf/mzl.phnrdjsj.480x480-75.jpg&quot; alt=&quot;&quot; width=&quot;480&quot; height=&quot;360&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tcl/Expect中利用exec调用管道"|"和awk的注意事项</title>
   <link href="http://bo-yang.github.com//2010/08/03/use-pipe-in-expect"/>
   <updated>2010-08-03T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/08/03/use-pipe-in-expect</id>
   <content type="html">&lt;p&gt;Tcl/Expect中利用exec调用稍微复杂的shell命令时，经常会遇到一些小问题，常见的就是pipeline(|)和awk。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Tcl/Expect调用多个shell命令并使用|将其串接在一起时，需要注意的是必须在&quot;|&quot;前后加上空格&quot; &quot;，否则tcl/Expect会报奇怪的错。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Tcl/Expect调用awk命令时，需要把awk的&#39; &#39;中的命令改为用&quot; &quot;，并把$1, $2之类的变量改为/$1, /$2。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;下面的ksh命令判断test_process是否在运行：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;ps -fu bonny|grep -v ps|grep MMCAP|grep -v grep|awk &#39;{print $2}&#39;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;改为Tcl/Expect后，为：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;exec ps -fu $myname | grep -v ps | grep COOLrunMMCAP | grep -v grep | awk &quot;{print /$2}&quot;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;另外，&amp;nbsp;&lt;a href=&quot;http://www.linuxquestions.org/questions/linux-software-2/ksh-tcl-173092/&quot;&gt;http://www.linuxquestions.org/questions/linux-software-2/ksh-tcl-173092/&lt;/a&gt;&amp;nbsp;列出了一些ksh命令转换为tcl语句时经常遇到的问题（本人未曾验证过，请谨慎使用）。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Here&#39;s some conversion rules that I have proven, if anyone has any more info ( in any fashion ) , please advise.&lt;/p&gt;
&lt;p&gt;-----------------------------------------------------------------&lt;br /&gt;Rule: Remove &quot;&lt;br /&gt;-----------------------------------------------------------------&lt;br /&gt;ksh: cat *.passwd 2&amp;gt;/dev/null | cut -d&quot;:&quot; -f1 | sort | uniq&lt;br /&gt;tcl: exec cat *.passwd 2&amp;gt;/dev/null | cut -d: -f1 | sort | uniq&lt;br /&gt;-----------------------------------------------------------------&lt;/p&gt;
&lt;p&gt;-----------------------------------------------------------------&lt;br /&gt;Rule: Replace &#39;(..$1..)&#39; with &quot;{../$1..}&quot;&lt;br /&gt;-----------------------------------------------------------------&lt;br /&gt;ksh: ps -eaf | awk &#39;(print $1}&#39; | grep $1 2&amp;gt;&amp;amp;1&lt;br /&gt;tcl: exec ps -eaf | awk &quot;{print /$1}&quot; | grep $user_login_to_test&lt;br /&gt;-----------------------------------------------------------------&lt;/p&gt;
&lt;p&gt;-----------------------------------------------------------------&lt;br /&gt;Rule: Replace &quot;...&quot; with {...}&lt;br /&gt;-----------------------------------------------------------------&lt;br /&gt;ksh: grep &quot;^$(user_login:&quot; /etc/passwd /etc/shadow 2&amp;gt;&amp;amp;1&lt;br /&gt;tcl: exec grep {^$user_login:} /etc/passwd /etc/shadow&lt;br /&gt;-----------------------------------------------------------------&lt;/p&gt;
&lt;p&gt;-----------------------------------------------------------------&lt;br /&gt;Rule: Replace &#39;...&#39; with &quot;...&quot; or {...}&lt;br /&gt;-----------------------------------------------------------------&lt;br /&gt;ksh: grep &#39;Version&#39; user.tcl&lt;br /&gt;tcl: exec grep {Version} user.tcl&lt;br /&gt;tcl: exec grep &quot;Version&quot; user.tcl&lt;br /&gt;-----------------------------------------------------------------&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;还有就是&lt;a href=&quot;http://wiki.tcl.tk/1039&quot;&gt;http://wiki.tcl.tk/1039&lt;/a&gt;列出了使用exec的一些常见问题。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>expect_out(buffer)中包含send的数据</title>
   <link href="http://bo-yang.github.com//2010/07/22/expect-send-data-in-expect_out"/>
   <updated>2010-07-22T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/07/22/expect-send-data-in-expect_out</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;
&lt;h1 id=&quot;zw-129f916d484wZwN43916c&quot;&gt;expect_out(buffer)中包含send的数据&lt;/h1&gt;
&lt;p id=&quot;zw-129f9095e02SqGVnn3916c&quot;&gt;&lt;span id=&quot;zw-129f9081eab6rVFjl3916c&quot;&gt;我一直以为在Expect中一旦执行send之后，&lt;/span&gt;&lt;span id=&quot;zw-129f9081eab0LvB_n3916c&quot;&gt;expect_out(buffer)就会被清空，直到有新的数据被填入，而恰恰就是这些数据被用在expect语句中。而今天在调试时发现的问题却令我大吃一惊，原来expect_out(buffer)不会被自动清空，而expect到的数据很可能不是你真正想要的，非常有可能是历史数据。&lt;/span&gt;&lt;span id=&quot;zw-129f9095dc2QusTdp3916c&quot;&gt;&lt;a id=&quot;zw-129f9081f1cN6cQM93916c&quot; title=&quot;click to see reference to this page&quot; href=&quot;http://wiki.tcl.tk/_/ref?N=17378&quot;&gt;&quot;expect_out(buffer) has the content of the previous send&quot;&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-129f9099e0e7RHXvZ3916c&quot;&gt;一文&lt;/span&gt;&lt;span id=&quot;zw-129f908ec42SOcAlE3916c&quot;&gt;也指出了这个问题。&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;/h4&gt;
&lt;p id=&quot;zw-129f8fe7303mkLwZ3916c&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p id=&quot;zw-129f9000807KX0na03916c&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;div id=&quot;zw-129f900a60bRM8gME3916c&quot;&gt;&lt;span id=&quot;zw-129f900a60cjSAA9Y3916c&quot;&gt;比如在我的代码中，有如下片段：&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129f90d0f92fIcFt93916c&quot;&gt;
&lt;pre&gt;set prompt &quot;#&quot;
set lockfile &quot;/root/tmp/.cool.lock&quot; 
send &quot;
if /[ -e $lockfile ]; then
        cat $lockfile
else 
        echo /&quot;COOLID: $coolid/&quot; &amp;gt; $lockfile
        echo DONE!
fi
/r&quot;
sleep 1 ;# necessary
expect {
        timeout {
                puts stderr &quot;WARNING: $ME: cannot verify if the Linux AP is locked by other COOL session!&quot;;
                exit 2;
        }
       -re &quot;COOLID: (/[1-9](/[0-9])*).*$prompt&quot; {
                puts stdout &quot;expect_out(buffer)=$expect_out(buffer)&quot;
                puts stdout &quot;expect_out(0,string)=$expect_out(0,string)&quot;
                puts stdout &quot;expect_out(1,string)=$expect_out(1,string)&quot;
                puts stdout &quot;expect_out(2,string)=$expect_out(2,string)&quot;
                puts stdout &quot;expect_out(3,string)=$expect_out(3,string)&quot;
        }
        &quot;DONE!&quot;  ;# do nothing    
}
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129f90da827xtgjkZ3916c&quot;&gt;无论$&lt;span id=&quot;zw-129f90e1718nSGeGs3916c&quot;&gt;lockfile是否存在，expect总会得到COOLID: 68，而expect_out(buffer)的出如下：&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129f90b2476dtXxBy3916c&quot;&gt;&lt;span id=&quot;zw-129f90b2476oxjVv3916c&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129f909c0f6KIKdhr3916c&quot;&gt;
&lt;pre&gt;[root@bjvsmcl05 ~]# expect_out(buffer)= 
Last login: Fri Jul 23 09:32:13 2010 from bjbldd
[root@bjvsmcl05 ~]# 
[root@bjvsmcl05 ~]# if [ -e /root/tmp/.cool.lock ]; then
&amp;gt;         cat /root/tmp/.cool.lock
&amp;gt; else 
&amp;gt;         echo &quot;COOLID: 68&quot; &amp;gt; /root/tmp/.cool.lock
&amp;gt;         echo DONE!
&amp;gt; fi
COOLID: 1234
[root@bjvsmcl05 ~]# 
[root@bjvsmcl05 ~]#
expect_out(0,string)=23 09:32:13 2010 from bjbldd
[root@bjvsmcl05 ~]# 
[root@bjvsmcl05 ~]# if [ -e /root/tmp/.cool.lock ]; then
&amp;gt;         cat /root/tmp/.cool.lock
&amp;gt; else 
&amp;gt;         echo &quot;COOLID: 68&quot; &amp;gt; /root/tmp/.cool.lock
&amp;gt;         echo DONE!
&amp;gt; fi
COOLID: 1234&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129f900a6154k9vr_3916c&quot;&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129f9105181rk1x3916c&quot;&gt;&lt;span id=&quot;zw-129f910e606ulQUt93916c&quot;&gt;由此可见，由于&lt;/span&gt;&lt;span id=&quot;zw-129f910e6063BF84J3916c&quot;&gt;expect_out(buffer)中含有send的&lt;/span&gt;&lt;span id=&quot;zw-129f910e666C0g_Fp3916c&quot;&gt;echo &quot;COOLID: 68&quot;&lt;/span&gt;&lt;span id=&quot;zw-129f910e607avGslF3916c&quot;&gt;，因此永远都能匹配到这个数据。&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129f912e050bsjfk33916c&quot;&gt;&lt;span id=&quot;zw-129f912e0513SIKJW3916c&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129f912eb9dtLDgK3916c&quot;&gt;&lt;span id=&quot;zw-129f91d3abebAfTcg3916c&quot;&gt;由于没有找到一种可以清空&lt;/span&gt;&lt;span id=&quot;zw-129f91d3ac0nlD1Le3916c&quot;&gt;expect_out(buffer)的方法，无法实时地将&lt;/span&gt;&lt;span id=&quot;zw-129f91d3b3fb8YqAR3916c&quot;&gt;expect_out(buffer)清空。&lt;/span&gt;&lt;span id=&quot;zw-129f91d3ac3QUsX9u3916c&quot;&gt;我能想到的解决方法有两种：一是更改send和expect的内容或方式，避免send的内容中出现expect的模式(pattern)。比如在我的程序中把上述代码段改为：&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129f9158fb2IWSJh63916c&quot;&gt;
&lt;pre&gt;set lockfile &quot;/root/tmp/.cool.lock&quot;   
send &quot;cat $lockfile/r&quot;
expect {
        -re &quot;COOLID: (/[1-9](/[0-9])*)&quot; {
                puts stdout &quot;expect_out(buffer)=$expect_out(buffer)&quot;
                puts stdout &quot;expect_out(0,string)=$expect_out(0,string)&quot;
                puts stdout &quot;expect_out(1,string)=$expect_out(1,string)&quot;
                if { [string compare $expect_out(1,string) $coolid] } {
                        puts stdout &quot;ERROR: $ME: $pcname has been reserverd by COOL session $expect_out(1,string), please choose another Linux PC instead./n&quot;
                        exit 2;
                }
        }
        &quot;cat: $lockfile: No such file or directory*&quot; {
                send &quot;echo /&quot;COOLID: $coolid/&quot; &amp;gt; $lockfile/r&quot;
        }
}&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129f9158fbfu4Bqbj3916c&quot;&gt;就可以正常工作了。&lt;/div&gt;
&lt;div id=&quot;zw-129f915d6eatVpx_B3916c&quot;&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129f915ddd2JF4vnX3916c&quot;&gt;&lt;span id=&quot;zw-129f9193cbaAjqmW43916c&quot;&gt;另一种方法是按照&lt;/span&gt;&lt;a id=&quot;zw-129f9193cbcDH9aOQ3916c&quot; title=&quot;click to see reference to this page&quot; href=&quot;http://wiki.tcl.tk/_/ref?N=17378&quot;&gt;&lt;span id=&quot;zw-129f9193cbdI49BAL3916c&quot;&gt;&quot;expect_out(buffer) has the content of the previous send&quot;&lt;/span&gt;&lt;/a&gt;&lt;span id=&quot;zw-129f9193cbfZkPuN3916c&quot;&gt;的例子中的方法，set prompt，保持原始代码中send的内容不变，将expect的正则表达式改为&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;zw-129f9193d30IyWK1h3916c&quot;&gt;-re &quot;fi(&lt;/span&gt;&lt;span id=&quot;zw-129f9193d30nUI-eL3916c&quot;&gt;.*)&lt;/span&gt;&lt;span id=&quot;zw-129f9193d30LfTLJL3916c&quot;&gt;$prompt&quot;，如此一来希望的输出就在expect_out(1,string)中了，然后利用string或者lsearch命令对匹配到的数据进行分析。&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129f91aeeb09SBIGu3916c&quot;&gt;&lt;span id=&quot;zw-129f91aeeb1poW5U3916c&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129f91af02eanEEu3916c&quot;&gt;&lt;span id=&quot;zw-129f91af02eiHWs1G3916c&quot;&gt;结论：今后在编写Expect脚本时，不仅要考虑每一步的send/expect，也还要考虑到这一步的expect的内容有可能出现在之前的历史数据中。&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span id=&quot;zw-129f91af02eiHWs1G3916c&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p id=&quot;zw-129f9158fca-kkq893916c&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Here Document</title>
   <link href="http://bo-yang.github.com//2010/07/20/here-document"/>
   <updated>2010-07-20T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/07/20/here-document</id>
   <content type="html">&lt;/p&gt;
&lt;p id=&quot;zw-129ed8c28af2dvqtt15bea0&quot; class=&quot;MsoNormal&quot;&gt;
&lt;h1&gt;Here Document&lt;/h1&gt;&lt;/p&gt;
&lt;p&gt;Syntax:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;command &amp;lt;&amp;lt; label&amp;nbsp;&lt;br /&gt;input line 1&amp;nbsp;&lt;br /&gt;&amp;hellip;&amp;nbsp;&lt;br /&gt;input line n&amp;nbsp;&lt;br /&gt;label&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This allows you to redirect input to a shell script from within the shell script itself.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;&amp;lt; label indicates that label marks the end of the here document&lt;/li&gt;
&lt;li&gt;label must appear on a line by itself to end the here document&lt;/li&gt;
&lt;li&gt;&amp;lt;&amp;lt; &#39;label&#39; prevents the shell from doing parameter and command substitution in the here document&lt;/li&gt;
&lt;li&gt;&amp;lt;&amp;lt;- label deletes leading tabs (but not spaces) from the here document&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Here Document Example&amp;nbsp;&lt;br /&gt;&lt;span&gt;(from page 189 in &quot;Learning the Korn Shell&quot;)&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;pgmname=$1&amp;nbsp;&lt;br /&gt;for user in $(ypcat passwd | cut -f1 -d:)&amp;nbsp;&lt;br /&gt;do&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;mail $user &amp;lt;&amp;lt;- EOF&lt;br /&gt;&amp;nbsp;&amp;nbsp;Dear user,&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;A new version of $pgmname has been installed&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;in $(whence $pgmname).&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;Regards,&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;Your friendly sysadmin&amp;nbsp;&lt;br /&gt;EOF&amp;nbsp;&lt;br /&gt;done&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;原文：&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://snap.nlc.dcccd.edu/reference/scarlatos/cis2.50/note6.html&quot;&gt;http://snap.nlc.dcccd.edu/reference/scarlatos/cis2.50/note6.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>浅析Apple iPhone4天线问题的危机公关</title>
   <link href="http://bo-yang.github.com//2010/07/18/iphone4-antena-gate"/>
   <updated>2010-07-18T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/07/18/iphone4-antena-gate</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;
&lt;h1 id=&quot;zw-129e3d10a83QJWE-15bea0&quot; style=&quot;text-align:center;&quot;&gt;浅析A&lt;span id=&quot;zw-129e3ac83d3_bPs9e15bea0&quot;&gt;pple iPhone4天线问题的危机公关&lt;/span&gt;&lt;/h1&gt;
&lt;p id=&quot;zw-129e3ac83d3CFDfYy15bea0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p id=&quot;zw-129e3ace966fegbrD15bea0&quot;&gt;&lt;span id=&quot;zw-129e3ace967cO2dP15bea0&quot;&gt;iPhone4的天线问题甫一曝光，乔帮主就故态复萌了，拿出25年前打死不认亲生女儿的尽头，摆出死猪不怕开水烫的嘴脸，直言这个问题是由于用户的握手机的姿势不对引起的，言外之意就是碰到问题的这些用户太白痴，连如何正确握手机都得要别人教。很不幸的是，敝人也是习惯左手握手机，也是被乔帮主鄙视的那群人之一。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-129e3bfa69dUjg1BQ15bea0&quot;&gt;乔帮主的言论客观上激起了媒体和更多用户的不满，一大撮人巴不得Apple出事呢，现在苦苦等待了好几年的机会终于来到了，岂有坐视的道理？于是媒体铺天盖地的报道iPhone4的天线问题，科技专栏作家不断发表自己的看法，评测公司不断发布最新的评测&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p id=&quot;zw-129e3c45695rq97mN15bea0&quot;&gt;Apple深知此事不能不了了之，于是又宣称会尽快推出新的固件来修正之前iPhone的信号显示的bug&amp;mdash;&amp;mdash;iPhone4的信号之所以在握住某个点之后会大幅下降，主要原因是之前的信号显示是被夸大了的，也就是说之前的信号其实本来没有那么好，iPhone会故意将信号条设为满格，给用户以iPhone信号良好的假象。我相信这样做的绝不只Apple一家，其他厂家肯定也会搞这种小动作，只是程度不同而已。&lt;/p&gt;
&lt;p id=&quot;zw-129e3c5287eFTOTLj15bea0&quot;&gt;但很快就有新的分析和测试出炉，固件升级不可能解决iPhone4掉话的问题，因为这个问题是由硬件引起的，确切而言是天线的设计缺陷&amp;mdash;&amp;mdash;软件不可能修复这种硬件的缺陷。而直到此时，Apple还没有同意免费为用户提供可以解决掉话问题的iPhone4保护套，用户还不得不掏30美元去买保护套。&lt;/p&gt;
&lt;p id=&quot;zw-129e3c8ff4erCaAr315bea0&quot;&gt;&lt;span id=&quot;zw-129e3d0c290zcxAbx15bea0&quot;&gt;媒体继续穷追猛打，Apple必须得给出一个说法了。于是本周五，乔帮主专门召开了一个发布会来解释iPhone4的信号问题。一向喜欢在最后5分钟报道米国人民生活于水深火热之中的《新闻联播》当然不会放弃这样一个好机会，专门报道了这个消息&amp;mdash;&amp;mdash;&lt;/span&gt;&lt;span id=&quot;zw-129e3d0c317LKBufn15bea0&quot;&gt;迷信水果出品的一小撮不明真相的群众们，你们该醒醒了！即便牛B如iPhone4者，照样问题多多！还是赶紧买我天朝自产的XX吧！&amp;hellip;&amp;hellip;&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-129e3b99ae6BemeBk15bea0&quot;&gt;&lt;span id=&quot;zw-129e3d5aac4iEW14D15bea0&quot;&gt;感谢CCAV，在我吃饭的时候报道了这条消息，吃完饭后我赶紧上网仔细看了看相关报道。今天在新浪科技上看到了《&lt;/span&gt;&lt;a id=&quot;zw-129e4b8ff5frYBH3215bea0&quot; title=&quot;直播实录：苹果iPhone 4信号问题发布会&quot; href=&quot;http://tech.sina.com.cn/t/2010-07-17/01104438749.shtml&quot; target=&quot;_blank&quot;&gt;&lt;span id=&quot;zw-129e4b8ff5eyLK11U15bea0&quot;&gt;直播实录：苹果iPhone 4信号问题发布会&lt;/span&gt;&lt;/a&gt;&lt;span id=&quot;zw-129e4b8ff5eNw8vUx15bea0&quot;&gt;》。看完之后，坦白讲，我被乔帮主的真诚感动了。下面简单分析一下乔帮主的思路。&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;zw-129e3d5b65dLO6jCz15bea0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;div id=&quot;zw-129e490e626TplBJT15bea0&quot;&gt;&lt;span id=&quot;zw-129e490e627NPEeNZ15bea0&quot;&gt;首先，在所有智能手机中iPhone4拥有最好的销量和最佳的口碑&amp;mdash;&amp;mdash;iPhone4天赋异禀，瑕不掩瑜&amp;mdash;&amp;mdash;先定好基调很重要。&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129e490f1dfAY5D2x15bea0&quot;&gt;&lt;span id=&quot;zw-129e490f1dfS9Qoiq15bea0&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129e490e6272R8F15bea0&quot;&gt;&lt;span id=&quot;zw-129e490e627t0Jes415bea0&quot;&gt;所有的手机都不是完美的，iPhone4不是，其他手机也不是，iPhone4存在的天线问题在其他手机上照样存在&amp;mdash;&amp;mdash;老乔我阴沟里翻船了，你们在岸上的也休想有好日子过！空口无凭，图片为证，老乔把其他手机的信号锐减的情况逐一摆在大家面前。需要注意的是老乔在演讲中提到说类似的问题也存在在诺基亚手机中，但在presentation中却不见又诺记的图片，因此我怀疑Apple至今肯定还没有诺记信号问题的切实证据，老乔故意制造烟雾弹。也有另外一种可能是，在乔帮主眼中，就诺基亚那样低劣的工业设计，根本不配是Apple的对手，因此在presentation中放它一码。&lt;/span&gt;&lt;/div&gt;
&lt;p id=&quot;zw-129e490e62eIdY0Ue15bea0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p id=&quot;zw-129e490e62eNfX3gi15bea0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;div id=&quot;zw-129e49bafa92zPQZ-15bea0&quot;&gt;&lt;span id=&quot;zw-129e49bafaahdOOuP15bea0&quot;&gt;接下来乔帮主介绍了Apple在手机天线上的投入&amp;mdash;&amp;mdash;神秘的&amp;ldquo;black&amp;rdquo;实验室、过硬的技术人员和大量的资金投入&amp;mdash;&amp;mdash;两层含义：我们很重视手机天线的设计的，尽管iPhone4的天线存在问题，但绝对不可能是大问题；我们有这么大的投入尚不能解决的问题，其他公司又怎么能彻底解决呢？&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129e49bafaaUZbLpI15bea0&quot;&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129e49bafab_EUqk15bea0&quot;&gt;&lt;span id=&quot;zw-129e49bafabFvyYtb15bea0&quot;&gt;然后乔帮主拿出了hard data来说明iPhone4的问题，除了掉话率iPhone4比iPhone 3GS稍高一点之外，返修率和退货率都要低很多。在这里，乔帮主的下面这张slide制作的实在是太有水平了，不仔细看怎么都不觉得他是在承认iPhone4的问题，分明是在炫耀他的成绩嘛！&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129e49bafabCPL2At15bea0&quot;&gt;&lt;img src=&quot;http://i0.sinaimg.cn/IT/2010/0717/201071723455.jpeg&quot; border=&quot;0&quot; alt=&quot;&quot; hspace=&quot;0&quot; vspace=&quot;0&quot; /&gt;&lt;/div&gt;
&lt;p id=&quot;zw-129e49bafb06hOzSx15bea0&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p id=&quot;zw-129e4a1188ftS6F15bea0&quot;&gt;其实iPhone4的这些数据很难说明问题，因为一是因为它上市的时间太短了，而且上市的地区有限（iPhone 3GS是在欧美多国同时上市的，而iPhone4只有少数几个国家）；再者就是天线信号显示条都可以随意更改，这数据又有何不可呢？&lt;/p&gt;
&lt;div id=&quot;zw-129e4adebdb9JDl4Y15bea0&quot;&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129e4adebdcVQ5Xz15bea0&quot;&gt;&lt;span id=&quot;zw-129e4adebdcT8Nwro15bea0&quot;&gt;至于问题的解决方法，乔帮主终于同意了免费为用户提供手机套&amp;mdash;&amp;mdash;这是对他们最为有利的方案，如果接受媒体和业内人士的召回的建议，Apple的损失将是惨重的。为了进一步打消某些人仍然抱有的召回的幻想，乔帮主在Q&amp;amp;A的环节中干脆暗示召回也很难解决问题，原因就是这是智能手机的通病，不可能在短期内有最终解决方案。&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129e4adebdcth46IY15bea0&quot;&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129e4adebdcmY6Yds15bea0&quot;&gt;&lt;span id=&quot;zw-129e4adebddh5-O0815bea0&quot;&gt;最后，乔帮主竟然主动爆出了正在调查iPhone4的距离感应器的问题&amp;mdash;&amp;mdash;如果有谁还幻想着在天线问题过去之后再炒作距离感应器的问题，还是省省吧！&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129e4adebddBfU2VJ15bea0&quot;&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129e4adebdeVf30_J15bea0&quot;&gt;&lt;span id=&quot;zw-129e4adebdecOwZat15bea0&quot;&gt;另外，乔帮主还深情的自我表白：&amp;ldquo;我们这样做的原因是，我们爱自己的用户；如果我们把事情搞砸了，我们会自我检讨，并更加努力地工作。当我们取得成功时，我们所获得的奖励就是留住了用户。或许我们本应让公关人员来打发这些麻烦事，但我们没有，而是亲自来解决。所以，在过去22天时间里，我们一直都努力解决这个问题。我们认为，已经抓住了问题的核心。&amp;rdquo;&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129e4adebdeXJLvPH15bea0&quot;&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129e4adebdfA85PY215bea0&quot;&gt;&lt;span id=&quot;zw-129e4adebdfcUIB8Z15bea0&quot;&gt;这是一个堪称经典的危机公关演讲！&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129e4aeace8Bm15Ac15bea0&quot;&gt;&lt;span id=&quot;zw-129e4aeace8bX2vv15bea0&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div id=&quot;zw-129e4aeaf80JHU7o15bea0&quot;&gt;&lt;span id=&quot;zw-129e4aeaf80v6SWKE15bea0&quot;&gt;联想起最近国内的唐俊面对&amp;ldquo;学历门&amp;rdquo;的态度，汪晖教授面对&amp;ldquo;抄袭门&amp;rdquo;的反应，乔帮主的水平实在比他们高出一个档次&amp;mdash;&amp;mdash;既承认了自己的错误，又捎带打击了对手，既安抚了消费者和媒体，又能使自己的利益最大化。谢谢乔帮主又给我们上了一课！&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span id=&quot;zw-129e4aeaf80v6SWKE15bea0&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p id=&quot;zw-129e4adebe7O4HTKQ15bea0&quot;&gt;PS:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;根据Apple的声明，很多人推测Apple很可能在10月份推出重新设计的iPhone4.我认为这很有可能，因Steve Jobs不可能容忍有瑕疵的产品在市场上销售太久。另外，至于有很多人质疑乔帮主在iPhone4发部前就已经知道它的天线问题，我觉得可能性也不是很大，凭着乔帮主要求Mac开发者搞半年才能拿出一个入他老人家法眼的的滚动条而最终发布时又不得不把这滚动条放弃的高要求，很难想象他会容忍有问题的iPhone流入市场&amp;mdash;&amp;mdash;即使事先他真的已经知道了这个问题，估计那也是离WWDC很近的时间内才知道的，箭在弦上不得不发了&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>awk正则表达式中调用ksh变量</title>
   <link href="http://bo-yang.github.com//2010/07/17/use-shell-var-in-awk"/>
   <updated>2010-07-17T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/07/17/use-shell-var-in-awk</id>
   <content type="html">&lt;/p&gt;
&lt;p&gt;如果ksh中定义了变量pcname,而在嵌入ksh中的awk程序中又要使用这个环境变量，并且用它在正则表达式中，该如何用它呢？&lt;/p&gt;
&lt;p&gt;最简单的方法就是：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;#!/bin/ksh
pcname=&quot;ap201&quot;
nawk &#39;/&#39;&quot;$pcname&quot;&#39;/{print $2}&#39; $FILE&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;更多方法，参见下面转载的《&lt;strong&gt;&lt;a href=&quot;http://www.91linux.com/html/article/shell/20090405/16355.html&quot;&gt;AWK 使用 Shell 变量&lt;/a&gt;&lt;/strong&gt;》一文：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;最近闲着没事，想写个Shell脚本，其中用到了 AWK。想在AWK中读取／设置Shell脚本中定义的变量，搜索些资源，总结了一些东东。&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:large;&quot;&gt;读取变量&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在通过如下方式&lt;span&gt;读取&lt;/span&gt;Shell变量&lt;br /&gt;1&amp;gt; awk -v varName=varValue &#39;...&#39; ...&lt;br /&gt;2&amp;gt; awk &#39;...{print &quot;&#39;&quot;${USER}&quot;&#39;&quot;}&#39; ...&lt;br /&gt;&amp;nbsp;&amp;nbsp; 此种方式可以访问系统环境变量（如USER等），和自定义Shell变量。若这些变量中没有空格及其他特殊字符，则可以少写两个双引号：awk &#39;...{print &quot;&#39;${USER}&quot;}&#39; ...&lt;br /&gt;3&amp;gt; awk &#39;...{print ENVIRON[&quot;USER&quot;]}...&#39; ...&lt;br /&gt;&amp;nbsp;&amp;nbsp; 但是这种方法只能访问系统变量&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:large;&quot;&gt;设置变量&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在AWK中尚未找到设置&lt;/span&gt;Shell变量的方法，因为像上面的读取的方法中，一旦awk开始执行，这些环境变量都是一个副本，无论处理多少条记录，不管主Shell中如何变化，所引用的这些变量值都保持不变。而且，通过下面的实验可以看出来，在AWK中执行system函数调用命令是另起一个Shell线程，所以无法依靠system来设置外部环境变量。&lt;br /&gt;如果你的AWK只打印一条结果的话，可以使用如下方式&lt;span&gt;在shell环境中设置&lt;/span&gt;变量&lt;br /&gt;&amp;nbsp;&amp;nbsp; myVar=&quot;`echo | awk &#39;{print &quot;AA/nBB/nCC&quot;}&#39;`&quot;&lt;br /&gt;注意，这种方式在awk打印多行情况下会将回车用空格替代后赋值。&lt;/p&gt;
&lt;p&gt;实验过程如下：&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&lt;span&gt;$ vi tmp.sh&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;// 编辑内容如下&lt;br /&gt;&lt;span&gt;&lt;span style=&quot;font-family:新宋体;&quot;&gt;
&lt;pre&gt;#!/bin/bash
echo
echo &quot;SHELL VERSION : ${SHELL} ${BASH_VERSION}&quot;
echo &quot;AWK VERSION : `awk -W version | sed -n &#39;1p&#39;`&quot;
echo
myVar=&quot;AAA BBB CCC DDD&quot;
echo &quot;IN SHELL : PID=$&quot;
echo &quot;IN SHELL : /${myVar}=/&quot;${myVar}/&quot;&quot;
echo
echo | awk -v var1=&quot;${myVar}&quot; &#39;{
    print &quot;IN AWK : how to print single quote : &quot; &quot;&#39;&quot;&#39;&quot;&#39;&quot; 
    print &quot;No.&quot; NR
    print &quot;IN AWK : -v : var1=/&quot;&quot; var1 &quot;/&quot;&quot;
    print &quot;IN AWK : get : ENVIRON[/&quot;USER/&quot;]=/&quot;&quot; ENVIRON[&quot;USER&quot;] &quot;/&quot;&quot;
    print &quot;IN AWK : get : ENVIRON[/&quot;myVar/&quot;]=/&quot;&quot; ENVIRON[&quot;myVar&quot;] &quot;/&quot;&quot;
    print &quot;IN AWK : get : ${USER} =/&quot;&quot; &quot;&#39;&quot;${USER}&quot;&#39;&quot; &quot;/&quot;&quot; 
    print &quot;IN AWK : get : ${myVar}=/&quot;&quot; &quot;&#39;&quot;${myVar}&quot;&#39;&quot; &quot;/&quot;&quot; 
    print
    system(&quot;echo /&quot;IN AWK : system() : PID=$/&quot;&quot;)
}&#39; 
myVar=&quot;`echo | awk &#39;{print &quot;AA/nBB/nCC&quot;}&#39;`&quot;
#/n is replaced by space character
echo ${myVar}&lt;/pre&gt;
&lt;p&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&lt;span style=&quot;font-family:新宋体;&quot;&gt;&lt;span&gt;$ . tmp.sh&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;//输出结果如下
&lt;pre&gt;
SHELL VERSION : /bin/bash 3.2.25(1)-release
AWK VERSION : GNU Awk 3.1.5
IN SHELL : PID=10627
IN SHELL : ${myVar}=&quot;AAA BBB CCC DDD&quot;
IN AWK : how to print single quote : &#39; 
No.1
IN AWK : -v : var1=&quot;AAA BBB CCC DDD&quot;
IN AWK : get : ENVIRON[&quot;USER&quot;]=&quot;zhangll&quot;
IN AWK : get : ENVIRON[&quot;myVar&quot;]=&quot;&quot;
IN AWK : get : ${USER} =&quot;zhangll&quot;
IN AWK : get : ${myVar}=&quot;AAA BBB CCC DDD&quot;
IN AWK : system() : PID=17468
AA BB CC&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Korn Shell中IFS的妙用</title>
   <link href="http://bo-yang.github.com//2010/07/17/ifs-in-kshell"/>
   <updated>2010-07-17T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/07/17/ifs-in-kshell</id>
   <content type="html">&lt;p&gt;IFS是internal field separator的缩写，shell的特殊环境变量。ksh根据IFS存储的值，可以是空格、tab、换行符或者其他自定义符号，来解析输入和输出的变量值。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;如果有一IP地址220.112.253.111, 欲将这个IP地址颠倒顺序，你可以定义IFS为&quot;.&quot;，然后直接echo这个地址即可得到此IP的4个数值，然后c重新把IFS设为空格，重新组合四个IP地址的数值即可。&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;# The following code segment will only work in ksh, 
# and it will fail in bash
IP=220.112.253.111
IFS=&quot;.&quot;
TMPIP=$(echo $IP)
IFS=&quot; &quot; # space
echo $TMPIP | read ip1 ip2 ip3 ip4
INVERT_IP=$ip4.$ip3.$ip2.$ip1&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;更详细的IFS的介绍参见下文：（原文地址：&lt;a href=&quot;http://www.livefirelabs.com/unix_tip_trick_shell_script/oct_2003/10132003.htm&quot;&gt;http://www.livefirelabs.com/unix_tip_trick_shell_script/oct_2003/10132003.htm&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table style=&quot;width:100%;&quot; border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width=&quot;100%&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:Arial;font-size:x-small;&quot;&gt;&lt;span&gt;Another shell variable that you should become comfortable using is the IFS, or internal field separator, variable.&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;The shell uses the value stored in IFS, which is the space, tab, and newline characters by default, to delimit words for the read and set commands, when parsing output from command substitution, and when performing variable substitution.&lt;/span&gt;&lt;span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;IFS can be redefined to parse one or more lines of data whose fields are not delimited by the default white-space characters.&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;Consider this sequence of variable assignments and for loops:&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;100%&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:Arial;font-size:x-small;&quot;&gt;$ line=learn:unix:at:livefire:labs&lt;br /&gt;$ for i in $line&lt;br /&gt;&amp;gt; do&lt;br /&gt;&amp;gt; echo $i&lt;br /&gt;&amp;gt; done&lt;br /&gt;learn:unix:at:livefire:labs&lt;br /&gt;$ OIFS=$IFS&lt;br /&gt;$ IFS=:&lt;br /&gt;$ for i in $line&lt;br /&gt;&amp;gt; do&lt;br /&gt;&amp;gt; echo $i&lt;br /&gt;&amp;gt; done&lt;br /&gt;learn&lt;br /&gt;unix&lt;br /&gt;at&lt;br /&gt;livefire&lt;br /&gt;labs&lt;br /&gt;$&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;100%&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:Arial;font-size:x-small;&quot;&gt;&lt;span&gt;The first command assigns the string &amp;ldquo;learn:unix:at:livefire:labs&amp;rdquo; to the variable named line.&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;You can see from the first for loop that the shell treats the entire string as a single field.&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;This is because the string does not contain a space, tab, or newline character.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;span&gt;After redefining IFS, the second for loop treats the string as four separated fields, each delimited by a colon.&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;Using a colon for IFS would be appropriate when parsing the fields in a record from /etc/passwd, the user account information file:&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;100%&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:Arial;font-size:x-small;&quot;&gt;livefire:x:100:1::/export/home/livefire:/bin/ksh&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;100%&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:Arial;font-size:x-small;&quot;&gt;&lt;span&gt;Notice that the original value of IFS was stored in OIFS (&amp;ldquo;O&amp;rdquo; for original) prior to changing its value.&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;After you are finished using the new definition, it would be wise to return it to its original value to avoid unexpected side effects that may surface later on in your script.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;span&gt;TIP &amp;ndash; The current value of IFS may be viewed using the following pipeline:&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;100%&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&quot;font-family:Arial;font-size:x-small;&quot;&gt;$ echo &quot;$IFS&quot; | od -b&lt;br /&gt;0000000 040 011 012 012&lt;br /&gt;0000004&lt;br /&gt;$&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;100%&quot;&gt;&lt;span style=&quot;font-family:Arial;font-size:x-small;&quot;&gt;&lt;span&gt;The output of the echo command is piped into the octal dump command, giving you its octal equivalent.&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;You can then use an ASCII table to determine what characters are stored in the variable.&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;Hint: Ignore the first set of zeros and the second newline character (012), which was generated by echo.&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Apache and Subversion配置</title>
   <link href="http://bo-yang.github.com//2010/06/24/apache-subversion-config"/>
   <updated>2010-06-24T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/06/24/apache-subversion-config</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;I.&amp;nbsp;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;a href=&quot;http://xuebingnanmm.javaeye.com/blog/629810&quot;&gt;CentOS Apache配置详解&lt;/a&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(&lt;/span&gt;&lt;a href=&quot;http://xuebingnanmm.javaeye.com/blog/629810&quot;&gt;http://xuebingnanmm.javaeye.com/blog/629810&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;II.&lt;span style=&quot;color:#000000;&quot;&gt;&lt;a id=&quot;vqhi&quot; title=&quot;Subversion on CentOS&quot; href=&quot;http://wiki.centos.org/HowTos/Subversion#head-63b296629e14e219beb2a4b866521947afe58d68&quot;&gt;Subversion on CentOS&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(&lt;/span&gt;&lt;a href=&quot;http://wiki.centos.org/HowTos/Subversion#head-2afd8f61ccc6de4477fde9a4bcc84720b86c17a9&quot;&gt;http://wiki.centos.org/HowTos/Subversion#head-2afd8f61ccc6de4477fde9a4bcc84720b86c17a9&lt;/a&gt;)&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2&gt;III. How to customize the path of svn repository?&amp;nbsp;&lt;/h2&gt;
&lt;p&gt;The URL of svn repository is like http://&amp;lt;server_name&amp;gt;/&amp;lt;location&amp;gt;/&amp;lt;project&amp;gt;. You can store the svn repository to anywhere you want.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;If the location is not defined in&amp;nbsp;/etc/httpd/conf/httpd.conf, add such definition in it:&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&amp;lt;Directory /path&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;Options FollowSymLinks&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;AllowOverride None&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;Then change the&amp;nbsp;&lt;strong&gt;/etc/httpd/conf.d/subversion.conf&lt;/strong&gt;, such as:&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&amp;lt;Location /tmp&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;DAV svn&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;# &amp;nbsp; &amp;nbsp; &amp;nbsp;SVNParentPath /var/www/svn/repos&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;# &amp;nbsp; &amp;nbsp; &amp;nbsp;AuthzSVNAccessFile /etc/svn-acl-conf&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;SVNPath /tmp/svn/project&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;AuthType Basic&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;AuthName &quot;Subversion repos&quot;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;AuthUserFile /etc/svn-auth-conf&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;Require valid-user&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&amp;lt;/Location&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;
&lt;br /&gt;However,&amp;nbsp;&lt;span style=&quot;font-family:&#39;courier new&#39;;&quot;&gt;SVNParentPath&amp;nbsp;&lt;/span&gt;is can not be used here and only&amp;nbsp;&lt;span style=&quot;font-family:&#39;courier new&#39;;&quot;&gt;SVNPath&amp;nbsp;&lt;/span&gt;is supported (&lt;a href=&quot;http://lists.freebsd.org/pipermail/freebsd-questions/2009-November/208244.html&quot;&gt;http://lists.freebsd.org/pipermail/freebsd-questions/2009-November/208244.html&lt;/a&gt;).&lt;/p&gt;
&lt;div&gt;The &amp;lt;Location /&amp;gt;...&amp;lt;/Location&amp;gt; tags also can be added in /etc/httpd/conf/httpd.conf (&lt;a href=&quot;http://stackoverflow.com/questions/673572/how-to-specify-the-repository-in-apache-dav-svn&quot;&gt;http://stackoverflow.com/questions/673572/how-to-specify-the-repository-in-apache-dav-svn&lt;/a&gt;).&lt;/div&gt;
&lt;div&gt;Command to stop SELinux: &amp;nbsp;&lt;span style=&quot;font-family:&#39;courier new&#39;;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;setenforce 0&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>利用Excel VBA处理文档</title>
   <link href="http://bo-yang.github.com//2010/06/13/batch-process-with-excel-vba"/>
   <updated>2010-06-13T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/06/13/batch-process-with-excel-vba</id>
   <content type="html">&lt;p&gt;遇到如下格式的一篇WORD文档，格式混乱，不适合打印：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:monospace;font-size:13px;&quot;&gt;&lt;span style=&quot;white-space:pre-wrap;&quot;&gt;&lt;img src=&quot;http://bonny95.files.wordpress.com/2010/06/64_1276413753mmbm.jpg&quot; alt=&quot;&quot; width=&quot;232&quot; height=&quot;614&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;由于没有接触过Word VBA，因此决定用Excel VBA来处理这篇文档。首先全选该文档的内容，粘贴到Excel文档中。然后创建一个新的macro,修改该Macro为以下代码：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:monospace;font-size:13px;&quot;&gt;&lt;span style=&quot;white-space:pre-wrap;&quot;&gt;
&lt;pre&gt;Sub FormatSheet()&#39;&#39; FormatSheet Macro&#39; Macro recorded 6/13/2010 by Bo Yang&#39;&#39; Keyboard Shortcut: Ctrl+f&#39;    Dim str As String    Dim i As Long        &#39; Remove blank rows    rownumber = Range(&amp;quot;A65536&amp;quot;).End(xlUp).Row    Do While rownumber &amp;gt;= 1        If Cells(rownumber, 1).Value = &amp;quot;&amp;quot; Then            Rows(rownumber).Delete            rownumber = rownumber - 1        End If        rownumber = rownumber - 1    Loop        &#39; Copy the Chinese intepretation    For rownumber = 2 To 65535        Cells(rownumber, 2).Value = Cells(rownumber + 1, 1).Value    Next        &#39; Delete rows which contians Chinese character    &#39; in their first cells    For rownumber = 2 To 65535        For i = 1 To Len(Cells(rownumber, 1).Value)            str = Mid(Cells(rownumber, 1).Value, i, 1)            If str Like &amp;quot;[Ò»£­ý›]&amp;quot; Then                Rows(rownumber).Delete            End If        Next    Next    End Sub&lt;/pre&gt;
&lt;p&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;然后按自定义快捷键Ctrl+f， 数秒钟后，文档处理完毕，秩序井然矣。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://bonny95.files.wordpress.com/2010/06/64_12764139792ekk.jpg&quot; alt=&quot;&quot; width=&quot;464&quot; height=&quot;523&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Find CPU Speed and Memory Size on Solaris</title>
   <link href="http://bo-yang.github.com//2010/06/11/cpu-speed-and-memory-size-in-solaris"/>
   <updated>2010-06-11T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/06/11/cpu-speed-and-memory-size-in-solaris</id>
   <content type="html">&lt;p&gt;&lt;h2&gt;Find CPU Speed and Memory Size on Solaris&lt;/h2&gt;
&lt;div class=&quot;entry&quot;&gt;
&lt;p&gt;As I&amp;rsquo;m writing my thesis I&amp;rsquo;m running tests on an old SMP Solaris machine. Obviously, I need to provide the specs of this machine in the paper so that the readers can see my results in context (ie why everything is taking forever. On linux I would just use&amp;nbsp;&lt;kbd&gt;lshw&lt;/kbd&gt;&amp;nbsp;which is your ultimate hardware information goldmine. If you don&amp;rsquo;t have it on your system, go install it now. You will thank me later.&lt;/p&gt;
&lt;p&gt;The ancient Solaris machine I was working with did not have it, so I was forced to find other ways of finding information such as CPU speed and memory size.&lt;/p&gt;
&lt;p&gt;First you can try&amp;nbsp;&lt;kbd&gt;prtdiag&lt;/kbd&gt;&amp;nbsp;&amp;ndash; it will tell you detailed information about all your CPU&amp;rsquo;s and memory banks. Unfortunately it is in a weird directory that is not in your $path so you will need to run it with the absolute path:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/usr/platform/sun4u/sbin/prtdiag -v&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you just want information on the CPU&amp;rsquo;s you can also try:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;psrinfo -v&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Finally, to just get your total memory size do:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;prtconf | grep Memory&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;There might be better ways to do this, but these worked for me. Craig will probably be able to add to this list or correct me.&amp;nbsp;&lt;img class=&quot;wp-smiley&quot; src=&quot;http://www.terminally-incoherent.com/blog/wp-includes/images/smilies/icon_smile.gif&quot; alt=&quot;:)&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Fixing The Error: DB_RUNRECOVERY: Fatal error, run database recovery</title>
   <link href="http://bo-yang.github.com//2010/05/22/how-to-fix-DB_RUNRECOVERY"/>
   <updated>2010-05-22T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/05/22/how-to-fix-DB_RUNRECOVERY</id>
   <content type="html">&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you get a message similar to this:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[username@localhost ~]$ sudo yum update&lt;br /&gt;rpmdb: Thread/process 2402/139688794072832 failed: Thread died in Berkeley DB library&lt;br /&gt;error: db4 error(-30974) from dbenv-&amp;gt;failchk: DB_RUNRECOVERY: Fatal error, run database recovery&lt;br /&gt;error: cannot open Packages index using db3 - (-30974)&lt;br /&gt;error: cannot open Packages database in /var/lib/rpm&lt;br /&gt;CRITICAL:yum.main:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Error: rpmdb open failed&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You can fix it by running the following 3 commands:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[username@localhost ~]$ sudo rm -f /var/lib/rpm/__db*&lt;br /&gt;[username@localhost ~]$ sudo db_verify /var/lib/rpm/Packages&lt;br /&gt;[username@localhost ~]$ sudo rpm --rebuilddb&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>绕过“Enter password for default keyring to unlock”的方法</title>
   <link href="http://bo-yang.github.com//2010/04/21/Enter-password-for-default-keyring-to-unlock"/>
   <updated>2010-04-21T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2010/04/21/Enter-password-for-default-keyring-to-unlock</id>
   <content type="html">&lt;p&gt;当你在Gnome下使用无线网络时，很有可能会遇到如下窗口：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://lifehacker.com/assets/resources/2007/07/nmapplet.png&quot; alt=&quot;&quot; width=&quot;478&quot; height=&quot;233&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;估计很多人和我一样对此窗口不知所云，输入N多自己知道的密码仍然无效。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;这时你需要做的就是删除&amp;nbsp;/home/.gnome2/keyring/下面的所有文件，然后重启，如果再次遇到这个窗口，什么也不要输入直接点OK就可以了。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;其他更完美的解决方案请Google。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sprint HTC Hero(Hero 200)获取ROOT权限</title>
   <link href="http://bo-yang.github.com//2010/03/05/root-hero-200"/>
   <updated>2010-03-05T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2010/03/05/root-hero-200</id>
   <content type="html">&lt;p&gt;I. 开始之前你需要完成的：&lt;/p&gt;
&lt;div class=&quot;comment_count&quot;&gt;你需要确认你能通过ADB来访问你的HERO。如果不行的话就先看看如何安装HERO的驱动（这个方法转自&lt;span style=&quot;text-decoration:underline;&quot;&gt;&lt;strong&gt;draculading&lt;/strong&gt;&lt;/span&gt;的帖子&lt;a href=&quot;http://www.hiapk.com/bbs/thread-13053-1-1.html&quot; target=&quot;_blank&quot;&gt;&lt;span class=&quot;t_tag&quot;&gt;HTC&lt;/span&gt;&amp;nbsp;HERO 取得&lt;span class=&quot;t_tag&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;t_tag&quot;&gt;权限&lt;/span&gt;完全傻瓜&lt;span class=&quot;t_tag&quot;&gt;教程&lt;/span&gt;，适合&lt;span class=&quot;t_tag&quot;&gt;新人&lt;/span&gt;。。。&lt;/a&gt;其中安装驱动部分。）&lt;/div&gt;
&lt;div class=&quot;comment_count&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;comment_count&quot;&gt;&lt;span style=&quot;color:#4a4a4a;&quot;&gt;&lt;span style=&quot;font-family:Arial, Arial, sans-serif;&quot;&gt;&lt;strong&gt;1.&amp;nbsp;&lt;span class=&quot;t_tag&quot;&gt;下载&lt;/span&gt;&lt;span class=&quot;t_tag&quot;&gt;Android&lt;/span&gt;&amp;nbsp;SDK&lt;/strong&gt;&lt;br /&gt;到&lt;span class=&quot;t_tag&quot;&gt;Google&lt;/span&gt;官网去下个SDK里面有root要用的工具和驱动，网址&amp;nbsp;&lt;span&gt;&lt;a href=&quot;http://developer.android.com/index.html&quot; target=&quot;_blank&quot;&gt;http://developer.android.com/index.html&lt;/a&gt;（&lt;em&gt;博主：该网页已经被墙，尝试这个网页&lt;/em&gt;&lt;a href=&quot;http://androidappdocs.appspot.com/sdk/index.html&quot;&gt;&lt;em&gt;http://androidappdocs.appspot.com/sdk/index.html&lt;/em&gt;&lt;/a&gt;&lt;span&gt;）&lt;/span&gt;&lt;span&gt;下载以后可以解压到任意位置，建议解压到C:/sdk/ ,后面的教程里说的sdk&lt;span class=&quot;t_tag&quot;&gt;文件&lt;/span&gt;夹就是指的这个文件夹&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;comment_count&quot;&gt;&lt;span style=&quot;color:#4a4a4a;&quot;&gt;&lt;span style=&quot;font-family:Arial, Arial, sans-serif;&quot;&gt;&lt;br /&gt;&lt;strong&gt;2.安装&lt;/strong&gt;&lt;strong&gt;&lt;span class=&quot;t_tag&quot;&gt;USB&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&amp;nbsp;de&lt;/strong&gt;&lt;strong&gt;&lt;span class=&quot;t_tag&quot;&gt;bug&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;ging驱动&lt;/strong&gt;&lt;br /&gt;确定你的&lt;span class=&quot;t_tag&quot;&gt;手机&lt;/span&gt;已经打开USB Debugging，在&lt;span&gt;Settings - Applications -Development - USB Debugging&lt;/span&gt;&lt;br /&gt;&lt;span&gt;现在把手机通过usb线连到&lt;span class=&quot;t_tag&quot;&gt;电脑&lt;/span&gt;上，电脑会&lt;span class=&quot;t_tag&quot;&gt;提示&lt;/span&gt;你安装驱动，驱动的位置在sdk文件夹里的usb_driver, 如果是32位的&lt;span class=&quot;t_tag&quot;&gt;系统&lt;/span&gt;选择x86文件夹安装驱动，如果是64位系统选择amd64文件夹（驱动可以兼容win7,我用的是64位的win7）&lt;/span&gt;&lt;span&gt;另外最好从始至终使用同一个usb接口，不然有可能会再次提示你安装驱动&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;comment_count&quot;&gt;&lt;span style=&quot;color:#4a4a4a;&quot;&gt;&lt;span style=&quot;font-family:Arial, Arial, sans-serif;&quot;&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;comment_count&quot;&gt;【&lt;em&gt;博主：如果安装了HTCsync2.0.8，那么USB驱动就已经安装好了，以上第二步可以省略。&lt;/em&gt;】&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;驱动搞定后就可以开始啦（以下部分是从&lt;/strong&gt;&lt;a href=&quot;http://www.androidspin.com/index.php?option=com_content&amp;amp;view=article&amp;amp;id=254:how-to-root-cdma-hero&amp;amp;catid=10:rooting&amp;amp;Itemid=4&quot; target=&quot;_blank&quot;&gt;http://www.androidspin.com/index.php?option=com_content&amp;amp;view=article&amp;amp;id=254:how-to-root-cdma-hero&amp;amp;catid=10:rooting&amp;amp;Itemid=4&lt;/a&gt;&lt;strong&gt;翻译而来）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;II. 获取CDMA HERO的root权限
&lt;ol&gt;
&lt;li&gt;下载附件中的asroot2.zip，并解压.&lt;/li&gt;
&lt;li&gt;把解压后的asroot2放到SDK的TOOLS目录里&lt;/li&gt;
&lt;li&gt;&amp;nbsp;卸下&lt;span class=&quot;t_tag&quot;&gt;SD卡&lt;/span&gt;，然后手机连接电脑&lt;/li&gt;
&lt;li&gt;打开XP的命令行工具，到SDK的TOOLS目录输入以下指令，&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;cd/
cd AndroidSDK/Tools/ （到这里是进入SDK的TOOLS目录）
adb devices（与手机建立连接）&lt;/pre&gt;
&lt;p&gt;请确认你手机的序列号有列出，并提示成功，否则请确认第一步是否完成（也就是说如果没有出现你HERO的序列，那就是驱动没装成功）&lt;/p&gt;
&lt;p&gt;5. 然后输入
&lt;pre&gt;adb push asroot2 /data/local/ （回车）
adb shell chmod 0755 /data/local/asroot2 （回车）
adb shell （回车，会变成$提示符）
/data/local/asroot2 /system/bin/sh （回车，会变成#提示符）&lt;/pre&gt;
&lt;p&gt;6. 然后输入
&lt;pre&gt;mount -o remount,rw -t yaffs2 /dev/block/mtdblock3 /system（回车）
cd /system/bin（回车）
cat sh &amp;gt; su（回车）
chmod 4775 su（回车）&lt;/pre&gt;
&lt;p&gt;7.退出一直输入exit回车就可以了&lt;/div&gt;
&lt;div class=&quot;comment_count&quot;&gt;&lt;strong&gt;然后就OK了! 重启机子吧!&amp;nbsp;&lt;/strong&gt;&lt;/div&gt;
&lt;div class=&quot;comment_count&quot;&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/div&gt;
&lt;p&gt;以上步骤完成后，安装Root Explorer试验以上操作是否成功，请参考《&lt;span style=&quot;white-space:pre;&quot;&gt;&lt;a href=&quot;http://www.hiapk.com/bbs/thread-7350-1-1.html&quot;&gt;冒死体验～～～Root Explorer文件管理&lt;/a&gt;》&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;white-space:pre;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;comment_count&quot;&gt;============================================================&lt;/div&gt;
&lt;div class=&quot;comment_count&quot;&gt;【英文原文】&lt;/div&gt;
&lt;h2&gt;HOW TO ROOT YOUR CDMA HTC HERO&lt;/h2&gt;
&lt;p&gt;Posted by&amp;nbsp;&lt;a href=&quot;http://www.androidspin.com/2009/11/08/how-to-root-your-cdma-htc-hero/&quot;&gt;&lt;/a&gt;on 8th November 2009&lt;/p&gt;
&lt;div class=&quot;entry&quot;&gt;
&lt;p&gt;This guide will walk you through gaining root access to your CDMA HTC Hero currently on the Sprint and Verizon&amp;nbsp;&lt;a id=&quot;KonaLink0&quot; class=&quot;kLink&quot; href=&quot;http://www.androidspin.com/2009/11/08/how-to-root-your-cdma-htc-hero/&quot; target=&quot;undefined&quot;&gt;&lt;span style=&quot;color:black;&quot;&gt;&lt;span class=&quot;kLink&quot;&gt;Networks&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;. &amp;nbsp;&lt;/p&gt;
&lt;p&gt;I. Before You Begin&lt;/p&gt;
&lt;p&gt;You need to be able to access the phone via ADB.&lt;/p&gt;
&lt;p&gt;Follow this procedure to get ADB setup on your Hero.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://theunlockr.com/2009/10/06/how-to-set-up-adb-usb-drivers-for-android-devices/&quot; target=&quot;_blank&quot;&gt;How To Setup ADB/Install USB Drivers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;II. Root the CDMA Hero&lt;/p&gt;
&lt;p&gt;1. Download the following file and then&amp;nbsp;&lt;a id=&quot;KonaLink1&quot; class=&quot;kLink&quot; href=&quot;http://www.androidspin.com/2009/11/08/how-to-root-your-cdma-htc-hero/&quot; target=&quot;undefined&quot;&gt;&lt;span style=&quot;color:black;&quot;&gt;&lt;span class=&quot;kLink&quot;&gt;unzip&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://forum.xda-developers.com/attachment.php?attachmentid=244212&amp;amp;d=1257621154&quot; target=&quot;_blank&quot;&gt;AsRoot2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2. Take the unzipped file and save it into the Tools folder of your AndroidSDK.&lt;br /&gt;3. Plug your phone in via USB and do NOT mount the SD card.&lt;br /&gt;4. Open the&amp;nbsp;&lt;a id=&quot;KonaLink2&quot; class=&quot;kLink&quot; href=&quot;http://www.androidspin.com/2009/11/08/how-to-root-your-cdma-htc-hero/&quot; target=&quot;undefined&quot;&gt;&lt;span style=&quot;color:black;&quot;&gt;&lt;span class=&quot;kLink&quot;&gt;Command&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;kLink&quot;&gt;Prompt&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&amp;nbsp;and type the following (hitting enter at the end of every line):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cd/&lt;br /&gt;cd AndroidSDK/Tools/&lt;br /&gt;adb devices&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And make sure your phones&amp;rsquo;s serial number&amp;nbsp;&lt;a id=&quot;KonaLink3&quot; class=&quot;kLink&quot; href=&quot;http://www.androidspin.com/2009/11/08/how-to-root-your-cdma-htc-hero/&quot; target=&quot;undefined&quot;&gt;&lt;span style=&quot;color:black;&quot;&gt;&lt;span class=&quot;kLink&quot;&gt;pops&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;kLink&quot;&gt;up&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;(if not redo section I).&lt;/p&gt;
&lt;p&gt;5. Then type:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;adb push asroot2 /data/local/&lt;br /&gt;adb shell chmod 0755 /data/local/asroot2&lt;br /&gt;adb shell&lt;br /&gt;/data/local/asroot2 /&lt;a id=&quot;KonaLink5&quot; class=&quot;kLink&quot; href=&quot;http://www.androidspin.com/2009/11/08/how-to-root-your-cdma-htc-hero/&quot; target=&quot;undefined&quot;&gt;&lt;span style=&quot;color:black;&quot;&gt;&lt;span class=&quot;kLink&quot;&gt;system&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;/bin/sh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;6. Then type:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mount -o remount,rw -t yaffs2 /dev/block/mtdblock3 /system&lt;br /&gt;cd /system/bin&lt;br /&gt;cat sh &amp;gt; su&lt;br /&gt;chmod 4775 su&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;All Done! You now have root access! Try to download a root program from the Market and see if it works&amp;nbsp;&lt;img class=&quot;wp-smiley&quot; src=&quot;http://www.androidspin.com/wp-includes/images/smilies/icon_razz.gif&quot; alt=&quot;:P&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;-------------------------------------------------------------------------------------------------------&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>cpio解压参数</title>
   <link href="http://bo-yang.github.com//2010/03/03/cpio-params"/>
   <updated>2010-03-03T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2010/03/03/cpio-params</id>
   <content type="html">&lt;p&gt;解压cpio文件&amp;nbsp;&lt;br /&gt;cpio -idmv &amp;lt; filename.cpio&amp;nbsp;&lt;/p&gt;
&lt;p&gt;同样可以解压img文件：&lt;br /&gt;cpio -idmv &amp;lt; filename.img&lt;/p&gt;
&lt;p&gt;cpio 备份命令&lt;br /&gt;备份：cpio -covB &amp;gt; [file|device] 将数据备份到文件或设备上&lt;br /&gt;还原：cpio -icduv &amp;lt; [file|device} 将数据还原到系统中&lt;/p&gt;
&lt;p&gt;常用参数：&lt;br /&gt;-o&amp;nbsp;&amp;nbsp; ：将数据copy到文件或设备上&lt;br /&gt;-i&amp;nbsp;&amp;nbsp;&amp;nbsp; ：将数据从文件或设备上还原到系统中&lt;br /&gt;-t&amp;nbsp;&amp;nbsp;&amp;nbsp; ：查看cpio建立的文件或设备内容&lt;br /&gt;-c&amp;nbsp;&amp;nbsp; ：一种比较新的portable format方式存储&lt;br /&gt;-v&amp;nbsp;&amp;nbsp; ：在屏幕上显示备份过程中的文件名&lt;br /&gt;-B&amp;nbsp;&amp;nbsp; ：让预设的blocks可以增加到5120bytes，默认是512bytes，这样可以使备份速度加快&lt;br /&gt;-d&amp;nbsp;&amp;nbsp; ：自动建立目录，这样还原时才不会出现找不到路径的问题&lt;br /&gt;-u&amp;nbsp;&amp;nbsp; ：更新，用较新的文件覆盖旧的文件&lt;/p&gt;
&lt;p&gt;cpio常与find 配合使用&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>删除Linux版Adobe Reader的方法</title>
   <link href="http://bo-yang.github.com//2010/03/02/delete-adobe-from-linux"/>
   <updated>2010-03-02T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2010/03/02/delete-adobe-from-linux</id>
   <content type="html">&lt;p&gt;Linux版的Adobe Reader的启动速度太慢了，每次打开pdf文档的时候都不得不通过右键来选择使用Fedora自带的阅读器，有点麻烦，因此打算把它删除。我的Adobe Reader是通过AdobeReader.bin来安装的，尝试了yum remove acroread和rpm -e acroread都无效，很是郁闷。连Add/Remove Software都找不到该package，因此也不能通过这种方法删除了。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;花了很长时间在这个网页上（&lt;a href=&quot;http://ubuntuforums.org/showthread.php?t=1409179&quot;&gt;http://ubuntuforums.org/showthread.php?t=1409179&lt;/a&gt;）看到的解决方法：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;/opt/Adobe/Reader9/bin下有一个UNINSTALL 脚本，只要使用root帐号执行./UNINSTALL就可以了。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>List of Solaris commands for process management</title>
   <link href="http://bo-yang.github.com//2010/01/12/fedora-commands-for-process-management"/>
   <updated>2010-01-12T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2010/01/12/fedora-commands-for-process-management</id>
   <content type="html">&lt;p&gt;原文地址：&lt;a href=&quot;http://it.toolbox.com/wiki/index.php/List_of_Solaris_commands_for_process_management&quot;&gt;http://it.toolbox.com/wiki/index.php/List_of_Solaris_commands_for_process_management&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div id=&quot;greybox&quot;&gt;
&lt;div class=&quot;top_left&quot;&gt;
&lt;div class=&quot;top_right&quot;&gt;
&lt;div class=&quot;bottom_left&quot;&gt;
&lt;div class=&quot;bottom_right&quot;&gt;
&lt;div class=&quot;content clearfix&quot;&gt;
&lt;h1 class=&quot;h1-title clearfix&quot;&gt;List of Solaris commands for process management&lt;/h1&gt;
&lt;div class=&quot;spacer5&quot;&gt;&lt;img src=&quot;http://images.ittoolbox.com/vt/spacer.gif&quot; alt=&quot;&quot; width=&quot;1&quot; height=&quot;1&quot; /&gt;&lt;/div&gt;
&lt;div class=&quot;dotSep&quot;&gt;&lt;img src=&quot;http://images.ittoolbox.com/vt/spacer.gif&quot; alt=&quot;&quot; width=&quot;1&quot; height=&quot;1&quot; /&gt;&lt;/div&gt;
&lt;div class=&quot;spacer5&quot;&gt;&lt;img src=&quot;http://images.ittoolbox.com/vt/spacer.gif&quot; alt=&quot;&quot; width=&quot;1&quot; height=&quot;1&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;span class=&quot;mw-headline&quot;&gt;Commands&lt;/span&gt;&lt;/h2&gt;&lt;/p&gt;
&lt;p&gt;apptrace &amp;ndash; for tracing library calls&lt;br /&gt;dtrace &amp;ndash; debugger, new in version 10&lt;br /&gt;pargs &amp;ndash; get list of arguments and environment variables with which process was started&lt;br /&gt;pfiles &amp;ndash; list of file descriptors, associated with process&lt;br /&gt;pgrep &amp;ndash; get the PID&#39;s of processes by name i.e. Something like ps -efl|grep -v grep|grep process_name&lt;br /&gt;pkill &amp;ndash; send signal to process. For example pkill -9 init&amp;nbsp;:-P&lt;br /&gt;pldd &amp;ndash; list dynamic libraries, associated with process, similar to ldd for executable&lt;br /&gt;plockstat &amp;ndash; see list of locked by process files. Lock can be mutex i.e. exclusive and reader/writer for shared access&lt;br /&gt;pmap &amp;ndash; get memory map (segments) of process&lt;br /&gt;preap &amp;ndash; try to kick-off zombie process&lt;br /&gt;prstat &amp;ndash; fullscreen view of processes sorted by different criteria, similar to Linux top command&lt;br /&gt;prun &amp;ndash; continue hold with pstop process&lt;br /&gt;ps - print process information and status. In Solaris exist SYSV and BSD variants, respectively /usr/bin/ps and /usr/ucb/ps&lt;br /&gt;psig &amp;ndash; list signals that can be handled by process&lt;br /&gt;pstack &amp;ndash; get backtrace stack of process for debugging purposes&lt;br /&gt;pstop &amp;ndash; temporary hold process&lt;br /&gt;ptree - print the tree of processes&lt;br /&gt;pwait &amp;ndash; wait till process finish&lt;br /&gt;pwdx &amp;ndash; list working directory for process, like pwd command&lt;br /&gt;truss &amp;ndash; for tracing user/library/system calls and signals&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;Examples&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
&lt;div class=&quot;editsection&quot;&gt;[&lt;a title=&quot;Edit section: Examples&quot; href=&quot;http://it.toolbox.com/wiki/index.php?title=List_of_Solaris_commands_for_process_management&amp;amp;action=edit&amp;amp;section=2&quot;&gt;edit&lt;/a&gt;]&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;mw-headline&quot;&gt;Examples&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;apptrace&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# apptrace man
-&amp;gt; man      -&amp;gt; libc.so.1:int atexit(int (*)() = 0xd27d6bfc)
&amp;lt;- man      -&amp;gt; libc.so.1:atexit()
-&amp;gt; man      -&amp;gt; libc.so.1:int atexit(int (*)() = 0x8054e8c)
&amp;lt;- man      -&amp;gt; libc.so.1:atexit()
-&amp;gt; man      -&amp;gt; libc.so.1:void __fpstart(void)
&amp;lt;- man      -&amp;gt; libc.so.1:__fpstart() = 0xd251fc94
-&amp;gt; man      -&amp;gt; libc.so.1:access(0x8055984, 0x1, 0x8047e30) ** NR
-&amp;gt; man      -&amp;gt; libc.so.1:char * setlocale(int = 0x6, const char * = 0x8055980 &quot;&quot;)
&amp;lt;- man      -&amp;gt; libc.so.1:setlocale() = 0xd25002ed
-&amp;gt; man      -&amp;gt; libc.so.1:char * setlocale(int = 0x5, const char * = 0x0 &amp;lt;NULL&amp;gt;)
&amp;lt;- man      -&amp;gt; libc.so.1:setlocale() = 0xd25002ed
-&amp;gt; man      -&amp;gt; libc.so.1:strcpy(0x80669e8, 0xd25002ed, 0x8047e30) ** NR
-&amp;gt; man      -&amp;gt; libc.so.1:int strcmp(const char * = 0x805597c &quot;C&quot;, const char * = 0x80669e8 &quot;C&quot;)
&amp;lt;- man      -&amp;gt; libc.so.1:strcmp()
-&amp;gt; man      -&amp;gt; libc.so.1:char * textdomain(const char * = 0x8055968 &quot;SUNW_OST_OSCMD&quot;)
&amp;lt;- man      -&amp;gt; libc.so.1:textdomain() = 0x80683e0
-&amp;gt; man      -&amp;gt; libc.so.1:strcpy(0x80665e8, 0x8055960, 0x8047e30) ** NR
-&amp;gt; man      -&amp;gt; libc.so.1:char * getenv(const char * = 0x8054fc0 &quot;MANPATH&quot;)
&amp;lt;- man      -&amp;gt; libc.so.1:getenv()
-&amp;gt; man      -&amp;gt; libc.so.1:strrchr(0x8047e98, 0x2f, 0x8047e30) ** NR
-&amp;gt; man      -&amp;gt; libc.so.1:int strcmp(const char * = 0x8047e98 &quot;man&quot;, const char * = 0x8054fb8 &quot;apropos&quot;)
&amp;lt;- man      -&amp;gt; libc.so.1:strcmp() = 0xc
-&amp;gt; man      -&amp;gt; libc.so.1:int strcmp(const char * = 0x8047e98 &quot;man&quot;, const char * = 0x8055958 &quot;whatis&quot;)
&amp;lt;- man      -&amp;gt; libc.so.1:strcmp() = 0xfffffff6
-&amp;gt; man      -&amp;gt; libc.so.1:int strcmp(const char * = 0x8047e98 &quot;man&quot;, const char * = 0x8055944 &quot;catman&quot;)
&amp;lt;- man      -&amp;gt; libc.so.1:strcmp() = 0xa
-&amp;gt; man      -&amp;gt; libc.so.1:int getopt(int = 0x1, char *const * = 0x8047de4, const char * = 0x8066420 &quot;FfkrP:M:T:ts:lad&quot;)
&amp;lt;- man      -&amp;gt; libc.so.1:getopt() = 0xffffffff
-&amp;gt; man      -&amp;gt; libc.so.1:char * gettext(const char * = 0x8055838 &quot;usage:        man [-] [-adFlrt] [-M path] [-T macro-package ] [ -s  section ] name ...
        man [-M path] -k keyword ...
        man [-M path] -f file ...&quot;)
&amp;lt;- man      -&amp;gt; libc.so.1:gettext() = 0x8055838
-&amp;gt; man      -&amp;gt; libc.so.1:int fprintf(FILE * = 0x8067610, const char * = 0x8054f7c &quot;%s
&quot;, void * = 0x8055838, ...)
usage:  man [-] [-adFlrt] [-M path] [-T macro-package ] [ -s section ] name ...
        man [-M path] -k keyword ...
        man [-M path] -f file ...
&amp;lt;- man      -&amp;gt; libc.so.1:fprintf() = 0x88
-&amp;gt; man      -&amp;gt; libc.so.1:exit(0x2, 0x8047e30, 0x8047da0) ** NR
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;in the above example you can clearly see library calls as fprintf(), strcmp(), getenv(), etc.&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;pargs&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# pargs 558
558:    /usr/lib/sendmail -Ac -q15m
argv[0]: sendmail: Queue runner@00:15:00 for /var/spool/clientmqueue

argv[1]: &amp;lt;NULL&amp;gt;
argv[2]: @00:15:00 for /var/spool/clientmqueue
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;in above example you see the arguments for starting sendmail as a daemon&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;pfiles&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# pfiles 558
558:    /usr/lib/sendmail -Ac -q15m
  Current rlimit: 1024 file descriptors
   0: S_IFCHR mode:0666 dev:270,0 ino:6815752 uid:0 gid:3 rdev:13,2
      O_RDONLY
      /devices/pseudo/mm@0:null
   1: S_IFCHR mode:0666 dev:270,0 ino:6815752 uid:0 gid:3 rdev:13,2
      O_WRONLY
      /devices/pseudo/mm@0:null
   2: S_IFCHR mode:0666 dev:270,0 ino:6815752 uid:0 gid:3 rdev:13,2
      O_WRONLY
      /devices/pseudo/mm@0:null
   3: S_IFDOOR mode:0444 dev:279,0 ino:53 uid:0 gid:0 size:0
      O_RDONLY|O_LARGEFILE FD_CLOEXEC  door to nscd[366]
      /var/run/name_service_door
   4: S_IFCHR mode:0666 dev:270,0 ino:11010052 uid:0 gid:3 rdev:21,0
      O_WRONLY FD_CLOEXEC
      /devices/pseudo/log@0:conslog
   5: S_IFREG mode:0600 dev:102,0 ino:189384 uid:25 gid:25 size:32
      O_WRONLY|O_CREAT|O_EXCL
      /var/spool/clientmqueue/sm-client.pid
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Here you see a list of files as NULL, console log, some PID files. On the top you can see the maximum number of file handlers for this process, with info that can be helpful for troubleshooting of applications&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;pgrep&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# pgrep named
586
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Something like ps -efl|grep -v grep|grep process_name|awk &#39;{print $1}&#39;&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;# ps -e|grep -v grep|grep named|awk &#39;{print $1}&#39;
586
&lt;/pre&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;pkill&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# pgrep named
628
# pkill named
# pgrep named
636
#
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;As you see, the named daemon was killed and respawned (with new PID)&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;pldd&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# pldd 636
636:    /usr/sbin/named
/usr/lib/dns/liblwres.so.1.1.2
/usr/lib/dns/libdns.so.16.0.0
/usr/lib/dns/libisccfg.so.0.0.11
/usr/sfw/lib/libcrypto.so.0.9.7
/usr/lib/dns/libisccc.so.0.1.0
/usr/lib/dns/libisc.so.7.1.5
/lib/libnsl.so.1
/lib/libsocket.so.1
/lib/libscf.so.1
/lib/libpthread.so.1
/lib/libthread.so.1
/lib/libc.so.1
/lib/libdoor.so.1
/lib/libuutil.so.1
# ldd /usr/sbin/named
        liblwres.so.1 =&amp;gt;         /usr/lib/dns/liblwres.so.1
        libdns.so.16 =&amp;gt;  /usr/lib/dns/libdns.so.16
        libisccfg.so.0 =&amp;gt;        /usr/lib/dns/libisccfg.so.0
        libcrypto.so.0.9.7 =&amp;gt;    /usr/sfw/lib/libcrypto.so.0.9.7
        libisccc.so.0 =&amp;gt;         /usr/lib/dns/libisccc.so.0
        libisc.so.7 =&amp;gt;   /usr/lib/dns/libisc.so.7
        libnsl.so.1 =&amp;gt;   /lib/libnsl.so.1
        libsocket.so.1 =&amp;gt;        /lib/libsocket.so.1
        libscf.so.1 =&amp;gt;   /lib/libscf.so.1
        libpthread.so.1 =&amp;gt;       /lib/libpthread.so.1
        libthread.so.1 =&amp;gt;        /lib/libthread.so.1
        libc.so.1 =&amp;gt;     /lib/libc.so.1
        libmp.so.2 =&amp;gt;    /lib/libmp.so.2
        libmd5.so.1 =&amp;gt;   /lib/libmd5.so.1
        libdoor.so.1 =&amp;gt;  /lib/libdoor.so.1
        libuutil.so.1 =&amp;gt;         /lib/libuutil.so.1
        libm.so.2 =&amp;gt;     /lib/libm.so.2
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Results from both commands are almost the same&amp;nbsp;:-) Why? Ask SUN&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;pmap&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# pmap 636
636:    /usr/sbin/named
08046000       8K rw----    [ stack ]
08050000     232K r-x--  /usr/sbin/named
08099000      16K rwx--  /usr/sbin/named
0809D000     544K rwx--    [ heap ]
D21ED000       4K rw--R    [ stack tid=4 ]
D21F0000      64K rwx--    [ anon ]
D2218000       4K rw--R    [ stack tid=3 ]
D221B000       4K rwxs-    [ anon ]
D2236000      16K rw--R    [ stack tid=2 ]
D223C000      64K rw----    [ anon ]
D224E000      64K rw----    [ anon ]
D2260000      24K rwx--    [ anon ]
D2270000       4K rwx--    [ anon ]
D2280000      24K r-x--  /lib/libuutil.so.1
D2296000       4K rw----  /lib/libuutil.so.1
D22A0000       4K r-x--  /lib/libdoor.so.1
D22B1000       4K rw----  /lib/libdoor.so.1
D22C0000       4K rwx--    [ anon ]
D22D0000     740K r-x--  /lib/libc.so.1
D2399000      24K rw----  /lib/libc.so.1
D239F000       8K rw----  /lib/libc.so.1
D23B0000      16K r-x--  /lib/libthread.so.1
D23C0000      12K r-x--  /lib/libpthread.so.1
D23D0000      88K r-x--  /lib/libscf.so.1
D23F6000       4K rw----  /lib/libscf.so.1
D2400000       4K rwx--    [ anon ]
D2410000      44K r-x--  /lib/libsocket.so.1
D242B000       4K rw----  /lib/libsocket.so.1
D2430000     512K r-x--  /lib/libnsl.so.1
D24B0000      20K rw----  /lib/libnsl.so.1
D24B5000      32K rw----  /lib/libnsl.so.1
D24C0000     228K r-x--  /usr/lib/dns/libisc.so.7.1.5
D2508000       8K rwx--  /usr/lib/dns/libisc.so.7.1.5
D2510000      24K r-x--  /usr/lib/dns/libisccc.so.0.1.0
D2525000       4K rwx--  /usr/lib/dns/libisccc.so.0.1.0
D2530000       4K rwx--    [ anon ]
D2540000     924K r-x--  /usr/sfw/lib/libcrypto.so.0.9.7
D2637000      84K rw----  /usr/sfw/lib/libcrypto.so.0.9.7
D264C000       8K rw----  /usr/sfw/lib/libcrypto.so.0.9.7
D2650000      48K r-x--  /usr/lib/dns/libisccfg.so.0.0.11
D266B000      12K rwx--  /usr/lib/dns/libisccfg.so.0.0.11
D2670000    1024K r-x--  /usr/lib/dns/libdns.so.16.0.0
D277F000      20K rwx--  /usr/lib/dns/libdns.so.16.0.0
D2790000       4K rwx--    [ anon ]
D27A0000      56K r-x--  /usr/lib/dns/liblwres.so.1.1.2
D27BD000       4K rwx--  /usr/lib/dns/liblwres.so.1.1.2
D27CA000     132K r-x--  /lib/ld.so.1
D27FB000       4K rwx--  /lib/ld.so.1
D27FC000       8K rwx--  /lib/ld.so.1
 total      5192K
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;This command helps in the process of fine-tuning large applications, especially for resolving emory leak issues&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;preap&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# ps -efl|grep 551
 0 Z     root   551   550   0   0  -        -      0        -        -&amp;nbsp;?           0:00 &amp;lt;defunct&amp;gt;
# preap 551
551: exited with status 0
# ps -efl|grep 551
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;In above example, this tool successfully removes zombie process. Otherwise the only way to kill them is to reboot&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;prstat&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# prstat
   PID USERNAME  SIZE   RSS STATE  PRI NICE      TIME  CPU PROCESS/NLWP
   744 root     4376K 4080K cpu0    39    0   0:00:00 0.4% prstat/1
   560 root     6988K 1944K sleep   59    0   0:00:01 0.1% sshd/1
   468 root       31M   13M sleep   59    0   0:00:04 0.1% Xorg/1
   550 root     9576K 6856K sleep   59    0   0:00:01 0.0% dtgreet/1
   577 root     1160K  892K sleep   59    0   0:00:00 0.0% ksh/1
   366 root     3476K 2472K sleep   59    0   0:00:00 0.0% nscd/27
   699 root     6984K 1948K sleep   59    0   0:00:00 0.0% sshd/1
   506 root     6672K 4776K sleep   59    0   0:00:00 0.0% snmpd/1
   476 root     2724K 1552K sleep   59    0   0:00:00 0.0% dmispd/1
   481 root     3268K 1964K sleep   59    0   0:00:00 0.0% snmpXdmid/2
   532 root     2492K 1928K sleep   59    0   0:00:00 0.0% vold/5
   538 root     2352K 1564K sleep   59    0   0:00:00 0.0% devfsadm/6
   457 root     4448K 1668K sleep   59    0   0:00:00 0.0% dtlogin/1
   458 root     2040K 1240K sleep   59    0   0:00:00 0.0% snmpdx/1
   466 root     1468K  724K sleep   59    0   0:00:00 0.0% fbconsole/1
   413 root     1700K  700K sleep   59    0   0:00:00 0.0% smcboot/1
   562 root     1076K  824K sleep   59    0   0:00:00 0.0% sh/1
   412 root     1700K  700K sleep   59    0   0:00:00 0.0% smcboot/1
   356 root     3336K 1176K sleep   59    0   0:00:00 0.0% sshd/1
   533 root     7480K 2860K sleep   59    0   0:00:00 0.0% dtlogin/1
   411 root     1704K 1032K sleep   59    0   0:00:00 0.0% smcboot/1
   263 root     1064K  620K sleep   59    0   0:00:00 0.0% utmpd/1
   359 root     4400K 2212K sleep   59    0   0:00:00 0.0% syslogd/16
   261 root     3936K 3004K sleep   59    0   0:00:02 0.0% inetd/4
   264 root     1888K 1084K sleep   59    0   0:00:00 0.0% ttymon/1
   241 daemon   2340K 1520K sleep   59    0   0:00:00 0.0% statd/1
   122 root     1328K  904K sleep   59    0   0:00:00 0.0% powerd/3
   202 root     2228K  884K sleep   59    0   0:00:00 0.0% cron/1
    96 root     2128K 1288K sleep   59    0   0:00:00 0.0% syseventd/14
   554 root     7200K 3664K sleep   59    0   0:00:00 0.0% sshd/1
   361 root     9272K 5640K sleep   59    0   0:00:00 0.0% fmd/14
   244 daemon   2072K 1312K sleep   60  -20   0:00:00 0.0% lockd/2
    55 root     1952K  924K sleep   59    0   0:00:00 0.0% dhcpagent/1
   253 root     1700K  892K sleep   59    0   0:00:00 0.0% sac/1
   232 daemon   2288K 1012K sleep   59    0   0:00:00 0.0% rpcbind/1
   123 daemon   3908K 2016K sleep   59    0   0:00:00 0.0% kcfd/3
   117 root     2468K 1544K sleep   59    0   0:00:00 0.0% picld/4
   339 root     4252K 1592K sleep   59    0   0:00:00 0.0% automountd/3
   175 root     1852K  952K sleep   59    0   0:00:00 0.0% in.routed/1
     9 root     9000K 8068K sleep   59    0   0:00:11 0.0% svc.configd/18
     7 root     8888K 7940K sleep   59    0   0:00:05 0.0% svc.startd/13
   260 root     1948K 1168K sleep   59    0   0:00:00 0.0% ttymon/1
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;The program in default view is less informative that top, but can give you info for zones, projects and even for processes bind to specific processor. Use the -u option to limit display to specific users. Use the -p option to limit display to specific processes&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;prun&lt;/strong&gt;&amp;nbsp;- see example of pstop&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;ps&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# /usr/bin/ps
   PID TTY         TIME CMD
   562 pts/2       0:00 sh
   577 pts/2       0:00 ksh
   757 pts/2       0:00 ps
# /usr/ucb/ps
   PID TT       S  TIME COMMAND
   260 console  S  0:00 /usr/lib/saf/ttymon -g -d /dev/console -l console -T sun-color -m ldterm,ttcompat -h -p unknown console lo
   562 pts/2    S  0:00 -sh
   577 pts/2    S  0:00 ksh -o ksh
   759 pts/2    O  0:00 /usr/ucb/ps
   701 pts/3    S  0:00 -sh
&lt;/pre&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;psig&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# psig 636
636:    /usr/sbin/named
HUP     default
INT     default
QUIT    default
ILL     default
TRAP    default
ABRT    default
EMT     default
FPE     default
KILL    default
BUS     default
SEGV    default
SYS     default
PIPE    ignored
ALRM    default
TERM    default
USR1    default
USR2    default
CLD     default                 NOCLDSTOP
PWR     default
WINCH   default
URG     default
POLL    default
STOP    default
TSTP    ignored
CONT    default
TTIN    ignored
TTOU    ignored
VTALRM  default
PROF    default
XCPU    default
XFSZ    ignored
WAITING default
LWP     default
FREEZE  default
THAW    default
CANCEL  default
LOST    default
XRES    default
JVM1    default
JVM2    default
RTMIN   default
RTMIN+1 default
RTMIN+2 default
RTMIN+3 default
RTMAX-3 default
RTMAX-2 default
RTMAX-1 default
RTMAX   default
&lt;/pre&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;pstack&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# pstack 636
636:    /usr/sbin/named
----------------------  lwp# 1 / thread# 1  --------------------------
 d23700a5 sigtimedwait (8047ce0, 8047cf0, 0)
 d23655a6 sigwait  (8047dc0) + 1c
 d235e206 __posix_sigwait (8047dc0, 8047e60) + 2e
 d24db3dd isc_app_run (8047ec8, 8047e60, d27fb840, 0, 8047e98, 805c33e) + 158
 08066da7 main     (1, 8047ea4, 8047eac) + fe
 0805c33e&amp;nbsp;???????? (1, 8047f30, 0, 8047f40, 8047f47, 8047f5f)
----------------------  lwp# 2 / thread# 2  --------------------------
 d236fc99 lwp_park (0, 0, 0)
 d236a501 cond_wait_queue (80a2a7c, 80a2a48, 0, 0) + 3b
 d236a9fa _cond_wait (80a2a7c, 80a2a48) + 66
 d236aa3c cond_wait (80a2a7c, 80a2a48) + 21
 d236aa75 pthread_cond_wait (80a2a7c, 80a2a48) + 1b
 d24d871b dispatch (80a2a40, d2239fec, d236f93e, 80a2a40, 0, 0) + a0
 d24d8ba2 run      (80a2a40) + c
 d236f93e _thr_setup (d2262400) + 4e
 d236fc20 _lwp_start (d2262400, 0, 0, d2239ff8, d236fc20, d2262400)
----------------------  lwp# 3 / thread# 3  --------------------------
 d236fc99 lwp_park (0, d2218ec8, 0)
 d236a501 cond_wait_queue (80a2ae8, 80a2ab8, d2218ec8, 0) + 3b
 d236a8a1 cond_wait_common (80a2ae8, 80a2ab8, d2218ec8) + 1df
 d236aad5 _cond_timedwait (80a2ae8, 80a2ab8, d2218f28) + 51
 d236ab40 cond_timedwait (80a2ae8, 80a2ab8, d2218f28) + 24
 d236ab7c pthread_cond_timedwait (80a2ae8, 80a2ab8, d2218f28) + 1e
 d24e7601 isc_condition_waituntil (80a2ae8, 80a2ab8, 80a2ae0) + 81
 d24da800 run      (80a2ab0) + a2
 d236f93e _thr_setup (d21f0000) + 4e
 d236fc20 _lwp_start (d21f0000, 0, 0, d2218ff8, d236fc20, d21f0000)
----------------------  lwp# 4 / thread# 4  --------------------------
 d2370cd5 pollsys  (d21edce0, 6, 0, 0)
 d231ecca pselect  (1c, d21ede40, d21edec0, d239a868, 0, 0) + 18e
 d231efad select   (1c, d21ede40, d21edec0, 0, 0) + 6f
 d24e355c watcher  (80a5bd0) + bd
 d236f93e _thr_setup (d21f0400) + 4e
 d236fc20 _lwp_start (d21f0400, 0, 0, d21edff8, d236fc20, d21f0400)
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;This command can sometimes be very helpful for debugging daemons. You can see the function call stack by thread, in real-time&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;pstop&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# ps -efl|grep ssh
 0 S     root   554   356   0  40 20 d419b870   1800 d4c87e72 21:03:52&amp;nbsp;?           0:00 /usr/lib/ssh/sshd
 0 S     root   356     1   0  40 20 d4195320    834 d49f3432 21:02:46&amp;nbsp;?           0:00 /usr/lib/ssh/sshd
 0 S     root   560   554   0  40 20 d41931a0   1747 d4c87ab2 21:05:03&amp;nbsp;?           0:02 /usr/lib/ssh/sshd
 0 S     root   812   809   0  40 20 d418a270   1746 d50402f2 22:09:00&amp;nbsp;?           0:00 /usr/lib/ssh/sshd
 0 S     root   809   356   0  40 20 d4189a10   1801 d4c874f2 22:08:47&amp;nbsp;?           0:00 /usr/lib/ssh/sshd
# pstop 356
# ssh localhost
&lt;em&gt;(here I stop with ctrl-C ssh client after 5 minutes of waiting)&lt;/em&gt;
# prun 356
# ssh localhost
The authenticity of host &#39;localhost (127.0.0.1)&#39; can&#39;t be established.
RSA key fingerprint is da:14:db:bc:2f:e0:0f:ef:f6:3f:12:0e:f4:77:0c:00.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added &#39;localhost&#39; (RSA) to the list of known hosts.
Password:
Last login: Wed Jun 13 22:09:00 2007 from gateway
Sun Microsystems Inc.   SunOS 5.10      Generic January 2005
#
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Command is interesting, but I don&#39;t see much benefit for daily tasks&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;ptree&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# ptree
7     /lib/svc/bin/svc.startd
  253   /usr/lib/saf/sac -t 300
    264   /usr/lib/saf/ttymon
  260   /usr/lib/saf/ttymon -g -d /dev/console -l console -T sun-color -m ldterm,ttcomp
9     /lib/svc/bin/svc.configd
55    /sbin/dhcpagent
96    /usr/lib/sysevent/syseventd
117   /usr/lib/picl/picld
122   /usr/lib/power/powerd
123   /usr/lib/crypto/kcfd
175   /usr/sbin/in.routed
202   /usr/sbin/cron
232   /usr/sbin/rpcbind
241   /usr/lib/nfs/statd
244   /usr/lib/nfs/lockd
261   /usr/lib/inet/inetd start
263   /usr/lib/utmpd
339   /usr/lib/autofs/automountd
356   /usr/lib/ssh/sshd
  554   /usr/lib/ssh/sshd
    560   /usr/lib/ssh/sshd
      562   -sh
        577   ksh -o vi
          771   ptree
  696   /usr/lib/ssh/sshd
    699   /usr/lib/ssh/sshd
      701   -sh
359   /usr/sbin/syslogd
361   /usr/lib/fm/fmd/fmd
366   /usr/sbin/nscd
411   /usr/sadm/lib/smc/bin/smcboot
  412   /usr/sadm/lib/smc/bin/smcboot
  413   /usr/sadm/lib/smc/bin/smcboot
457   /usr/dt/bin/dtlogin -daemon
  466   /usr/openwin/bin/fbconsole -n -d&amp;nbsp;:0
  468   /usr/X11/bin/Xorg&amp;nbsp;:0 -depth 24 -nobanner -auth /var/dt/A:0-Zgai5a
  533   /usr/dt/bin/dtlogin -daemon
    550   dtgreet -display&amp;nbsp;:0
458   /usr/lib/snmp/snmpdx -y -c /etc/snmp/conf
476   /usr/lib/dmi/dmispd
481   /usr/lib/dmi/snmpXdmid -s unknown
506   /usr/sfw/sbin/snmpd
532   /usr/sbin/vold -f /etc/vold.conf
538   devfsadmd
636   /usr/sbin/named
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;No need for comments&amp;nbsp;:-)&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;pwait&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# ps -efl|grep name
 0 S     root   875     1   0  45 20 d4188950   1298 d553ab16 22:17:58&amp;nbsp;?           0:00 /usr/sbin/named
# pwait 875
(in this moment from another terminal I execute svcadm disable dns/server)
#
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Maybe this command will be great in some specific scripts&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;pwdx&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# pwdx 636
636:    /var/named
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Can be helpful in case of strange errors when unmount some filesystem&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;truss&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;# truss ls
execve(&quot;/usr/bin/ls&quot;, 0x08047E40, 0x08047E48)  argc = 1
resolvepath(&quot;/usr/lib/ld.so.1&quot;, &quot;/lib/ld.so.1&quot;, 1023) = 12
resolvepath(&quot;/usr/bin/ls&quot;, &quot;/usr/bin/ls&quot;, 1023) = 11
sysconfig(_CONFIG_PAGESIZE)                     = 4096
xstat(2, &quot;/usr/bin/ls&quot;, 0x08047C38)             = 0
open(&quot;/var/ld/ld.config&quot;, O_RDONLY)             Err#2 ENOENT
xstat(2, &quot;/lib/libsec.so.1&quot;, 0x080474D0)        = 0
resolvepath(&quot;/lib/libsec.so.1&quot;, &quot;/lib/libsec.so.1&quot;, 1023) = 16
open(&quot;/lib/libsec.so.1&quot;, O_RDONLY)              = 3
mmap(0x00010000, 4096, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_ALIGN, 3, 0) = 0xD27C0000
mmap(0x00010000, 139264, PROT_NONE, MAP_PRIVATE|MAP_NORESERVE|MAP_ANON|MAP_ALIGN, -1, 0) = 0xD2790000
mmap(0xD2790000, 49071, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_TEXT, 3, 0) = 0xD2790000
mmap(0xD27AC000, 12169, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_INITDATA, 3, 49152) = 0xD27AC000
mmap(0xD27AF000, 8536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANON, -1, 0) = 0xD27AF000
munmap(0xD279C000, 65536)                       = 0
memcntl(0xD2790000, 8776, MC_ADVISE, MADV_WILLNEED, 0, 0) = 0
close(3)                                        = 0

mmap(0x00000000, 4096, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANON, -1, 0) = 0xD2780000
xstat(2, &quot;/lib/libc.so.1&quot;, 0x080474D0)          = 0
resolvepath(&quot;/lib/libc.so.1&quot;, &quot;/lib/libc.so.1&quot;, 1023) = 14
open(&quot;/lib/libc.so.1&quot;, O_RDONLY)                = 3
mmap(0xD27C0000, 4096, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED, 3, 0) = 0xD27C0000
mmap(0x00010000, 856064, PROT_NONE, MAP_PRIVATE|MAP_NORESERVE|MAP_ANON|MAP_ALIGN, -1, 0) = 0xD26A0000
mmap(0xD26A0000, 754581, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_TEXT, 3, 0) = 0xD26A0000
mmap(0xD2769000, 24239, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_INITDATA, 3, 757760) = 0xD2769000
mmap(0xD276F000, 5656, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANON, -1, 0) = 0xD276F000
munmap(0xD2759000, 65536)                       = 0
memcntl(0xD26A0000, 120300, MC_ADVISE, MADV_WILLNEED, 0, 0) = 0
close(3)                                        = 0
xstat(2, &quot;/lib/libavl.so.1&quot;, 0x080474D0)        = 0
resolvepath(&quot;/lib/libavl.so.1&quot;, &quot;/lib/libavl.so.1&quot;, 1023) = 16
open(&quot;/lib/libavl.so.1&quot;, O_RDONLY)              = 3
mmap(0xD27C0000, 4096, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED, 3, 0) = 0xD27C0000
mmap(0x00010000, 73728, PROT_NONE, MAP_PRIVATE|MAP_NORESERVE|MAP_ANON|MAP_ALIGN, -1, 0) = 0xD2680000
mmap(0xD2680000, 2788, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_TEXT, 3, 0) = 0xD2680000
mmap(0xD2691000, 204, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_INITDATA, 3, 4096) = 0xD2691000
munmap(0xD2681000, 65536)                       = 0
memcntl(0xD2680000, 1056, MC_ADVISE, MADV_WILLNEED, 0, 0) = 0
close(3)                                        = 0
munmap(0xD27C0000, 4096)                        = 0
mmap(0x00010000, 24576, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANON|MAP_ALIGN, -1, 0) = 0xD27C0000
getcontext(0x080479D0)
getrlimit(RLIMIT_STACK, 0x080479C8)             = 0
getpid()                                        = 786 [785]
lwp_private(0, 1, 0xD27C2000)                   = 0x000001C3
setustack(0xD27C2060)
sysi86(SI86FPSTART, 0xD276FCD8, 0x0000133F, 0x00001F80) = 0x00000001
brk(0x080651E8)                                 = 0
brk(0x080671E8)                                 = 0
time()                                          = 1181761288
ioctl(1, TCGETA, 0x08047B9C)                    = 0
ioctl(1, TIOCGWINSZ, 0x08064460)                = 0
brk(0x080671E8)                                 = 0
brk(0x080711E8)                                 = 0
lstat64(&quot;.&quot;, 0x08046A70)                        = 0
openat(-3041965, &quot;.&quot;, O_RDONLY|O_NDELAY|O_LARGEFILE) = 3
fcntl(3, F_SETFD, 0x00000001)                   = 0
fstat64(3, 0x08047AC0)                          = 0
getdents64(3, 0xD27C4000, 8192)                 = 992
getdents64(3, 0xD27C4000, 8192)                 = 0
close(3)                                        = 0
ioctl(1, TCGETA, 0x08045E44)                    = 0
fstat64(1, 0x08045DB0)                          = 0
TT_DB       cdrom       etc         kernel      mnt         platform    system      var
write(1, &quot; T T _ D B              &quot;.., 88)      = 88
bin         dev         export      lib         net         proc        tmp         vol
write(1, &quot; b i n                  &quot;.., 88)      = 88
boot        devices     home        lost+found  opt         sbin        usr
write(1, &quot; b o o t                &quot;.., 76)      = 76
_exit(0)
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Shows you system calls made by a process along with parameters of the function - very good for program execution traces. Use -u a.out to see user-level function calls. Note &quot;a.out&quot; is typed literally as &quot;a.out&quot; - not replaced with the name of the program&lt;/em&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fedora 12升级Chromium遇到的问题及解决方法</title>
   <link href="http://bo-yang.github.com//2009/12/23/update-chrome-in-fedora12"/>
   <updated>2009-12-23T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2009/12/23/update-chrome-in-fedora12</id>
   <content type="html">&lt;p&gt;自打装好Fedora 12之后就发现chromium不能用rpm安装了，安装时总是缺这少那，很是费劲，于是按照网上的方法，在/etc/yum.repos.d/下创建一个chromium.repo，内容如下：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;[chromium]
name=Chromium Test Packages
baseurl=http://spot.fedorapeople.org/chromium/F$releasever/
enabled=0
gpgcheck=0
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;然后通过yum安装就可以了。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;今天在Fedora People看到有新的chromium安装包出现，于是打算升级chromium。下载了所有的rpm包(忘记了最初是通过yum安装的)。安装时chromium, chromium-libs都能通过rpm -Uvh正常安装，可是升级v8时还是出了问题。想起以前的教训，打算先把v8完全卸载再安装，可是缺无法卸载，无论是通过rpm -e还是yum remove都不行。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;这时想到了用yum upodate v8-*，结果却出现了&amp;ldquo;Package v8-devel-2.0.3-1.20091209svn3443.fc12.i686.rpm is not signed&amp;rdquo;的错误。在网上找到一个办法，就是编辑&amp;nbsp;&lt;strong&gt;/etc/yum.conf&lt;/strong&gt;&lt;br /&gt;
，把gpgcheck=1 改为 gpgcheck=0。不过这样做有潜在的风险，因此在安装完v8之后就立刻把gpgcheck重新设为1.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;另外一个奇怪的问题是，打开Chromium时，浏览器打不开，而且SELinux总是报错：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;Summary:
SELinux is preventing /usr/lib/chromium-browser/chromium-browser from loading
/usr/lib/chromium-browser/libmedia.so which requires text relocation.
Detailed Description:
The chromium-browse application attempted to load
/usr/lib/chromium-browser/libmedia.so which requires text relocation. This is a
potential security problem. Most libraries do not need this permission.
Libraries are sometimes coded incorrectly and request this permission. The
SELinux Memory Protection Tests
(http://people.redhat.com/drepper/selinux-mem.html) web page explains how to
remove this requirement. You can configure SELinux temporarily to allow
/usr/lib/chromium-browser/libmedia.so to use relocation as a workaround, until
the library is fixed. Please file a bug report.
Allowing Access:
If you trust /usr/lib/chromium-browser/libmedia.so to run correctly, you can
change the file context to textrel_shlib_t. &amp;quot;chcon -t textrel_shlib_t
&#39;/usr/lib/chromium-browser/libmedia.so&#39;&amp;quot; You must also change the default file
context files on the system in order to preserve them even on a full relabel.
&amp;quot;semanage fcontext -a -t textrel_shlib_t
&#39;/usr/lib/chromium-browser/libmedia.so&#39;&amp;quot;
Fix Command:
chcon -t textrel_shlib_t &#39;/usr/lib/chromium-browser/libmedia.so&#39;
Additional Information:
Source Context                unconfined_u:unconfined_r:unconfined_execmem_t:s0-
                              s0:c0.c1023
Target Context                system_u:object_r:lib_t:s0
Target Objects                /usr/lib/chromium-browser/libmedia.so [ file ]
Source                        chromium-browse
Source Path                   /usr/lib/chromium-browser/chromium-browser
Port                          &amp;lt;Unknown&amp;gt;
Host                          bonn.yang
Source RPM Packages           chromium-4.0.273.0-0.1.20091216svn34775.fc12
Target RPM Packages           chromium-libs-4.0.273.0-0.1.20091216svn34775.fc12
Policy RPM                    selinux-policy-3.6.32-56.fc12
Selinux Enabled               True
Policy Type                   targeted
Enforcing Mode                Enforcing
Plugin Name                   allow_execmod
Host Name                     bonn.yang
Platform                      Linux bonn.yang 2.6.31.6-166.fc12.i686.PAE #1 SMP
                              Wed Dec 9 11:00:30 EST 2009 i686 i686
Alert Count                   11
First Seen                    Wed 23 Dec 2009 09:38:16 PM CST
Last Seen                     Wed 23 Dec 2009 10:28:36 PM CST
Local ID                      b1f55f28-145d-48dd-9d71-6fb7fe6a57c8
Line Numbers                  
Raw Audit Messages            
node=bonn.yang type=AVC msg=audit(1261578516.240:27332): avc:  denied  { execmod } for  pid=2946 comm=&amp;quot;chromium-browse&amp;quot; path=&amp;quot;/usr/lib/chromium-browser/libmedia.so&amp;quot; dev=sda2 ino=277322 scontext=unconfined_u:unconfined_r:unconfined_execmem_t:s0-s0:c0.c1023 tcontext=system_u:object_r:lib_t:s0 tclass=file
node=bonn.yang type=SYSCALL msg=audit(1261578516.240:27332): arch=40000003 syscall=125 success=no exit=-13 a0=8ff8000 a1=63000 a2=5 a3=bf899bf0 items=0 ppid=1 pid=2946 auid=500 uid=500 gid=500 euid=500 suid=500 fsuid=500 egid=500 sgid=500 fsgid=500 tty=(none) ses=1 comm=&amp;quot;chromium-browse&amp;quot; exe=&amp;quot;/usr/lib/chromium-browser/chromium-browser&amp;quot; subj=unconfined_u:unconfined_r:unconfined_execmem_t:s0-s0:c0.c1023 key=(null)
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;试了半天也没能在SELinux中设好libmedia.so的permission（有人说只要把libmedia.so的permission设为permissive就可以）。后来在一个法语的网页上(&lt;a href=&quot;http://tuxmaya.wordpress.com/2009/12/21/nuevos-paquetes-de-chormium-en-fedora/&quot;&gt;http://tuxmaya.wordpress.com/2009/12/21/nuevos-paquetes-de-chormium-en-fedora/&lt;/a&gt;&lt;br /&gt;
)发现了这样一条命令来取消 SELinux 对 /usr/lib/chromium-browser/下的所有.so文件的permission 的检查。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;chcon -t texrel_shlib_t /usr/lib*/chromium-browser/*.so&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;另外，该网页(&lt;a href=&quot;http://forums.fedoraforum.org/showthread.php?t=237029&quot;&gt;http://forums.fedoraforum.org/showthread.php?t=237029&lt;/a&gt;&lt;br /&gt;
)上也提到了这种方法。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;设置之后，chromium就可以正常工作了。这篇博文就是用chromium来写的。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;PS:&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;写完博文后在SELinux的错误信息中发现了fix的方法：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;hcon -t textrel_shlib_t &#39;/usr/lib/chromium-browser/libmedia.so&#39;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;semanage fcontext -a -t textrel_shlib_t
&#39;/usr/lib/chromium-browser/libmedia.so&#39;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;实在是太粗心了，当时竟然没有仔细看&amp;hellip;&amp;hellip; 谨记这一教训！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fedora 12安装Android SDK</title>
   <link href="http://bo-yang.github.com//2009/11/29/install-android-sdk-in-fedora"/>
   <updated>2009-11-29T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2009/11/29/install-android-sdk-in-fedora</id>
   <content type="html">&lt;p&gt;
    &amp;nbsp;&lt;/p&gt;
&lt;div&gt;
&lt;h1&gt;Fedora 12安装Android SDK&lt;/h1&gt;
&lt;h3&gt;1. 下载Android SDK&lt;/h3&gt;
&lt;h3&gt;&lt;span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;由于android网站国内不能直接访问， 请通过以下网址下载&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;br /&gt;
&lt;/span&gt;
&lt;p&gt;&lt;a id=&quot;bkhs&quot; title=&quot;http://androidappdocs.appspot.com/index.html&quot; href=&quot;http://androidappdocs.appspot.com/index.html&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;http://androidappdocs.appspot.com/index.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a title=&quot;http://dl.google.com/android/android-sdk-windows-1.6_r1.zip&quot; href=&quot;http://dl.google.com/android/android-sdk-windows-1.6_r1.zip&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;http://dl.google.com/android/android-sdk-windows-1.6_r1.zip&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Windows：&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://dl.google.com/android/android-sdk-windows-1.6_r1.zip&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;http://dl.google.com/android/android-sdk-windows-1.6_r1.zip&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Mac OS X (intel)：&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://dl.google.com/android/android-sdk-mac_x86-1.6_r1.zip&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;http://dl.google.com/android/android-sdk-mac_x86-1.6_r1.zip&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Linux (i386)：&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://dl.google.com/android/android-sdk-linux_x86-1.6_r1.tgz&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;http://dl.google.com/android/android-sdk-linux_x86-1.6_r1.tgz&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;ADT Plugin for Eclipse 0.9.3：&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://dl.google.com/android/ADT-0.9.3.zip&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;http://dl.google.com/android/ADT-0.9.3.zip&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;ophone develop ：&lt;/span&gt;&lt;a href=&quot;http://www.ophonesdn.com/&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;http://www.ophonesdn.com/&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://blog.csdn.net/vagrxie/archive/2009/08/04/4409464.aspx&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;http://blog.csdn.net/vagrxie/archive/2009/08/04/4409464.aspx&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;android developer：&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.anddev.org/&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;http://www.anddev.org/&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;2. 添加Android SDK&lt;/h3&gt;
&lt;div&gt;运行android后，在选择Available Packages时遇到错误消息：&lt;/div&gt;
&lt;div&gt;Failed to fetch URL https://dl-ssl.google.com/android/repository/repository.xml, reason: HTTPS SSL error. You might want to force download through HTTP in the settings.&lt;/div&gt;
&lt;div&gt;解决方法是：&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;创建配置文件： ~/.android/androidtool.cfg，在该文件中添加一行&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;sdkman.force.http=true&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&amp;nbsp;&amp;nbsp; （该方法无效）&lt;/span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;打开&quot;Settings&quot; 选项并选中misc section &quot;force https:// ... sources to be fetched using http://...&quot; ，重启android. (点击Save后没有反应，重启后发现该选项并没有选中，无效)&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;strong&gt;&lt;em&gt;export GDK_NATIVE_WINDOWS=true&lt;/em&gt;&lt;/strong&gt;&amp;nbsp;before running android sdk manager.&amp;nbsp;&lt;br /&gt;It fixes both the save button and the install button for me. （该方法可行）&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;a id=&quot;p1rm&quot; title=&quot;http://groups.google.com/group/android-developers/browse_thread/thread/63a44163a8d07cd9&quot; href=&quot;http://groups.google.com/group/android-developers/browse_thread/thread/63a44163a8d07cd9&quot;&gt;http://groups.google.com/group/android-developers/browse_thread/thread/63a44163a8d07cd9&lt;/a&gt;&lt;/div&gt;
&lt;h3&gt;3. 为Eclipse安装ADT插件&lt;/h3&gt;
&lt;div&gt;安装ADT的方法&lt;span style=&quot;font-family:Arial;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;：&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a id=&quot;f9:j&quot; title=&quot;Installing and Updating ADT&quot; href=&quot;http://androidappdocs.appspot.com/sdk/eclipse-adt.html&quot;&gt;&lt;span style=&quot;font-family:Arial;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Installing and Updating ADT&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;遇到的问题：&lt;span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;During installation, there&#39;s an error about requiring org.eclipse.wst.sse.ui.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;完整的解决方法参见&lt;a id=&quot;ccnw&quot; title=&quot;http://code.google.com/eclipse/docs/faq.html#wstinstallerror&quot; href=&quot;http://code.google.com/eclipse/docs/faq.html#wstinstallerror&quot;&gt;http://code.google.com/eclipse/docs/faq.html#wstinstallerror&lt;/a&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:Helvetica, Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;下面是我的经验：&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;The Google Plugin for Eclipse depends on other specific Eclipse components, such as&amp;nbsp;&lt;a href=&quot;http://www.eclipse.org/webtools/wst/main.php&quot;&gt;WST&lt;/a&gt;. Your installation of Eclipse may not yet include all of them, but they can be easily installed by following these instructions.&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span style=&quot;font-size:small;&quot;&gt;Eclipse 3.5 (Galileo)&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Select&amp;nbsp;&lt;strong&gt;Help &amp;gt; Install New Software...&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Click the hyperlink for&amp;nbsp;&lt;strong&gt;Available Software Sites&lt;/strong&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Ensure there is an update site named&amp;nbsp;&lt;strong&gt;Galileo&lt;/strong&gt;. If this is not present, click&amp;nbsp;&lt;strong&gt;Add...&lt;/strong&gt;&amp;nbsp;and enter&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;http://download.eclipse.org/releases/galileo&lt;/span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&amp;nbsp;for the Location.（在这一步，添加完Galileo之后，最好能安装一下这个site的可用的关键更新）&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Now go through the&amp;nbsp;&lt;a href=&quot;http://blog.csdn.net/eclipse/docs/install-eclipse-3.5.html&quot;&gt;installation steps&lt;/a&gt;; Eclipse should download and install the plugin&#39;s dependencies.&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;完成上面的步骤之后，Google App Engine和 Web Toolkit插件就被安装到了Eclipse。此时你仍然需要按照&lt;a id=&quot;gv2d&quot; title=&quot;http://androidappdocs.appspot.com/sdk/eclipse-adt.html&quot; href=&quot;http://androidappdocs.appspot.com/sdk/eclipse-adt.html&quot;&gt;http://androidappdocs.appspot.com/sdk/eclipse-adt.html&lt;/a&gt;所陈述的步骤再安装ADT并配置SDK。&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;如果按照上述方法仍然无法安装ADT，最好通过System-&amp;gt;Administration-&amp;gt;Add/Remove Software彻底删除Eclipse，删除$HOME/.eclipse文件夹，更新操作系统，然后重装Eclipse。如果选择自己下载Eclipse,运行时很可能会遇到&quot;JVM terminated. Exit Code=-1&quot;的问题。因此还是建议通过Add/Remove Software或者yum install eclipse安装。重新安装完eclipse,再按照上述步骤先安装GAE和GWT，然后安装ADT。&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;ADT成功安装后，在Eclipse的Window-&amp;gt;Preferences中，可以找到Android这一项：&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;
&lt;div id=&quot;mqrl&quot;&gt;&lt;img src=&quot;File?id=dd6nw3mt_346fcv5wnfh_b&quot; alt=&quot;&quot; /&gt;&lt;/div&gt;
&lt;div id=&quot;gtqx&quot;&gt;装完ADT之后就可以按照&lt;a id=&quot;u3vv&quot; title=&quot;http://androidappdocs.appspot.com/guide/tutorials/hello-world.html&quot; href=&quot;http://androidappdocs.appspot.com/guide/tutorials/hello-world.html&quot;&gt;http://androidappdocs.appspot.com/guide/tutorials/hello-world.html&lt;/a&gt;的示例开始体验Android程序了！&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Fedora升级/安装Chromium(Chrome)总结</title>
   <link href="http://bo-yang.github.com//2009/10/30/install-chrome-in-fedora"/>
   <updated>2009-10-30T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/10/30/install-chrome-in-fedora</id>
   <content type="html">&lt;p&gt;&amp;nbsp;尽管Linux版Chrome浏览器还没有正式发布，Fedora早已官方支持Google的Chromium了。Fedora社区会定期build最新的稳定版Chromium，可以在&lt;a href=&quot;http://spot.fedorapeople.org/chromium/&quot;&gt;http://spot.fedorapeople.org/chromium/&lt;/a&gt;下载到。当然也可以下载Google 每天build的二进制版Chromium，不过就是这些都不一定稳定：&lt;a href=&quot;http://build.chromium.org/buildbot/snapshots/&quot;&gt;http://build.chromium.org/buildbot/snapshots/&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;如果要安装Fedora社区的Chromium，需要下载v8, v8-devel和chromium，目前最新的版本是&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;pre&gt;&lt;a href=&quot;v8-1.3.16-1.20091027svn3152.fc11.i586.rpm&quot;&gt;v8-1.3.16-1.20091027svn3152.fc11.i586.rpm&lt;/a&gt; &lt;/pre&gt;
&lt;pre&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;a href=&quot;v8-devel-1.3.16-1.20091027svn3152.fc11.i586.rpm&quot;&gt;v8-devel-1.3.16-1.20091027svn3152.fc11.i586.rpm&lt;/a&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;pre&gt;&lt;a href=&quot;chromium-4.0.227.0-0.1.20091027svn30269.fc11.i586.rpm&quot;&gt;chromium-4.0.227.0-0.1.20091027svn30269.fc11.i586.rpm&lt;/a&gt;&lt;/pre&gt;
&lt;pre&gt;安装时需要先安装v8,然后是v8-devel，最后安装chromium。如果要升级的话，最好先把老版本的删除，然后再安装新版本的chromium。&lt;/pre&gt;
&lt;pre&gt;删除的时候按照和安装时相反的顺序，先删除chromium,再删除v8-devel,最后删除v8。&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>【总结】Linux下C开发，怎么做成库文件，又怎么引用这个库文件？</title>
   <link href="http://bo-yang.github.com//2009/10/27/build-c-library-in-linux"/>
   <updated>2009-10-27T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/10/27/build-c-library-in-linux</id>
   <content type="html">&lt;p&gt;本文根据&lt;a href=&quot;http://topic.csdn.net/u/20091026/10/0e913e37-e4a2-4504-bcc7-61af18a22dde.html?6487&quot;&gt;http://topic.csdn.net/u/20091026/10/0e913e37-e4a2-4504-bcc7-61af18a22dde.html?6487&lt;/a&gt;的回复总结而成。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;1. 共享库&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;通常做成共享库的话，在编绎时加上-shared参数，并把链接生成的文件名命名libxxx.so，可以放在/usr/lib下&amp;nbsp;&lt;/p&gt;
&lt;p&gt;其他程序引用这个库时，在链接的时候加上-lxxx就可以了。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;编辑好代码以后,编译时采用类似下面的命令可生成&quot;共享库&quot;(假如源文件是myfun.c):&amp;nbsp;&lt;br /&gt;gcc -shared -fPIC -Wmyfun.c -0 libmy.so&amp;nbsp;&lt;br /&gt;解释: -shared 生成共享库;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; -fIPC 表示&amp;ldquo;位置无关代码&amp;rdquo;（Position Independent Code),可不加;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; -W 表示输出警告信息,可不加;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 库文件的命名要按照libxxxx.so的格式;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;要引用这个库时:&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; gcc xxx.c -0 xxx.out -lmy&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; -l 表示设定要连接的库(libmy.so,输my便可)&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;2.&amp;nbsp;静态库&amp;nbsp;&lt;/p&gt;
&lt;p&gt;文件名：lib.c&amp;nbsp;&lt;br /&gt;先编译成目标文件 gcc -o mylib.o -c lib.c&amp;nbsp;&lt;br /&gt;然后创建静态库,将mylib.o放到libmylib.a中 ar rcs libmylib.a mylib.o&amp;nbsp;&lt;br /&gt;最后copy到库目录下/usr/lib&amp;nbsp; cp libmylib.a /usr/lib/libmylib.a&amp;nbsp;&lt;/p&gt;
&lt;p&gt;在编写的时候直接调用其中的函数就是了，只不过在编译的时候要加入-l选项后面跟上库名&amp;nbsp;&lt;br /&gt;如 gcc -o test test.c -lmylib&amp;nbsp; //mylib是前面创建的库的名称&amp;nbsp;&lt;/p&gt;
&lt;p&gt;3. 动态库 &lt;/p&gt;
&lt;p&gt;创建就是 gcc -fPIC -share -o mylib.so lib.c&amp;nbsp;&lt;br /&gt;调用也分两种方法&amp;nbsp;&lt;br /&gt;一种方法是 gcc -o test test.c ./libmylib.so (注意这里跟的是动态库的路径 )&lt;br /&gt;第二种方法是使用动态库的函数 你man dlopen看下那几个函数看下就知道了就不多说了&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Shell中直接调用perl命令</title>
   <link href="http://bo-yang.github.com//2009/10/22/call-perl-in-shell"/>
   <updated>2009-10-22T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/10/22/call-perl-in-shell</id>
   <content type="html">&lt;p&gt;The &amp;nbsp;&lt;em&gt;-e&lt;/em&gt; option is handy for quick Perl operations&lt;br /&gt;
from the command line. Want to change all instances of &quot;oldstring&quot; in&lt;br /&gt;
Wiffle.bat to &quot;newstrong&quot;? Try&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;perl -i.old -p -e &quot;s/ oldstring/ newstrong/g&quot; wiffle.bat&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;This says: &quot;Take each line of &amp;nbsp;Wiffle.bat (-p); store the original in Wiffle.old (-i); substitute all instances of &amp;nbsp;oldstring with newstrong (-e); write the result (-p) to the&lt;br /&gt;
original file (-i).&quot;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Other PERL command line options are:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;strong&gt;Perl 5 Command-Line Switches&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table style=&quot;width:80%;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;em&gt;Option&lt;/em&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;&lt;em&gt;Arguments&lt;/em&gt; &lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;&lt;em&gt;Purpose&lt;/em&gt;&lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;&lt;em&gt;Notes&lt;/em&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-0&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;octal character code&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Specify record separator &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;Default is newline (&lt;tt&gt;/n&lt;/tt&gt;) &lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-a&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;none&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Automatically spli recordst &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;Used with &lt;tt&gt;-n&lt;/tt&gt; or or &lt;tt&gt;-p&lt;/tt&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-c&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;none&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Check syntax only&lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;Do not execute&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-d&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;none&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Run script using Perl debugger &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;If Perl debugging option was included when Perl was installed
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-D&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;flags&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Specify debugging behavior &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;See table 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-e&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;command&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Pass a command to Perl from the command line &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;Useful for quick operations&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-F&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;regular expression&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;If &lt;tt&gt;-a&lt;/tt&gt; used &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;Expression to split by default is white space &lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-i&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;extension&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Replace original file with results &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;Useful for modifying contents of files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-I&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;directory&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Specify location of &lt;tt&gt;include&lt;/tt&gt; files &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-l&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;octal character code&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Drop newlines when used &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;With &lt;tt&gt;-n&lt;/tt&gt; and &lt;tt&gt;-p&lt;/tt&gt; and use designated character as&lt;br /&gt;
line- termination character &lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-n&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;none&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Process the script using each specified file as an argument &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;Used for performing the same set of actions on a set of files
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-p&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;none&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Same as &lt;tt&gt;-n&lt;/tt&gt; but each line is printed &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-P&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;none&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Run the script through the C preprocessor before Perl compiles it
&lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-s&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;none&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Enable passing of arbitrary switches to Perl &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;Use &lt;tt&gt;-s -what -ever &lt;/tt&gt;to have the Perl variables &lt;tt&gt;$what&lt;br /&gt;
&lt;/tt&gt;and &lt;tt&gt;$ever &lt;/tt&gt;defined within your script &lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-S&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;none&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Tell Perl to look along the path for the script &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-T&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;none&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Use taint checking; don&#39;t evaluate expressions supplied on the&lt;br /&gt;
command line &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-u&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;none&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Make Perl dump core after compiling your script; intended to allow&lt;br /&gt;
for generation of Perl executables &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;Very messy; wait for the Perl compiler&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-U&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;none&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Unsafe mode; overrides Perl&#39;s natural caution &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;Don&#39;t use this!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-v&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;none&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Print Perl version number &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;top&quot;&gt;
&lt;td width=&quot;109&quot;&gt;
&lt;tt&gt;-w&lt;/tt&gt;&lt;/td&gt;
&lt;td width=&quot;150&quot;&gt;none&lt;/td&gt;
&lt;td width=&quot;168&quot;&gt;Print warnings about script syntax &lt;/td&gt;
&lt;td width=&quot;163&quot;&gt;Extremely useful, especially during development &amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tcl中调用Awk命令</title>
   <link href="http://bo-yang.github.com//2009/10/17/tcl-call-awk-command"/>
   <updated>2009-10-17T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/10/17/tcl-call-awk-command</id>
   <content type="html">&lt;p&gt;由于&#39; &#39;不是Tcl所能识别的操作符，因此在Tcl中使用Awk命令时不能用exec awk &#39;/pattern/ {do_something}&#39; file这种命令，即使在&#39;&#39;前面加上/也不行。&#39; &amp;rsquo; 可以被Bource Shell和其它shell识别，但是由于exec awk命令是在Tcl中解释的。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;如果要在Tcl中执行awk命令，方法有两种：一是用&amp;ldquo;&amp;rdquo;代替&#39; &#39;，但是要考虑到需要把某些Tcl的特殊字符用/转义；二是用{}代替&#39; &#39;。比如语句&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;exec awk &#39;/{print /&quot;blah/&quot;/}&#39; temp.fil &lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;应该写为：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;exec awk &quot;/somePattern/ {print /$0}&quot; someFile&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;exec awk {/somePattern/ {print $0}}  someFile &lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>cronjob and crontab</title>
   <link href="http://bo-yang.github.com//2009/09/24/cronjob-crontab"/>
   <updated>2009-09-24T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/09/24/cronjob-crontab</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;&lt;span style=&quot;font-weight:normal;&quot;&gt;今天要设置一个cron job，查了一些资料，发现了很好的一篇文章，见下文，原文参见：&lt;a href=&quot;http://www.aota.net/Script_Installation_Tips/cronhelp.php4&quot;&gt;http://www.aota.net/Script_Installation_Tips/cronhelp.php4&lt;/a&gt;。&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span style=&quot;font-weight:normal;&quot;&gt;但是我按照这篇文章的介绍，在Solaris 9下设置crontab的文件时，老是报错&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;$ crontab chkbjservers.cron
MAILTO=xxx@xxxxx.com
crontab: error on previous line; unexpected character found in line.
crontab: errors detected in input, no crontab file generated.&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;后来查了Solaris的crontab的手册，发现Solaris的crontab不支持MAILTO，必须要用mailx之类的Unix邮件发送命令。另外，整个cron file只要一句话：&lt;strong&gt;minute(s) hour(s) day(s) month(s) weekday(s) command(s). &lt;/strong&gt;&lt;span&gt;比如：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;30 7 * * 1 /bld/xxxx/mytool/chkbjserver.sh|cat chkbjserver.out|mailx -s &quot;Shared memory checked result in BJ COOL&quot; xxxx@xxxxxxx.com&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;=========================================================================&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;What is a&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?cronjob&quot;&gt;cronjob&lt;/a&gt;, and how do I use it?&lt;/h3&gt;
&lt;p&gt;
The&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?cron&quot;&gt;cron&lt;/a&gt;&amp;nbsp;daemon is a long running process that executes commands at specific dates and times. To schedule one-time only tasks with&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?cron&quot;&gt;cron&lt;/a&gt;, use&amp;nbsp;&lt;strong&gt;at&lt;/strong&gt;&amp;nbsp;or&amp;nbsp;&lt;strong&gt;batch&lt;/strong&gt;. For commands that need to be executed repeatedly (e.g. hourly, daily or weekly), use&amp;nbsp;&lt;strong&gt;crontab&lt;/strong&gt;, which has the following options:&lt;/p&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;4&quot;&gt;
&lt;tbody&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td align=&quot;LEFT&quot;&gt;&lt;strong&gt;crontab filename&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;Install filename as your&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?crontab&quot;&gt;crontab&lt;/a&gt;&amp;nbsp;file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td align=&quot;LEFT&quot;&gt;&lt;strong&gt;crontab -e&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;Edit your&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?crontab&quot;&gt;crontab&lt;/a&gt;&amp;nbsp;file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td align=&quot;LEFT&quot;&gt;&lt;strong&gt;crontab -l&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;Show your&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?crontab&quot;&gt;crontab&lt;/a&gt;&amp;nbsp;file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td align=&quot;LEFT&quot;&gt;&lt;strong&gt;crontab -r&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;Remove your&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?crontab&quot;&gt;crontab&lt;/a&gt;&amp;nbsp;file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td align=&quot;LEFT&quot;&gt;&lt;strong&gt;MAILTO=user@domain.com&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;Emails the output to the specified address.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?crontab&quot;&gt;crontab&lt;/a&gt;&amp;nbsp;command creates a&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?crontab&quot;&gt;crontab&lt;/a&gt;&amp;nbsp;file containing commands and how often&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?cron&quot;&gt;cron&lt;/a&gt;&amp;nbsp;should execute them. Each entry in a&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?crontab&quot;&gt;crontab&lt;/a&gt;&amp;nbsp;file consists of six fields, specified in the following order:&lt;/p&gt;
&lt;ul&gt;
&lt;strong&gt;minute(s) hour(s) day(s) month(s) weekday(s) command(s)&lt;/strong&gt;
&lt;/ul&gt;
&lt;p&gt;The fields are separated by spaces or tabs. The first five are integer patterns and the sixth is the command to be executed. The following table briefly describes each of the fields.&lt;/p&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;4&quot;&gt;
&lt;tbody&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;th align=&quot;LEFT&quot;&gt;Field&lt;/th&gt;
&lt;th align=&quot;LEFT&quot;&gt;Value&lt;/th&gt;
&lt;th align=&quot;LEFT&quot;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td align=&quot;LEFT&quot;&gt;minute&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;0-59&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;The exact minute that the command sequence executes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td align=&quot;LEFT&quot;&gt;hour&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;0-23&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;The hour of the day that the command sequence executes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td align=&quot;LEFT&quot;&gt;day&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;1-31&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;The day of the month that the command sequence executes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td align=&quot;LEFT&quot;&gt;month&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;1-12&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;The month of the year that the command sequence executes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td align=&quot;LEFT&quot;&gt;weekday&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;0-6&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;The day of the week that the command sequence executes. Sunday=0, Monday = 1, Tuesday = 2, and so forth.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr valign=&quot;TOP&quot;&gt;
&lt;td align=&quot;LEFT&quot;&gt;command&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;Special&lt;/td&gt;
&lt;td align=&quot;LEFT&quot;&gt;The complete command sequence variable that is to be executed.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Each of the patterns from the first five fields may either be an asterisk (*) (meaning all legal values) or a list of elements separated by commas. An element is either a number or two numbers separated by a minus sign (meaning an inclusive range). Note that the specification of days may be made by two fields (day of the month and day of the week). If both are specified as a list of elements, both are followed. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;strong&gt;MAILTO=user@domain.com&lt;/strong&gt;&amp;nbsp;&lt;br /&gt;&lt;strong&gt;0 0 1,15 * 1 /big/dom/xdomain/cgi-bin/scriptname.cgi&lt;/strong&gt;
&lt;/ul&gt;
&lt;p&gt;The&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?cron&quot;&gt;cron&lt;/a&gt;&amp;nbsp;daemon would run the program&amp;nbsp;&lt;strong&gt;scriptname.cgi&lt;/strong&gt;&amp;nbsp;in the&amp;nbsp;&lt;strong&gt;cgi-bin&lt;/strong&gt;&amp;nbsp;directory on the first and fifteenth of each month, as well as on every Monday. To specify days by only one field, the other field should be set to *. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;strong&gt;MAILTO=user@domain.com&lt;/strong&gt;&amp;nbsp;&lt;br /&gt;&lt;strong&gt;0 0 * * 1 /big/dom/xdomain/cgi-bin/scriptname.cgi&lt;/strong&gt;
&lt;/ul&gt;
&lt;p&gt;The program would then only run on Mondays.&lt;/p&gt;
&lt;p&gt;If a&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?cron&quot;&gt;cron&lt;/a&gt;&amp;nbsp;job specified in your&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?crontab&quot;&gt;crontab&lt;/a&gt;&amp;nbsp;entry produces any error messages when it runs, they will be reported to you via email.&lt;/p&gt;
&lt;p&gt;You may create&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?crontab&quot;&gt;crontab&lt;/a&gt;&amp;nbsp;files in notepad (being sure to upload them in ASCII) or you may create them within&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?telnet&quot;&gt;telnet&lt;/a&gt;&amp;nbsp;by simply typing:&lt;/p&gt;
&lt;ul&gt;
&lt;strong&gt;mcedit cronfile.txt&lt;/strong&gt;
&lt;/ul&gt;
&lt;p&gt;For more information, consult the man pages. man pages are the directions and tutorials available to you right at the command line from within&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?telnet&quot;&gt;telnet&lt;/a&gt;. Type any of the following lines to open the relevant tutorials:&lt;/p&gt;
&lt;ul&gt;
&lt;strong&gt;man 5 crontab&lt;/strong&gt;&amp;nbsp;{enter}&amp;nbsp;&lt;br /&gt;&lt;strong&gt;man 1 crontab&lt;/strong&gt;&amp;nbsp;{enter}&amp;nbsp;&lt;br /&gt;&lt;strong&gt;man cron&lt;/strong&gt;&amp;nbsp;{enter}&amp;nbsp;&lt;br /&gt;&lt;strong&gt;man at&lt;/strong&gt;&amp;nbsp;{enter}&amp;nbsp;&lt;br /&gt;&lt;strong&gt;man batch&lt;/strong&gt;&amp;nbsp;{enter}&amp;nbsp;&lt;br /&gt;&lt;strong&gt;man 1 cron&lt;/strong&gt;&amp;nbsp;{enter}
&lt;/ul&gt;
&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt;&amp;nbsp;&lt;br /&gt;Your&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?crontab&quot;&gt;crontab&lt;/a&gt;&amp;nbsp;file&amp;nbsp;&lt;strong&gt;must&lt;/strong&gt;&amp;nbsp;end with a line feed - in other words, make sure to press [Enter] after the last line in the file.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;Try It!&lt;/h3&gt;
&lt;p&gt;
Now that you have read an overview of&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?Cron&quot;&gt;Cron&lt;/a&gt;, test your skills by following the steps below. Once completed you should have a&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?cron&quot;&gt;cron&lt;/a&gt;&amp;nbsp;file of your own!&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;&amp;nbsp;Create a simple text file using Notepad or any simple text editor that contains the following text:&lt;/p&gt;
&lt;ul&gt;
&lt;strong&gt;MAILTO=yourusername@yourdomain.com {Enter}&lt;br /&gt;58 23 * * * /big/dom/xdomain/cgi-bin/yourscript.pl&lt;br /&gt;{Enter}&lt;/strong&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;strong&gt;Notes for Step 1&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You may create this file using your&amp;nbsp;&lt;a href=&quot;http://www.futurequest.net/Services/CNC/&quot;&gt;CNC&lt;/a&gt;&amp;nbsp;File Manager by navigating to the /big/dom/xdomain/ directory and clicking &#39;Create New File&#39; or any other simple text editor such as Notepad.&lt;/li&gt;
&lt;li&gt;{Enter} should not actually be typed. [Enter] means hit the {Enter} (return) key to begin the next line and to add a blank line feed at the end of the last line of your&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?Cron&quot;&gt;Cron&lt;/a&gt;&amp;nbsp;File. It is important to always remember to do this.&lt;/li&gt;
&lt;li&gt;MAILTO: Replace the email address with a valid email address of your own. This will ensure that when your&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?cron&quot;&gt;cron&lt;/a&gt;runs, that any output from the script, such as error message, will be emailed to you.&lt;/li&gt;
&lt;li&gt;The second line tells your server when to run this script. In this example, the script will be run at 11:58 PM Eastern Time every day of the year.&lt;/li&gt;
&lt;li&gt;It is very important that you double check the script path to ensure it is correct and remember the file names are CaSe SeNsiTive.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt;&amp;nbsp;Name the text file. (Example: cronfile.txt)&lt;br /&gt;The&amp;nbsp;&lt;em&gt;cronfile&lt;/em&gt;&amp;nbsp;name may be replaced with any name you choose. For instance if you are running a&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?Cron&quot;&gt;Cron&lt;/a&gt;&amp;nbsp;to trigger an email reminder script it could be called&amp;nbsp;&lt;em&gt;reminder.txt&lt;/em&gt;. Many choose to simply call it cronfile.txt.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt;&amp;nbsp;Upload the file in&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?ASCII&quot;&gt;ASCII&lt;/a&gt;.&lt;br /&gt;Any standard FTP client or your account&#39;s&amp;nbsp;&lt;a href=&quot;http://www.futurequest.net/Services/CNC/&quot;&gt;CNC&lt;/a&gt;&amp;nbsp;upload feature will work for this. It must be uploaded in&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?ASCII&quot;&gt;ASCII&lt;/a&gt;&amp;nbsp;mode and it is recommended that it be placed in your&amp;nbsp;&lt;strong&gt;/big/dom/xdomain/&lt;/strong&gt;&amp;nbsp;directory. It may be placed anywhere in your account but to prevent browser access (security risks) it is strongly recommended to place it above your /www directory.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt;&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?Telnet&quot;&gt;Telnet&lt;/a&gt;&amp;nbsp;into your account and issue the following command:&lt;/p&gt;
&lt;ul&gt;
&lt;strong&gt;&lt;a href=&quot;http://www.aota.net/keyword.php?crontab&quot;&gt;crontab&lt;/a&gt;&amp;nbsp;/big/dom/xdomain/cronfile.txt&lt;/strong&gt;
&lt;/ul&gt;
&lt;p&gt;
The above tells the server&#39;s&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?crontab&quot;&gt;crontab&lt;/a&gt;&amp;nbsp;where the file is located and that you wish to make it active. Make sure the path to the file is the actual path to where the file was placed. If successful you will be returned to the command bash line, if not an error will be displayed)&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT NOTES&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Removing/Stopping the Cron: Deleting the&amp;nbsp;&lt;em&gt;cronfile.txt&lt;/em&gt;&amp;nbsp;file from your account will&amp;nbsp;&lt;strong&gt;not&lt;/strong&gt;&amp;nbsp;stop the&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?cron&quot;&gt;cron&lt;/a&gt;. You may remove this file at any time, since the server&#39;s&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?crontab&quot;&gt;crontab&lt;/a&gt;&amp;nbsp;already has the contents, and the&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?cron&quot;&gt;cron&lt;/a&gt;&amp;nbsp;will still run after you have made it active.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;To turn the&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?cron&quot;&gt;cron&lt;/a&gt;&amp;nbsp;off you must&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?Telnet&quot;&gt;Telnet&lt;/a&gt;&amp;nbsp;into your account and issue the following command:&lt;/p&gt;
&lt;ul&gt;
&lt;strong&gt;&lt;a href=&quot;http://www.aota.net/keyword.php?crontab&quot;&gt;crontab&lt;/a&gt;&amp;nbsp;-r&lt;/strong&gt;
&lt;/ul&gt;
&lt;p&gt;
The&amp;nbsp;&lt;em&gt;crontab -r&lt;/em&gt;&amp;nbsp;will deactivate the&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?cronjob&quot;&gt;cronjob&lt;/a&gt;&amp;nbsp;and remove the file contents from the server.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Security Note:&lt;/strong&gt;&amp;nbsp;If the script the&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?cron&quot;&gt;cron&lt;/a&gt;&amp;nbsp;is setup to run is in the /cgi-bin/ or /www/ directory it may be run at anytime by anyone with browser access. If the&amp;nbsp;&lt;a href=&quot;http://www.aota.net/keyword.php?crontab&quot;&gt;crontab&lt;/a&gt;&amp;nbsp;is all that should run the script and you do not want the public to be able to run the script, then you will need to place the script in a directory above the /cgi-bin/ and /www/ directories such as:&lt;strong&gt;/big/dom/xdom/user/cronscripts/scriptname&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fedora安装Expect</title>
   <link href="http://bo-yang.github.com//2009/09/19/install-expect-in-fedora"/>
   <updated>2009-09-19T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/09/19/install-expect-in-fedora</id>
   <content type="html">&lt;p&gt;费了很大力气才下到Expect的源代码，然后参考了Expect的INSTALL说明文件，还需要Tcl/Tk的源代码支持，于是又下载了Tcl/Tk的源代码，把它们都给放到/usr/local/src下面。先编译安装tcl和tk，完了之后进入expect的文件夹下面，./configure，结果报错，说找不到tclInt.h。于是在tcl的源文件的文件夹下面搜索tclInt.h，发现该文件确实存在，在generic下面。又参考了一下Expect的INSTALL说明文件，才知道可以加--withtclincluse=选项，于是重新configure：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;./configure --withtclinclude=/usr/local/src/tcl8.6b1/generic&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;configure成功。于是输入make,正式编译，结果又发现了如下错误：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;exp_main_exp.c:32: error: &amp;lsquo;Tcl_Interp&amp;rsquo; has no member named &amp;lsquo;result&amp;rsquo;&lt;br /&gt;
exp_main_exp.c:33: warning: incompatible implicit declaration of built-in function &amp;lsquo;exit&amp;rsquo;&lt;br /&gt;
make: *** [exp_main_exp.o] Error 1&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;网上一搜，在&lt;a href=&quot;http://groups.google.com/group/comp.lang.tcl/browse_thread/thread/e63b1bd2d350d024/8bbd5758f6193120?show_docid=8bbd5758f6193120&amp;amp;pli=1&quot;&gt;http://groups.google.com/group/comp.lang.tcl/browse_thread/thread/e63b1bd2d350d024/8bbd5758f6193120?show_docid=8bbd5758f6193120&amp;amp;pli=1&lt;/a&gt;&lt;br /&gt;
 发现有人遇到过同样的问题。在&lt;a href=&quot;http://www.tcl.tk/cgi-bin/tct/tip/330.html&quot;&gt;http://www.tcl.tk/cgi-bin/tct/tip/330.html&lt;/a&gt;&lt;br /&gt;
给出了原因，说是因为在新版(8.6)的tcl的tcl.h中Tcl_Interp被重命名为unused1了，而expect的源代码并没有做相应修改。并且给出了解决方案，就是添加预定义USE_INTERP_RESULT，或者用8.5以下的tcl源代码。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;我没有再继续尝试编译安装expect。我想起来可以尝试通过yum安装，于是输入yum install expect，竟然成功了！不过在安装expect的同时，还自动安装了tcl8.5.3，估计这是因为安装的expect是基于tcl8.5的源代码变异的。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;看来Expect开发者乏人啊，这么长时间这个bug竟然没有人修复，唉&amp;hellip;&amp;hellip;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>solaris下查看进程的cpu占用率</title>
   <link href="http://bo-yang.github.com//2009/09/15/solaris-cpu-usage"/>
   <updated>2009-09-15T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/09/15/solaris-cpu-usage</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;solaris下查看某进程的资源占用率及其它&lt;/h3&gt;
&lt;p&gt;
&lt;span&gt;&lt;/p&gt;
&lt;div class=&quot;t_msgfontfix&quot;&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;
&lt;p&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1. &amp;nbsp; &amp;nbsp; # ps -eo pid,pcpu,args | sort +1n&amp;nbsp;&lt;/p&gt;
&lt;p&gt;该命令输出当前系统进程的pid, cpu占用率及命令描述，并以pcpu来排序(尝试过，没有成功，据说在RedHat上可行的。)&lt;/p&gt;
&lt;p&gt;2. top -p &amp;lt;pid&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;不同的系统top的设置不尽相同，因此使用时需要注意。&lt;/p&gt;
&lt;p&gt;3. prstat -p &amp;lt;pid&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;prstat 检查系统中进程占用CPU，内存等情况。可以代替top，不过好像solaris5.8之后才有，5.7上就没有。&lt;/p&gt;
&lt;p&gt;4. 查看IO情况 iostat&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;iostat -x -I 1 若系统明显变慢，也可用此命令检查磁盘I/O情况&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;5. 查看CPU 可以用 psrinfo -v&lt;/p&gt;
&lt;p&gt;查看详细信息&lt;/p&gt;
&lt;p&gt;/usr/platform/sun4u/sbin/prtdiag -v&lt;/p&gt;
&lt;p&gt;&amp;nbsp;6. sar&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;sar -u 3 20 若系统明显变慢，用此命令检查cpu占用率&lt;br /&gt;sar &amp;ndash;r 3 20 用此命令检查内存使用情况&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fedora11声卡不能外放</title>
   <link href="http://bo-yang.github.com//2009/09/03/fedora11-sound-card"/>
   <updated>2009-09-03T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/09/03/fedora11-sound-card</id>
   <content type="html">&lt;/p&gt;
&lt;p&gt;这些天一直苦恼于在Thinkpad R61上新装的Fedora声音无法外放，上网搜索了各种各样的方法，结果全都未果。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;昨晚怀疑是Linux Kernel的问题，因为Kernel不是最新的，于是下载了最新的Kernel，编译了一晚上才装上。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;今晚上再次对下载的ALSA源代码编译，由于是最新的Kernel，编译过程中遇到了一些问题，好在或者是缺少一些头文件(version.h,autoconf.h)或者是某个文件不存在。解决方法就是通过locate -e &amp;lt;source_file&amp;gt;找到系统中已经有的源文件，通过which找到可执行文件，然后在目标目录创建符号链接，编译通过。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;装完ALSA重启之后，再次通过alsamixer -c 0对alsa驱动进行设置。结果这时发现一直按向右的方向键会一直有新的item出现，最后一个是speaker，这些是我之前使用alsamixer时所没有发现的，而这个speaker恰恰就是我一直苦恼的！那个speaker项默认是MM，mute也即静音的，必须按M键将其unmute.设好之后，声卡终于可以外放了！&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;尽管在网上找到的很多资料没有真正起作用，但还是将其中一些至今仍然有效的摘抄如下，以飨读者。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;**********************************************************************************&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a href=&quot;http://www.thinkwiki.org/wiki/Installing_Ubuntu_7.04_(Feisty_Fawn)_on_a_ThinkPad_T61#ALSA_driver_update_.28hard_fix.2C_recommended_for_advanced_users.29&quot;&gt;http://www.thinkwiki.org/wiki/Installing_Ubuntu_7.04_(Feisty_Fawn)_on_a_ThinkPad_T61#ALSA_driver_update_.28hard_fix.2C_recommended_for_advanced_users.29&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;ALSA driver update (hard fix, recommended for advanced users)&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Note: This section assumes a high level of technical proficiency. Please fix it.&lt;/p&gt;
&lt;p&gt;At www.asla-project.org, did you download only alsa-driver-1.0.14? That and alsa-lib-1.0.14a?&lt;/p&gt;
&lt;p&gt;Download alsa-driver, alsa-kernel, alsa-lib, and alsa-utils, according to http://alsa.opensrc.org/index.php/AlsaCVS. Other sources, however, say only the driver is necessary. Perhaps alsa-project.org simply recommends the other two?&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;How did you compile it from source? How did you add the patch?&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;In short, please explain how you did these things in addition to just telling us what you did. I&amp;acute;m not trying to be rude but seriously, not all Linux users are programmers ;). Thanks. SteveSims 22:19, 11 August 2007 (UTC)&lt;/p&gt;
&lt;p&gt;After upgrading to 1.0.14 I still had no sound, and this took about a week to solved (though it was so sadly obvious though). Just upgrading to alsa 1.0.14 will not be enough, there were a few patches released right after the release that fix the Thinkpad&#39;s. The reason I missed this was because it was the same day so the release of 1.0.14!&lt;/p&gt;
&lt;p&gt;VERY SIMPLE METHOD OF MAKING SOUND WORK [&lt;a href=&quot;http://forums.fedoraforum.org/showthread.php?t=159516&amp;amp;page=1&amp;amp;pp=15&quot;&gt;http://forums.fedoraforum.org/showthread.php?t=159516&amp;amp;page=1&amp;amp;pp=15&lt;/a&gt;] Just follow the instructions step by step, except for two small things: When doing &quot;cp ../patch_analog.c alsa-driver-1.0.14/alsa-kernel/pci/hda/&quot; use &quot;cp ../patch_analog.c alsa-kernel/pci/hda/&quot; instead. Also, when you get to the part about modifying the /etc/modprobe.conf file, it doesn&#39;t exist in ubuntu. Adding &quot;options snd-hda-intel index=0 model=thinkpad&quot; to any file (even one you make yourself) inside /etc/modprobe.d should work. I personally added it to the options file, and it works fine.(这种情况在Fedora 11中也是如此，解决方法也应是在/etc/modprobe.d/下自己创建一个*.conf文件，或者添加到dist.conf中去。)&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;-credit for the guide goes to ciphermonk, and credit to the small changes needed to make this work on ubuntu go to my friend John.&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;-hotkeys control mic volume, not speaker volume for some reason. I do not know how to fix this -- If you&#39;re using Gnome, from the System menu, click Preferences -&amp;gt; Sound, and in the Default Mixer Tracks field, choose PCM.(在Fedora 11的Sound中没有这个选项。)&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;-this fix should provide sound for both headphones and speakers.&lt;/p&gt;
&lt;p&gt;-this edit by fatalchaos&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;First make sure these packages are installed (System -&amp;gt; Administration -&amp;gt; Synaptic Package Manager) : automake, autoconfig, cvs, libtool, python-dev, build-essential&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Then download the source code to the alsa-driver and apply these patches: (links to the revisions)&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Fix Oops with AD1984 thinkpad model (http://hg.alsa-project.org/alsa-kernel/rev/958b39f3e8dd)&lt;/p&gt;
&lt;p&gt;Fix AD1984 basic model (http://hg.alsa-project.org/alsa-kernel/rev/47ca87407c84)&lt;/p&gt;
&lt;p&gt;Fix Thinkpad X61/T61 outputs (http://hg.alsa-project.org/alsa-kernel/rev/ca37aeeeb0ea)&lt;/p&gt;
&lt;p&gt;**********************************************************************************************&lt;/p&gt;
&lt;p&gt;查看安装了哪些alsa的模块：&lt;span&gt; &lt;/span&gt;&lt;strong&gt;rpm -qa|grep alsa&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;查看声卡信息：&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;lspci|grep Audio&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;另外就是常用的alsamixer和amixer。&lt;/p&gt;
&lt;p&gt;***********************************************************************************************&lt;/p&gt;
&lt;p&gt;还有就是其他的针对Fedora 10之前的版本的资料基本上都已经过时了，大多从fedora中移除了(比如alsaconf就已经不支持了)。貌似Fedora 11中只能用alsamixer来设置声卡，Preferences -&amp;gt; Sound的功能非常弱。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Linux内核编译</title>
   <link href="http://bo-yang.github.com//2009/09/02/build-linux-kernel"/>
   <updated>2009-09-02T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/09/02/build-linux-kernel</id>
   <content type="html">&lt;br /&gt;
&lt;table style=&quot;width:100%;&quot; border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;
&lt;table style=&quot;width:100%;&quot; border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width=&quot;100%&quot;&gt;
&lt;div id=&quot;art&quot;&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;如何编译Linux内核？ 相信你会得到很多种不同的答案，而我在写此文章之前，总是获得一些编译错误的结果。&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;如何你总是遇到编译错误或者失败，其实很多情况下是你下载的内核版本的问题，就是在高版本GCC中编译低版本的内核，造成编译失败。如果你对编译内核一悉莫展，在网上Google到很多种编译方法，但都失败的情话。倒不如看看内核的README文档，或者在内核目录下运行make help。它将会告诉许多你所不知的秘密。&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;1. Linux系统编译内核的通用方法&lt;br /&gt;
内核代码中的README文件对编译过程有非常 详细介绍，下而介绍的方法是Linux内核通用的编译方法，它是Makefile文件已定义好的编译过程。&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; 1） 下载源代码(以2.6.28为例）&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; wget&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;a href=&quot;http://www.kernel.org/pub/linux/kernel/v2.6/linux-2.6.28.1.tar.gz&quot;&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;http://www.kernel.org/pub/linux/kernel/v2.6/linux-2.6.28.1.tar.gz&lt;/span&gt;&lt;br /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; 2) 解压，并把它放到/usr/src/目录下&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp;&amp;nbsp; gzip -d linux-2.6.28.1.tar.gz&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp;&amp;nbsp; tar -xvf linux-2.6.28.1.tar&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; mv -rf linux-2.6.28.1 /usr/src&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; 3) 在/usr/src/建立一个软链接到linux-2.6.28.1目录&amp;nbsp;&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; cd /usr/src&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; ln -s linux-2.6.28.1 linux&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp;4) 清理源代码（如果是之前已生成一些中间文件可运行此命令，否则不必了）&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp;&amp;nbsp; make mrproper&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp;5) 生成config文件&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; cp /boot/config-`uname -r` ./.config&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; make menuconfig&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; 在make menuconfig的配置界面中，先选择Load config file， 把该才拷贝的文件加载进来再进行修改，修改完成后，直接选Exit，然后在提示中选择保当前配置文件。&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp;6） 编译&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp;make&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp;7)&amp;nbsp; 安装模块&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; make modules_install&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp;该命令会把模块及相关文件放到目录/lib/modules/2.6.18.1/下，并不会与当前内核产生冲突，除非内核版本是一样的。&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; 8）安装内核&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; make install&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp;该命令会把内核相关文件(bzImage, initrd.img，System.map .config）放到/boot/目录下，文件名均带有内核版本名，与其它版本相关区别。&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp;如果系统安装了LILO，它会自己把该内核的启动加进来。如果是grub程序，那要看情况而定。我在Fodera系统中，它会自动添加该启动项到/boot/grup/menu.lst文件中，而在Ubuntu中则不会，需要手动添加。添加完也，即可重启进行新内核。&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;2. Ubuntu内核编译方法。&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 上面介如的通常方法适合于所有的Linux系统，Ubuntu也不例外。Ubuntu同样提供了编译内核的方法。而且方法非常简单，把上述第6）和7）步换成下面这一命令即可。&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; make-kpkg --initrd --append-to-version &amp;lt;your_tag&amp;gt; kernel_image kernel_headers&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; 其中&amp;lt;your_tag&amp;gt;是你给内核名字在版本号的基础上加上你指定的字符串，如果你打算直接使用内核版本号作为内核名字，则把--append-to-version和它的参数从命令行中去掉。个人建议你不要使用该选项，因为内核名字就是uname -r的运行结果，使得有时编译新的模块程序时，uname -r 和 make kernelrelease结果不一致。&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;该命运行完毕后，生成两个deb包，其它一个是内核和模块的包；另一个是头文件的deb包。如果不需要，可在命令行上把kernel_header去掉。&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;安装内核变异常简单，只需安装一个生成的内核映象的deb包。使用如下命令：&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;dpkg - i&amp;nbsp; linux-image-2.6.28.1_2.6.28.1-10.00.Custom_i386.deb&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;安装完后，所有的事情也就完成了，连/boot/grub/menu.lst的启动菜单项都修改好了，你所要做的事情就是重启系统而已。&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; 使用这种方法的好处是不言而喻的：你只需要在一台Ubuntu上编译好一个较新的内核，就可以在整个实验室中升级，何乐而不为呢？&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;3. Fodera 内核编译方法&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp;&amp;nbsp; 很抱歉，目前还未有找到很准确的Fodera内核编译方法，后面会补上。但这里介绍的方法仍然适后Fodera系统，那就是象Ubuntu一样，把内核编译成为一个rpm包。而且非常简单，只需把上面的第6)和7)步换成下面的命令：&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp; make rpm-pkg&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp;运行完后，内核rpm包位于目录/usr/src/rpm/RPMS/i386/kernel-2.6.28.1.i386.rpm下，使用rpm -i kernel-2.6.28.1.i386.rpm命令即可安装。&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;&amp;nbsp;安装rpm完成后，请检查/boot/grup/menu.lst文件是否有新内核的启动，若否请手工添加。&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;div&gt;内核删除：&lt;br /&gt;
有时我们基于各种原因可能删除一些老的内核，基本步骤如下：&lt;br /&gt;
1. 查看当前系统的内核版本，千万不要删除错了&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #uname -r&amp;nbsp; 或者&amp;nbsp; uname -a&lt;br /&gt;
2. 对于通过rpm方式安装的内核，删除就很简单了。直接用rpm -e 相应的内核版本就能删除掉了。&lt;br /&gt;
&amp;nbsp;&amp;nbsp; 对于手工编译安装的内核，删除起来稍微就要麻烦些了。&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; （1）、修改 /etc/grub/grub.conf 或 /etc/grub/menu.lst ，删除那些不想要的内核选项。&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; （2）、删除 /lib/modules/相对应的内核版本的目录&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; （3）、删除 /boot/相对应的内核版本的文件&lt;br /&gt;
对于Ubuntu系统：&lt;br /&gt;
$dpkg &amp;ndash;get-selections|grep linux-image&amp;nbsp; //查看内核版本名称&lt;br /&gt;
$sudo apt-get remove 内核版本（如：linux-image-2.6.15-23-386）&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td height=&quot;25&quot;&gt;
&lt;p&gt;&amp;nbsp;&lt;span style=&quot;color:#000099;&quot;&gt;&lt;strong&gt;原文地址&lt;/strong&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&amp;nbsp;&lt;a href=&quot;http://blog.csdn.net/linyt/archive/2009/03/16/3995435.aspx&quot; target=&quot;_blank&quot;&gt;http://blog.csdn.net/linyt/archive/2009/03/16/3995435.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.loosky.net/?p=309&quot;&gt;http://www.loosky.net/?p=309&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
 </entry>
 
 <entry>
   <title>TCL判断条件</title>
   <link href="http://bo-yang.github.com//2009/08/28/tcl-condition"/>
   <updated>2009-08-28T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/08/28/tcl-condition</id>
   <content type="html">&lt;p&gt;编写TCL代码时遇要写一个if判断条件，很简单的一个语句，结果却费了很大力气才搞定。要判断的是，如果执行info exists成功而且某全局数组C的某个成员大于0，正确的语句为：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;if { [info exists C(AP${AP}cdnnoperap)] &amp;amp;&amp;amp; $C(AP${AP}cdnnoperap &amp;gt; 0 } { }&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;我为了逻辑上的清晰，特地将语句写为：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;if { [info exists C(AP${AP}cdnnoperap)] &amp;amp;&amp;amp; ｛$C(AP${AP}cdnnoperap｝ &amp;gt; 0 } { }&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;结果报错。又改成&lt;/p&gt;
&lt;p&gt;if { [info exists C(AP${AP}cdnnoperap)] &amp;amp;&amp;amp; ［$C(AP${AP}cdnnoperap］ &amp;gt; 0 } { }&lt;/p&gt;
&lt;p&gt;还是报错。又改为&lt;/p&gt;
&lt;p&gt;if { [info exists C(AP${AP}cdnnoperap)] &amp;amp;&amp;amp; {&amp;quot;$C(AP${AP}cdnnoperap&amp;quot; != &amp;quot;0&amp;quot;} } { }&lt;/p&gt;
&lt;p&gt;仍然报错。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;看来TCL的语法确实还是很有自己的特点的。往后要多加注意。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>UNIX下大小为1byte的文件——都是换行符(EOL)惹得祸</title>
   <link href="http://bo-yang.github.com//2009/08/26/1byte-file-in-unix"/>
   <updated>2009-08-26T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/08/26/1byte-file-in-unix</id>
   <content type="html">&lt;p&gt;某同事用tcl和ksh写了一个程序，利用进行某项操作，如有错误就将错误信息写入某个文件中，写入方法是 2&amp;gt;$stderr，然后判断该文件的大小，如果大于0，则认为有错误发生，报错。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;奇怪的是该程序一直不能成功执行，一直报错。同事逐行追踪他的代码，结果发现文件$stderr刚创建时大小为0，可过一会之后自己就会变成1byte. 然而打开查看时，该文件内容却是空的。后来用vi按照16进制打开(:%!xxd)，发现了0a。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;0x0a是UNIX下默认的行结束符(EOL)，每行都会有的。我们试验了一下，凡是用print在UNIX下创建一个文件：&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;print $test &amp;gt; test&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;其中$test为未定义的变量，则会生成一个大小为1byte的文件。打开文件，也能发现0a的存在。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;可是如果是用C语言编写一个文件操作的函数，却能得到一个大小为0而打开后也有0a的文件。很是奇怪&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>大数运算</title>
   <link href="http://bo-yang.github.com//2009/08/24/big-num-operations"/>
   <updated>2009-08-24T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/08/24/big-num-operations</id>
   <content type="html">&lt;p&gt;下面这段程序包含了大数的加、减、乘运算的代码，除法运算尚在研究中。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;/*
 * =====================================================================================
 *
 *       Filename:  LargeNumOp.c
 *
 *    Description:  The regular version of Large Number Multiplication.
 *
 *        Version:  1.0
 *        Created:  08/23/2009 07:02:48 PM
 *       Revision:  none
 *       Compiler:  gcc
 *
 *         Author:  Bonn Yang 
 *        Company:  
 *
 * =====================================================================================
 */
#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
/* 
 * Large number multiplication. 
 *	a*b=c
 * The product stores in c.
 */ 
void multiply(char* a,char* b,char* c)
{
    int i,j,ca,cb,* s;
    ca=strlen(a);
    cb=strlen(b);
    s=(int*)malloc(sizeof(int)*(ca+cb));
    for (i=0;i&amp;lt;ca+cb;i++)
        s[i]=0;
    for (i=0;i&amp;lt;ca;i++)
        for (j=0;j&amp;lt;cb;j++)
            s[i+j+1]+=(a[i]-&#39;0&#39;)*(b[j]-&#39;0&#39;);
    for (i=ca+cb-1;i&amp;gt;=0;i--)
        if (s[i]&amp;gt;=10)
        {
            s[i-1]+=s[i]/10;
            s[i]%=10;
        }
    i=0;
    while (s[i]==0)
        i++;
    for (j=0;i&amp;lt;ca+cb;i++,j++)
        c[j]=s[i]+&#39;0&#39;;
    c[j]=&#39;/0&#39;;
    free(s);
}
/* Large number addition 
 * 		a+b=c
 */
void add(char* a, char* b, char* c)
{
	int i,j,ca,cb,rlen,* s;
    ca=strlen(a);
    cb=strlen(b);
	rlen=((ca&amp;gt;cb)?ca:cb)+1;		/* len of result */
    s=(int*)malloc(sizeof(int)*rlen);
    for (i=0;i&amp;lt;rlen;i++)
        s[i]=0;
	if(ca&amp;gt;cb)
	{
    	for(i=0;i&amp;lt;ca-cb;i++)
			s[i+1]=a[i]-&#39;0&#39;;
		for(i=ca-cb;i&amp;lt;ca;i++)
			s[i+1]=(a[i]-&#39;0&#39;)+(b[i-ca+cb]-&#39;0&#39;);
	} 
	else 
	{
		for(i=0;i&amp;lt;cb-ca;i++)
			s[i+1]=b[i]-&#39;0&#39;;
		for(i=cb-ca;i&amp;lt;cb;i++)
			s[i+1]=(a[i-cb+ca]-&#39;0&#39;)+(b[i]-&#39;0&#39;);
	} 
	
    for (i=rlen-1;i&amp;gt;=0;i--)
        if (s[i]&amp;gt;=10)
        {
            s[i-1]+=s[i]/10;
            s[i]%=10;
        }
    i=0;
    while (s[i]==0)
        i++;
	for (j=0;i&amp;lt;rlen;i++,j++)
        c[j]=s[i]+&#39;0&#39;;
    c[j]=&#39;/0&#39;;
    free(s);
}
/* Large number substraction 
 * 		a-b=c
 */
void sub(char* a,char* b,char* c)
{
	int i,j,ca,cb,rlen,* s;
    ca=strlen(a);
    cb=strlen(b);
	rlen=((ca&amp;gt;cb)?ca:cb)+1;		/* len of result, the first byte is negative or positive sign */
    s=(int*)malloc(sizeof(int)*rlen);
    for (i=0;i&amp;lt;rlen;i++)
        s[i]=0;
	if(ca&amp;gt;cb)
	{
		s[0]=&#39;+&#39;;
    	for(i=ca-1;i&amp;gt;=ca-cb;i--)
		{
			if(a[i]&amp;gt;b[i-ca+cb])
			{
				s[i+1]=(a[i]-&#39;0&#39;)-(b[i-ca+cb]-&#39;0&#39;);
			}
			else if(a[i]&amp;lt;b[i-ca+cb])
			{
				s[i+1]=(a[i]-&#39;0&#39;+10)-(b[i-ca+cb]-&#39;0&#39;);
				a[i-1]-=1;
			}
			else
				s[i+1]=0;
		}
		for(i=ca-cb-1;i&amp;gt;=1;i--)
		{
			if(a[i]&amp;gt;0)
			{
				s[i+1]=(a[i]-&#39;0&#39;);
			}
			else if(a[i]&amp;lt;0)
			{
				s[i+1]=a[i]-&#39;0&#39;+10;
				a[i-1]-=1;
			}
			else
				s[i+1]=0;
		}
		s[1]=a[i]-&#39;0&#39;;
	} 
	else if(ca&amp;lt;cb)
	{
		s[0]=&#39;-&#39;;
		for(i=cb-1;i&amp;gt;cb-ca-1;i--)
		{
			if(b[i]&amp;gt;a[i-cb+ca])
			{
				s[i+1]=(b[i]-&#39;0&#39;)-(a[i-cb+ca]-&#39;0&#39;);
			}
			else if(b[i]&amp;lt;a[i-ca+cb])
			{
				s[i+1]=(b[i]-&#39;0&#39;+10)-(a[i-cb+ca]-&#39;0&#39;);
				b[i-1]-=1;
			}
			else
				s[i+1]=0;
		}
		for(i=cb-ca-1;i&amp;gt;=1;i--)
		{
			if(b[i]&amp;gt;0)
			{
				s[i+1]=(b[i]-&#39;0&#39;);
			}
			else if(b[i]&amp;lt;0)
			{
				s[i+1]=b[i]-&#39;0&#39;+10;
				b[i-1]-=1;
			}
			else
				s[i+1]=0;
		}
		s[1]=b[i]-&#39;0&#39;;
	} 
	else	/* ca==cb */
	{
		if(strcmp(a,b)&amp;gt;0)		/* a&amp;gt;b */
		{
			s[0]=&#39;+&#39;;
			for(i=ca-1;i&amp;gt;=1;i--)
			{
				if(a[i]&amp;gt;b[i])
				{
					s[i+1]=(a[i]-&#39;0&#39;)-(b[i]-&#39;0&#39;);
				}
				else if(a[i]&amp;lt;b[i])
				{
					s[i+1]=(a[i]-&#39;0&#39;+10)-(b[i]-&#39;0&#39;);
					a[i-1]-=1;
				}
				else
					s[i+1]=0;
			}
			s[1]=(a[i]-&#39;0&#39;)-(b[i]-&#39;0&#39;);
		}
		else if(strcmp(a,b)&amp;lt;0)	/* a&amp;lt;b */
		{
			s[0]=&#39;-&#39;;
			for(i=ca-1;i&amp;gt;=1;--i)
			{
				if(b[i]&amp;gt;a[i])
				{
					s[i+1]=(b[i]-&#39;0&#39;)-(a[i]-&#39;0&#39;);
				}
				else if(b[i]&amp;lt;a[i])
				{
					s[i+1]=(b[i]-&#39;0&#39;+10)-(a[i]-&#39;0&#39;);
					b[i-1]-=1;
				}
				else
					s[i+1]=0;
			}
			s[1]=(b[i]-&#39;0&#39;)-(a[i]-&#39;0&#39;);
		}
		else					/* a==b */
		{
			c[0]=&#39;+&#39;;
			c[1]=&#39;0&#39;;
			c[2]=&#39;/0&#39;;
			free(s);
		}
	}
	c[0]=s[0];
    i=1;j=1;
    while ((s[i]==0) &amp;amp;&amp;amp; (i&amp;lt;rlen))
        i++;
	if(i!=rlen)	/* result is not zero */
	{
		for (j=1;i&amp;lt;rlen;i++,j++)
		{
			if(s[i]&amp;lt;0)
				c[j]=&#39;0&#39;-s[i];
			else
        		c[j]=s[i]+&#39;0&#39;;
		}
	} else {	/* result is zero */
		c[j++]=&#39;0&#39;;
	}
    c[j]=&#39;/0&#39;;
    free(s);
}
int main()
{
	char a[1024]={&#39;/0&#39;};
	char b[1024]={&#39;/0&#39;};
	char c[1024]={&#39;/0&#39;};
	printf(&amp;quot;Enter two numbers:/n&amp;quot;);
	gets(a);
	gets(b);
	multiply(a,b,c);
	printf(&amp;quot;%s * %s = %s/n&amp;quot;,a,b,c);
	add(a,b,c);
	printf(&amp;quot;%s + %s = %s/n&amp;quot;,a,b,c);
	sub(a,b,c);
	printf(&amp;quot;%s - %s = %s/n&amp;quot;,a,b,c);
	
	return 0;
}
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Linux下安装aMule</title>
   <link href="http://bo-yang.github.com//2009/08/19/install-amule-in-linux"/>
   <updated>2009-08-19T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/08/19/install-amule-in-linux</id>
   <content type="html">&lt;p&gt;今晚打算在Fedora 10下安装aMule，以便电驴下载。本打算yum安装，结果发现无法yum安装，于是只好下载了aMule的源代码（无Linux下的二进制安装文件）。解压之后，./configure，却出现了&amp;quot;wxWindows&amp;quot;的错误。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;在网上搜了半天之后，发现除了系统已经装好的wxGTK之外，还要安装wxGTK-devel，于是我便yum install wxGTK-devel,成功。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;重新在aMule的目录下./configure，这次却又报了更奇怪的错误：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;pre style=&quot;margin-top:0;display:inline;&quot;&gt;&amp;quot;checking for crypto++ version &amp;gt;= 5.1... configure: error:&lt;br /&gt;
Could not find cryptopp header file &amp;quot;cryptlib.h&amp;quot;.&lt;br /&gt;
Please check if the path &amp;quot;/usr&amp;quot; is valid.&amp;quot;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;在网上找到一个解决办法：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Download the latest crypto package from &amp;quot;&lt;a href=&quot;http://www.cryptopp.com/#download&quot; target=&quot;_blank&quot;&gt;http://www.cryptopp.com/#download&lt;/a&gt;&lt;br /&gt;
&amp;quot;&lt;br /&gt;
in this case package &amp;quot;Crypto++ 5.5.2&amp;quot;. Now open your console terminal&lt;br /&gt;
and do the following commands to install the crypto package.&lt;/p&gt;
&lt;p&gt;A) mkdir crypto&lt;br /&gt;
B) mv cryptopp552.zip ./crypto&lt;br /&gt;
C) cd crypto&lt;br /&gt;
D) unzip cryptopp552.zip&lt;br /&gt;
E) make&lt;br /&gt;
F) cp libcryptopp.a /usr/lib/&lt;br /&gt;
G) mkdir /usr/include/cryptopp&lt;br /&gt;
H) cp *.h /usr/include/cryptopp/&lt;br /&gt;
I) ldconfig&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;完成之后继续./configure，成功。（有一个关于uPnP的warning可以忽略。）然后make,成功，只是时间比较长。然后make install，成功！&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;aMule终于可以用了！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fedora 10 MP3 Support</title>
   <link href="http://bo-yang.github.com//2009/08/09/fedora-10-mp3-support"/>
   <updated>2009-08-09T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/08/09/fedora-10-mp3-support</id>
   <content type="html">&lt;p&gt;&lt;a title=&quot;Fedora 10 MP3 Support&quot;&gt;&lt;br /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a title=&quot;Fedora 10 MP3 Support&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Fedora 10 MP3 Support&lt;/h2&gt;
&lt;p&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div id=&quot;node-92&quot; class=&quot;node&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;p&gt;Fedora 10 does not come with built-in MP3 support. To get MP3 support with Fedora, you can use RPM Fusion&#39;s YUM repositories to download MP3 enabled RPMs.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Enable RPM Fusion&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First, install RPM Fusion&#39;s free and nonfree YUM repositories. For detailed information about installing RPM Fusion, see:&amp;nbsp;&lt;a title=&quot;http://rpmfusion.org/Configuration&quot; href=&quot;http://rpmfusion.org/Configuration&quot;&gt;http://rpmfusion.org/Configuration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;su -c &quot;rpm -Uvh http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;su -c &quot;rpm -Uvh http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-stable.noarch.rpm&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Install GStreamer&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Next, run this command to get the&amp;nbsp;&lt;a title=&quot;GStreamer&quot; href=&quot;http://www.gstreamer.net/&quot;&gt;gstreamer&lt;/a&gt;&amp;nbsp;plugins.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;su -c &quot;yum install gstreamer gstreamer-plugins-bad gstreamer-plugins-ugly&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Install Applications and Libraries&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For&amp;nbsp;&lt;a title=&quot;Amarok&quot; href=&quot;http://amarok.kde.org/&quot;&gt;Amarok&lt;/a&gt;&amp;nbsp;with MP3 support, install these packages:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;su -c &quot;yum install amarok phonon-backend-gstreamer&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For&amp;nbsp;&lt;a title=&quot;MPlayer&quot; href=&quot;http://www.mplayerhq.hu&quot;&gt;MPlayer&lt;/a&gt;&amp;nbsp;with MP3 support, install these RPMs:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;su -c &quot;yum install mplayer gnome-mplayer gnome-mplayer-common mencoder&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For&amp;nbsp;&lt;a title=&quot;XMMS&quot; href=&quot;http://sourceforge.net/projects/xmms/&quot;&gt;XMMS&lt;/a&gt;&amp;nbsp;with MP3 support, install the following:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;su -c &quot;yum install xmms xmms-mp3&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For&amp;nbsp;&lt;a title=&quot;Xine&quot; href=&quot;http://xinehq.de/&quot;&gt;xine&lt;/a&gt;&amp;nbsp;with MP3 support, install these RPMs:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;su -c &quot;yum install xine xine-lib-extras-nonfree&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To create MP3s with&amp;nbsp;&lt;a href=&quot;http://lame.sourceforge.net&quot;&gt;LAME&lt;/a&gt;, install lame and lame-mp3x.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;su -c &quot;yum install lame lame-mp3x&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Alternatively, run this command to install everything:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;su -c &quot;yum install xmms xine mplayer amarok xmms-mp3 gstreamer phonon-backend-gstreamer gstreamer-plugins-bad gstreamer-plugins-ugly xine-lib-extras-nonfree mplayer gnome-mplayer-common mencoder gnome-mplayer lame lame-mp3x&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;[http://hacktux.com/fedora/mp3]&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;PS: To install VLC media player:&lt;/p&gt;
&lt;p&gt;su -c &quot;yum install vlc&quot;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>车·行·记</title>
   <link href="http://bo-yang.github.com//2009/07/27/trip-in-us"/>
   <updated>2009-07-27T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/07/27/trip-in-us</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;
&lt;h1&gt;车&amp;middot;行&amp;middot;记&lt;/h1&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;傍晚时分，深感闷在酒店一个白天实在没有前途，终于无法按奈心中那股出去兜风的冲动。打电话叫同事，他说他在洗澡，我说我可以等你洗完澡，他说你不用等我洗完澡，因为我没兴趣出去。崇拜，五体投地的崇拜那哥们，多少次我们拉他出去逛一圈，人家都是拒绝，人家宁愿选择天天蜗居在20平米的酒店一隅，也不愿出门半步，而且还是坐车出行&amp;hellip;&amp;hellip;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;想起最近网上流行的那句&amp;ldquo;执子之手&amp;hellip;&amp;hellip;&amp;rdquo;，此时此刻我义无反顾的选择了&amp;ldquo;子不走我走&amp;rdquo;。&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;太阳已经落下，但天光还算明亮。沿着前往Chicago Premium Outlets的路信马由缰&amp;mdash;&amp;mdash;这条路非常顺，一路不用拐弯，直着开30分钟左右就到了。&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;道路两旁要么是荒郊野地，要么是灌木丛林，相当的原生态。路很宽，而且没车，我一个多月前此一次上路就是跑的这条路。从那以后到现在已经来来回回跑了不下10趟。盛夏时节的Naperville每天云卷云舒，傍晚时分更是争奇斗艳之时。车行至半路，天已经慢慢黑下来了。前方是一个高坡，由于光线黯淡，远远望去，此路直达云天。&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;日落后的云，峥嵘如巨石，嶙峋如山峦，狰狞如怪兽，凶险如深渊。黑夜正在向大地无情的压过来。现在的我竟然还和小时候一样，身临此境时，心底里总会有些恐惧。&amp;mdash;&amp;mdash;人是群体动物，人多时觉得咱们工人有力量，当然天不怕地不怕，所以在北京不会有这种感觉；但是在人烟稀少的美国，孤身一人置身荒野，对于自然，不得不心生敬畏之情。人其实是很渺小的。渺沧海之一粟，羡长江之无穷啊。&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;平日里走这条路都是白天，阳光灿烂；现在是晚上，别有一番滋味。一时想到也许这是我最后一次在这条路开车，经由一些伤感。于是打定主意，要好好的总结一下在美国开车出行的经历。&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;
刚到美国的第一个周末就和两个同事去了UIUC(University of Illinois @ Urbana&lt;span&gt;-Champaign&lt;/span&gt;)。从Naperville到Champaign只有100多个mile，而且那次出行的主要目的是练车，熟悉美国高速路况，为下个周末的纽约之行做准备。当时我还不会开车，也不能开车，自己坐在后排可以尽情的拍一些照片（也是因为当时新鲜劲还没过）。那次对于美国高速最大的感觉就是&amp;ldquo;热闹&amp;rdquo;&amp;mdash;&amp;mdash;车多、人多。各种各样叫出名字叫不出名字的车，拖着各种各样的装备，包括房车、游艇、自行车等等。我们都在感叹，美国人太会享受生活了。&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;第二个周末是美国的memorial day，放一天假，加上周末总共3天。还是和那两个同事，他（她）们开车，我副驾，去了纽约。尽管路程长达850多mile，再加上中途吃饭、加油的距离得近900个mile，但是路其实很顺，大多路段很好走。就是同一条高速路，一直开到纽约，只是在不同的州叫不同的名字而已。沿途经过了好几个州，从Illinois出发，首先进入Indiana,然后横穿Ohio，然后进入Pennsylvania， 最后穿越一小段New Jersey之后就到了纽约。我们总结了一些有意思的发现：(1) Pennsylvania的环境最好（高速路两边全是国家森林公园），而且高速基本不收费；Indiana的路况最好，车速最高，收费也比较高；Ohio路况最不好，收费也不便宜。(2) 在Illinois，高速两边的休息区域叫Oasis，其他几个州叫Service Plaza或者Service Area；后来又发现Illinois的高速两边的Oasis是联通的，一条全封闭的天桥横跨高速，而其他经过的几个州没有这种情况。(3) Ohio的Service Area里面的食物最贵，而且最难吃，就连麦当劳的店员的衣服都脏兮兮的，而且目光呆滞；Pennsylvania的设施最好，因为这个州很有钱。(4) 高速两边经常见到被撞死的鹿或其他小动物（粗略算一下来回路上见到的死鹿不下100头）。去得路上大姐（十几年工作经验，近十年开车经验的同事）开车的时候，轧死了一只小兔子，她愧疚了一路。被撞死的鹿很肥，很嫩，可惜没法扛回来。据说在美国法律规定，在路上见了野生动物尽量避让，否则是犯罪；但如果实在让不开把它撞死了，你可以把撞死的动物带回家(宰了吃)。&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;去纽约还有一件不得不提的事情就是警察。一路上看见了太多的警察。很多地方高速两个方向之间是一片灌木丛，灌木丛中间经常会有空地或者小路，警察们就藏在那里面。去得路上一开始司机们开车很Happy，车少路宽，一直超速行驶，后来我发现了一次警察，大家就小心一点了。后来发现所有的车都在超速，而且一般超10～20 mile，警察并不管，我们也就放心大胆的超了。但是发现警察之后还是会减减速的，不能不给人家面子。回来的路上，刚进Pennsylvania，大姐开车，限速65mile/h，她平均开到了85以上，偶尔高达95&amp;mdash;&amp;mdash;一辆现代sonata，开到95mile也就是&lt;span&gt;152.88768公里每小时！很疯狂啊～ 后来换了另外一哥们开车，快出Pennsylvania了，他也开的很快，平均80以上。突然我们发现隔离带里面一辆警车，可是再刹车已经来不及了。不出所料，那辆警车立刻打开警灯在我们后面跟了上来。那哥们知道自己麻烦来了，慢慢地把车停到路边，拿出驾照，双手放到方向盘上。我也摇下车窗，把双手放在警察能看见的位置。过了很久，警车门开了，下来一位女警察，走到我的车窗边，问谁开的车，知不知道刚才已经开到83mile/h了，把驾照拿出来。那哥们乖乖把驾照给了女警察，警察一看，看不懂。那哥们解释，他只有中国驾照，美国出差一段时间，现在是纽约回Chicago。女警察一听就笑了，问我们是住在北京吗。我们说是，她说去年北京的奥运会很好，我也赶紧吹嘘奥运会。女警察话锋一转，说&lt;span&gt;technically&lt;/span&gt;讲，没有美国驾照是不能开车的，对于你们这种情况还是小心为妙。我们连说yes, thank you. 很幸运，我们没有被开ticket；如果开了的话，一个罚单就得几百刀，一个月的补助就没了一半。从这以后，那哥们在高速上就不敢很嚣张了。而我从那时起就养成一个习惯，时刻寻找警车，一旦发现警察的存在，立马规规矩矩的开车。其实美国人也是这么做的。&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;后来那两位同事还去了拉斯维加斯，坐飞机过去的，我没有去，没钱。听说他(她)们在拉斯维加斯租了一辆车，当天开车去科罗拉多大峡谷(几百个mile)，晚上之前回拉斯维加斯；第二天又是如此。我不得不佩服他(她)们的疯狂。他们从拉斯维加斯回来的时候，在机场租了一辆车，就是我现在开的雪佛莱IMPALA。机场租车非常贵，因为机场的租车行是要叫保护费的，官方称呼叫特许经营费(C&lt;span&gt;hartered Fee&lt;span&gt;)。我们开了一周，然后在local给还了，然后续租这辆车，便宜了100多$。后来听很多中国同事说，其实在机场租了第二天就可以在local还，而不必真的租一周，能省更多钱。不得不佩服中国人的小聪明。&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;6月11号我考过了笔试，拿到了permit，然后就开始学车。那两位有驾照的同事教，幸亏同一个team的同事有两位资深司机。我考了三次才终于在6月31号把驾照拿到。&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;从6月下旬开始，因为那两个同事7月6号要走了，所以她们就开始了疯狂采购。我们也跟着一起采购。开车去Wisconsin的outlets，去Michigan的outlets。到那之后才知道为什么这两个地方东西会比较便宜，穷！这两个地方很穷，消费水平不高，而且税比较低，所以大多中国同事都建议我们去那里买东西。对于一些化妆品，只能去Oak Brook Shopping Mall去买。中产阶层很少去Outlets购物，那是穷人去的地方。而我们这些人，连人家的穷人都比不上&amp;hellip;&amp;hellip;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;这周末就打道回府了。还能再开5天车，还打算去一趟Oak Brook，同事要买东西。还打算去一趟费米实验室，今晚上才听说大名鼎鼎的Fermilab就在附近，查了一下地图竟然就在去Chicago Premium Outlets的那条路的旁边。不一定能进的去，在外边拍几张照片也行啊。&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>谷歌中国的“色情门“</title>
   <link href="http://bo-yang.github.com//2009/06/19/google-china-in-porn-gate"/>
   <updated>2009-06-19T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/06/19/google-china-in-porn-gate</id>
   <content type="html">&lt;p&gt;这一次央视的屠刀又批向了谷歌中国。对于央视乃至Z*F最近一连串的所谓过滤或屏蔽对儿童不良信息的举措我实在是觉得有矫枉过正之嫌。尽管我一直认为谷歌中国和美国的Google不在同一个数量级，但还是对他们的&amp;rdquo;搜索自动补全&amp;ldquo;进行了一些比较：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/EntryImages/20090619/Google_CN.JPG&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;465&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;谷歌中国的自动补全&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/EntryImages/20090619/Google_US.JPG&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;425&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;Google的自动补全&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;text-align:left;&quot;&gt;可见， Google英文搜索比中文搜索生猛的多。为过滤不良信息，上图中的生词，还是自己查一下吧，我就不 翻译了。&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/EntryImages/20090619/Google_CN2.JPG&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;470&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;在谷歌中国输入&amp;rdquo;s*ex&amp;ldquo;时的提示&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;我们的生活越来越倚重于Internet，而Internet也成为现实社会的一种反映，如何在信息泛滥、良莠不齐的网络生活中保护儿童健康快乐的成长，这是全世界共同面临的一个教育难题。而现在相关部门却把它简化为一个技术问题，未免本末倒置。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;这让我不仅联想起大禹治水的故事。禹的父亲鲧采用&amp;rdquo;堵&amp;ldquo;的方法，洪水不但不退反尔愈发泛滥，以失败而告终；禹治水采用&amp;rdquo;疏&amp;ldquo;的方法对洪水加以引导，终于治水成功。所谓&amp;rdquo;不良信息&amp;ldquo;，不也和洪水一样吗？小孩子终归要长大，总有洞房花烛的那一天，在他们对X好奇的时候，是大人们想堵就能堵的住的吗？&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;再者说来，小孩子绝对不像大人们想象的那么脆弱，我认识的很多人都是出污泥而不染的，我相信下一代也可以濯清涟而不妖。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>在UNIX/Linux下查看某个进程的详细参数</title>
   <link href="http://bo-yang.github.com//2009/05/27/check-process-parameters-in-unix"/>
   <updated>2009-05-27T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/05/27/check-process-parameters-in-unix</id>
   <content type="html">&lt;p&gt;如果要在UNIX/Linux下查看某个进程的详细参数， 可以用命令：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;pre&gt;          &lt;strong&gt;&lt;span style=&quot;color:#ff0000;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;ps -axuww|grep &amp;lt;process&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/pre&gt;
&lt;p&gt;但需要注意的是，在Solaris下，存在两个版本的ps:一是/usr/bin/ps；一是/usr/bin/ps。只有/usr/bin/ps可以用于上述命令。&lt;/p&gt;
&lt;pre&gt;&lt;p&gt;&quot;/usr/ucb/ps&quot; 是从BSD UNIX中继承而来的，而/usr/bin/ps从AT&amp;amp;T SVR4继承而来的。二者之间存在较大区别， 如果有些&lt;/p&gt;&lt;p&gt;参数在某个ps中不能应用，可以考虑换用另外一个。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;本文参考了如下网页：&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://www.sunmanagers.org/pipermail/summaries/2006-March/007182.html&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span style=&quot;text-decoration:none;&quot;&gt;http://www.sunmanagers.org/pipermail/summaries/2006-March/007182.html&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>在美国体验猪流感</title>
   <link href="http://bo-yang.github.com//2009/05/15/swine-flew-in-us"/>
   <updated>2009-05-15T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/05/15/swine-flew-in-us</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;
&lt;pre style=&quot;text-align:center;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;在美国体验猪流感&lt;/span&gt;&lt;/strong&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;&lt;br /&gt;
赴美之前，很多人就提醒我美国的猪流感正流行，而且我所要去的Illinois更是重灾区。我自己也很担心，尤其是当中国也有了猪流感疑似病例之后。&lt;/span&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;一进首都机场就已经感受到了人们的恐惧，很多中国人都带着口罩。因为考虑到需要坐12.5个小时的飞机，而且我相信在中国的外国人也应该没有收到感染，因此我就没有戴口罩（其实是拿了两个的，放在包里一直没有拿出来）。&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;在飞机上，发现坐我后面的一个哥们一直带着口罩，睡觉的时候都没有摘下来，实在是太佩服他的耐心了。同时我发现没有一个外国人戴口罩。 来到芝加哥下了飞机，入海关，直到出了机场，又在机场外面等了同事一个小时，也没有发现一个人戴口罩&amp;mdash;&amp;mdash;即使是原来戴口罩的中国人，也不得不把口罩摘了下来，因为没人戴口罩。可以想见，如果谁胆敢带着口罩入海关，搞不好会被海关大叔/大婶给盘问甚至reject的&amp;mdash;&amp;mdash;海关人员都是很拽的样子。&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;color:#666666;&quot;&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;昨晚在 一个同事的带领下去了Naperville的一个小教堂进行Church Talk(美国退休的老头老太太自愿在教堂工作，每天晚上和外国人交谈是他们工作的一部分，叫做Church Talk；话题可以海阔天空，不限于宗教，尽管他们和你谈话的最终目的是希望你入教，但绝大多数中国人去那里的最初目的是练口语)。几个老头老太太一见到我得知我是刚刚从中国来的，就问我中国人怎么看美国的猪流感？为什么那么多中国人如此的害怕美国的猪流感？我说几年前中国刚刚经历过一场SARS，很多人在那场瘟疫中死掉了。中国人现在对猪流感心存忌惮也是有情可原的。而出乎我的预料的是，几个老头竟然告诉我只要勤洗手和保持充足的睡眠，猪流感是完全不必担心的。这些我在国内的时候就知道，但是在几个美国老头的口中说出，仍让我很诧异：连这样的匹夫匹妇对于猪流感的认识都如此轻松，美国人的自信以及新闻媒体在美国的重要性可见一斑。&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;color:#666666;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>近期遇到的几个Solaris 10 的问题</title>
   <link href="http://bo-yang.github.com//2009/04/30/several-solaris-10-problems"/>
   <updated>2009-04-30T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/04/30/several-solaris-10-problems</id>
   <content type="html">&lt;p&gt;公司正在逐渐把server升级为Solaris 10， 对于新平台我非常陌生（当然了，对于以前的Solaris 9也不怎么懂），遇到了几个值得记录下来的问题。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;1. $HOME目录几乎所有文件（夹）的owner和group都被改为nobody&lt;/p&gt;
&lt;p&gt;昨天在工作时遇到了问题，自己无法解决，求助于同事。同事帮忙查了半天，发现了我的$HOME下的所有的文件和文件夹的owner和group都被改为nobody了。我们都很诧异为什么会出现这种情况，求助于公司的IT，IT们说这是因为我们部门有两个NFS storage,其中一个和NFS的版本和Solaris 10兼容，另外一个不兼容。而我的$HOME恰好就在不兼容的Storage上，结果权限就变了。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;今天上午IT把这个问题FIX了，但我对于NFS还是不清楚，对于权限如何变的也不知道。有时间再去仔细研究NFS的问题。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;2.&amp;nbsp;ld.so.1: cp:&lt;span style=&quot;white-space:pre;&quot;&gt;fatal: libsec.so.1: open failed: No such file or directory&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;white-space:pre;&quot;&gt;ld.so.1: cp: fatal: libsec.so.1: version `SUNW_1.2&#39; not found (required by file /usr/bin/cp)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;white-space:pre;&quot;&gt;这是一个动态链接库的问题。这个问题Google了一下发现很多人也有类似的问题，但没有看到如何解决。貌似&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;white-space:pre;&quot;&gt;Sun推出了一个patch来解决这个问题。但具体情况不了解。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;white-space:pre;&quot;&gt;前几天早晨遇到了这个问题，和同事查了一上午也没发现原因，结果当我们绝望的时候这个问题自己消失了。莫名其妙。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;white-space:pre;&quot;&gt;但这个问题估计在往后系统重启以后还会发生。&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>破解“读心术”网页</title>
   <link href="http://bo-yang.github.com//2009/04/12/crack-thought-reading-webpage"/>
   <updated>2009-04-12T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/04/12/crack-thought-reading-webpage</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;
&lt;h1&gt;
&lt;/h1&gt;
&lt;h1&gt;&lt;span style=&quot;font-weight:normal;font-size:12px;&quot;&gt;无意之中看到这样一种网页&amp;ldquo;读心术：&lt;span style=&quot;font-size:x-small;&quot;&gt;这个程序有着能够看穿你心思的特殊能力，试试吧&lt;/span&gt;&amp;rdquo;，如&lt;a href=&quot;http://www.souxin.com/dxs.htm&quot;&gt;http://www.souxin.com/dxs.htm&lt;/a&gt;&amp;nbsp;或&amp;nbsp;&lt;a href=&quot;http://www.91cool.net/heart.html&quot;&gt;http://www.91cool.net/heart.html&lt;/a&gt;。&lt;/span&gt;&lt;/h1&gt;
&lt;div&gt;试过之后大感惊奇，该网页怎么竟有如此魔力？但我毕竟是个无神论者，而且用的又是Chrome浏览器，查看网页的源代码很方便，于是便查看网页源代码。找了半天，发现了相关的代码如下：
&lt;pre&gt;&amp;lt;SCRIPT language=javascript&amp;gt; 
ax=0;
function writeTable() {
        ax=Math.round(Math.random()*26);
        alphaArray=new Array(&quot;a&quot;, &quot;n&quot;, &quot;b&quot;, &quot;d&quot;, &quot;f&quot;, &quot;h&quot;, &quot;{&quot;, &quot;i&quot;, &quot;l&quot;, &quot;v&quot;, &quot;x&quot;, &quot;z&quot;, &quot;I&quot;, &quot;J&quot;, &quot;M&quot;, &quot;N&quot;, &quot;o&quot;, &quot;O&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;m&quot;, &quot;6&quot;, &quot;^&quot;, &quot;u&quot;, &quot;_&quot;, &quot;[&quot;, &quot;]&quot;)
        table=&quot;&amp;lt;table border=0 cellspacing=1 cellpadding=1 width=&#39;100%&#39;&amp;gt;&amp;lt;tr&amp;gt;&quot;
        j=1;
        for ( i = 99 ; i &amp;gt;= 0 ; i-- ) {
                a=Math.round(Math.random()*26);
                if ( i%9 == 0 &amp;amp;&amp;amp; i &amp;lt; 89 ) 
                        a=ax;
                table+=&quot;&amp;lt;td class=&#39;numtd&#39;&amp;gt;&quot;+i+&quot;&amp;lt;/td&amp;gt;&amp;lt;td class=&#39;symtd&#39;&amp;gt;&quot;+alphaArray[a]+&quot;&amp;lt;/td&amp;gt;&quot;
                 if ( j%10 == 0 ) 
                         table+=&quot;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&quot; 
                 j++
        }
        table+=&quot;&amp;lt;/table&amp;gt;&quot;
        sym.innerHTML=table
        sh.innerHTML=&quot;&quot;
}
function showAnswer() {
        sh.innerHTML=alphaArray[ax]
        sym.innerHTML=&quot;&amp;lt;span class=big&amp;gt;&amp;lt;a href=&quot;javascript:writeTable()&quot; mce_href=&quot;javascript:writeTable()&quot; class=hot&amp;gt;Try Next 再试一次&amp;lt;/a&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&quot;
}
&amp;lt;/SCRIPT&amp;gt; &lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;看了又看也没发现这段代码有何神奇之处，无非就是打印输出表格，用到了随机数改变输出的图像顺序而已。&lt;/p&gt;
&lt;div&gt;我忽然注意到了&amp;ldquo; i &amp;lt; 89&amp;rdquo;这一条件，认定此处必有玄机。我于是算了一算，发现90～99所有的数按照&amp;ldquo;读心术&amp;rdquo;的要求运算之后都是81，而80～89运算之后都是72，70～79是63，以此类推分别是54、45、36、27、18和0.只要保证0、18、27、36、45、54、63、72、81这几个数所对应的图像是相同的就可以了。查看&amp;ldquo;读心术&amp;rdquo;网页打印出来的图像，果然如此。&lt;/div&gt;
&lt;div&gt;继续看代码，发现了&amp;ldquo;i%9 == 0&amp;rdquo;这一判断条件，再一观察，发现上面那几个关键的数（0、18、27、36、45、54、63、72、81）确实是9的倍数。代码中当遇到小于89的9的倍数时，强制令a=ax，这样一来便保证了9的倍数对应的图像是相同的。于是，对于任何符合两位数，减去自己的个位和十位后，所对应的图像都是相同的。这就是所谓&amp;ldquo;读心术&amp;rdquo;程序的trick。&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[转]在C语言中使用正则表达式</title>
   <link href="http://bo-yang.github.com//2009/04/11/regular-expression"/>
   <updated>2009-04-11T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/04/11/regular-expression</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;&lt;span&gt;&lt;/p&gt;
&lt;h1&gt;在C语言中使用正则表达式&lt;/h1&gt;
&lt;p&gt;&lt;span style=&quot;font-size:small;&quot;&gt;如果用户熟悉Linux下的sed、awk、grep或vi，那么对正则表达式这一概念肯定不会陌生。由于它可以极大地简化处理字符串时的复杂度，因此现在已经在许多Linux实用工具中得到了应用。千万不要以为正则表达式只是Perl、Python、Bash等脚本语言的专利，作为C语言程序员，用户同样可以在自己的程序中运用正则表达式。&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;标准的C和C++都不支持正则表达式，但有一些函数库可以辅助C/C++程序员完成这一功能，其中最著名的当数Philip Hazel的Perl-Compatible Regular Expression库，许多Linux发行版本都带有这个函数库。&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;编译正则表达式 &amp;nbsp;&lt;/h3&gt;
&lt;p&gt;为了提高效率，在将一个字符串与正则表达式进行比较之前，首先要用regcomp()函数对它进行编译，将其转化为regex_t结构：&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;int regcomp(regex_t *preg, const char *regex, int cflags);&amp;nbsp;&lt;/p&gt;
&lt;p&gt;参数regex是一个字符串，它代表将要被编译的正则表达式；参数preg指向一个声明为regex_t的数据结构，用来保存编译结果；参数cflags决定了正则表达式该如何被处理的细节。&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;如果函数regcomp()执行成功，并且编译结果被正确填充到preg中后，函数将返回0，任何其它的返回结果都代表有某种错误产生。&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;匹配正则表达式 &amp;nbsp;&lt;/h3&gt;
&lt;p&gt;一旦用regcomp()函数成功地编译了正则表达式，接下来就可以调用regexec()函数完成模式匹配：&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;int regexec(const&amp;nbsp; regex_t&amp;nbsp; *preg,&amp;nbsp; const&amp;nbsp; char *string, size_t nmatch,regmatch_t pmatch[], int eflags);&amp;nbsp;&lt;br /&gt;typedef struct {&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;regoff_t rm_so;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;regoff_t rm_eo;&amp;nbsp;&lt;br /&gt;} regmatch_t;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;参数preg指向编译后的正则表达式，参数string是将要进行匹配的字符串，而参数nmatch和pmatch则用于把匹配结果返回给调用程序，最后一个参数eflags决定了匹配的细节。&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;在调用函数regexec()进行模式匹配的过程中，可能在字符串string中会有多处与给定的正则表达式相匹配，参数pmatch就是用来保存这些匹配位置的，而参数nmatch则告诉函数regexec()最多可以把多少个匹配结果填充到pmatch数组中。当regexec()函数成功返回时，从string+pmatch[0].rm_so到string+pmatch[0].rm_eo是第一个匹配的字符串，而从string+pmatch[1].rm_so到string+pmatch[1].rm_eo，则是第二个匹配的字符串，依此类推。&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;释放正则表达式 &amp;nbsp;&lt;/h3&gt;
&lt;p&gt;无论什么时候，当不再需要已经编译过的正则表达式时，都应该调用函数regfree()将其释放，以免产生内存泄漏。&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;void regfree(regex_t *preg);&amp;nbsp;&lt;/p&gt;
&lt;p&gt;函数regfree()不会返回任何结果，它仅接收一个指向regex_t数据类型的指针，这是之前调用regcomp()函数所得到的编译结果。&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;如果在程序中针对同一个regex_t结构调用了多次regcomp()函数，POSIX标准并没有规定是否每次都必须调用regfree()函数进行释放，但建议每次调用regcomp()函数对正则表达式进行编译后都调用一次regfree()函数，以尽早释放占用的存储空间。&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;报告错误信息 &amp;nbsp;&lt;/h3&gt;
&lt;p&gt;如果调用函数regcomp()或regexec()得到的是一个非0的返回值，则表明在对正则表达式的处理过程中出现了某种错误，此时可以通过调用函数regerror()得到详细的错误信息。&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;size_t regerror(int errcode, const regex_t *preg, char *errbuf, size_t errbuf_size);&amp;nbsp;&lt;/p&gt;
&lt;p&gt;参数errcode是来自函数regcomp()或regexec()的错误代码，而参数preg则是由函数regcomp()得到的编译结果，其目的是把格式化消息所必须的上下文提供给regerror()函数。在执行函数regerror()时，将按照参数errbuf_size指明的最大字节数，在errbuf缓冲区中填入格式化后的错误信息，同时返回错误信息的长度。&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;应用正则表达式 &amp;nbsp;&lt;/h3&gt;
&lt;p&gt;最后给出一个具体的实例，介绍如何在C语言程序中处理正则表达式。 &amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;#include &amp;lt;stdio.h&amp;gt;; 
#include &amp;lt;sys/types.h&amp;gt;; 
#include &amp;lt;regex.h&amp;gt;; 
/* 取子串的函数 */ 
static char* substr(const char*str, unsigned start, unsigned end) 
{ 
  unsigned n = end - start; 
  static char stbuf[256]; 
  strncpy(stbuf, str + start, n); 
  stbuf[n] = 0; 
  return stbuf; 
} 
/* 主程序 */ 
int main(int argc, char** argv) 
{ 
  char * pattern; 
  int x, z, lno = 0, cflags = 0; 
  char ebuf[128], lbuf[256]; 
  regex_t reg; 
  regmatch_t pm[10]; 
  const size_t nmatch = 10; 
  /* 编译正则表达式*/ 
  pattern = argv[1]; 
  z = regcomp(&amp;reg;, pattern, cflags); 
  if (z != 0){ 
    regerror(z, &amp;reg;, ebuf, sizeof(ebuf)); 
    fprintf(stderr, &quot;%s: pattern &#39;%s&#39; /n&quot;, ebuf, pattern); 
    return 1; 
  } 
  /*  逐行处理输入的数据 */ 
  while(fgets(lbuf, sizeof(lbuf), stdin)) { 
    ++lno; 
    if ((z = strlen(lbuf)) &amp;gt; 0 &amp;amp;&amp;amp; lbuf[z-1] == &#39;/n&#39;) 
      lbuf[z - 1] = 0; 
    /* 对每一行应用正则表达式进行匹配 */ 
    z = regexec(&amp;reg;, lbuf, nmatch, pm, 0); 
    if (z == REG_NOMATCH) 
       continue; 
    else if (z != 0) { 
      regerror(z, &amp;reg;, ebuf, sizeof(ebuf)); 
      fprintf(stderr, &quot;%s: regcom(&#39;%s&#39;)/n&quot;, ebuf, lbuf); 
      return 2; 
    } 
    /* 输出处理结果 */ 
    for (x = 0; x &amp;lt; nmatch &amp;amp;&amp;amp; pm[x].rm_so != -1; ++ x) { 
      if (!x) printf(&quot;%04d: %s/n&quot;, lno, lbuf); 
      printf(&quot;  %d=&#39;%s&#39;/n&quot;, x, substr(lbuf, pm[x].rm_so, pm[x].rm_eo)); 
    } 
  } 
  /* 释放正则表达式  */ 
  regfree(&amp;reg;); 
  return 0; 
} &lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>TCL/Tk一句话笔记（一）</title>
   <link href="http://bo-yang.github.com//2009/04/05/tcl-tk-one-line-1"/>
   <updated>2009-04-05T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/04/05/tcl-tk-one-line-1</id>
   <content type="html">&lt;p&gt;&lt;div&gt;&lt;span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;h1&gt;&lt;span style=&quot;font-weight:normal;font-size:12px;&quot;&gt;1. A backslash as the last character in a line is converted into a space, and all the white space at the beginning of the next line is replaced by this substitution.&lt;/span&gt;&lt;/h1&gt;
&lt;div&gt;2. The difference between double quotes and curly braces is that quotes allow substitutions to occur in the group, while curly braces prevent substitutions.&lt;/div&gt;
&lt;div&gt;3. Tcl uses the&amp;nbsp;proc&amp;nbsp;command to define procedures.&lt;/div&gt;
&lt;div&gt;4. The&amp;nbsp;expr&amp;nbsp;command is used to parse and evaluate math expressions. You can make&amp;nbsp;expr&amp;nbsp;operate more efficiently by grouping the entire expression in curly braces.&lt;/div&gt;
&lt;div&gt;5. TCL assumes that variable names contain only letters, digits, and the underscore. The construct&amp;nbsp;$foo.o&amp;nbsp;represents a concatenation of the value of&amp;nbsp;foo&amp;nbsp;and the literal&amp;nbsp;&quot;.o&quot;.&lt;/div&gt;
&lt;div&gt;6. If the variable reference is not delimited by punctuation or white space, then you can use curly braces to explicitly delimit the variable name (e.g.,&amp;nbsp;${x}).&lt;/div&gt;
&lt;div&gt;7. You can delete a variable with the&amp;nbsp;unset&amp;nbsp;command:&lt;/div&gt;
&lt;pre&gt;unset ?-nocomplain? ?--? &lt;span class=&quot;docEmphasis&quot;&gt;varName varName2&lt;/span&gt; ...&lt;a name=&quot;idd1e8098&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e8103&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e8108&quot;&gt;&lt;/a&gt;&lt;/pre&gt;
&lt;pre&gt;8. &lt;span&gt;The existence of a variable can be tested with the&amp;nbsp;info exists&amp;nbsp;command.&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;span style=&quot;font-family:verdana;&quot;&gt;9. You should always group expressions in curly braces and let&amp;nbsp;expr&amp;nbsp;do command and variable substitutions.&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;span style=&quot;font-family:verdana;&quot;&gt;10. In TCL, the&amp;nbsp;#&amp;nbsp;must occur at the beginning of a command.&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;span style=&quot;font-family:verdana;&quot;&gt;11. A surprising property of Tcl comments is that curly braces inside comments are still counted for the purposes of finding matching brackets.&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;span style=&quot;font-family:verdana;&quot;&gt;12. Command arguments are separated by white space, unless arguments are grouped with curly braces or double quotes as described below. If you forget the space, you will get syntax errors about unexpected characters after the closing brace or quote.&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;span style=&quot;font-family:verdana;&quot;&gt;13. The Tcl shells pass the command-line arguments to the script as the value of the&amp;nbsp;argv&amp;nbsp;variable. The number of command-line arguments is given by the&amp;nbsp;argc&amp;nbsp;variable. The name of the program, or script, is not part of&amp;nbsp;argv&amp;nbsp;nor is it counted by&amp;nbsp;argc. Instead, it is put into the&amp;nbsp;argv0&amp;nbsp;variable.&amp;nbsp;argv&amp;nbsp;is a list, so you can use the&amp;nbsp;lindex&amp;nbsp;command to extract items from it:&lt;/span&gt;&lt;/pre&gt;
&lt;p class=&quot;docText&quot;&gt;&lt;a name=&quot;idd1e11776&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;set arg1 [lindex $argv 0]&lt;/pre&gt;
&lt;pre&gt;14. &lt;span&gt;Some command-line options are interpreted by&amp;nbsp;&lt;span class=&quot;docEmphasis&quot;&gt;wish&lt;/span&gt;, and they do not appear in the&amp;nbsp;argv&amp;nbsp;variable. The general form of the&amp;nbsp;&lt;span class=&quot;docEmphasis&quot;&gt;wish&lt;/span&gt;&amp;nbsp;command line is:&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;wish ?options? ?script? ?arg1 arg2?&lt;/pre&gt;
&lt;p class=&quot;docText&quot;&gt;If no script is specified, then&amp;nbsp;&lt;span class=&quot;docEmphasis&quot;&gt;wish&lt;/span&gt;&amp;nbsp;just enters an interactive command loop.&lt;/p&gt;
&lt;p class=&quot;docText&quot;&gt;15. You can use the&amp;nbsp;info script&amp;nbsp;command to find out where the CGI script is, and from that load the supporting file. The&amp;nbsp;file dirname&amp;nbsp;and&amp;nbsp;file join&amp;nbsp;commands manipulate file names in a platform-independent way.&lt;/p&gt;
&lt;p class=&quot;docText&quot;&gt;set dir [file dirname [info script]]&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;docText&quot;&gt;set datafile [file join $dir guestbook.data]&lt;/p&gt;
&lt;p class=&quot;docText&quot;&gt;16. You can ask&amp;nbsp;string&amp;nbsp;for valid operations by giving it a bad one:&lt;/p&gt;
&lt;pre&gt;string junk&lt;br /&gt;&lt;span class=&quot;docEmphasis&quot;&gt;=&amp;gt; bad option &quot;junk&quot;: should be bytelength, compare, equal, first, index, is, last, length&lt;br /&gt;&lt;img src=&quot;http://docs.google.com/Doc?docid=dd6nw3mt_258p66mf8fx&amp;amp;hl=en&quot; border=&quot;0&quot; alt=&quot;graphics/ccc.gif&quot; width=&quot;14&quot; height=&quot;9&quot; align=&quot;left&quot; /&gt;, map, match, range, repeat, replace, tolower, totitle, toupper, trim, trimleft, trimright,&lt;br /&gt;&lt;img src=&quot;http://docs.google.com/Doc?docid=dd6nw3mt_258p66mf8fx&amp;amp;hl=en&quot; border=&quot;0&quot; alt=&quot;graphics/ccc.gif&quot; width=&quot;14&quot; height=&quot;9&quot; align=&quot;left&quot; /&gt; wordend, or wordstart&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;17. &lt;span&gt;The&amp;nbsp;string map&amp;nbsp;command translates a string based on a character map. The map is in the form of a input, output list. Wherever a string contains an input sequence, that is replaced with the corresponding output. For example:&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;string map {f p d l} food&lt;br /&gt;&lt;span class=&quot;docEmphasis&quot;&gt;=&amp;gt; pool&lt;/span&gt;&lt;/pre&gt;
&lt;p class=&quot;docText&quot;&gt;The inputs and outputs can be more than one character and they do not have to be the same length:&lt;/p&gt;
&lt;pre&gt;string map {f p d ll oo u} food&lt;br /&gt;&lt;span class=&quot;docEmphasis&quot;&gt;=&amp;gt; pull&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;18. &lt;span&gt;A position specifier is&amp;nbsp;&lt;span class=&quot;docEmphasis&quot;&gt;i$&lt;/span&gt;, which means take the value from argument&amp;nbsp;&lt;span class=&quot;docEmphasis&quot;&gt;i&lt;/span&gt;&amp;nbsp;as opposed to the normally corresponding argument. The position counts from 1. If a position is specified for one format keyword, the position must be used for all of them. If you group the format specification with double quotes, you need to quote the&amp;nbsp;$&amp;nbsp;with a backslash:&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;set lang 2&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;format &quot;%${lang}/$s&quot; one un uno&lt;br /&gt;&lt;span class=&quot;docEmphasis&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;=&amp;gt; un&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;19. &lt;span&gt;The&amp;nbsp;binary&amp;nbsp;command provides conversions between strings and packed binary data representations. The&amp;nbsp;binary format&amp;nbsp;command takes values and packs them according to a template. The resulting binary value is returned:&lt;/span&gt;&lt;/pre&gt;
&lt;p class=&quot;docText&quot;&gt;&lt;a name=&quot;idd1e16724&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;binary format &lt;span class=&quot;docEmphasis&quot;&gt;template value&lt;/span&gt; ?&lt;span class=&quot;docEmphasis&quot;&gt;value&lt;/span&gt; ...?&lt;/pre&gt;
&lt;p class=&quot;docText&quot;&gt;The&amp;nbsp;binary scan&amp;nbsp;command extracts values from a binary string according to a similar template. It assigns values to a set of Tcl variables:&lt;/p&gt;
&lt;pre&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;binary scan &lt;span class=&quot;docEmphasis&quot;&gt;value template variable&lt;/span&gt; ?&lt;span class=&quot;docEmphasis&quot;&gt;variable&lt;/span&gt; ...?&lt;/pre&gt;
&lt;pre&gt;20. Tcl commands described are: list, lindex, llength, &lt;br /&gt;lrange, lappend, linsert, lreplace, &lt;br /&gt;lsearch, lset, lsort, concat, join, &lt;br /&gt;and split.&lt;/pre&gt;
&lt;pre&gt;21. &lt;span&gt;Tcl commands related to list are: list, lindex, llength, lrange, lappend, linsert, lreplace, lsearch, lset, lsort, concat, join, and split.&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;span style=&quot;font-family:verdana;&quot;&gt;22. Procedure&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;22.1 &lt;span&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;Default parameter values&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a name=&quot;idd1e21501&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;proc P2 {a {b 7} {c -2} } {
 &amp;nbsp;&amp;nbsp; &amp;nbsp;expr $a / $b + $c
&amp;nbsp;&amp;nbsp; &amp;nbsp;}
&amp;nbsp;&amp;nbsp; &amp;nbsp;P2 6 3
&lt;span class=&quot;docEmphasis&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;=&amp;gt; 0&lt;/span&gt;
&lt;/pre&gt;
&lt;pre&gt;22.2 &lt;span&gt;A procedure can take a variable number of arguments by 
specifying the args keyword as the last parameter. When the procedure 
is called, the args parameter is a list that contains all the remaining 
values.&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;span style=&quot;font-family:verdana;&quot;&gt;23. The rename command changes the name of a command:&amp;nbsp;&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;rename foo foo.orig&lt;/pre&gt;
&lt;pre&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The other thing you can do with &lt;/span&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;rename&lt;/span&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt; is completely remove a command by renaming it to the empty string:&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;rename exec {}&lt;/pre&gt;
&lt;pre&gt;24. &lt;span&gt;Use the upvar command when you need to pass the name of a variable, as 
opposed to its value, into a procedure.&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;span style=&quot;font-family:verdana;&quot;&gt;25. Call by Name Using&amp;nbsp;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;upvar&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;span style=&quot;font-family:verdana;&quot;&gt;Use the &lt;/span&gt;upvar&lt;span style=&quot;font-family:verdana;&quot;&gt; command when you need to pass the name of a variable, as opposed to its value, into a procedure. &lt;span style=&quot;text-decoration:underline;&quot;&gt;The &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;upvar&lt;/span&gt;&lt;span style=&quot;font-family:verdana;&quot;&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt; command associates a local variable with a variable in a scope up the Tcl call stack&lt;/span&gt;. The syntax of the upvar command is:&lt;/span&gt;&lt;/pre&gt;
&lt;p class=&quot;docText&quot;&gt;&lt;a name=&quot;idd1e22008&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;upvar &lt;span class=&quot;docEmphasis&quot;&gt;?level? varName localvar&lt;/span&gt;
&lt;/pre&gt;
&lt;p class=&quot;docText&quot;&gt;The&amp;nbsp;&lt;span class=&quot;docEmphasis&quot;&gt;level&lt;/span&gt;&amp;nbsp;argument is optional, and it defaults to 1, which means one level up the Tcl call stack. You can specify some other number of frames to go up, or you can specify an absolute frame number with a #&lt;span class=&quot;docEmphasis&quot;&gt;number&lt;/span&gt;&amp;nbsp;syntax. Level #0 is the global scope.&lt;/p&gt;
&lt;p class=&quot;docText&quot;&gt;26. You can use any string as an index for array, but avoid using a string that contains spaces.&lt;/p&gt;
&lt;p class=&quot;docText&quot;&gt;27. The array get and array set operations are used to convert between an array and a list. The list returned by array get has an even number of elements. The first element is an index, and the next is the corresponding array value. The list elements continue to alternate between index and value. The list argument to array set must have the same structure.&lt;/p&gt;
&lt;p class=&quot;docText&quot;&gt;28.&amp;nbsp;&lt;/p&gt;
&lt;div&gt;&lt;/div&gt;
&lt;p class=&quot;docText&quot;&gt;&lt;a name=&quot;idd1e23061&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e23066&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>用PERL处理二进制标量</title>
   <link href="http://bo-yang.github.com//2009/03/12/perl-binary-scalar"/>
   <updated>2009-03-12T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2009/03/12/perl-binary-scalar</id>
   <content type="html">&lt;p&gt;&amp;nbsp;PERL Handling Binary Scalar&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;&lt;span&gt;&lt;/p&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;1&lt;/strong&gt;&amp;nbsp;&lt;strong&gt;[Question]:&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;&lt;br /&gt;
&lt;/span&gt;
&lt;p&gt;I adopt select()...sysread()...syswrite() mechanism to handle socket messages, where messages are sysread() into $buffer (binary) before they are syswritten.&lt;/p&gt;
&lt;p&gt;Now I want to change two bytes of the message, which denote the length of the whole message. At first, I use following code:&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $msglen&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$buffer&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;com&quot;&gt;# Get the first two bytes&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;kwd&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $declen&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$msglen&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;$declen &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;substr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$buffer&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$declen&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;com&quot;&gt;# change the length&lt;/span&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, it doesn&#39;t work in this way. If the final value of $declen is 85, then the modified $buffer will be &quot;0x35 0x35 0x00 0x02...&quot;. I insert digital number to $buffer but finally got ASCII!&lt;/p&gt;
&lt;p&gt;I also tried this way:&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $msglen&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$buffer&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;com&quot;&gt;# Get the first two bytes,binary&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;$msglen &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;lit&quot;&gt;0b11&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;com&quot;&gt;# Or $msglen += 3;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;kwd&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $msgbody&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$buffer&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;com&quot;&gt;# Get the rest part of message, binary&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;$buffer&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $msglen&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $msgbody&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sadly, this method also failed. The result is such as&quot;0x33 0x 0x00 0x02...&quot; I just wonder why two binary scalar can&#39;t be joined into a binary scalar?&lt;/p&gt;
&lt;p&gt;Can you help me? Thank you!&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;[Answer 1]:&lt;/strong&gt;&lt;/span&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $msglen&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$buffer&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;com&quot;&gt;# Get the first two bytes&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;kwd&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $number &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; unpack&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;S&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$msglen&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;$number &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;kwd&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $number_bin &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; pack&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;S&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$number&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;substr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$buffer&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$number_bin&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;com&quot;&gt;# change the length&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;[Answer 2]:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;用vec。&amp;nbsp;&lt;/p&gt;
&lt;p&gt;比如：&amp;nbsp;
&lt;dl class=&quot;code&quot;&gt;
&lt;dt&gt;&lt;strong&gt;Perl code&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;pre&gt;&lt;div&gt;&lt;span&gt;my&lt;/span&gt; &lt;span&gt;$buffer&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;&lt;strong&gt;&quot;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;/x00/x01&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&quot;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt; &lt;span&gt;unpack&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&quot;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;H*&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&quot;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;$buffer&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;&lt;strong&gt;&quot;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;/n&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&quot;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;vec&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;$buffer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;16&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;+=&lt;/span&gt; &lt;span&gt;3&lt;/span&gt;&lt;span&gt;;
&lt;/span&gt;&lt;span&gt;print&lt;/span&gt; &lt;span&gt;unpack&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&quot;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;H*&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&quot;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;$buffer&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;&lt;strong&gt;&quot;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;/n&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&quot;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
&lt;div&gt;&lt;strong&gt;2&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;[Question]:&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;&lt;br /&gt;
&lt;/span&gt;
&lt;p&gt;I am writing a Perl program that sends and receives messages from two sockets and acta as a switch. I have to modify the received messages received from one socket, prepend 3 bytes to the data, and finally send the modified messages to another socket. I adopt select()...sysread()...syswrite() mechanism to poll for messages between sockets. The received messages are stored in $buffer during modification.&lt;/p&gt;
&lt;p&gt;Now I can use following way to get the received messages:&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $hexmsg &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; unpack&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;H*&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $buffer&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;kwd&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; @msg &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $hexmsg &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=~&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;/g );&lt;br /&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then I can insert 3 bytes to @msg. However, I don&#39;t know how to pack the message in @msg into a scalar(such as $buffer) and send it to another socket by syswrite(). Can anybody help me? Thank you in advance!&lt;/p&gt;
&lt;p&gt;BTW, are messages in $buffer binary?&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;[Answer]:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Yes, messages in $buffer are binary (if I&#39;m guessing what you mean by that correctly). If your only reason for unpacking it into @msg is to insert the bytes, don&#39;t. Use&amp;nbsp;&lt;a rel=&quot;nofollow&quot; href=&quot;http://perldoc.perl.org/functions/substr.html&quot;&gt;substr&lt;/a&gt;&amp;nbsp;instead, and just write out the changed $buffer. For instance:&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $buffer&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;&quot;/x01/x02/x03&quot;&lt;/span&gt; &lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;com&quot;&gt;# insert 3 bytes at beginning.&lt;/span&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are doing other things with @msg, you could continue to use that as well as doing the substr insert before writing it out, or you could use substr or pack or split or vec or a regex to parse out the pieces you need. You&#39;d need to describe what you are doing to get more specific help.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>PERL打印收到的Socket消息</title>
   <link href="http://bo-yang.github.com//2009/03/05/print-socket-msg"/>
   <updated>2009-03-05T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2009/03/05/print-socket-msg</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;
&lt;h1&gt;PERL打印收到的Socket消息&lt;/h1&gt;
&lt;div&gt;利用Perl的Select(),sysread()和syswrite()收到的消息将以二进制的形式存储到$buffer中，因此如果直接打印$buffer的内容将得到乱码。要将二进制内容转换为十六进制数串，则必须使用unpack()函数，即：&lt;/div&gt;
&lt;div&gt;my $hexstr=unpack(&quot;H*&quot;,$buffer);&lt;/div&gt;
&lt;div&gt;而此时如果打印$hexstr将得到一系列的十六进制数串（数串的长度是接收到的字节数的两倍），仍然难以阅读。因此，有必要将十六进制数串每两个数字进行拆分并加前缀&amp;ldquo;0x&amp;rdquo;以便阅读。此时需要借助正则表达式进行模式匹配，方法为:&lt;/div&gt;
&lt;div&gt;my @msg=($hexstr =~ m/../g);&lt;/div&gt;
&lt;div&gt;其中.用以匹配一个字符。&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;示例代码如下：&lt;/div&gt;
&lt;div&gt;
&lt;pre&gt;##################################################################
#               DumpMsg
#
# Dump received message in hex mode.
#
# Format: DumpMsg($type, $msglen, $msg);
#
# input:        $type= &#39;MSC&#39; | &#39;BSC&#39;
#               $msglen= msg length
#               $msg= received msg
#
# output:       Print received msg to stderr and log in hex type
##################################################################
sub DumpMsg {
    my $type=$_[0];
    my $msglen=$_[1];
    CoolMisc::coolprint(&quot;Received message from $type: $msglen bytes/n&quot; );
    LogPrint(&quot;Received message from $type: $msglen bytes/n&quot;);
    # change the received message from bin to hex string.
    # my @msg=split(/../,unpack(&quot;H*&quot;, $_[2]),$msglen);
    my $tmp = unpack(&quot;H*&quot;, $_[2]);
    my @msg = ( $tmp =~ m/../g );
    # print the message to stdout and log file.
    for(my $i=0;$i&amp;lt;$msglen;$i++) {
        print &quot;0x$msg[$i] &quot;;
        syswrite($ROUTELOG,&quot;0x$msg[$i] &quot;);
        if ($i%8 ==7) {
            print &quot;/n&quot;;
            syswrite($ROUTELOG,&quot;/n&quot;);
        }
    }
    print &quot;/n&quot;;
    syswrite($ROUTELOG,&quot;/n&quot;);
}
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;参考文献：&lt;/div&gt;
&lt;div&gt;1. Perl Doc-Data::Numbers&amp;nbsp;&lt;a href=&quot;http://perl.active-venture.com/pod/perlfaq4-datanumber.html&quot;&gt;http://perl.active-venture.com/pod/perlfaq4-datanumber.html&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;2. Perl函数pack/unpack:&lt;a href=&quot;http://hi.baidu.com/xemoaya/blog/item/7ea20008f8d23ed563d98660.html&quot;&gt;http://hi.baidu.com/xemoaya/blog/item/7ea20008f8d23ed563d98660.html&lt;/a&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;3.&amp;nbsp;&lt;span&gt;&lt;strong&gt;&lt;a href=&quot;http://stackoverflow.com/questions/372370/how-can-i-split-a-string-into-chunks-of-two-characters-each-in-perl&quot;&gt;How can I split a string into chunks of two characters each in Perl?&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Perl数值转换</title>
   <link href="http://bo-yang.github.com//2009/03/05/perl-data-type-cast"/>
   <updated>2009-03-05T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2009/03/05/perl-data-type-cast</id>
   <content type="html">&lt;/p&gt;
&lt;p&gt;As always with Perl there is more than one way to do it. Below are a few examples of approaches to making common conversions between number representations. This is intended to be representational rather than exhaustive.&lt;/p&gt;
&lt;p&gt;Some of the examples below use the Bit::Vector module from CPAN. The reason you might choose Bit::Vector over the perl built in functions is that it works with numbers of ANY size, that it is optimized for speed on some operations, and for at least some programmers the notation might be familiar.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a name=&quot;How-do-I-convert-hexadecimal-into-decimal&quot;&gt;How do I convert hexadecimal into decimal&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Using perl&#39;s built in conversion of 0x notation:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    $int = 0xDEADBEEF;
    $dec = sprintf(&quot;%d&quot;, $int);  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Using the hex function:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    $int = hex(&quot;DEADBEEF&quot;);
    $dec = sprintf(&quot;%d&quot;, $int);  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Using pack:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    $int = unpack(&quot;N&quot;, pack(&quot;H8&quot;, substr(&quot;0&quot; x 8 . &quot;DEADBEEF&quot;, -8)));
    $dec = sprintf(&quot;%d&quot;, $int);  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Using the CPAN module Bit::Vector:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    use Bit::Vector;
    $vec = Bit::Vector-&amp;gt;new_Hex(32, &quot;DEADBEEF&quot;);
    $dec = $vec-&amp;gt;to_Dec();  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;a name=&quot;How-do-I-convert-from-decimal-to-hexadecimal&quot;&gt;How do I convert from decimal to hexadecimal&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Using sprint:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    $hex = sprintf(&quot;%X&quot;, 3735928559);  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Using unpack&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    $hex = unpack(&quot;H*&quot;, pack(&quot;N&quot;, 3735928559));  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Using Bit::Vector&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    use Bit::Vector;
    $vec = Bit::Vector-&amp;gt;new_Dec(32, -559038737);
    $hex = $vec-&amp;gt;to_Hex();  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;And Bit::Vector supports odd bit counts:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    use Bit::Vector;
    $vec = Bit::Vector-&amp;gt;new_Dec(33, 3735928559);
    $vec-&amp;gt;Resize(32); # suppress leading 0 if unwanted
    $hex = $vec-&amp;gt;to_Hex();  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;a name=&quot;How-do-I-convert-from-octal-to-decimal&quot;&gt;How do I convert from octal to decimal&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Using Perl&#39;s built in conversion of numbers with leading zeros:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    $int = 033653337357; # note the leading 0!
    $dec = sprintf(&quot;%d&quot;, $int);  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Using the oct function:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    $int = oct(&quot;33653337357&quot;);
    $dec = sprintf(&quot;%d&quot;, $int);  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Using Bit::Vector:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    use Bit::Vector;
    $vec = Bit::Vector-&amp;gt;new(32);
    $vec-&amp;gt;Chunk_List_Store(3, split(//, reverse &quot;33653337357&quot;));
    $dec = $vec-&amp;gt;to_Dec();  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;a name=&quot;How-do-I-convert-from-decimal-to-octal&quot;&gt;How do I convert from decimal to octal&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Using sprintf:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    $oct = sprintf(&quot;%o&quot;, 3735928559);  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Using Bit::Vector&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    use Bit::Vector;
    $vec = Bit::Vector-&amp;gt;new_Dec(32, -559038737);
    $oct = reverse join(&#39;&#39;, $vec-&amp;gt;Chunk_List_Read(3));  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;a name=&quot;How-do-I-convert-from-binary-to-decimal&quot;&gt;How do I convert from binary to decimal&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Perl 5.6 lets you write binary numbers directly with the 0b notation:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;	$number = 0b10110110;  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Using pack and ord&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    $decimal = ord(pack(&#39;B8&#39;, &#39;10110110&#39;));  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Using pack and unpack for larger strings&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    $int = unpack(&quot;N&quot;, pack(&quot;B32&quot;,
	substr(&quot;0&quot; x 32 . &quot;11110101011011011111011101111&quot;, -32)));
    $dec = sprintf(&quot;%d&quot;, $int);

    # substr() is used to left pad a 32 character string with zeros.  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Using Bit::Vector:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    $vec = Bit::Vector-&amp;gt;new_Bin(32, &quot;11011110101011011011111011101111&quot;);
    $dec = $vec-&amp;gt;to_Dec();  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;a name=&quot;How-do-I-convert-from-decimal-to-binary&quot;&gt;How do I convert from decimal to binary&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Using unpack;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    $bin = unpack(&quot;B*&quot;, pack(&quot;N&quot;, 3735928559));  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Using Bit::Vector:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; bgcolor=&quot;#000000&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;middle&quot;&gt;
&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;4&quot; width=&quot;100%&quot; bgcolor=&quot;#e8e8e8&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;pre&gt;    use Bit::Vector;
    $vec = Bit::Vector-&amp;gt;new_Dec(32, -559038737);
    $bin = $vec-&amp;gt;to_Bin();  &lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;The remaining transformations (e.g. hex -&amp;gt; oct, bin -&amp;gt; hex, etc.) are left as an exercise to the inclined reader.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
</content>
 </entry>
 
 <entry>
   <title>UNIX Commands Used to Debug</title>
   <link href="http://bo-yang.github.com//2009/03/03/unix-commands-for-debug"/>
   <updated>2009-03-03T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2009/03/03/unix-commands-for-debug</id>
   <content type="html">&lt;div&gt;
&lt;h1&gt;UNIX Commands Used to Debug&lt;/h1&gt;
&lt;div&gt;&lt;/p&gt;
&lt;div&gt;
&lt;h3&gt;1. truss&lt;/h3&gt;
&lt;div&gt;bjbldc:/home/bonny &amp;gt;2&amp;gt; truss -p 6535&lt;/div&gt;
&lt;div&gt;read(11, 0xFFBED6C8, 1024) &amp;nbsp; &amp;nbsp; &amp;nbsp;(sleeping...)&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;2. ps -fu &amp;lt;user_name&amp;gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div&gt;bjbldc:/home/bonny &amp;gt;&amp;gt; ps -fu bonny&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; UID &amp;nbsp; PID &amp;nbsp;PPID &amp;nbsp;C &amp;nbsp; &amp;nbsp;STIME TTY &amp;nbsp; &amp;nbsp; &amp;nbsp;TIME CMD&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny &amp;nbsp;9006 &amp;nbsp;9005 &amp;nbsp;0 &amp;nbsp; Feb 26 ?? &amp;nbsp; &amp;nbsp; &amp;nbsp; 0:01 /usr/dt/bin/dtterm&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 19743 &amp;nbsp;8910 &amp;nbsp;0 &amp;nbsp; Feb 26 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 dtfile -session dtstaGjf&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny &amp;nbsp;8784 &amp;nbsp;8776 &amp;nbsp;0 &amp;nbsp; Feb 16 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:13 dtwm&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny &amp;nbsp;8911 &amp;nbsp;8776 &amp;nbsp;0 &amp;nbsp; Feb 16 ?? &amp;nbsp; &amp;nbsp; &amp;nbsp; 0:01 /usr/dt/bin/dtterm -session dt_.a&lt;/div&gt;
&lt;div&gt;q4t -C -ls&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 18994 &amp;nbsp;8784 &amp;nbsp;0 &amp;nbsp; Feb 26 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /usr/dt/bin/dtexec -open 0 -ttpro&lt;/div&gt;
&lt;div&gt;cid 2.19cDSU 01 8751 1289637095 1 1 39237 135.&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 25275 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 &amp;nbsp; Feb 25 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:11 gvim BMAcpMsgpr.c&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 25106 &amp;nbsp;8911 &amp;nbsp;0 &amp;nbsp; Feb 25 pts/186 &amp;nbsp;0:00 -ksh&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;h3&gt;3. ptree &amp;lt;user_name&amp;gt;&lt;/h3&gt;
&lt;div&gt;
&lt;div&gt;bjbldc:/home/bonny &amp;gt;&amp;gt; ptree bonny&lt;/div&gt;
&lt;div&gt;195 &amp;nbsp; /usr/sbin/inetd -s&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp;6224 &amp;nbsp;in.rshd&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;6225 &amp;nbsp;dtterm -xrm *workspaceList: COOL msc-s COOL/ msc-s -title COOL msc-s Installing&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;6252 &amp;nbsp;tail -f /bld/bonny/coolxdir_2/logs/Mar02.18:42:41/APs/31/COOLAPLOG&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp;6254 &amp;nbsp;in.rshd&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;6256 &amp;nbsp;dtterm -xrm *workspaceList: COOL msc-s COOL/ msc-s -title COOL msc-s Installing&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;6276 &amp;nbsp;tail -f /bld/bonny/coolxdir_2/logs/Mar02.18:42:41/APs/33/COOLAPLOG&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp;6278 &amp;nbsp;in.rshd&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;6279 &amp;nbsp;dtterm -xrm *workspaceList: COOL msc-s COOL/ msc-s -title COOL msc-s Installing&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;6300 &amp;nbsp;tail -f /bld/bonny/coolxdir_2/logs/Mar02.18:42:41/APs/35/COOLAPLOG&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp;6297 &amp;nbsp;in.rshd&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;6298 &amp;nbsp;/usr/bin/ksh /opt/cool/tools/lib/COOLvirtenv -r /bld/bonny/coolxdir_2/APs/31 -a&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;6535 &amp;nbsp;/usr/bin/ksh /opt/cool/tools/lib/COOLstartAP -sL -c80 -Wcool01 -Fcoolap23 -dOWL&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp;6335 &amp;nbsp;in.rshd&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;6336 &amp;nbsp;/usr/bin/ksh /opt/cool/tools/lib/COOLvirtenv -r /bld/bonny/coolxdir_2/APs/35 -a&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;6627 &amp;nbsp;/usr/bin/ksh /opt/cool/tools/lib/COOLstartAP -sA -c80 -Wcool01 -Fcoolap09 -dOWL&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;h3&gt;4. uptime&lt;/h3&gt;
&lt;div&gt;
&lt;div&gt;&amp;nbsp;cool01:/home/bonny &amp;gt;&amp;gt; uptime&lt;/div&gt;
&lt;div&gt;&amp;nbsp;10:17pm &amp;nbsp;up 18:10, &amp;nbsp;2 users, &amp;nbsp;load average: 0.03, 0.01, 0.06&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;h3&gt;5. uname&lt;/h3&gt;
&lt;div&gt;
&lt;div&gt;cool01:/home/bonny &amp;gt;127&amp;gt; uname -a&lt;/div&gt;
&lt;div&gt;SunOS cool01 5.8 Generic_117350-58 sun4u sparc SUNW,UltraAX-i2&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;bjbldc:sc4.2/SUNWspro/bin &amp;gt;&amp;gt; uname -n&lt;/div&gt;
&lt;div&gt;bjbldc&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;h3&gt;6. nmake&lt;/h3&gt;
&lt;div&gt;
&lt;div&gt;bjbldb:bld/bonny/1apx10 &amp;gt;&amp;gt; nmake GLIB10=N -n -k -f mytstmk dumpit &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/div&gt;
&lt;div&gt;+ set +x&lt;/div&gt;
&lt;div&gt;+ cd /bld/bonny/1apx10&lt;/div&gt;
&lt;div&gt;+ /bin/pwd&lt;/div&gt;
&lt;div&gt;+ set -x&lt;/div&gt;
&lt;div&gt;+ : &quot;STARTING ecpc NMAKE IN ROOT `silent date &#39;+%m/%d/%y %H:%M:%S&#39;`&quot;&lt;/div&gt;
&lt;div&gt;+ print FMS_GOLDEN_HDRLIB=&lt;/div&gt;
&lt;div&gt;FMS_GOLDEN_HDRLIB=&lt;/div&gt;
&lt;div&gt;+ rm -f&amp;nbsp;&lt;/div&gt;
&lt;div&gt;+ : &quot;COMPLETED ecpc NMAKE IN ROOT `silent date &#39;+%m/%d/%y %H:%M:%S&#39;`&quot;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;h3&gt;7. lb&lt;/h3&gt;
&lt;div&gt;
&lt;div&gt;bjbldb:bld/bonny/1apx10 &amp;gt;&amp;gt; lb -iA -mapbld&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;LB Pool Status for apbld &amp;nbsp;(03/02/09 23:58:21):&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;MACH &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;RTP &amp;nbsp;%AV &amp;nbsp;RSP &amp;nbsp;CPUF &amp;nbsp;MLA IMLA &amp;nbsp;PLA &amp;nbsp;LA1 &amp;nbsp; LA5 &amp;nbsp; LA15&lt;/div&gt;
&lt;div&gt;bjbldb &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;1400 &amp;nbsp; 99 &amp;nbsp; 1 &amp;nbsp;1406 &amp;nbsp;20.2 &amp;nbsp;20 &amp;nbsp;0.08 &amp;nbsp;0.06 &amp;nbsp;0.08 &amp;nbsp;0.30&lt;/div&gt;
&lt;div&gt;bjbldc &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;1394 &amp;nbsp; 99 &amp;nbsp; 3 &amp;nbsp;1406 &amp;nbsp;20.2 &amp;nbsp;20 &amp;nbsp;0.17 &amp;nbsp;0.16 &amp;nbsp;0.20 &amp;nbsp;0.29&lt;/div&gt;
&lt;div&gt;bjbldd &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;1363 &amp;nbsp; 96 &amp;nbsp; 2 &amp;nbsp;1406 &amp;nbsp;20.2 &amp;nbsp;20 &amp;nbsp;0.61 &amp;nbsp;0.60 &amp;nbsp;0.63 &amp;nbsp;0.69&lt;/div&gt;
&lt;div&gt;------------------------------------------------------------------------------&lt;/div&gt;
&lt;div&gt;AVERAGE &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 1385 &amp;nbsp; 98 &amp;nbsp; - &amp;nbsp;1406 &amp;nbsp;20.2 &amp;nbsp;20 &amp;nbsp;0.29 &amp;nbsp;0.27 &amp;nbsp;0.30 &amp;nbsp;0.43&lt;/div&gt;
&lt;div&gt;TOTAL &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 4157 &amp;nbsp; 98 &amp;nbsp; 3 &amp;nbsp;4218 &amp;nbsp;60.6 &amp;nbsp;60 &amp;nbsp;0.86 &amp;nbsp;0.82 &amp;nbsp;0.91 &amp;nbsp;1.28&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;apbld : &amp;nbsp;98% available &amp;nbsp; (98% available IMLA)&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;bjbldb:bld/bonny/1apx10 &amp;gt;&amp;gt; lb -m bjbldc nmake GLIB10=N -n -k -f mytstmk dumpit&lt;/div&gt;
&lt;div&gt;+ set +x&lt;/div&gt;
&lt;div&gt;+ cd /bld/bonny/1apx10&lt;/div&gt;
&lt;div&gt;+ /bin/pwd&lt;/div&gt;
&lt;div&gt;+ set -x&lt;/div&gt;
&lt;div&gt;+ : &quot;STARTING ecpc NMAKE IN ROOT `silent date &#39;+%m/%d/%y %H:%M:%S&#39;`&quot;&lt;/div&gt;
&lt;div&gt;+ print FMS_GOLDEN_HDRLIB=&lt;/div&gt;
&lt;div&gt;FMS_GOLDEN_HDRLIB=&lt;/div&gt;
&lt;div&gt;+ rm -f&amp;nbsp;&lt;/div&gt;
&lt;div&gt;+ : &quot;COMPLETED ecpc NMAKE IN ROOT `silent date &#39;+%m/%d/%y %H:%M:%S&#39;`&quot;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;bjbldb:bld/bonny/1apx10 &amp;gt;&amp;gt; lb -iA -m CoolServers.ngnap&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;LB Pool Status for coolservers.ngnap &amp;nbsp;(03/03/09 00:15:06):&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;MACH &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;RTP &amp;nbsp;%AV &amp;nbsp;RSP &amp;nbsp;CPUF &amp;nbsp;MLA IMLA &amp;nbsp;PLA &amp;nbsp;LA1 &amp;nbsp; LA5 &amp;nbsp; LA15&lt;/div&gt;
&lt;div&gt;coolap26 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;1361 &amp;nbsp; 94 &amp;nbsp;21 &amp;nbsp;1440 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.54 &amp;nbsp;0.52 &amp;nbsp;0.52 &amp;nbsp;0.52&lt;/div&gt;
&lt;div&gt;coolap14 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 698 &amp;nbsp; 99 &amp;nbsp; 1 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.02 &amp;nbsp;0.00 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;coolap01 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 698 &amp;nbsp; 99 &amp;nbsp; 2 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.03 &amp;nbsp;0.00 &amp;nbsp;0.01 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;coolap12 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 698 &amp;nbsp; 99 &amp;nbsp; 4 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.02 &amp;nbsp;0.00 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;coolap09 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 698 &amp;nbsp; 99 &amp;nbsp; 5 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.02 &amp;nbsp;0.00 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;coolap21 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 698 &amp;nbsp; 99 &amp;nbsp; 6 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.02 &amp;nbsp;0.00 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;coolap19 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 698 &amp;nbsp; 99 &amp;nbsp;11 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.02 &amp;nbsp;0.00 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;coolap13 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 698 &amp;nbsp; 99 &amp;nbsp;13 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.02 &amp;nbsp;0.00 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;coolap16 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 698 &amp;nbsp; 99 &amp;nbsp;14 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.02 &amp;nbsp;0.00 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;coolap24 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 698 &amp;nbsp; 99 &amp;nbsp;16 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.02 &amp;nbsp;0.00 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;coolap23 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 698 &amp;nbsp; 99 &amp;nbsp;17 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.02 &amp;nbsp;0.00 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;coolap25 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 698 &amp;nbsp; 99 &amp;nbsp;19 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.02 &amp;nbsp;0.00 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;coolap02 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 695 &amp;nbsp; 99 &amp;nbsp; 3 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.07 &amp;nbsp;0.01 &amp;nbsp;0.04 &amp;nbsp;0.10&lt;/div&gt;
&lt;div&gt;coolap18 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 695 &amp;nbsp; 99 &amp;nbsp; 7 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.06 &amp;nbsp;0.04 &amp;nbsp;0.04 &amp;nbsp;0.06&lt;/div&gt;
&lt;div&gt;coolap07 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 695 &amp;nbsp; 99 &amp;nbsp; 8 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.06 &amp;nbsp;0.05 &amp;nbsp;0.11 &amp;nbsp;0.23&lt;/div&gt;
&lt;div&gt;coolap05 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 695 &amp;nbsp; 99 &amp;nbsp; 9 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.07 &amp;nbsp;0.05 &amp;nbsp;0.05 &amp;nbsp;0.10&lt;/div&gt;
&lt;div&gt;coolap10 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 695 &amp;nbsp; 99 &amp;nbsp;10 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.07 &amp;nbsp;0.05 &amp;nbsp;0.05 &amp;nbsp;0.07&lt;/div&gt;
&lt;div&gt;coolap20 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 695 &amp;nbsp; 99 &amp;nbsp;15 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.06 &amp;nbsp;0.02 &amp;nbsp;0.04 &amp;nbsp;0.06&lt;/div&gt;
&lt;div&gt;coolap08 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 693 &amp;nbsp; 99 &amp;nbsp;12 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.10 &amp;nbsp;0.08 &amp;nbsp;0.10 &amp;nbsp;0.21&lt;/div&gt;
&lt;div&gt;coolap17 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 691 &amp;nbsp; 98 &amp;nbsp;18 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.13 &amp;nbsp;0.11 &amp;nbsp;0.13 &amp;nbsp;0.12&lt;/div&gt;
&lt;div&gt;coolap11 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 623 &amp;nbsp; 89 &amp;nbsp;20 &amp;nbsp; 700 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;1.09 &amp;nbsp;0.96 &amp;nbsp;0.39 &amp;nbsp;0.26&lt;/div&gt;
&lt;div&gt;------------------------------------------------------------------------------&lt;/div&gt;
&lt;div&gt;AVERAGE &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;724 &amp;nbsp; 98 &amp;nbsp; - &amp;nbsp; 735 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.12 &amp;nbsp;0.09 &amp;nbsp;0.07 &amp;nbsp;0.09&lt;/div&gt;
&lt;div&gt;TOTAL &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;15216 &amp;nbsp; 98 &amp;nbsp;21 15440 210.0 210 &amp;nbsp;2.48 &amp;nbsp;1.89 &amp;nbsp;1.48 &amp;nbsp;1.84&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;coolservers.ngnap : &amp;nbsp;98% available &amp;nbsp; (98% available IMLA)&amp;nbsp;&lt;/div&gt;
&lt;div&gt;bjbldb:bld/bonny/1apx10 &amp;gt;&amp;gt; lb -iA -m coolservers&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;LB Pool Status for coolservers &amp;nbsp;(03/03/09 00:31:49):&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;MACH &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;RTP &amp;nbsp;%AV &amp;nbsp;RSP &amp;nbsp;CPUF &amp;nbsp;MLA IMLA &amp;nbsp;PLA &amp;nbsp;LA1 &amp;nbsp; LA5 &amp;nbsp; LA15&lt;/div&gt;
&lt;div&gt;cool01 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 660 &amp;nbsp; 99 &amp;nbsp; 1 &amp;nbsp; 662 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.02 &amp;nbsp;0.00 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;cool11 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 660 &amp;nbsp; 99 &amp;nbsp; 6 &amp;nbsp; 662 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.02 &amp;nbsp;0.00 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;cool05 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 660 &amp;nbsp; 99 &amp;nbsp; 8 &amp;nbsp; 662 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.02 &amp;nbsp;0.00 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;cool13 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 660 &amp;nbsp; 99 &amp;nbsp; 9 &amp;nbsp; 662 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.03 &amp;nbsp;0.01 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;cool02 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 660 &amp;nbsp; 99 &amp;nbsp;12 &amp;nbsp; 662 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.03 &amp;nbsp;0.02 &amp;nbsp;0.01 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;cool09 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 659 &amp;nbsp; 99 &amp;nbsp;10 &amp;nbsp; 662 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.04 &amp;nbsp;0.01 &amp;nbsp;0.01 &amp;nbsp;0.03&lt;/div&gt;
&lt;div&gt;cool08 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 642 &amp;nbsp; 99 &amp;nbsp; 2 &amp;nbsp; 644 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.02 &amp;nbsp;0.00 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;cool07 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 642 &amp;nbsp; 99 &amp;nbsp; 5 &amp;nbsp; 644 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.02 &amp;nbsp;0.00 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;cool10 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 641 &amp;nbsp; 99 &amp;nbsp;11 &amp;nbsp; 644 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.03 &amp;nbsp;0.01 &amp;nbsp;0.00 &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;cool14 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 591 &amp;nbsp; 89 &amp;nbsp; 3 &amp;nbsp; 662 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;1.07 &amp;nbsp;1.05 &amp;nbsp;1.03 &amp;nbsp;1.04&lt;/div&gt;
&lt;div&gt;cool12 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 589 &amp;nbsp; 88 &amp;nbsp; 7 &amp;nbsp; 662 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;1.10 &amp;nbsp;1.08 &amp;nbsp;1.06 &amp;nbsp;1.17&lt;/div&gt;
&lt;div&gt;cool03 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 376 &amp;nbsp; 56 &amp;nbsp; 4 &amp;nbsp; 662 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;4.32 &amp;nbsp;4.14 &amp;nbsp;3.36 &amp;nbsp;2.59&lt;/div&gt;
&lt;div&gt;------------------------------------------------------------------------------&lt;/div&gt;
&lt;div&gt;AVERAGE &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;620 &amp;nbsp; 94 &amp;nbsp; - &amp;nbsp; 658 &amp;nbsp;10.0 &amp;nbsp;10 &amp;nbsp;0.56 &amp;nbsp;0.53 &amp;nbsp;0.46 &amp;nbsp;0.41&lt;/div&gt;
&lt;div&gt;TOTAL &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 7440 &amp;nbsp; 94 &amp;nbsp;12 &amp;nbsp;7890 120.0 120 &amp;nbsp;6.72 &amp;nbsp;6.32 &amp;nbsp;5.47 &amp;nbsp;4.91&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;coolservers : &amp;nbsp;94% available &amp;nbsp; (94% available IMLA)&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;8.&amp;nbsp;timex&amp;nbsp;&lt;/h3&gt;
&lt;div&gt;timex- time a &amp;nbsp;command; &amp;nbsp;report &amp;nbsp;process &amp;nbsp;data &amp;nbsp;and &amp;nbsp;system&amp;nbsp;activity.&lt;/div&gt;
&lt;div&gt;&lt;/p&gt;
&lt;div&gt;bjbldb:bld/bonny/1apx10 &amp;gt;&amp;gt; timex ping cool01&lt;/p&gt;
&lt;div&gt;cool01 is alive&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;real &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;user &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0.01&lt;/div&gt;
&lt;div&gt;sys &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0.00&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;h3&gt;9. remsh&lt;/h3&gt;
&lt;div&gt;
&lt;div&gt;bjbldb:bld/bonny/1apx10 &amp;gt;&amp;gt; remsh bjbldd ps -fu bonny&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; UID &amp;nbsp; PID &amp;nbsp;PPID &amp;nbsp;C &amp;nbsp; &amp;nbsp;STIME TTY &amp;nbsp; &amp;nbsp; &amp;nbsp;TIME CMD&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 29793 29752 &amp;nbsp;0 22:18:04 pts/179 &amp;nbsp;0:00 rlogin bjbldc&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 15715 15669 &amp;nbsp;0 &amp;nbsp; Feb 26 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 dtfile -session dtstaGjf&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 23825 23779 &amp;nbsp;0 00:38:20 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /usr/bin/remsh cool01 eval set -aSTART[0]=/home/bonny/.env[&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny &amp;nbsp;2409 15716 &amp;nbsp;0 16:05:08 pts/41 &amp;nbsp; 0:00 -ksh&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 14037 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 16:33:12 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:01 gvim COOLein2ap&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 15542 15541 &amp;nbsp;0 &amp;nbsp; Feb 26 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /opt/exp/lib/vnc/vncconfig.bin -nowin&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 29545 29543 &amp;nbsp;0 22:17:05 pts/195 &amp;nbsp;0:00 /bin/ksh&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 23779 &amp;nbsp;2666 &amp;nbsp;0 00:38:19 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /usr/bin/remsh cool01 eval set -aSTART[0]=/home/bonny/.env[&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 24503 24502 &amp;nbsp;0 20:49:36 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /bin/ksh /opt/cool/bin/clear3bemlab -i -p -lab bonny&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 15498 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;1 &amp;nbsp; Feb 26 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2:04 Xvnc :10 -desktop bjbldd:10 () -httpd /opt/exp/lib/vnc/clas&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 23776 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 00:38:19 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /bin/ksh /opt/cool/tools/lib/GetDynCOOLID UNAME=coolap01 CO&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 24175 24174 &amp;nbsp;0 20:40:11 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /bin/ksh /opt/cool/bin/clear3bemlab -i -p -lab bonny&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 13782 13780 &amp;nbsp;0 16:28:08 pts/180 &amp;nbsp;0:00 /bin/ksh&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 24502 24343 &amp;nbsp;0 20:49:36 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /bin/ksh /opt/cool/bin/ldcool -u bonny -e apollo -o is41 -l&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 15668 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 &amp;nbsp; Feb 26 pts/118 &amp;nbsp;0:00 /usr/dt/bin/ttsession&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 23482 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 00:38:15 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /bin/ksh /opt/cool/tools/lib/GetDynCOOLID UNAME=cool01&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 19606 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 17:06:00 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:12 gvim /apx/ecpc33/OFC5L33.0/1apx10/rules/tps.mk&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny &amp;nbsp;2666 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 16:07:01 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:11 /opt/cool/tools/lib/TclPro1.5/solaris-sparc/bin/wish8.3 -f&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 28765 15692 &amp;nbsp;0 22:14:32 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /usr/dt/bin/dtexec -open 0 -ttprocid 2.19fbdI 01 15668 1289&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 13970 13969 &amp;nbsp;0 13:45:33 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /bin/ksh /opt/cool/bin/ldcool -u bonny -e athena -o is41 -l&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 28767 28765 &amp;nbsp;0 22:14:32 ?? &amp;nbsp; &amp;nbsp; &amp;nbsp; 0:00 /usr/dt/bin/dtterm&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 24588 24587 &amp;nbsp;0 20:51:46 pts/41 &amp;nbsp; 0:00 rlogin cool01&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 14189 14162 &amp;nbsp;2 13:45:39 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; 40:47 rm -rf /opt/cool2b/bonny/APs/21&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 15717 15669 &amp;nbsp;0 &amp;nbsp; Feb 26 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:01 /usr/dt/bin/sdtperfmeter -f -H -t cpu -t disk -s 1 -name fp&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 14126 14125 &amp;nbsp;0 13:45:39 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /bin/ksh /opt/cool/bin/clear3bemlab -i -p -lab bonny&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 15637 15635 &amp;nbsp;0 &amp;nbsp; Feb 26 pts/118 &amp;nbsp;0:00 -ksh -c &amp;nbsp; &amp;nbsp; &amp;nbsp;unset DT; &amp;nbsp; &amp;nbsp; DISPLAY=bjbldd:10; &amp;nbsp; &amp;nbsp; &amp;nbsp; /usr/dt&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 15716 15669 &amp;nbsp;0 &amp;nbsp; Feb 26 ?? &amp;nbsp; &amp;nbsp; &amp;nbsp; 0:03 /usr/dt/bin/dtterm -session dt_.aq4t -C -ls&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 23483 23482 &amp;nbsp;0 00:38:15 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 sleep 1800&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 29752 29750 &amp;nbsp;0 22:17:55 pts/179 &amp;nbsp;0:00 /bin/ksh&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 24132 24019 &amp;nbsp;0 20:40:08 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 tail +0f /tmp/ldcool.24019/log.ldcool_bonny_bonny&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 15541 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 &amp;nbsp; Feb 26 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /opt/exp/bin/ksh /opt/exp/lib/vnc/vncconfig -nowin&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 29750 29749 &amp;nbsp;0 22:17:55 ?? &amp;nbsp; &amp;nbsp; &amp;nbsp; 0:01 /usr/dt/bin/dtterm&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 19600 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 17:05:59 pts/180 &amp;nbsp;0:00 cscope -dl -f /apx/ecpc33/OFC5L33.0/1apx10/cscope/cscope.ou&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 15692 15669 &amp;nbsp;0 &amp;nbsp; Feb 26 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:15 dtwm&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 15634 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 &amp;nbsp; Feb 26 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /usr/dt/bin/dsdm&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 29570 29569 &amp;nbsp;0 22:17:09 pts/195 &amp;nbsp;0:00 rlogin cool01&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 29794 29793 &amp;nbsp;0 22:18:04 pts/179 &amp;nbsp;0:00 rlogin bjbldc&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 13879 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 16:29:06 pts/180 &amp;nbsp;0:00 cscope -dl -f /apx/ecpc33/OFC5L33.0/1apx10/cscope/cscope.ou&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 14082 13970 &amp;nbsp;0 13:45:38 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 tail +0f /tmp/ldcool.13970/log.ldcool_bonny_bonny&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 24019 24018 &amp;nbsp;0 20:40:07 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /bin/ksh /opt/cool/bin/ldcool -u bonny -e apollo -o is41 -l&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 23823 23779 &amp;nbsp;0 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0:00 &amp;lt;defunct&amp;gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 14289 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 16:38:04 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:19 gvim /opt/nwstools/bin/getnmakevar&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 15533 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 &amp;nbsp; Feb 26 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /bin/ksh /usr/dt/bin/Xsession&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 28773 28767 &amp;nbsp;0 22:14:33 pts/78 &amp;nbsp; 0:00 /bin/ksh&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 29542 15692 &amp;nbsp;0 22:17:05 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /usr/dt/bin/dtexec -open 0 -ttprocid 2.19fbdI 01 15668 1289&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 15669 15637 &amp;nbsp;0 &amp;nbsp; Feb 26 pts/118 &amp;nbsp;0:00 /usr/dt/bin/dtsession&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 14162 14126 &amp;nbsp;0 13:45:39 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /bin/ksh /opt/cool/tools/bin/rmv_coolap -C /opt/cool2b/bonn&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 23777 23776 &amp;nbsp;0 00:38:19 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 sleep 1800&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 24562 24503 &amp;nbsp;1 20:49:36 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; 17:28 rm -rf APs&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 29569 29545 &amp;nbsp;0 22:17:09 pts/195 &amp;nbsp;0:00 rlogin cool01&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 24232 24175 &amp;nbsp;3 20:40:11 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; 15:44 rm -rf APs&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 14125 13970 &amp;nbsp;0 13:45:39 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /bin/ksh /opt/cool/bin/ldcool -u bonny -e athena -o is41 -l&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 15635 15533 &amp;nbsp;0 &amp;nbsp; Feb 26 pts/118 &amp;nbsp;0:00 /usr/dt/bin/sdt_shell -c &amp;nbsp; &amp;nbsp; &amp;nbsp;unset DT; &amp;nbsp; &amp;nbsp; DISPLAY=bjbldd:&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 13779 15692 &amp;nbsp;0 16:28:08 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /usr/dt/bin/dtexec -open 0 -ttprocid 2.19fbdI 01 15668 1289&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 13882 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 16:29:07 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:10 gvim coolit&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 14034 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 16:33:12 pts/180 &amp;nbsp;0:00 cscope -dl -f /apx/ecpc33/OFC5L33.0/1apx10/cscope/cscope.ou&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 14286 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 16:38:03 pts/180 &amp;nbsp;0:00 cscope -dl -f /apx/ecpc33/OFC5L33.0/1apx10/cscope/cscope.ou&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 29749 15692 &amp;nbsp;0 22:17:55 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /usr/dt/bin/dtexec -open 0 -ttprocid 2.19fbdI 01 15668 1289&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 24343 24342 &amp;nbsp;0 20:49:33 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /bin/ksh /opt/cool/bin/ldcool -u bonny -e apollo -o is41 -l&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 24460 24343 &amp;nbsp;0 20:49:35 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 tail +0f /tmp/ldcool.24343/log.ldcool_bonny_bonny&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 29543 29542 &amp;nbsp;0 22:17:05 ?? &amp;nbsp; &amp;nbsp; &amp;nbsp; 0:01 /usr/dt/bin/dtterm&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 13780 13779 &amp;nbsp;0 16:28:08 ?? &amp;nbsp; &amp;nbsp; &amp;nbsp; 0:00 /usr/dt/bin/dtterm&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 24174 24019 &amp;nbsp;0 20:40:11 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:00 /bin/ksh /opt/cool/bin/ldcool -u bonny -e apollo -o is41 -l&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 24587 &amp;nbsp;2409 &amp;nbsp;0 20:51:46 pts/41 &amp;nbsp; 0:00 rlogin cool01&lt;/div&gt;
&lt;div&gt;bjbldb:bld/bonny/1apx10 &amp;gt;&amp;gt; remsh bjbldd ps -fu bonny | grep nmake&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; bonny 14289 &amp;nbsp; &amp;nbsp; 1 &amp;nbsp;0 16:38:04 ? &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0:19 gvim /opt/nwstools/bin/getnmakevar&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Apple Store的错误</title>
   <link href="http://bo-yang.github.com//2009/03/03/an-error-made-by-apple-store"/>
   <updated>2009-03-03T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2009/03/03/an-error-made-by-apple-store</id>
   <content type="html">&lt;p&gt;今天在Apple4us上看到Apple将于今晚发布新的产品，并且Apple Store的网页正在升级，已经无法正常显示产品信息，于是就随便打开看了一看。想不到不看则以，一看还真让我深感意外: Apple竟然做起了张冠李戴、分裂我中华国土的勾当！&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;尽管本人对Apple景仰已久，但大是大非面前岂能是非不分？遂给Apple发邮件一封,内容如下：&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;英文开始&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;Dear Sir/Ms. ,&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;I found something confusing in the webpage &lt;a href=&quot;http://store.apple.com/&quot;&gt;http://store.apple.com/&lt;/a&gt;(following &quot;You can contact our telesales team at the following numbers:&quot;).&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;The logo of Taiwan is not appropriate: you add two Chinese characters &quot;日本&quot; above &quot;Taiwan&quot;, which will confuse many people. Taiwan is a part of China, so you should add &quot;中国&quot; instead.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;I sincerely remind you about this negligence and hope you can change the logo as soon as possible.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;Thank you in advance!&lt;br /&gt;
Best wishes!&lt;/div&gt;
&lt;div&gt;&lt;a name=&quot;英文结束&quot;&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;我们还是对Apple的行为拭目以待吧。&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_239gjv5ggfw_b&quot; alt=&quot;Apple的错误&quot; width=&quot;800&quot; height=&quot;481&quot; /&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>网页取词并调用Google Translate</title>
   <link href="http://bo-yang.github.com//2009/02/17/call-google-translate"/>
   <updated>2009-02-17T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2009/02/17/call-google-translate</id>
   <content type="html">&lt;p&gt;1. translate.html&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;&amp;lt;html&amp;gt; 
  &amp;lt;head&amp;gt;     
    &amp;lt;mce:script src=&quot;http://graphics8.nytimes.com/js/common.js&quot; mce_src=&quot;http://graphics8.nytimes.com/js/common.js&quot; type=&quot;text/javascript&quot;&amp;gt;&amp;lt;/mce:script&amp;gt; 
    &amp;lt;mce:script type=&quot;text/javascript&quot; language=&quot;JavaScript&quot; src=&quot;file:///C:/Documents%20and%20Settings/bonny/My%20Documents/GoogleApps/FreeTranslator/altClickToSearch.js&quot; mce_src=&quot;file:///C:/Documents%20and%20Settings/bonny/My%20Documents/GoogleApps/FreeTranslator/altClickToSearch.js&quot;&amp;gt;&amp;lt;/mce:script&amp;gt;
    &amp;lt;mce:script type=&quot;text/javascript&quot; src=&quot;http://www.google.com/jsapi&quot; mce_src=&quot;http://www.google.com/jsapi&quot;&amp;gt;&amp;lt;/mce:script&amp;gt;
    &amp;lt;link href=&quot;http://www.google.com/uds/modules/elements/transliteration/api.css&quot; mce_href=&quot;http://www.google.com/uds/modules/elements/transliteration/api.css&quot;
      type=&quot;text/css&quot; rel=&quot;stylesheet&quot;/&amp;gt; 
    &amp;lt;mce:script type=&quot;text/javascript&quot;&amp;gt;&amp;lt;!--
 
    
    google.load(&quot;language&quot;, &quot;1&quot;);
 
    function initialize() {
      var text = document.getElementById(&quot;text&quot;).innerHTML;
      google.language.detect(text, function(result) {
        if (!result.error &amp;amp;&amp;amp; result.language) {
          google.language.translate(text, result.language, &quot;en&quot;,
                                    function(result) {
            var translated = document.getElementById(&quot;translation&quot;);
            if (result.translation) {
              translated.innerHTML = result.translation;
            }
          });
        }
      });
    }
    google.setOnLoadCallback(initialize);
 
    
// --&amp;gt;&amp;lt;/mce:script&amp;gt; 
  &amp;lt;/head&amp;gt; 
  &amp;lt;body&amp;gt; 
    &amp;lt;div id=&quot;text&quot;&amp;gt;你好，见到你很高兴!&amp;lt;/div&amp;gt; 
      &amp;lt;div id=&quot;translation&quot;&amp;gt;&amp;lt;/div&amp;gt; 
    &amp;lt;p&amp;gt;Detection of Unicode font rendering supportNew!
Browsers and operating systems may or may not have the support for rendering particular Unicode fonts. You can detect whether the user using your webpage has support for rendering the fonts of a given language in a readable way or not using the font rendering support detection API. Please note that this works correctly for Unicode fonts alone. If your webpage renders using non-Unicode fonts, this function will not be useful for you. If font rendering support is not present for a given language, there are several solutions available to fix this - please read this article for more information.&amp;lt;/p&amp;gt; 
   &amp;lt;textarea id=&quot;transliterateTextarea&quot; style=&quot;width:600px;height:200px&quot;&amp;gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;2. altClickToSearch.js&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;NYTD.require(&quot;http://graphics8.nytimes.com/js/app/lib/prototype/1.6.0.2/prototype.js&quot;, function(){NYTD.WordReference.initialize();});
NYTD.WordReference = (function(){
  
  var selection, selectionText, selectionButton, newRange;
  
  function handleClick(event) {
    if (selectionButton){
      cleanUp();
    }
    
    selection = getSelection();
    selectionText = selection &amp;amp;&amp;amp; selection.toString();
    if (selectionText) {
      window.setTimeout(insertButton, 0);
      event.stop();
    }
  }
  
  function getSelection() {
    return Try.these(
      function() { return window.getSelection() },
      function() { return document.getSelection() },
      function() { 
        var selection = document.selection &amp;amp;&amp;amp; document.selection.createRange();
        selection.toString = function() { return this.text };
        return selection;
      }
    ) || false;
  }
  
  function insertButton() {
    
    selectionButton = new Element(
        &#39;span&#39;, {
          &#39;className&#39;:&#39;nytd_selection_button&#39;,
          &#39;id&#39;:&#39;nytd_selection_button&#39;,
          &#39;title&#39;:&#39;Lookup Word&#39;,
          &#39;style&#39;: &#39;margin:-20px 0 0 -20px; position:absolute; background:url
(http://graphics8.nytimes.com/images/global/word_reference/ref_bubble.png);width:25px;height:29px;cursor:pointer;_background-image: none;filter: 
progid:DXImageTransform.Microsoft.AlphaImageLoader(src=&quot;http://graphics8.nytimes.com/images/global/word_reference/ref_bubble.png&quot;, sizingMethod=&quot;image&quot;);&#39;
        }
    )
      
    if (Prototype.Browser.IE) {
      var tmp = new Element(&#39;div&#39;);
      tmp.appendChild(selectionButton);
      newRange = selection.duplicate();
      newRange.setEndPoint( &quot;StartToEnd&quot;, selection);
      newRange.pasteHTML(tmp.innerHTML);
      selectionButton = $(&#39;nytd_selection_button&#39;);
    }
    else {
      var range = selection.getRangeAt(0);
      newRange = document.createRange();
      newRange.setStart(selection.focusNode, range.endOffset);
      newRange.insertNode(selectionButton);
    }
    
    Element.observe(selectionButton, &#39;mouseup&#39;, exportSelection, true);
    
  }
  
  function cleanUp() {
    selection = null;
    selectionButton.stopObserving(&#39;mouseup&#39;, exportSelection);
    newRange &amp;amp;&amp;amp; newRange.pasteHTML &amp;amp;&amp;amp; newRange.pasteHTML(&#39;&#39;);
    newRange = null;
    selectionButton.remove();
    selectionButton = null;
    selectionText = &#39;&#39;;
  }
  
  function exportSelection(event) {
 //    var url = &#39;http://www.google.com/dictionary?langpair=en|zh-CN&amp;amp;q=&#39; + encodeURIComponent(selectionText) + &#39;&amp;amp;hl=zh-CN&amp;amp;aq=f&#39;;
 //   var newwin = window.open(url,&#39;answersdotcom&#39;,&#39;height=450,width=820,location=false,menubar=false,toolbar=false,status=false,resizable, scrollbars&#39;);
//    if (newwin) newwin.focus();
//    event.stop();
	google.language.translate(selectionText, &quot;en&quot;, &quot;zh-CN&quot;, function(result) {
  	if (!result.error) {
    		alert(encodeURIComponent(selectionText) +&quot;:&quot;+result.translation);
  	}
	
	});
  }
  
  return {
    initialize: function() {
      document.observe(&#39;mouseup&#39;, handleClick, false);
    }
  };
  
})();&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Google老矣，能不宕否？</title>
   <link href="http://bo-yang.github.com//2009/02/10/google-out-of-service"/>
   <updated>2009-02-10T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2009/02/10/google-out-of-service</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;
&lt;h1 style=&quot;text-align:center;&quot;&gt;&lt;span&gt;Goolge老矣，能不宕否？&lt;/span&gt;&lt;/h1&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;金融风暴来袭，&lt;/span&gt;&amp;nbsp;Google&lt;span&gt;难以独善其身本在我意料之中，但令我感到意外的是&lt;/span&gt;Google&lt;span&gt;竟也裁员，更令我大跌眼镜的是&lt;/span&gt;Google&lt;span&gt;的各项服务质量竟直线下降&lt;/span&gt;:&amp;nbsp;&lt;span&gt;许多常用的服务下线（如&lt;/span&gt;Google Notes&lt;span&gt;），宕机不断（&lt;/span&gt;Goolge Apps&lt;span&gt;，&lt;/span&gt;Gmail&lt;span&gt;啊），&lt;/span&gt;Android&lt;span&gt;雷声大雨点小（连&lt;/span&gt;Android&lt;span&gt;的创始人都出走了）,Chrome发展缓慢&amp;hellip;&amp;hellip;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;我应该算&lt;/span&gt;Google&lt;span&gt;的忠实&lt;/span&gt;Fans&lt;span&gt;了：我一直在用&lt;/span&gt;Google Documents, Gmail, Google&amp;nbsp; Map, Google Earth, Google Notes, Chrome, Google Finance, Google Reader, iGoogle, Picasa, Youtube&lt;span&gt;&amp;hellip;&amp;hellip;&lt;/span&gt;&amp;nbsp;&lt;span&gt;还准备研究一下&lt;/span&gt;Google Apps&lt;span&gt;，&lt;/span&gt;&amp;nbsp;&lt;span&gt;下载了&lt;/span&gt;Android SDK&amp;nbsp;&lt;span&gt;并且编了一个&lt;/span&gt;hello world&lt;span&gt;程序，但由于没有时间就没有继续。当然就更不要说&lt;/span&gt;Google Search&lt;span&gt;了。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;以前，&lt;/span&gt;Google&lt;span&gt;每推出一项新的服务都会令人眼前一亮，即便今天&lt;/span&gt;google&amp;nbsp;&lt;span&gt;仍然占据着新闻媒体的头条。对于这样一个诞生不过十年，上市不过五年的&lt;/span&gt;Baby Giant&lt;span&gt;而言，媒体、用户给予它的赞誉、光环实在是太多了。而&lt;/span&gt;Google&lt;span&gt;也确实不负众望，推出了一个又一个服务。但随着服务的增加，人们开始迷惑：&lt;/span&gt;Google&lt;span&gt;到底要干什么？一大堆杂七杂八的在线服务，相互之间并没有任何根本的联系，难免让人一头雾水。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;Google&lt;span&gt;也感觉到了用户的迷惑，于是在&lt;/span&gt;2008&lt;span&gt;年初抛出了&amp;ldquo;云计算&amp;rdquo;的概念。当然，云计算早已有之，而且第一个推出商业云计算平台的也不是&lt;/span&gt;Google&lt;span&gt;而是&lt;/span&gt;Amazon&lt;span&gt;。但无论如何，&lt;/span&gt;Google&lt;span&gt;的云计算确实能够从某种程度上解释它的一系列服务，但细细想来却也有些牵强，毕竟有些服务很难往云计算上靠拢，比如&lt;/span&gt;Picasa&amp;nbsp;&lt;span&gt;等桌面软件；另一方面，把搜索引擎、网络邮箱等等都归结为云计算，未免有些宽泛，如此一来岂不是所有推出网络邮箱的公司都可以算作云计算服务商？那云计算岂不是也没有多大的技术含量？尽管我很早就对&amp;ldquo;网格计算&amp;rdquo;心向往之，对于云计算也是非常期待，但我对&lt;/span&gt;Google&lt;span&gt;云计算的一些定义表示怀疑。业界短期内也不能就&amp;ldquo;云计算&amp;rdquo;达成共识，现在还只是处于概念炒作阶段。毕竟&lt;/span&gt;Google&lt;span&gt;的迅猛发展很大程度上是通过并购实现的，&lt;/span&gt;Picasa&lt;span&gt;本来并不是&lt;/span&gt;Google&lt;span&gt;的产品。对于&lt;/span&gt;Google&lt;span&gt;云计算总体的感觉是比较粗糙。但我坚信在所有口口声声要做云计算的公司中，&lt;/span&gt;Google&lt;span&gt;无疑是最有技术实力的一个。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;由于&lt;/span&gt;Google&lt;span&gt;的优势在于网络，本能的要将所有的服务放在&amp;ldquo;云&amp;rdquo;上，尽可能的摆脱&amp;ldquo;端&amp;rdquo;的束缚。而微软恰恰相反，微软的云计算理念是尽可能的延缓应用向&amp;ldquo;云&amp;rdquo;的迁移，延缓&amp;ldquo;端&amp;rdquo;（&lt;/span&gt;Windows&lt;span&gt;）的寿命。只有&amp;ldquo;云&amp;rdquo;而没有&amp;ldquo;端&amp;rdquo;，则&amp;ldquo;云&amp;rdquo;就成了断线的风筝，无法为用户所使用。而&lt;/span&gt;Google&lt;span&gt;又要慢慢绕开微软的&amp;ldquo;端&amp;rdquo;，因此便于去年&lt;/span&gt;9&lt;span&gt;月份推出了&lt;/span&gt;Chrome&lt;span&gt;浏览器，要用自己的浏览器去取代操作系统，所有的云端应用都可以在&lt;/span&gt;Chrome&lt;span&gt;上完成。而且&lt;/span&gt;Chrome&lt;span&gt;本身的设计就融入了操作系统的理念，其意图相当明显。&lt;/span&gt;Google&lt;span&gt;的确很高明，推出&lt;/span&gt;Chrome&lt;span&gt;的目的并不是真的要花大力气加入浏览器的竞争，即便&lt;/span&gt;Chrome&lt;span&gt;失败了或者市场占用率很低（这几乎是可以肯定的，毕竟优秀如&lt;/span&gt;Firefox&lt;span&gt;者深耕多年也只落得&lt;/span&gt;20%&lt;span&gt;的占有率），也能加剧浏览器的竞争，促进浏览器的发展，从而加速网络应用的普及。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;可就是这样一款颇具战略意义的产品，其表现却有些令人失望。&lt;/span&gt;Chrome&lt;span&gt;的优点自不待言，但缺点也很明显：自身兼容性较差&amp;mdash;&amp;mdash;&lt;/span&gt;Google&lt;span&gt;已经有很多应用，但这些应用有时竟然不能使用（最令我不能容忍的就是半年过去了谷歌金山词霸仍然不支持&lt;/span&gt;Chrome&lt;span&gt;屏幕取词）；网页显示的极为丑陋&amp;mdash;&amp;mdash;很多网页在&lt;/span&gt;IE&lt;span&gt;下面非常漂亮（&lt;/span&gt;HTML&lt;span&gt;标准的网页），但&lt;/span&gt;Chrome&lt;span&gt;现实出来就很难看，同样大小的竟然显示的有大有小、有粗有细；地址栏不够只能&amp;mdash;&amp;mdash;和Firefox的地址栏相比，尽管Chrome有自己的优势（集成搜索），但明显没有Firefox的智能；收藏夹很难找到&amp;mdash;&amp;mdash;这其实是一个用户习惯的问题，我很欣赏&lt;/span&gt;Google&lt;span&gt;的简洁明快，但&lt;/span&gt;Google&lt;span&gt;没有把收藏夹放在显著的位置而且如果不打开新的标签页就很难找到，这一点我实在有点想不通。另外，&lt;/span&gt;Chrome&lt;span&gt;的&lt;/span&gt;Linux&lt;span&gt;版本迟迟没有发布，也着实令人不爽。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;说到&lt;/span&gt;Google&lt;span&gt;的&amp;ldquo;端&amp;rdquo;，就不得不再捎带谈一谈&lt;/span&gt;Google Android&lt;span&gt;。&lt;/span&gt;Android&lt;span&gt;本来也不是&lt;/span&gt;google&lt;span&gt;的产品，&lt;/span&gt;Google&lt;span&gt;貌似于&lt;/span&gt;2004&lt;span&gt;年收购了&lt;/span&gt;Android&lt;span&gt;公司，并继续在此基础上开发&lt;/span&gt;Android&lt;span&gt;手机操作系统。&lt;/span&gt;Android&lt;span&gt;本来可以是一款划时代的手机操作系统，可惜生不逢时，风头被&lt;/span&gt;iPhone&lt;span&gt;占尽。&lt;/span&gt;Google&lt;span&gt;于去年也仿照&lt;/span&gt;Apple Store&lt;span&gt;推出了&lt;/span&gt;Android Store&lt;span&gt;，尽管条件比&lt;/span&gt;Apple Store&lt;span&gt;优惠的多，但至今里面的应用不足&lt;/span&gt;1000&lt;span&gt;个。也许是因为很难在手机领域有重大突破，&lt;/span&gt;Google&lt;span&gt;已经将&lt;/span&gt;Andorid&lt;span&gt;的重心转到了&lt;/span&gt;netbook&lt;span&gt;上面（离职的前&lt;/span&gt;Goolge Andoid&lt;span&gt;负责人披露），据说有人轻松的将&lt;/span&gt;Android&lt;span&gt;移植到&lt;/span&gt;EeePC&lt;span&gt;上。但&lt;/span&gt;netbook&lt;span&gt;上的竞争对手又何其之多：&lt;/span&gt;Moblin&lt;span&gt;，&lt;/span&gt;Ubuntu&lt;span&gt;，&lt;/span&gt;WindowsXP/Windows 7&lt;span&gt;&amp;hellip;&amp;hellip;尽管出师不利，&lt;/span&gt;Google&lt;span&gt;已经决定在移动领域大展拳脚了。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;Google&lt;span&gt;近来的表现，愈发显示出其龙钟老态。先是股价大跌、取消福利、员工离职，然后就是部分产品下线，随后又有取消年终奖（每人发了一部&lt;/span&gt;G1&lt;span&gt;），紧接着就是把所有网页误认为恶意网页，始终伴随整个过程的就是宕机宕机&amp;hellip;&amp;hellip;&lt;/span&gt;&amp;nbsp;&lt;span&gt;负面消息不断涌现。显然，金融危机下的&lt;/span&gt;Google&amp;nbsp;&lt;span&gt;已经进入到了一个内外交困的关键阶段。曾经那个朝气蓬勃&amp;ldquo;永不不作恶&amp;rdquo;的&lt;/span&gt;Google&lt;span&gt;，已经由当年的初出茅庐逐渐长大成熟，所有微软们、&lt;/span&gt;yahoo&lt;span&gt;们遇到过的和没遇到过的问题都摆在了它的面前。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;最近&lt;/span&gt;Twitter&lt;span&gt;风头正劲，有人语言&lt;/span&gt;Twitter&lt;span&gt;将取代&lt;/span&gt;Google&lt;span&gt;，因为&lt;/span&gt;Twitter&lt;span&gt;对于实时新闻的搜索要好于&lt;/span&gt;Google&lt;span&gt;。昨晚试了一下&lt;/span&gt;Twitter&lt;span&gt;，注册只需几步，但浪费了我&lt;/span&gt;40&lt;span&gt;分钟的时间也没有注册成功&amp;mdash;&amp;mdash;先是验证码以图片的形式出现，仔细看半天也看不懂是什么，听语音更是不懂，换了好几个验证码总算看清了也注册完成了，结果等到真正需要登录时却又说我用户名和密码错误！&lt;/span&gt;My God!&amp;nbsp;&lt;span&gt;也许我才疏学浅，我目前实在看不出&lt;/span&gt;Twitter&lt;span&gt;有什么能力打败&lt;/span&gt;Google&lt;span&gt;。今天&lt;/span&gt;Google&lt;span&gt;真正的威胁还是来自它自己&amp;hellip;&amp;hellip;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;【说明】：欢迎讨论，转载请注明出处&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>乌龙记</title>
   <link href="http://bo-yang.github.com//2009/02/07/wulongji"/>
   <updated>2009-02-07T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2009/02/07/wulongji</id>
   <content type="html">&lt;br /&gt;
&lt;h1 style=&quot;text-align:center;&quot;&gt;&amp;nbsp;乌龙记&lt;/h1&gt;
&lt;div&gt;
&lt;div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;过去两个月一直都在忙一个Feature（我们公司把一个大项目分解成很多小功能，每个小功能叫做一个Feature），这也是我工作以来真正意义上的第一个Feature，总体而言，累并快乐着。&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;公司是电信设备商，我去年7月一进公司就听说了并且逐渐感受到了公司产品的复杂&amp;mdash;&amp;mdash;既有历史的客观原因，也有人为的主观因素。通过做这个feature，才真正体会到了什么叫&amp;ldquo;浩如烟海&amp;rdquo;，哪个是&amp;ldquo;沧海一粟&amp;rdquo;。其实一开始在另外一个Team，等到快要真正开始做项目时又被转到了现在的team。现在做的是公司无线产品的仿真软件，已经由美国人做了十几年了，去年开始将一部分功能转移到中国做，而我就成了中国新组建的这个Team的一员。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;尽管公司已有百余年的历史，而且奠定了现在通用的好多计算机/通信技术，但公司的传统却是身教重于言传，言传胜过文档，而文档却又七零八落。美国的同事给我们培训的时候我们问的最多的就是&amp;ldquo;文档在哪里&amp;rdquo;，而美国的同事回答最多就是&amp;ldquo;Reading the code&amp;rdquo;。尽管公司现在已今非昔比，但公司里其实还是有很多牛人的，通过看code就知道，因为我经常看不懂。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;产品的code只是很小的一个方面，作为一个电信厂商，有很多更重要的东西需要Care，销售、管理、运营等我不熟悉的方面我就不谈了（因为无话可谈），但就软件而言（硬件我也不太懂），系统架构、代码管理、配置工具等等缺一不可。而这些东西在工作中又时常用到，人多手杂，天长日久也难免会出各种各样的问题。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;第一次做feature，最难的不是实现feature，而是熟悉一大套工具和流程。即便是feature本身也大多不是非常有创意或技术含量的东西，本应是对现有产品的尽可能的仿真却由于各种原因蜕变成了现实与模拟的妥协，而我们要做的事就是在各种铜墙铁壁中找出一条夹缝，然后在夹缝中求生存。做产品的仿真软件，有时要截弯取直，有时又不得不曲径通幽，变化之间，奇妙无穷。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;由于是公司内部用的仿真软件，因此不像电信产品那样要求稳定性、可靠性，只要能用来做测试就行了。一旦出了问题，重启一下软件继续。但是也正因为质量上要求不高，问题也是非常的多，每天都有很多用户发邮件找我们解决问题。同时我们又得不断开发新的feature以支持产品测试，每个人的压力还是很大的。我们刚接手，一个人也就当半个人用，可美国的那些同事，最少的也已经做了十年了，在经历了身边同事不断被裁掉的劫波之后，肩上的担子也越来越重。忙中也就难免会出错。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;前两天我在测试自己的Feature时，发现了一个问题，就是将产品中代码和我们自己代码build出来Product在用的时候一直出问题。看log并且反复测试了一天最后终于发现了问题的所在：产品中改了一个struct的定义，增加了一个成员，而我们的代码中没有做相应更改。于是就把我的发现发邮件告诉了美国的Mentor。晚上在家里加班时，美国的mentor在MOC（Microsoft Office Communicator，一款企业IM软件，说实话做的非常一般）上问我具体情况，我告诉了他我的判断。他起初很怀疑我的判断，我就演示给他看，他终于承认了这个问题的存在，但还是试图找出一种他更愿意接受的原因。用了两个小时，最终证明确实不是我们的问题，而是产品team造成的。Mentor查看了那个文件修改的历史，发现了一个不是我们team的人改了那个文件，于是告诉我可以问问那个人是否改过源文件。那天晚上我睡觉时已经凌晨3：50了。第二天白天我给那个人发了一封邮件，可是始终没有得到回复。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;第二天晚上，美国的Mentor和我查找产品team的负责人，由于公司team太多，每个team相对独立，很是费了一番力气。找到以后，mentor告诉我可以联系那个负责人。因为已经很晚了，于是我说我明天给他发邮件，可是mentor说他可以帮我立刻发邮件确认一下。由于那个产品也是由美国人负责，很快邮件得到恢复，说那人已经不再负责那个产品了，让我们联系另外一个人。我们有联系了另外一个人，那个人说他是manager，具体技术问题联系他的一个手下的员工。Mentor在MOC上加了那个产品的owner，由于之前有默契，Mentor和我组团忽悠产品owner，希望他们能调整一下那个struct新加入成员的顺序，把它加到最后，那样对我们的影响是最小的。尽管我们很卖力的忽悠，但人家认定现在已经不好改了，而且我们仿真软件就应该服务于产品，不能本末倒置，无果。于是mentor让我着手改我们的代码，而且越快解决越好。那天晚上睡觉时意识凌晨4：00多。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;第三天白天下午我才去上班，上午在睡觉。刚到公司就有一个人给我打电话，问我关于那个struct的问题。原来那人已经再上一个release对我们的代码做了private的更改，上一个release的更改已经提交，只是这个release的还没有提交，要等到产品的代码提交后才可以。可是现在产品已经提交了，他们却并不知道，只能等到下一个load在提交了。难怪一个月以来没有用户反应这个问题，而在最新的release中我却碰到了问题呢。形势豁然开朗，终于不用我们再负责这个问题了。立马发邮件给mentor，告诉他这个好消息。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;晚上mentor回复我的邮件，深表欣慰。他说那人提交代码的时候应该找我们team的人作为inspector，他找了吗？我回复说应该没有，不然我们应该会知道更改的。没想到mentor很快又发邮件给我说他想起来了，那个人确实找我们team做inspect了，那个inspector就是他&amp;mdash;&amp;mdash;我的mentor！我顿时无语，只好给他恢复了&amp;ldquo;OMG！^_^&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;这种骑驴找驴的乌龙事件尽管耽误了我们不少时间，但想想也很有意思，因此尽管已经很晚了，我还是坚持把它记下来（其实我的生物钟已经和格林威治时间同步了，再修炼一段时间估计去美国就不用倒时差了^_^）。&lt;/p&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Perl Notes(III) -- Introduction To Berkeley Sockets</title>
   <link href="http://bo-yang.github.com//2009/01/13/perl-note-3"/>
   <updated>2009-01-13T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2009/01/13/perl-note-3</id>
   <content type="html">&lt;p&gt;
&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-family:Verdana;font-size:13px;&quot;&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;3 Introduction To Berkeley Sockets&lt;br /&gt;&lt;/h3&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;3_1_Berkeley_Sockets__7180656138807535&quot; id=&quot;3_1_Berkeley_Sockets__7180656138807535&quot;&gt;&lt;/a&gt;3.1 Basic Concepts&lt;/h4&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;/h5&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;3_1_1_Binary_versus_Text_Orien&quot; id=&quot;3_1_1_Binary_versus_Text_Orien&quot;&gt;&lt;/a&gt;3.1.1 Binary versus Text-Oriented Protocols&lt;br /&gt;&lt;/h5&gt;
&lt;p&gt;&lt;/span&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Before they can exchange information across the network, hosts have a fundamental choice to make. They can exchange data either in binary form or as human-readable text. The choice has far-reaching ramifications.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;To understand this, consider exchanging the number 1984. To exchange it as text, one host sends the other the string &lt;tt&gt;1984&lt;/tt&gt;, which, in the common ASCII character set, corresponds to the four hexadecimal bytes &lt;tt&gt;0x31&lt;/tt&gt; &lt;tt&gt;0x39&lt;/tt&gt; &lt;tt&gt;0x38&lt;/tt&gt; &lt;tt&gt;0x34&lt;/tt&gt;. These four bytes will be transferred in order across the network, and (provided the other host also speaks ASCII) will appear at the other end as &quot;1984&quot;.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;However, 1984 can also be treated as a number, in which case it can fit into the two-byte integer represented in hexadecimal as &lt;tt&gt;0x7C0&lt;/tt&gt;. If this number is already stored in the local host as a number, it seems sensible to transfer it across the network in its native two-byte form rather than convert it into its four-byte text representation, transfer it, and convert it back into a two-byte number at the other end. Not only does this save some computation, but it uses only half as much network capacity.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Unfortunately, there&#39;s a hitch. Different computer architectures have different ways of storing integers and floating point numbers. Some machines use two-byte integers, others four-byte integers, and still others use eight-byte integers. This is called &lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;word size&lt;/span&gt;. Furthermore, computer architectures have two different conventions for storing integers in memory. In some systems, called &lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;big-endian&lt;/span&gt; architectures, the most significant part of the integer is stored in the first byte of a two-byte integer. On such systems, reading from low to high, 1984 is represented in memory as the two bytes:&lt;/p&gt;
&lt;pre&gt;0x07    0xC0
low  -&amp;gt; high
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;On &lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;little-endian&lt;/span&gt; architectures, this convention is reversed, and 1984 is stored in the opposite orientation:&lt;/p&gt;
&lt;pre&gt;0xC0    0x07
low  -&amp;gt; high
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;These architectures are a matter of convention, and neither has a significant advantage over the other. The problem comes when transferring such data across the network, because this byte pair has to be transferred serially as two bytes. Data in memory is sent across the network from low to high, so for big-endian machines the number 1984 will be transferred as &lt;tt&gt;0x07 0xC0&lt;/tt&gt;, while for little-endian machines the numbers will be sent in the reverse order. As long as the machine at the other end has the same native word size and byte order, these bytes will be correctly interpreted as 1984 when they arrive. However, if the recipient uses a different byte order, then the two bytes will be interpreted in the wrong order, yielding hexadecimal &lt;tt&gt;0xC007&lt;/tt&gt;, or decimal 49,159. Even worse, if the recipient interprets these bytes as the top half of a four-byte integer, it will end up as &lt;tt&gt;0xC0070000&lt;/tt&gt;, or 3,221,684,224. Someone&#39;s anniversary party is going to be very late.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Because of the potential for such binary chaos, text-based protocols are the norm on the Internet. All the common protocols convert numeric information into text prior to transferring them, even though this can result in more data being transferred across the net. Some protocols even convert data that doesn&#39;t have a sensible text representation, such as audio files, into a form that uses the ASCII character set, because this is generally easier to work with. By the same token, a great many protocols are line-oriented, meaning that they accept commands and transmit data in the form of discrete lines, each terminated by a commonly agreed-upon newline sequence.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;A few protocols, however, are binary. Examples include Sun&#39;s Remote Procedure Call (&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;RPC&lt;/span&gt;) system, and the Napster peer-to-peer file exchange protocol. Such protocols have to be exceptionally careful to represent binary data in a common format.&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt; For integer numbers, there is a commonly recognized network format. In network format, a &quot;short&quot; integer is represented in two big-endian bytes, while a &quot;long&quot; integer is represented with four big-endian bytes.&lt;/span&gt; Perl&#39;s &lt;tt&gt;pack()&lt;/tt&gt; and &lt;tt&gt;unpack ()&lt;/tt&gt; functions provide the ability to convert numbers into network format and back again.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Floating point numbers and more complicated things like data structures have no commonly accepted network representation. When exchanging binary data, each protocol has to work out its own way of representing such data in a platform-neutral fashion.&lt;/p&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;3_1_2_Berkeley_Sockets_&quot; id=&quot;3_1_2_Berkeley_Sockets_&quot;&gt;&lt;/a&gt;3.1.2 Berkeley Sockets&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Berkeley sockets are part of an application programming interface (API) that specifies the data structures and function calls that interact with the operating system&#39;s network subsystem. Berkeley sockets are part of an API, not a specific protocol, which defines how the programmer interacts with an idealized network.&lt;/p&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;3_2_The_Anatomy_of_a_Socket__8158409828320146&quot; id=&quot;3_2_The_Anatomy_of_a_Socket__8158409828320146&quot;&gt;&lt;/a&gt;3.2 The Anatomy of a Socket&lt;br /&gt;&lt;/h4&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;A socket is an endpoint for communications, a portal to the outside world that we can use to send outgoing messages to other processes, and to receive incoming traffic from processes interested in sending messages to us.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;To create a socket, we need to provide the system with a minimum of three pieces of information.&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;3_2_1_The_Socket_s_Domain__19930865615606308&quot; id=&quot;3_2_1_The_Socket_s_Domain__19930865615606308&quot;&gt;&lt;/a&gt;3.2.1 The Socket&#39;s Domain&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;span class=&quot;docEmphasis&quot;&gt;domain&lt;/span&gt; defines the family of networking protocols and addressing schemes that the socket will support. The domain is selected from a small number of integer constants defined by the operating system and exported by Perl&#39;s Socket module. There are only two common domains&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p&gt;
&lt;div style=&quot;text-align:center;margin-top:0;margin-bottom:0;&quot;&gt;Table 3.1. Common Socket Domains&lt;/div&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Constant&lt;/span&gt;&lt;/th&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Description&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;AF_INET&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;The Internet protocols&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;AF_UNIX&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Networking within a single host&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In addition to these domains, there are many others including &lt;tt&gt;AF_APPLETALK&lt;/tt&gt;, &lt;tt&gt;AF_IPX&lt;/tt&gt;, and &lt;tt&gt;AF_X25&lt;/tt&gt;, each corresponding to a particular addressing scheme. &lt;tt&gt;AF_INET6&lt;/tt&gt;, corresponding to the long addresses of TCP/IP version 6, will become important in the future, but is not yet supported by Perl. The &lt;tt&gt;AF_&lt;/tt&gt; prefix stands for &quot;address family.&quot; In addition, there is a series of &quot;protocol family&quot; constants starting with the &lt;tt&gt;PF_&lt;/tt&gt; prefix.&lt;/p&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;3_2_2_The_Socket_s_Type__09139745496213436&quot; id=&quot;3_2_2_The_Socket_s_Type__09139745496213436&quot;&gt;&lt;/a&gt;3.2.2 The Socket&#39;s Type&lt;br /&gt;&lt;/h5&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;The socket type identifies the basic properties of socket communications.&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p&gt;
&lt;div style=&quot;text-align:center;margin-top:0;margin-bottom:0;&quot;&gt;Table 3.2. Constants Exported by Socket&lt;/div&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Constant&lt;/span&gt;&lt;/th&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Description&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;SOCK_STREAM&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;A continuous stream of data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;SOCK_DGRAM&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Individual packets of data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;SOCK_RAW&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Access to internal protocols and interfaces&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Perl fully supports the &lt;tt&gt;SOCK_STREAM&lt;/tt&gt; and &lt;tt&gt;SOCK_DGRAM&lt;/tt&gt; socket types. &lt;tt&gt;SOCK_RAW&lt;/tt&gt; is supported through an add-on module named Net::Raw.&lt;/p&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;3_2_3_The_Socket_s_Protocol__21901176124811172&quot; id=&quot;3_2_3_The_Socket_s_Protocol__21901176124811172&quot;&gt;&lt;/a&gt;3.2.3 The Socket&#39;s Protocol&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Like the domain and socket type, the protocol is a small integer. However, the protocol numbers are not available as constants, but instead must be looked up at run time using the Perl &lt;span class=&quot;docEmphasis&quot;&gt;getprotobyname()&lt;/span&gt; function.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;text-align:center;margin-top:0;margin-bottom:0;&quot;&gt;Table 3.3. Some Socket Protocols&lt;/div&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Protocol&lt;/span&gt;&lt;/th&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Description&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;tcp&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Transmission Control Protocol for stream sockets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;udp&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;User Datagram Protocol for datagram sockets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;icmp&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Internet Control Message Protocol&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;raw&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Creates IP packets manually&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The TCP and UDP protocols are supported directly by the Perl sockets API. You can get access to the ICMP and raw protocols via the Net::ICMP and Net::Raw third-party modules.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The allowed combinations of socket domain, type, and protocol are few. &lt;tt&gt;SOCK_STREAM&lt;/tt&gt; goes with TCP, and &lt;tt&gt;SOCK_DGRAM&lt;/tt&gt; goes with UDP. Also notice that the &lt;tt&gt;AF_UNIX&lt;/tt&gt; address family doesn&#39;t use a named protocol, but a pseudoprotocol named &lt;tt&gt;PF_UNSPEC&lt;/tt&gt; (for &quot;unspecified&quot;).&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;caption&gt;&lt;/caption&gt;
&lt;p style=&quot;margin:0;&quot;&gt;Table 3.4. Allowed Combinations of Socket Type and Protocol in the INET and UNIX Domains&lt;/p&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Domain&lt;/span&gt;&lt;/th&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Type&lt;/span&gt;&lt;/th&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Protocol&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;AF_INET&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;SOCK_STREAM&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;tcp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;AF_INET&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;SOCK_DGRAM&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;udp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;AF_UNIX&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;SOCK_STREAM&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;PF_UNSPEC&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;AF_UNIX&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;SOCK_DGRAM&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;PF_UNSPEC&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;3_2_4_Datagram_Sockets_&quot; id=&quot;3_2_4_Datagram_Sockets_&quot;&gt;&lt;/a&gt;3.2.4 Datagram Sockets&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;Datagram-type sockets provide for the transmission of connectionless, unreliable, unsequenced messages.&lt;/span&gt; The UDP is the chief datagram-style protocol used by the Internet protocol family.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;As the diagram in &lt;a class=&quot;docLink&quot;&gt;Figure 3.2&lt;/a&gt; shows, datagram services resemble the postal system. Like a letter or a telegram, each datagram in the system carries its destination address, its return address, and a certain amount of data. The Internet protocols will make the best effort to get the datagram delivered to its destination.&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;Figure 3.2. Datagram sockets provide connectionless, unreliable, unsequenced transmission of message&lt;/p&gt;
&lt;h5 class=&quot;docFigureTitle&quot; style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;ch03fig02&quot;&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;
&lt;div id=&quot;kkjg&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_216fwpbb2gn_b&quot; style=&quot;width:500px;height:318px;&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;There is no long-term relationship between the sending socket and the recipient socket: A client can send a datagram off to one server, then immediately turn around and send a datagram to another server using the same socket. But the connectionless nature of UDP comes at a price. Like certain countries&#39; postal systems, it is very possible for a datagram to get &quot;lost in the mail.&quot; A client cannot know whether a server has received its message until it receives an acknowledgment in reply. Even then, it can&#39;t know for sure that a message was lost, because the server might have received the original message and the acknowledgment got lost!&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Datagrams are neither synchronized nor flow controlled. If you send a set of datagrams out in a particular order, they might not arrive in that order. Because of the vagaries of the Internet, the first datagram may go by one route, and the second one may take a different path. If the second route is faster than the first one, the two datagrams may arrive in the opposite order from which they were sent. It is also possible for a datagram to get duplicated in transit, resulting in the same message being received twice.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Because of the connectionless nature of datagrams, there is no flow control between the sender and the recipient. If the sender transmits datagrams faster than the recipient can process them, the recipient has no way to signal the sender to slow down, and will eventually start to discard packets.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;Although a datagram&#39;s delivery is not reliable, its contents are. &lt;/span&gt;Modern implementations of UDP provide each datagram with a checksum that ensures that its data portion is not corrupted in transit.&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;3_2_5_Stream_Sockets_&quot; id=&quot;3_2_5_Stream_Sockets_&quot;&gt;&lt;/a&gt;3.2.5 Stream Sockets&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The other major paradigm is stream sockets, implemented in the Internet domain as the TCP protocol. &lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;Stream sockets provide sequenced, reliable bidirectional communications via byte-oriented streams. &lt;/span&gt;As depicted in &lt;a class=&quot;docLink&quot;&gt;Figure 3.3&lt;/a&gt;, stream sockets resemble a telephone conversation. Clients connect to servers using their address, the two exchange data for a period of time, and then one of the pair breaks off the connection.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;Figure 3.3. Stream sockets provide sequenced, reliable, bidirectional communications&lt;/p&gt;
&lt;h5 class=&quot;docFigureTitle&quot; style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;ch03fig03&quot;&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;
&lt;div id=&quot;doch&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_217c9kt3zft_b&quot; style=&quot;width:500px;height:51px;&quot; /&gt;&lt;/div&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Reading and writing to stream sockets is a lot like reading and writing to a file. There are no arbitrary size limits or record boundaries, although you can impose a record-oriented structure on the stream if you like. Because stream sockets are sequenced and reliable, you can write a series of bytes into a socket secure in the knowledge that they will emerge at the other end in the correct order, provided that they emerge at all (&quot;reliable&quot; does not mean immune to network errors).&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;TCP also implements flow control. &lt;/span&gt;Unlike UDP, where the danger of filling the data-receiving buffer is very real, TCP automatically signals the sending host to suspend transmission temporarily when the reading host is falling behind, and to resume sending data when the reading host is again ready. This flow control happens behind the scenes and is ordinarily invisible.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Although it looks and acts like a continuous byte stream, the TCP protocol is actually implemented on top of a datagram-style service, in this case the low-level IP protocol. &lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;IP packets are just as unreliable as UDP datagrams, &lt;/span&gt;so behind the scenes TCP is responsible for keeping track of packet sequence numbers, acknowledging received packets, and retransmitting lost packets.&lt;/p&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;3_2_6_Datagram_versus_Stream_S&quot; id=&quot;3_2_6_Datagram_versus_Stream_S&quot;&gt;&lt;/a&gt;3.2.6 Datagram versus Stream Sockets&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;With all its reliability problems, you might wonder why anyone uses UDP. The answer is that most client/server programs on the Internet use TCP stream sockets instead. In most cases, TCP is the right solution for you, too.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;There are some circumstances, however, in which UDP might be a better choice. For example, time servers use UDP datagrams to transmit the time of day to clients who use the information for clock synchronization. If a datagram disappears in transit, it&#39;s neither necessary nor desirable to retransmit it because by the time it arrives it will no longer be relevant.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;UDP is also preferred when the interaction between one host and the other is very short. The length of time to set up and take down a TCP connection is about eightfold greater than the exchange of a single byte of data via UDP (for details, see [Stevens 1996]). If relatively small amounts of data are being exchanged, the TCP setup time will dominate performance. Even after a TCP connection is established, each transmitted byte consumes more bandwidth than UDP because of the additional overhead for ensuring reliability.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Another common scenario occurs when a host must send the same data to many places; for example, it wants to transmit a video stream to multiple viewers. The overhead to set up and manage a large number of TCP connections can quickly exhaust operating system resources, because a different socket must be used for each connection. In contrast, sending a series of UDP datagrams is much more sparing of resources. The same socket can be reused to send datagrams to many hosts.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;Whereas TCP is always a one-to-one connection, UDP also allows one-to-many and many-to-many transmissions.&lt;/span&gt; At one end of the spectrum, you can address a UDP datagram to the &quot;broadcast address,&quot; broadcasting a message to all listening hosts on the local area network. At the other end of the spectrum, you can target a message to a predefined group of hosts using the &quot;multicast&quot; facility of modern IP implementations. These advanced features are covered in &lt;a class=&quot;docLink&quot;&gt;Chapters 20&lt;/a&gt; and &lt;a class=&quot;docLink&quot;&gt;21&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The Internet&#39;s DNS is a common example of a UDP-based service. It is responsible for translating hostnames into IP addresses, and vice versa, using a loose-knit network of DNS servers. If a client does not get a response from a DNS server, it just retransmits its request. The overhead of an occasional lost datagram outweighs the overhead of setting up a new TCP connection for each request. Other common examples of UDP services include Sun&#39;s Network File System (NFS) and the Trivial File Transfer Protocol (TFTP). The latter is used by diskless workstations during boot in order to load their operating system over the network. UDP was originally chosen for this purpose because its implementation is relatively small. Therefore, UDP fit more easily into the limited ROM space available to workstations at the time the protocol was designed.&lt;/p&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;3_3_Socket_Addressing_&quot; id=&quot;3_3_Socket_Addressing_&quot;&gt;&lt;/a&gt;3.3 Socket Addressing&lt;br /&gt;&lt;/h4&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;For the UNIX domain, which can be used only between two processes on the same host machine, addresses are simply paths on the host&#39;s filesystem, such as &lt;tt&gt;/usr/tmp/log&lt;/tt&gt;. For the Internet domain, each socket address has three parts: the IP address, the port, and the protocol.&lt;/p&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;3_3_1_IP_Addresses_&quot; id=&quot;3_3_1_IP_Addresses_&quot;&gt;&lt;/a&gt;3.3.1 IP Addresses&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Many of Perl&#39;s networking calls require you to work with IP addresses in the form of packed binary strings. IP addresses can be converted manually to binary format and back again using &lt;tt&gt;pack()&lt;/tt&gt; and &lt;tt&gt;unpack()&lt;/tt&gt; with a template of &quot;C4&quot; (four unsigned characters). For example, here&#39;s how to convert 18.157.0.125 into its packed form and then reverse the process:&lt;/p&gt;
&lt;pre&gt;($a,$b,$c,$d)      = split //./, &#39;18.157.0.125&#39;;
$packed_ip_address = pack &#39;C4&#39;,$a,$b,$c,$d;
($a,$b,$c,$d)      = unpack &#39;C4&#39;,$packed_ip_address;
$dotted_ip_address = join &#39;.&#39;, $a,$b,$c,$d;&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Most hosts have two addresses, the &quot;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;loopback&quot; address&lt;/span&gt; 127.0.0.1 (often known by its symbolic name &quot;localhost&quot;) and its &lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;public Internet address&lt;/span&gt;. The loopback address is associated with a device that loops transmissions back onto itself, allowing a client on the host to make an outgoing connection to a server running on the same host. Although this sounds a bit pointless, it is a powerful technique for application development, because it means that you can develop and test software on the local machine without access to the network.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The public Internet address is associated with the host&#39;s network interface card, such as an Ethernet card. The address is either assigned to the host by the network administrator or, in systems with dynamic host addressing, by a Boot Protocol (BOOTP) or Dynamic Host Configuration Protocol (DHCP) server. If a host has multiple network interfaces installed, each one can  have a distinct IP address. It&#39;s also possible for a single interface to be configured to use several addresses. &lt;/p&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;3_3_2_Reserved_IP_Addresses_Su&quot; id=&quot;3_3_2_Reserved_IP_Addresses_Su&quot;&gt;&lt;/a&gt;3.3.2 Reserved IP Addresses, Subnets, and Netmasks&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In order for a packet of information to travel from one location to another across the Internet, it must hop across a series of physical networks. For example, a packet leaving your desktop computer must travel across your LAN (local area network) to a modem or router, then across your Internet service provider&#39;s (ISP) regional network, then across a backbone to another ISP&#39;s regional network, and finally to its destination machine.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Network routers keep track of how the networks interconnect, and are responsible for determining the most efficient route to get a packet from point A to point B. However, if IP addresses were allocated ad hoc, this task would not be feasible because each router would have to maintain a map showing the locations of all IP addresses. Instead, IP addresses are allocated in contiguous chunks for use in organizational and regional networks.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;For example, my employer, the Cold Spring Harbor Laboratory (CSHL), owns the block of IP addresses that range from 143.48.0.0 through 143.48.255.255 (this is a so-called class B address). When a backbone router sees a packet addressed to an IP address in this range, it needs only to determine how to get the packet into CSHL&#39;s network. It is then the responsibility of CSHL&#39;s routers to get the packet to its destination. In practice, CSHL and other large organizations split their allocated address ranges into several subnets and use routers to interconnect the parts.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;A computer that is sending out an IP packet must determine whether the destination machine is directly reachable (e.g., over the Ethernet) or whether the packet must be directed to a router that interconnects the local network to more distant locations. The basic decision is whether the packet is part of the local network or part of a distant network.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;To make this decision possible, &lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;IP addresses are arbitrarily split into a &lt;/span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;host part&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt; and a &lt;/span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;network part&lt;/span&gt;&lt;/span&gt;. For example, in CSHL&#39;s network, the split occurs after the second byte: the network part is 143.48. and the host part is the rest. So 143.48.0.0 is the first address in CSHL&#39;s network, and 143.48.255.255 is the last.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;To describe where the network/host split occurs for routing purposes, networks use a netmask, which is a bitmask with 1s in the positions of the network part of the IP address.&lt;/span&gt; Like the IP address itself, the netmask is usually written in dotted-quad form. Continuing with our example, CSHL has a netmask of 255.255.0.0, which, when written in binary, is 11111111,11111111,00000000,00000000.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Historically, IP networks were divided into three classes on the basis of their netmasks (&lt;a class=&quot;docLink&quot;&gt;Table 3.5)&lt;/a&gt;. Class A networks have a netmask of 255.0.0.0 and approximately 16 million hosts. Class B networks have a netmask of 255.255.0.0 and some 65,000 hosts, and class C networks use the netmask 255.255.255.0 and support 254 hosts (as we will see, the first and last host numbers in a network range are unavailable for use as a normal host address).&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;ch03table05&quot;&gt;&lt;/a&gt;
&lt;p style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;caption&gt;&lt;/caption&gt;
&lt;p style=&quot;margin:0;&quot;&gt;Table 3.5. Address Classes and Their Netmasks&lt;/p&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Class&lt;/span&gt;&lt;/th&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Netmask&lt;/span&gt;&lt;/th&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Example Address&lt;/span&gt;&lt;/th&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Network Park&lt;/span&gt;&lt;/th&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Host Part&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;A&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;255.0.0.0&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;120.155.32.5&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;120.&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;155.32.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;B&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;255.255.0.0&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;128.157.32.5&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;128.157.&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;32.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;C&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;255.255.255.0&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;192.66.12.56&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;192.66.12.&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;56&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;As the Internet has become more crowded, however, networks have had to be split up in more flexible ways. It&#39;s common now to see netmasks that don&#39;t end at byte boundaries. For example, the netmask 255.255.255.128 (binary 11111111,11111111,11111111,10000000) splits the last byte in half, creating a set of 126-host networks. The modern Internet routes packets based on this more flexible scheme, called &lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;Classless Inter-Domain Routing (CIDR)&lt;/span&gt;. C&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;IDR uses a concise convention to describe networks in which the network address is followed by a slash and an integer containing the number of 1s in the mask&lt;/span&gt;. For example, CSHL&#39;s network is described by the CIDR address 143.48.0.0/16. CIDR is described in detail in RFCs 1517 through 1520, and in the FAQs listed in &lt;a class=&quot;docLink&quot;&gt;Appendix D&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Figuring out the network and broadcast addresses can be confusing when you work with netmasks that do not end at byte boundaries. The Net::Netmask module, available on CPAN, provides facilities for calculating these values in an intuitive way. You&#39;ll also find a short module that I wrote, Net::NetmaskLite, in Appendix A. You might want to peruse this code in order to learn the relationships among the network address, broadcast address, and netmask.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The first and last addresses in a subnet have special significance and cannot be used as ordinary host addresses. &lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:normal;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;The first address, sometimes known as the all-zeroes address, is reserved for use in routing tables to denote the network as a whole (&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;network address&lt;/span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:normal;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;).&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(255,0,0);&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;The last address in the range, known as the all-ones address, is reserved for use as the &lt;/span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;broadcast address&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;. IP packets sent to this address will be received by all hosts on the subnet.&lt;/span&gt;&lt;/span&gt; For example, for the network 192.18.4.x (a class C address or 192.18.4.0/24 in CIDR format), the network address is 192.18.4.0 and the broadcast address is 192.18.4.255. &lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In addition, several IP address ranges have been set aside for special purposes (&lt;a class=&quot;docLink&quot;&gt;Table 3.6&lt;/a&gt;). The class A network 10.x.x.x, the 16 class B networks 172.16.x.x through 172.31.x.x, and the 255 class C addresses 192.168.0.x through 192.168.255.x are reserved for use as internal networks. An organization may use any of these networks internally, but must not connect the network directly to the Internet. The 192.168.x.x networks are used frequently in testing, or placed behind firewall systems that translate all the internal network addresses into a single public IP address. The network addresses 224.x.x.x through 239.x.x.x are reserved for multicasting applications, and everything above 240.x.x.x is reserved for future expansion.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;ch03table06&quot;&gt;&lt;/a&gt;
&lt;p style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;caption&gt;&lt;/caption&gt;
&lt;p style=&quot;margin:0;&quot;&gt;Table 3.6. Reserved IP Addresses&lt;/p&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Address&lt;/span&gt;&lt;/th&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Description&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;127.0.0.x&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Loopback interface&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;10.x.x.x&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Private class A address&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;172.16.x.x–172.32.x.x&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Private class B addresses&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;192.168.0.x–172.168.255.x&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Private class C addresses&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Finally, IP address 127.0.0.x is reserved for use as the loopback network. Anything sent to an address in this range is received by the local host.&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;3_3_3_Network_Ports_&quot; id=&quot;3_3_3_Network_Ports_&quot;&gt;&lt;/a&gt;3.3.3 Network Ports&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Once a message reaches its destination IP address, there&#39;s still the matter of finding the correct program to deliver it to. It&#39;s common for a host to be running multiple network servers, and it would be impractical, not to say confusing, to deliver the same message to them all. That&#39;s where the port number comes in. &lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;The port number part of the socket address is an unsigned 16-bit number ranging from 1 to 65535&lt;/span&gt;. In addition to its IP address, each active socket on a host is identified by a unique port number; this allows messages to be delivered unambiguously to the correct program. When a program creates a socket, it may ask the operating system to associate a port with the socket. If the port is not being used, the operating system will grant this request, and will refuse other programs access to the port until the port is no longer in use. If the program doesn&#39;t specifically request a port, one will be assigned to it from the pool of unused port numbers.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;There are actually two sets of port numbers, one for use by TCP sockets, and the other for use by UDP-based programs. It is perfectly all right for two programs to be using the same port number provided that one is using it for TCP and the other for UDP.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Not all port numbers are created equal. &lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;The ports in the range 0 through 1023 are reserved for the use of &quot;&lt;/span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;well-known&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;&quot; services, which are assigned and maintained by ICANN, the Internet Corporation for Assigned Names and Numbers.&lt;/span&gt;&lt;/span&gt; For example, TCP port 80 is reserved for use for the HTTP used by Web servers, TCP port 25 is used for the SMTP used by e-mail transport agents, and UDP port 53 is used for the domain name service (DNS). Because these ports are well known, you can be pretty certain that a Web server running on a remote machine will be listening on port 80. On UNIX systems, only the root user (i.e., the superuser) is allowed to create a socket using a reserved port. This is partly to prevent unprivileged users on the system inadvertently running code that will interfere with the operations of the host&#39;s network services.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Most services are either TCP- or UDP-based, but some can communicate with both protocols. In the interest of future compatibility, ICANN usually reserves both the UDP and TCP ports for each service. However, there are many exceptions to this rule. For example, TCP port 514 is used on UNIX systems for remote shell (login) services, while UDP port 514 is used for the system logging daemon.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In some versions of UNIX, the high-numbered ports in the range 49152 through 65535 are reserved by the operating system for use as &quot;ephemeral&quot; ports to be assigned automatically to outgoing TCP/IP connections when a port number hasn&#39;t been explicitly requested. The remaining ports, those in the range 1024 through 49151, are free for use in your own applications, provided that some other service has not already claimed them. It is a good idea to check the ports in use on your machine by using one of the network tools introduced later in this chapter (Network Analysis Tools) before claiming one.&lt;/p&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;3_3_4_The_sockaddr_in_Structur&quot; id=&quot;3_3_4_The_sockaddr_in_Structur&quot;&gt;&lt;/a&gt;3.3.4 The &lt;tt&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-family:Verdana;&quot;&gt;sockaddr_in&lt;/span&gt;&lt;/tt&gt; Structure&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;A socket address is the combination of the host address and the port, packed together in a binary structure called a &lt;span class=&quot;docEmphasis&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-family:Georgia;&quot;&gt;sockaddr_in&lt;/span&gt;&lt;/span&gt;.&lt;/span&gt; This corresponds to a C structure of the same name that is used internally to call the system networking routines. (By analogy, UNIX domain sockets use a packed structure called a &lt;span class=&quot;docEmphasis&quot;&gt;sockaddr_un.&lt;/span&gt;) Functions provided by the standard Perl Socket module allow you to create and manipulate &lt;span class=&quot;docEmphasis&quot;&gt;sockaddr_in&lt;/span&gt; structures easily:&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; width=&quot;90%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$packed_address = inet_aton($dotted_quad)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Given an IP address in dotted-quad form, this function packs it into binary form suitable for use by &lt;tt&gt;sockaddr_in()&lt;/tt&gt;. The function will also operate on symbolic hostnames. If the hostname cannot be looked up, it returns &lt;tt&gt;undef&lt;/tt&gt;.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$dotted_quad = inet_ntoa($packed_address)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;This function takes a packed IP address and converts it into human-readable dotted-quad form. It does &lt;span class=&quot;docEmphasis&quot;&gt;&lt;tt&gt;not&lt;/tt&gt; &lt;/span&gt;attempt to translate IP addresses into hostnames. You can achieve this effect by using &lt;tt&gt;gethostbyaddr()&lt;/tt&gt;, discussed later.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$socket_addr = sockaddr_in($port,$address)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;($port,$address) = sockaddr_in($socket_addr)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;When called in a scalar context, &lt;tt&gt;sockaddr_in()&lt;/tt&gt; takes a port number and a binary IP address and packs them together into a socket address, suitable for use by &lt;tt&gt;socket()&lt;/tt&gt;. When called in a list context, &lt;tt&gt;sockaddr_in()&lt;/tt&gt; does the opposite, translating a socket address into the port and IP address. The IP address must still be passed through &lt;tt&gt;inet_ntoa()&lt;/tt&gt; to obtain a human-readable string.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$socket_addr = pack_sockaddr_in($port,$address)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;($port,$address) = unpack_sockaddr_in($socket_addr)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If you don&#39;t like the confusing behavior of &lt;tt&gt;sockaddr_in()&lt;/tt&gt;, you can use these two functions to pack and unpack socket addresses in a context-insensitive manner.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In some references, you&#39;ll see a socket&#39;s address referred to as its &quot;name.&quot; Don&#39;t let this confuse you. A socket&#39;s address and its name are one and the same.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;3.4 &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Perl Notes(II)</title>
   <link href="http://bo-yang.github.com//2009/01/13/perl-note-2"/>
   <updated>2009-01-13T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2009/01/13/perl-note-2</id>
   <content type="html">&lt;p&gt;
     &lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-family:Verdana;font-size:13px;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-size:19px;font-weight:bold;&quot;&gt;Part II&lt;span&gt;    Network Programming With Perl&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;1_Input_Output_Basics_&quot; id=&quot;1_Input_Output_Basics_&quot;&gt;&lt;/a&gt;1 Input/Output Basics&lt;br /&gt;&lt;/h3&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;1_1_Filehandles_&quot; id=&quot;1_1_Filehandles_&quot;&gt;&lt;/a&gt;1.1 Filehandles&lt;br /&gt;&lt;/h4&gt;
&lt;p&gt;&lt;/span&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Filehandles are the foundation of networked applications. In this section we review the ins and outs of filehandles. Even if you&#39;re an experienced Perl programmer, you might want to scan this section to refresh your memory on some of the more obscure aspects of Perl I/O.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;ch01lev2sec7&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;1_1_1_Standard_Filehandles_&quot; id=&quot;1_1_1_Standard_Filehandles_&quot;&gt;&lt;/a&gt;1.1.1 Standard Filehandles&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;A filehandle connects a Perl script to the outside world. Reading from a filehandle brings in outside data, and writing to one exports data. Depending on how it was created, a filehandle may be connected to a disk file, to a hardware device such as a serial port, to a local process such as a command-line window in a windowing system, or to a remote process such as a network server. It&#39;s also possible for a filehandle to be connected to a &quot;bit bucket&quot; device that just sucks up data and ignores it.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;A filehandle is any valid Perl identifier that consists of uppercase and lowercase letters, digits, and the underscore character. Unlike other variables, a filehandle does not have a distinctive prefix (like &quot;$&quot;). So to make them distinct, Perl programmers often represent them in all capital letters, or caps.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;When a Perl script starts, exactly three filehandles are open by default: &lt;tt&gt;STDOUT&lt;/tt&gt;, &lt;tt&gt;STDIN&lt;/tt&gt;, and &lt;tt&gt;STDERR&lt;/tt&gt;. The &lt;tt&gt;STDOUT&lt;/tt&gt; filehandle, for &quot;standard output,&quot; is the default filehandle for output. Data sent to this filehandle appears on the user&#39;s preferred output device, usually the command-line window from which the script was launched. &lt;tt&gt;STDIN&lt;/tt&gt;, for &quot;standard input,&quot; is the default input filehandle. Data read from this filehandle is taken from the user&#39;s preferred input device, usually the keyboard. &lt;tt&gt;STDERR&lt;/tt&gt; (&quot;standard error&quot;) is used for error messages, diagnostics, debugging, and other such incidental output. By default &lt;tt&gt;STDERR&lt;/tt&gt; uses the same output device as &lt;tt&gt;STDOUT&lt;/tt&gt;, but this can be changed at the user&#39;s discretion. The reason that there are separate filehandles for normal and abnormal output is so that the user can divert them independently; for example, to send normal output to a file and error output to the screen.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;This code fragment will read a line of input from &lt;tt&gt;STDIN&lt;/tt&gt;, remove the terminating end-of-line character with the &lt;tt&gt;chomp()&lt;/tt&gt; function, and echo it to standard output:&lt;/p&gt;
&lt;pre&gt;$input = &amp;lt;STDIN&amp;gt;;
chomp($input);
print STDOUT &quot;If I heard you correctly, you said: $input/n&quot;;
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;By taking advantage of the fact that &lt;tt&gt;STDIN&lt;/tt&gt; and &lt;tt&gt;STDOUT&lt;/tt&gt; are the defaults for many I/O operations, and by combining &lt;tt&gt;chomp()&lt;/tt&gt; with the input operation, the same code could be written more succinctly like this:&lt;/p&gt;
&lt;pre&gt;chomp($input = &amp;lt;&amp;gt;);
print &quot;If I heard you correctly, you said: $input/n&quot;;
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;We review the &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; and &lt;tt&gt;print()&lt;/tt&gt; functions in the next section. Similarly, &lt;tt&gt;STDERR&lt;/tt&gt; is the default destination for the &lt;tt&gt;warn()&lt;/tt&gt; and &lt;tt&gt;die()&lt;/tt&gt; functions.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The user can change the attachment of the three standard filehandles before launching the script. On UNIX and Windows systems, this is done using the redirect metacharacters &quot;&amp;lt;&quot; and &quot;&amp;gt;&quot;. For example, given a script named &lt;span class=&quot;docEmphasis&quot;&gt;muncher.pl&lt;/span&gt; this command will change the script&#39;s standard input so that it comes from the file &lt;span class=&quot;docEmphasis&quot;&gt;data.txt&lt;/span&gt;, and its standard output so that processed data ends up in &lt;span class=&quot;docEmphasis&quot;&gt;crunched.txt&lt;/span&gt;:&lt;/p&gt;
&lt;pre&gt;% &lt;span class=&quot;docEmphStrong&quot;&gt;muncher.pl &amp;lt;data.txt &amp;gt;crunched.txt&lt;/span&gt;
						&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Standard error isn&#39;t changed, so diagnostic messages (e.g., from the built-in &lt;tt&gt;warn()&lt;/tt&gt; and &lt;tt&gt;die()&lt;/tt&gt; functions) appear on the screen.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;On Macintosh systems, users can change the source of the three standard filehandles by selecting filenames from a dialog box within the MacPerl development environment.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;ch01lev2sec8&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;1_1_2_Input_and_Output_Operati&quot; id=&quot;1_1_2_Input_and_Output_Operati&quot;&gt;&lt;/a&gt;1.1.2 Input and Output Operations&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Perl gives you the option of reading from a filehandle one line at a time, suitable for text files, or reading from it in chunks of arbitrary length, suitable for binary byte streams like image files.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;For input, the &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; operator is used to read from a filehandle in a line-oriented fashion, and &lt;tt&gt;read()&lt;/tt&gt; or &lt;tt&gt;sysread()&lt;/tt&gt; to read in a byte-stream fashion. For output, &lt;tt&gt;print()&lt;/tt&gt; and &lt;tt&gt;syswrite()&lt;/tt&gt; are used for both text and binary data (you decide whether to make the output line-oriented by printing newlines).&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; width=&quot;90%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$line = &amp;lt;FILEHANDLE&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;@lines = &amp;lt;FILEHANDLE&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$line &amp;lt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;@lines &amp;lt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; (&quot;angle bracket&quot;) operator is sensitive to the context in which it is called. If it is used to assign to a scalar variable, a so-called scalar context, it reads a line of text from the indicated filehandle, returning the data along with its terminating end-of-line character. After reading the last line of the filehandle, &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; will return &lt;tt&gt;undef&lt;/tt&gt;, signaling the end-of-file (EOF) condition.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;When &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; is assigned to an array or used in another place where Perl ordinarily expects a list, it reads &lt;span class=&quot;docEmphasis&quot;&gt;all&lt;/span&gt; lines from the filehandle through to EOF, returning them as one (potentially gigantic) list. This is called a list context.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If called in a &quot;void context&quot; (i.e., without being assigned to a variable),&lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; copies a line into the &lt;tt&gt;$_&lt;/tt&gt; global variable. This is commonly seen in &lt;tt&gt;while()&lt;/tt&gt; loops, and often combined with pattern matches and other operations that use &lt;tt&gt;$_&lt;/tt&gt; implicitly:&lt;/p&gt;
&lt;pre&gt;while (&amp;lt;&amp;gt;) {
   print &quot;Found a gnu/n&quot; if /GNU/i;
}
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;&amp;lt;FILEHANDLE&amp;gt;&lt;/tt&gt; form of this function explicitly gives the filehandle to read from. However, the &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; form is &quot;magical.&quot; If the script was called with a set of file names as command-line arguments, &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; will attempt to &lt;tt&gt;open()&lt;/tt&gt; each argument in turn and will then return lines from them as if they were concatenated into one large pseudofile.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If no files are given on the command line, or if a single file named &quot;-&quot; is given, then &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; reads from standard input and is equivalent to &lt;tt&gt;&amp;lt;STDIN&amp;gt;&lt;/tt&gt;. See the &lt;span class=&quot;docEmphasis&quot;&gt;perlfunc&lt;/span&gt; POD documentation for an explanation of how this works (&lt;tt&gt;pod perlfunc&lt;/tt&gt;, as explained in the Preface).&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$bytes = read (FILEHANDLE,$buffer,$length [,$offset])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$bytes = sysread (FILEHANDLE,$buffer,$length [,$offset])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;read()&lt;/tt&gt; and &lt;tt&gt;sysread()&lt;/tt&gt; functions read data of arbitrary length from the indicated filehandle. Up to &lt;tt&gt;$length&lt;/tt&gt; bytes of data will be read, and placed in the &lt;tt&gt;$buffer&lt;/tt&gt; scalar variable. Both functions return the number of bytes actually read, numeric 0 on the end of file, or &lt;tt&gt;undef&lt;/tt&gt; on an error.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;This code fragment will attempt to read 50 bytes of data from &lt;tt&gt;STDIN&lt;/tt&gt;, placing the information in &lt;tt&gt;$buffer&lt;/tt&gt;, and assigning the number of bytes read to &lt;tt&gt;$bytes&lt;/tt&gt;:&lt;/p&gt;
&lt;pre&gt;my $buffer;
$bytes = read (STDIN,$buffer,50);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;By default, the read data will be placed at the beginning of &lt;tt&gt;$buffer&lt;/tt&gt;, overwriting whatever was already there. You can change this behavior by providing the optional numeric &lt;tt&gt;$offset&lt;/tt&gt; argument, to specify that read data should be written into the variable starting at the specified position.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The main difference between &lt;tt&gt;read()&lt;/tt&gt; and &lt;tt&gt;sysread()&lt;/tt&gt; is that &lt;tt&gt;read()&lt;/tt&gt; uses standard I/O buffering, and &lt;tt&gt;sysread()&lt;/tt&gt; does not. This means that &lt;tt&gt;read()&lt;/tt&gt; will not return until either it can fetch the exact number of bytes requested or it hits the end of file. The &lt;tt&gt;sysread()&lt;/tt&gt; function, in contrast, can return partial reads. It is guaranteed to return at least 1 byte, but if it cannot immediately read the number of bytes requested from the filehandle, it will return what it can. This behavior is discussed in more detail later in the Buffering and Blocking section.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$result = print FILEHANDLE $data1,$data2,$data3...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$result = print $data1,$data2,$data3...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;print()&lt;/tt&gt; function prints a list of data items to a filehandle. In the first form, the filehandle is given explicitly. Notice that there is no comma between the filehandle name and the first data item. In the second form, &lt;tt&gt;print()&lt;/tt&gt; uses the current default filehandle, usually &lt;tt&gt;STDOUT&lt;/tt&gt;. The default filehandle can be changed using the one-argument form of &lt;tt&gt;select()&lt;/tt&gt; (discussed below). If no data arguments are provided, then &lt;tt&gt;print()&lt;/tt&gt; prints the contents of &lt;tt&gt;$_&lt;/tt&gt;.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If output was successful, &lt;tt&gt;print()&lt;/tt&gt; returns a true value. Otherwise it returns false and leaves an error message in the variable named &lt;tt&gt;$!&lt;/tt&gt;.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Perl is a parentheses-optional language. Although I prefer using parentheses around function arguments, most Perl scripts drop them with &lt;tt&gt;print()&lt;/tt&gt;, and this book follows that convention as well.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$result = printf $format,$data1,$data2,$data3...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;printf()&lt;/tt&gt; function is a formatted print. The indicated data items are formatted and printed according to the &lt;tt&gt;$format&lt;/tt&gt; format string. The formatting language is quite rich, and is explained in detail in Perl&#39;s POD documentation for the related &lt;tt&gt;sprintf()&lt;/tt&gt; (string formatting) function.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$bytes = syswrite (FILEHANDLE,$data [,$length [,$offset]])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;syswrite()&lt;/tt&gt; function is an alternative way to write to a filehandle that gives you more control over the process. Its arguments are a filehandle and a scalar value (avariable or string literal). It writes the data to the filehandle, and returns the number of bytes successfully written.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;By default, &lt;tt&gt;syswrite()&lt;/tt&gt; attempts to write the entire contents of &lt;tt&gt;$data&lt;/tt&gt;, beginning at the start of the string. You can alter this behavior by providing an optional &lt;tt&gt;$length&lt;/tt&gt; and &lt;tt&gt;$offset&lt;/tt&gt;, in which case &lt;tt&gt;syswrite()&lt;/tt&gt; will write &lt;tt&gt;$length&lt;/tt&gt; bytes beginning at the position specified by &lt;tt&gt;$offset&lt;/tt&gt;.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Aside from familiarity, the main difference between &lt;tt&gt;print()&lt;/tt&gt; and &lt;tt&gt;syswrite()&lt;/tt&gt; is that the former uses standard I/O buffering, while the latter does not. We discuss this later in the Buffering and Blocking section.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Don&#39;t confuse &lt;tt&gt;syswrite()&lt;/tt&gt; with Perl&#39;s unfortunately named &lt;tt&gt;write()&lt;/tt&gt; function. The latter is part of Perl&#39;s report formatting package, which we won&#39;t discuss further.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$previous = select(FILEHANDLE)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;select()&lt;/tt&gt; function changes the default output filehandle used by print &lt;tt&gt;print ()&lt;/tt&gt;. It takes the name of the filehandle to set as the default, and returns the name of the previous default. There is also a version of &lt;tt&gt;select()&lt;/tt&gt; that takes four arguments, which is used for I/O multiplexing. We introduce the four-argument version in &lt;a class=&quot;docLink&quot;&gt;Chapter 8&lt;/a&gt;.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;When reading data as a byte stream with &lt;tt&gt;read()&lt;/tt&gt; or &lt;tt&gt;sysread()&lt;/tt&gt;, a common idiom is to pass &lt;tt&gt;length($buffer)&lt;/tt&gt; as the offset into the buffer. This will make &lt;tt&gt;read()&lt;/tt&gt; append the new data to  the end of data that was already in the buffer. For example:&lt;/p&gt;
&lt;pre&gt;my $buffer;
while (1) {
  $bytes = read (STDIN,$buffer,50,length($buffer));
  last unless $bytes &amp;gt; 0;
}&lt;/pre&gt;
&lt;p&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-size:11px;font-weight:bold;&quot;&gt;&lt;a name=&quot;ch01lev2sec9&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;1_1_3_Detecting_the_End_of_Fil&quot; id=&quot;1_1_3_Detecting_the_End_of_Fil&quot;&gt;&lt;/a&gt;1.1.3 Detecting the End of File&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The end-of-file condition occurs when there&#39;s no more data to be read from a file or device. When reading from files this happens at the literal end of the file, but the EOF condition applies as well when reading from other devices. When reading from the terminal (command-line window), for example, EOF occurs when the user presses a special key: control-D on UNIX, control-Z on Windows/DOS, and command-. on Macintosh. When reading from a network-attached socket, EOF occurs when the remote machine closes its end of the connection.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The EOF condition is signaled differently depending on whether you are reading from the filehandle one line at a time or as a byte stream. For byte-stream operations with &lt;tt&gt;read()&lt;/tt&gt; or &lt;tt&gt;sysread()&lt;/tt&gt;, EOF is indicated when the function returns numeric 0. Other I/O errors return &lt;tt&gt;undef&lt;/tt&gt; and set &lt;tt&gt;$!&lt;/tt&gt; to the appropriate error message. To distinguish between an error and a normal end of file, you can test the return value with &lt;tt&gt;defined():&lt;/tt&gt;&lt;/p&gt;
&lt;pre&gt;while (1) {
  my $bytes = read(STDIN,$buffer,100);
  die &quot;read error&quot; unless defined ($bytes);
  last unless $bytes &amp;gt; 0;
}
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In contrast, the &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; operator doesn&#39;t distinguish between EOF and abnormal conditions, and returns &lt;tt&gt;undef&lt;/tt&gt; in either case. To distinguish them, you can set &lt;tt&gt;$!&lt;/tt&gt; to &lt;tt&gt;undef&lt;/tt&gt; before performing a series of reads, and check whether it is defined afterward:&lt;/p&gt;
&lt;pre&gt;undef $!;
while (defined(my $line = &amp;lt;STDIN&amp;gt;)) {
   $data .= $line;
}
die &quot;Abnormal read error: $!&quot; if defined ($!);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;When you are using &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; inside the conditional of a &lt;tt&gt;while()&lt;/tt&gt; loop, as shown in the most recent code fragment, you can dispense with the explicit &lt;tt&gt;defined()&lt;/tt&gt; test. This makes the loop easier on the eyes:&lt;/p&gt;
&lt;pre&gt;while (my $line = &amp;lt;STDIN&amp;gt;) {
   $data .= $line;
}
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;This will work even if the line consists of a single 0 or an empty string, which Perl would ordinarily treat as false. Outside &lt;tt&gt;while()&lt;/tt&gt; loops, be careful to use &lt;tt&gt;defined()&lt;/tt&gt; to test the returned value for EOF.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Finally, there is the &lt;tt&gt;eof()&lt;/tt&gt; function, which explicitly tests a filehandle for the EOF condition:&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; width=&quot;90%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$eof = eof(FILEHANDLE)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);font-weight:bold;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;eof()&lt;/tt&gt; function returns true if the next read on &lt;tt&gt;FILEHANDLE&lt;/tt&gt; will return an EOF. Called without arguments or parentheses, as in &lt;tt&gt;eof&lt;/tt&gt;, the function tests the last filehandle read from.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;When using &lt;tt&gt;while(&amp;lt;&amp;gt;)&lt;/tt&gt; to read from the command-line arguments as a single pseudofile, &lt;tt&gt;eof()&lt;/tt&gt; has &quot;magical&quot;—or at least confusing—properties. Called with empty parentheses, as in &lt;tt&gt;eof()&lt;/tt&gt;, the function returns true at the end of the very last file. Called without parentheses or arguments, as in &lt;tt&gt;eof&lt;/tt&gt;, the function returns true at the end of each of the individual files on the command line. See the Perl POD documentation for examples of the circumstances in which this behavior is useful.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In practice, you do not have to use &lt;tt&gt;eof()&lt;/tt&gt; except in very special circumstances, and a reliance on it is often a signal that something is amiss in the structure of your program.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;ch01lev2sec10&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;1_1_4_Anarchy_at_the_End_of_th&quot; id=&quot;1_1_4_Anarchy_at_the_End_of_th&quot;&gt;&lt;/a&gt;1.1.4 Anarchy at the End of the Line&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;When performing line-oriented I/O, you have to watch for different interpretations of the end-of-line character. No two operating system designers can seem to agree on how lines should end in text files. On UNIX systems, lines end with the linefeed character (LF, octal &lt;tt&gt;/012&lt;/tt&gt; in the ASCII table); on Macintosh systems, they end with the carriage return character (CR, octal &lt;tt&gt;/015&lt;/tt&gt;); and the Windows/DOS designers decided to end each line of text with two characters, a carriage return/linefeed pair (CRLF, or octal &lt;tt&gt;/015/012&lt;/tt&gt;). Most line-oriented network servers also use CRLF to terminate lines.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;This leads to endless confusion when moving text files between machines. Fortunately, Perl provides a way to examine and change the end-of-line character. The global variable &lt;tt&gt;$/&lt;/tt&gt; contains the current character, or sequence of characters, used to signal the end of line. By default, it is set to &lt;tt&gt;/012&lt;/tt&gt; on Unix systems, &lt;tt&gt;/015&lt;/tt&gt; on Macintoshes, and &lt;tt&gt;/015/012&lt;/tt&gt; on Windows and DOS systems.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The line-oriented &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; input function will read from the specified handle until it encounters the end-of-line character(s) contained in &lt;tt&gt;$/&lt;/tt&gt;, and return the line of text with the end-of-line sequence still attached. The &lt;tt&gt;chomp()&lt;/tt&gt; function looks for the end-of-line sequence at the end of a text string and removes it, respecting the current value of &lt;tt&gt;$/&lt;/tt&gt;.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The string escape &lt;tt&gt;/n&lt;/tt&gt; is the &lt;span class=&quot;docEmphasis&quot;&gt;logical&lt;/span&gt; newline character, and means different things on different platforms. For example, &lt;tt&gt;/n&lt;/tt&gt; is equivalent to &lt;tt&gt;/012&lt;/tt&gt; on UNIX systems, and to &lt;tt&gt;/015&lt;/tt&gt; on Macintoshes. (On Windows systems, &lt;tt&gt;/n&lt;/tt&gt; is usually &lt;tt&gt;/012&lt;/tt&gt;, but see the later discussion of DOS text mode.) In a similar vein, &lt;tt&gt;/r&lt;/tt&gt; is the logical carriage return character, which also varies from system to system.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;When communicating with a line-oriented network server that uses CRLF to terminate lines, it won&#39;t be portable to set &lt;tt&gt;$/&lt;/tt&gt; to &lt;tt&gt;/r/n&lt;/tt&gt;. Use the explicit string &lt;tt&gt;/015/012&lt;/tt&gt; instead. To make this less obscure, the Socket and IO::Socket modules, which we discuss in great detail later, have an option to export globals named &lt;tt&gt;$CRLF&lt;/tt&gt; and &lt;tt&gt;CRLF()&lt;/tt&gt; that return the correct values.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;There is an additional complication when performing line-oriented I/O on Microsoft Windows and DOS machines. For historical reasons, Windows/DOS distinguishes between filehandles in &quot;text mode&quot; and those in &quot;binary mode.&quot; In binary mode, what you see is exactly what you get. When you print to a binary filehandle, the data is output exactly as you specified. Similarly, read operations return the data exactly as it was stored in the file.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In text mode, however, the standard I/O library automatically translates LF into CRLF pairs on the way out, and CRLF pairs into LF on the way in. The virtue of this is that it makes text operations on Windows and UNIX Perls look the same—from the programmer&#39;s point of view, the DOS text files end in a single &lt;tt&gt;/n&lt;/tt&gt; character, just as they do in UNIX. The problem one runs into is when reading or writing binary files—such as images or indexed databases—and the files become mysteriously corrupted on input or output. This is due to the default line-end translation. Should this happen to you, you should turn off character translation by calling &lt;tt&gt;binmode()&lt;/tt&gt; on the filehandle.&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; width=&quot;90%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;binmode (FILEHANDLE [$discipline])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);font-weight:bold;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;binmode()&lt;/tt&gt; function turns on binary mode for a filehandle, disabling character translation. It should be called after the filehandle is opened, but before doing any I/O with it. The single-argument form turns on binary mode. The two-argument form, available only with Perl 5.6 or higher, allows you to turn binary mode on by providing &lt;tt&gt;:raw&lt;/tt&gt; as the value of &lt;tt&gt;$discipline&lt;/tt&gt;, or restore the default text mode using &lt;tt&gt;:crlf&lt;/tt&gt; as the value.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;tt&gt;binmode()&lt;/tt&gt; only has an effect on systems like Windows and VMS, where the end-of-line sequence is more than one character. On UNIX and Macintosh systems, it has no effect.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Another way to avoid confusion over text and binary mode is to use the &lt;tt&gt;sysread()&lt;/tt&gt; and &lt;tt&gt;syswrite()&lt;/tt&gt; functions, which bypass the character translation routines in the standard I/O library.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;A whole bevy of special global variables control other aspects of line-oriented I/O, such as whether to append an end-of-line character automatically to data output with the &lt;tt&gt;print()&lt;/tt&gt; statement, and whether multiple data values should be separated by a delimiter. See Appendix B for a brief summary.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;ch01lev2sec11&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;1_1_5_Opening_and_Closing_File&quot; id=&quot;1_1_5_Opening_and_Closing_File&quot;&gt;&lt;/a&gt;1.1.5 Opening and Closing Files&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In addition to the three standard filehandles, Perl allows you to open any number of additional filehandles. To open a file for reading or writing, use the built-in Perl function &lt;tt&gt;open()&lt;/tt&gt; If successful, &lt;tt&gt;open()&lt;/tt&gt; gives you a filehandle to use for the read and/or write operations themselves. Once you are finished with the filehandle, call &lt;tt&gt;close()&lt;/tt&gt; to close it. This code fragment illustrates how to open the file &lt;span class=&quot;docEmphasis&quot;&gt;message.txt&lt;/span&gt; for writing, write two lines of text to it, and close it:&lt;/p&gt;
&lt;pre&gt;open (FH,&quot;&amp;gt;message.txt&quot;) or die &quot;Can&#39;t open file: $!&quot;;
print FH &quot;This is the first line./n&quot;;
print FH &quot;And this is the second./n&quot;;
close (FH) or die &quot;Can&#39;t close file: $!&quot;;
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;We call &lt;tt&gt;open()&lt;/tt&gt; with two arguments: a filehandle name and the name of the file we wish to open. The filehandle name is any valid Perl identifier consisting of any combination of uppercase and lowercase letters, digits, and the underscore character. To make them distinct, most Perl programmers choose all uppercase letters for filehandles. The &quot; &lt;tt&gt;&amp;gt;&lt;/tt&gt; &quot; symbol in front of the filename tells Perl to overwrite the file&#39;s contents if it already exists, or to create the file if it doesn&#39;t. The file will then be opened for writing.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If &lt;tt&gt;open()&lt;/tt&gt; succeeds, it returns a true value. Otherwise, it returns false, causing Perl to evaluate the expression to the right of the &lt;tt&gt;or&lt;/tt&gt; operator. This expression simply dies with an error message, using Perl&#39;s &lt;tt&gt;$!&lt;/tt&gt; global variable to retrieve the last system error message encountered.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;We call &lt;tt&gt;print()&lt;/tt&gt; twice to write some text to the filehandle. The first argument to &lt;tt&gt;print()&lt;/tt&gt; is the filehandle, and the second and subsequent arguments are strings to write to the filehandle. Again, notice that there is no comma between the filehandle and the strings to print. Whatever is printed to a filehandle shows up in its corresponding file. If the filehandle argument to &lt;tt&gt;print()&lt;/tt&gt; is omitted, it defaults to &lt;tt&gt;STDOUT&lt;/tt&gt;.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;After we have finished printing, we call &lt;tt&gt;close()&lt;/tt&gt; to close the filehandle. &lt;tt&gt;close()&lt;/tt&gt; returns a true value if the filehandle was closed uneventfully, or false if some untoward event, such as a disk filling up, occurred. We check this result code using the same type of &lt;tt&gt;or&lt;/tt&gt; test we used earlier.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Let&#39;s look at &lt;tt&gt;open()&lt;/tt&gt; and &lt;tt&gt;close()&lt;/tt&gt; in more detail.&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; width=&quot;90%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$success = open(FILEHANDLE,$path)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$success = open(FILEHANDLE,$mode,$path)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);font-weight:bold;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;open()&lt;/tt&gt; call opens the file given in &lt;tt&gt;$path&lt;/tt&gt;, associating it with a designated &lt;tt&gt;FILEHANDLE&lt;/tt&gt;. There are both two- and three-argument versions of &lt;tt&gt;open()&lt;/tt&gt;. In the three-argument version, which is available in Perl versions 5.6 and higher, a &lt;tt&gt;$mode&lt;/tt&gt; argument specifies how the file is to be opened. &lt;tt&gt;$mode&lt;/tt&gt; is a one- or two-character string chosen to be reminiscent of the I/O redirection operators in the UNIX and DOS shells. Choices are shown here.&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;90%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Mode&lt;/span&gt;&lt;/th&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Description&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;&amp;lt;&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Open file for reading&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Truncate file to zero length and open for writing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;&amp;gt;&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Open file for appending, do not truncate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;+&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Truncate file and then open for read/write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;&amp;lt;+&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Open file for read/write, do not truncate&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;We can open the file named &lt;span class=&quot;docEmphasis&quot;&gt;darkstar.txt&lt;/span&gt; for reading and associate it with the filehandle &lt;tt&gt;DARKFH&lt;/tt&gt; like this:&lt;/p&gt;
&lt;pre&gt;open(DARKFH,&#39;&amp;lt;&#39;,&#39;darkstar.txt&#39;);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In the two-argument form of &lt;tt&gt;open()&lt;/tt&gt;, the mode is appended directly to the filename, as in:&lt;/p&gt;
&lt;pre&gt;open(DARKFH,&#39;&amp;lt;darkstar.txt&#39;);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;For readability, you can put any amount of whitespace between the mode symbol and the filename; it will be ignored. If you leave out the mode symbol, the file will be opened for reading. Hence the above examples are all equivalent to this:&lt;/p&gt;
&lt;pre&gt;open(DARKFH,&#39;darkstar.txt&#39;);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If successful, &lt;tt&gt;open()&lt;/tt&gt; will return a true value. Otherwise it returns false. In the latter case, the &lt;tt&gt;$!&lt;/tt&gt; global will contain a human-readable message indicating thecause of the error.&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; width=&quot;90%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$success = close(FH);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);font-weight:bold;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;close()&lt;/tt&gt; function closes a previously opened file, returning true if successful, or false otherwise. In the case of an error, &lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;the error message can again be found in &lt;/span&gt;&lt;tt&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(255,0,0);&quot;&gt;$!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/tt&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;text-decoration:underline;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;When your program exits, any filehandles that are still open will be closed automatically.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The three-argument form of &lt;tt&gt;open()&lt;/tt&gt; is used only rarely. However, it has the virtue of not scanning the filename for special characters the way that the two-argument form does. This lets you open files whose names contain leading or trailing whitespace, &quot;&amp;gt;&quot; characters, and other weird and arbitrary data. The filename &quot;-&quot; is special. When opened for reading, it tells Perl to open standard input. When opened for writing, it tells Perl to open standard output.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If you call &lt;tt&gt;open()&lt;/tt&gt; on a filehandle that is already open, it will be automatically closed and then reopened on the file that you specify. Among other things, this call can be used to reopen one of the three standard filehandles on the file of your choice, changing the default source or destination of the &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt;, &lt;tt&gt;print()&lt;/tt&gt;, and &lt;tt&gt;warn()&lt;/tt&gt; functions. We will see an example of this shortly.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;As with the &lt;tt&gt;print()&lt;/tt&gt; function, many programmers drop the parentheses around &lt;tt&gt;open()&lt;/tt&gt; and &lt;tt&gt;close()&lt;/tt&gt;. For example, this is the most common idiom for opening a file:&lt;/p&gt;
&lt;pre&gt;open DARKSTAR,&quot;darkstar.txt&quot; or die &quot;Couldn&#39;t open darkstar.txt: $!&quot;
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;I don&#39;t like this style much because it leads to visual ambiguity (does the &lt;tt&gt;or&lt;/tt&gt; associate with the string &quot;darkstar.txt&quot; or with the &lt;tt&gt;open()&lt;/tt&gt; function?). However, I do use this style with&lt;tt&gt;close()&lt;/tt&gt;, &lt;tt&gt;print()&lt;/tt&gt;, and &lt;tt&gt;return()&lt;/tt&gt; because of their ubiquity.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The two-argument form of &lt;tt&gt;open()&lt;/tt&gt; has a lot of magic associated with it (too much magic, some would say). The full list of magic behavior can be found in the &lt;span class=&quot;docEmphasis&quot;&gt;perlfunc&lt;/span&gt; and &lt;span class=&quot;docEmphasis&quot;&gt;perlopentut&lt;/span&gt; POD documentation. However, one trick is worth noting because we use it in later chapters. You can &lt;span class=&quot;docEmphasis&quot;&gt;duplicate&lt;/span&gt; a filehandle by using it as the second argument to &lt;tt&gt;open()&lt;/tt&gt; with the sequence &lt;tt&gt;&amp;gt;&amp;amp;&lt;/tt&gt; or &lt;tt&gt;&amp;lt;&amp;amp;&lt;/tt&gt; prepended to the beginning. &lt;tt&gt;&amp;gt;&amp;amp;&lt;/tt&gt; duplicates filehandles used for writing, and &lt;tt&gt;&amp;lt;&amp;amp;&lt;/tt&gt; duplicates those used for reading:&lt;/p&gt;
&lt;pre&gt;open (OUTCOPY,&quot;&amp;gt;&amp;amp;STDOUT&quot;);
open (INCOPY,&quot;&amp;lt;&amp;amp;STDOUT&quot;);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;This example creates a new filehandle named &lt;tt&gt;OUTCOPY&lt;/tt&gt; that is attached to the same device as &lt;tt&gt;STDOUT&lt;/tt&gt;. You can now write to &lt;tt&gt;OUTCOPY&lt;/tt&gt; and it will have the same effect as writing to &lt;tt&gt;STDOUT&lt;/tt&gt;. This is useful when you want to replace one or more of the three standard filehandles temporarily, and restore them later. For example, this code fragment will temporarily reopen &lt;tt&gt;STDOUT&lt;/tt&gt; onto a file, invoke the system &lt;span class=&quot;docEmphasis&quot;&gt;date&lt;/span&gt; command (using the &lt;tt&gt;system()&lt;/tt&gt; function, which we discuss in more detail in &lt;a class=&quot;docLink&quot;&gt;Chapter 2&lt;/a&gt;), and then restore the previous value of &lt;tt&gt;STDOUT&lt;/tt&gt;. When &lt;span class=&quot;docEmphasis&quot;&gt;date&lt;/span&gt; runs, its standard output is opened on the file, and its output appears there rather than in the command window:&lt;/p&gt;
&lt;pre&gt;#!/usr/bin/perl
# file: redirect.pl

print &quot;Redirecting STDOUT/n&quot;;
open (SAVEOUT,&quot;&amp;gt;&amp;amp;STDOUT&quot;);
open (STDOUT,&quot;&amp;gt;test.txt&quot;) or die &quot;Can&#39;t open test.txt: $!&quot;;

print &quot;STDOUT is redirected/n&quot;;
system &quot;date&quot;;

open (STDOUT,&quot;&amp;gt;&amp;amp;SAVEOUT&quot;);
print &quot;STDOUT restored/n&quot;;
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;When this script runs, its output looks like this:&lt;/p&gt;
&lt;pre&gt;% redirect.pl
Redirecting STDOUT
STDOUT restored
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;and the file &lt;span class=&quot;docEmphasis&quot;&gt;test.txt&lt;/span&gt; contains these lines:&lt;/p&gt;
&lt;pre&gt;STDOUT is redirected
Thu Aug 10 09:19:24 EDT 2000
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Notice how the second &lt;tt&gt;print()&lt;/tt&gt; statement and the output of the &lt;span class=&quot;docEmphasis&quot;&gt;date&lt;/span&gt; system command went to the file rather than to the screen because we had reopened &lt;tt&gt;STDOUT&lt;/tt&gt; at that point. When we restored &lt;tt&gt;STDOUT&lt;/tt&gt; from the copy saved in &lt;tt&gt;SAVEOUT&lt;/tt&gt;, our ability to print to the terminal was restored.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Perl also provides an alternative API for opening files that avoids the magic and obscure syntax of &lt;tt&gt;open()&lt;/tt&gt; altogether. The &lt;tt&gt;sysopen()&lt;/tt&gt; function allows you to open files using the same syntax as the C library&#39;s &lt;tt&gt;open()&lt;/tt&gt; function.&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; width=&quot;90%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$result = sysopen (FILEHANDLE,$filename,$mode [,$perms])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);font-weight:bold;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;sysopen()&lt;/tt&gt; function opens the file indicated by &lt;tt&gt;$filename&lt;/tt&gt;, using the I/O mode indicated by &lt;tt&gt;$mode&lt;/tt&gt;. If the file doesn&#39;t exist, and &lt;tt&gt;$mode&lt;/tt&gt; indicates that the file should be created, then the optional &lt;tt&gt;$perms&lt;/tt&gt; value specifies the permission bits for the newly created file. We discuss I/O modes and permissions in more detail below.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If successful, &lt;tt&gt;sysopen()&lt;/tt&gt; returns a true result and associates the opened file with &lt;tt&gt;FILEHANDLE&lt;/tt&gt;. Otherwise it returns a false result and leaves the error message in &lt;tt&gt;$!&lt;/tt&gt;.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;$mode&lt;/tt&gt; argument used in &lt;tt&gt;sysopen()&lt;/tt&gt; is different from the mode used in ordinary &lt;tt&gt;open()&lt;/tt&gt;. Instead of being a set of characters, it is a numeric bitmask formed by ORing together one or more constants using the bitwise &lt;tt&gt;OR&lt;/tt&gt; operator &quot; &lt;tt&gt;|&lt;/tt&gt; &quot;. For example, the following snippet opens up a file for writing using a mode that causes it to be created if it doesn&#39;t exist, and truncated to length zero if it does (equivalent to &lt;tt&gt;open()&lt;/tt&gt;&#39;s &quot; &lt;tt&gt;&amp;gt;&lt;/tt&gt; &quot; mode):&lt;/p&gt;
&lt;pre&gt;sysopen(FH, &quot;darkstar.txt&quot;,O_WRONLY|O_CREAT|O_TRUNC)
      or die &quot;Can&#39;t open: $!&quot;
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The standard &lt;tt&gt;Fcntl&lt;/tt&gt; module exports the constants recognized by &lt;tt&gt;sysopen()&lt;/tt&gt;, all of which begin with the prefix &lt;tt&gt;O_&lt;/tt&gt;. Just use &lt;tt&gt;Fcntl&lt;/tt&gt; at the top of your script togain access to them.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The mode constants useful for &lt;tt&gt;sysopen()&lt;/tt&gt; are listed in &lt;a class=&quot;docLink&quot;&gt;Table 1.1&lt;/a&gt;. Each call to &lt;tt&gt;sysopen()&lt;/tt&gt; must have one (and only one) of &lt;tt&gt;O_RDONLY&lt;/tt&gt;, &lt;tt&gt;O_WRONLY&lt;/tt&gt;, and &lt;tt&gt;O_RDWR&lt;/tt&gt;. The &lt;tt&gt;O_WRONLY&lt;/tt&gt; and &lt;tt&gt;O_RDWR&lt;/tt&gt; constants may be ORed with one or more of &lt;tt&gt;O_CREAT&lt;/tt&gt;, &lt;tt&gt;O_EXCL&lt;/tt&gt;, &lt;tt&gt;O_TRUNC&lt;/tt&gt;, or &lt;tt&gt;O_APPEND&lt;/tt&gt;.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;tt&gt;O_CREAT&lt;/tt&gt; causes the file to be created if it doesn&#39;t already exist. If it isn&#39;t specified, and the file doesn&#39;t exist when you try to open it for writing, then &lt;tt&gt;sysopen()&lt;/tt&gt; will fail.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Combining &lt;tt&gt;O_CREAT&lt;/tt&gt; with &lt;tt&gt;O_EXCL&lt;/tt&gt; leads to the useful behavior of creating the file if it doesn&#39;t already exist, but failing if it does. This can be used to avoid accidentally clobbering an existing file.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If &lt;tt&gt;O_TRUNC&lt;/tt&gt; is specified, then the file is truncated to zero length before the first write, effectively overwriting the previous contents. &lt;tt&gt;O_APPEND&lt;/tt&gt; has the opposite effect, positioning the write pointer to the end of the file so that everything written to the file is appended to its existing contents.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;ch01table01&quot;&gt;&lt;/a&gt;
&lt;p style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p&gt;
&lt;div style=&quot;text-align:center;margin-top:0;margin-bottom:0;&quot;&gt;Table 1.1. sysopen() Mode Constants&lt;/div&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Constant&lt;/span&gt;&lt;/th&gt;
&lt;th class=&quot;docTableHeader&quot; valign=&quot;top&quot;&gt;&lt;span class=&quot;docEmphasis&quot;&gt;Description&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;O_RDONLY&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Open read only.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;O_WRONLY&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Open write only.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;O_RDWR&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Open read/write.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;O_CREAT&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Create file if it doesn&#39;t exist.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;O_EXCL&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;When combined with &lt;tt&gt;O_CREAT&lt;/tt&gt;, create file if it doesn&#39;t exist and fail if it does.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;O_TRUNC&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;If file already exists, truncate it to zero.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;O_APPEND&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Open file in append mode (equivalent to &lt;tt&gt;open()&lt;/tt&gt;&#39;s &quot; &lt;tt&gt;&amp;gt;&amp;gt;&lt;/tt&gt; &quot;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;O_NOCTTY&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;If the file is a terminal device, open it without allowing it to become the process&#39;s controlling terminal.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;O_NONBLOCK&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Open file in nonblockingmode.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;&lt;tt&gt;O_SYNC&lt;/tt&gt;&lt;/td&gt;
&lt;td class=&quot;docTableCell&quot; valign=&quot;top&quot;&gt;Open file for synchronous mode, so that all writes block until the data is physically written.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;O_NOCTTY&lt;/tt&gt;, &lt;tt&gt;O_NONBLOCK&lt;/tt&gt;, and &lt;tt&gt;O_SYNC&lt;/tt&gt; modes all have specialized uses that are discussed in later chapters.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If &lt;tt&gt;sysopen()&lt;/tt&gt; needs to create a file, the &lt;tt&gt;$perm&lt;/tt&gt; argument specifies the permissions mode of the resulting file. File permissions is a UNIX concept that maps imperfectly onto the Windows/DOS world, and not at all onto the Macintosh world. It is an octal value, such as &lt;tt&gt;0644&lt;/tt&gt; (which happens to specify read/write permissions for the owner of the file, and read-only permissions for others).&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If &lt;tt&gt;$perm&lt;/tt&gt; is not provided, &lt;tt&gt;sysopen()&lt;/tt&gt; defaults to &lt;tt&gt;0666&lt;/tt&gt;, which grants read/write access to everyone. However, whether you specify the permissions or accept the default, the actual permissions of the created file are determined by performing the bitwise AND between the &lt;tt&gt;$perm&lt;/tt&gt; argument and the current contents of the user&#39;s &lt;span class=&quot;docEmphasis&quot;&gt;umask&lt;/span&gt; (another UNIX concept). This is often set, at the user&#39;s discretion, to forbid access to the file from outside the user&#39;s account or group.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In most circumstances, it is best to omit the permissions argument and let the user adjust the &lt;span class=&quot;docEmphasis&quot;&gt;umask&lt;/span&gt;. This also increases the portability of the program. See the &lt;tt&gt;umask()&lt;/tt&gt; entry in the &lt;span class=&quot;docEmphasis&quot;&gt;perlfunc&lt;/span&gt; POD documentation for information on how you can examine and set the umask programatically.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;ch01lev2sec12&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;1_1_6_Buffering_and_Blocking_&quot; id=&quot;1_1_6_Buffering_and_Blocking_&quot;&gt;&lt;/a&gt;1.1.6 Buffering and Blocking&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;When you &lt;tt&gt;print()&lt;/tt&gt; or &lt;tt&gt;syswrite()&lt;/tt&gt; to a filehandle, the actual output operation does not occur immediately. If you are writing to a file, the system has to wait for the write head to reach the proper location on the disk drive, and for the spinning platter to bring the proper location under the head. This is usually an insignificant length of time (although it may be quite noticeable on a laptop that intermittently spins down its disk to save battery power), but other output operations can take much more time. In particular, network operations may take a considerable length of time to complete. The same applies to input.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;There is a fundamental mismatch between computational speed and I/O speed. A program can execute the contents of a tight loop a million times a second, but a single I/O operation may take several seconds to complete. To overcome this mismatch, modern operating systems use the techniques of buffering and blocking.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The idea behind buffering is shown in &lt;a class=&quot;docLink&quot;&gt;Figure 1.3&lt;/a&gt;. Buffers decouple the I/O calls invoked by the program from the actual I/O operations that occur at the hardware level. A call to &lt;tt&gt;print()&lt;/tt&gt;, for example, doesn&#39;t send data directly to the terminal, network card, or disk drive, but instead it results in data being written to a memory area. This occurs quickly, because writes to memory are fast. Meanwhile, in an asynchronous fashion, the operating system reads from data previously written to the buffer and performs the actions necessary to write the information to the hardware device.&lt;/p&gt;
&lt;p&gt;Figure 1.3. Buffers help solve the mismatch between computation speed and I/O speed
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;div id=&quot;r:n9&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://docs.google.com/File?id=dd6nw3mt_211c67qrqfz_b&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_211c67qrqfz_b&quot; style=&quot;width:500px;height:512px;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Similarly, for input operations, the operating system receives data from active input devices (the keyboard, disk drive, network card) and writes that data to an input buffer somewhere in memory. The data remains in the input buffer until your program calls &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; or &lt;tt&gt;read()&lt;/tt&gt;, at which point the data is copied from the operating system&#39;s buffer into the memory space corresponding to a variable in your program.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The advantage of buffering is significant, particularly if your program performs I/O in a &quot;bursty&quot; way; that is, it performs numerous reads and writes of unpredictable size and timing. Instead of waiting for each operation to complete at the hardware level, the data is safely buffered in the operating system and &quot;flushed&quot;—passed on to the output device—whenever the downstream hardware can accept it.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The buffers in &lt;a class=&quot;docLink&quot;&gt;Figure 1.3&lt;/a&gt; are conceptually circular FIFO (first in first out) data structures. When data is written beyond the end of the buffer memory area, the operating system merely begins writing new data at the beginning. The operating system maintains two pointers in each of its I/O buffers. The write pointer is the place where new data enters the buffer. The read pointer is the position from which stored data is moved out of the buffer to its next destination. For example, on write operations, each &lt;tt&gt;print()&lt;/tt&gt; you perform adds some data to the output buffer and advances the write pointer forward. The operating system reads older data starting at the read pointer and copies it to the low-level hardware device.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The size of the I/O buffer minus the distance between the write pointer and the read pointer is the amount of free space remaining. If your program is writing faster than the output hardware can receive it, then the buffer will eventually fill up and the buffer&#39;s free space will be zero. What happens then?&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Because there is no room for new data in the buffer, the output operation cannot succeed immediately. As a result, the write operation blocks. Your program will be suspended at the blocked &lt;tt&gt;print()&lt;/tt&gt; or &lt;tt&gt;syswrite()&lt;/tt&gt; for an indefinite period of time. When the backlog in the output buffer clears and there is again room to receive new data, the output operation will unblock and &lt;tt&gt;print()&lt;/tt&gt; or &lt;tt&gt;syswrite()&lt;/tt&gt; will return.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In a similar fashion, reads will block when the input buffer is empty; that is, it blocks when the amount of free space is equal to the size of the buffer. In this case, calls to &lt;tt&gt;read()&lt;/tt&gt; or &lt;tt&gt;sysread()&lt;/tt&gt; will block until some new data has entered the buffer and there is something to be read.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Blocking is often the behavior you want, but sometimes you need more control over I/O. There are several techniques to manage blocking. One technique, discussed in &lt;a class=&quot;docLink&quot;&gt;Chapter 2&lt;/a&gt; under Timing Out System Calls, uses signals to abort an I/O operation prematurely if it takes too long. Another technique, discussed in &lt;a class=&quot;docLink&quot;&gt;Chapter 12&lt;/a&gt;, uses the four-argument &lt;tt&gt;select()&lt;/tt&gt; system call to test a filehandle for its readiness to perform I/O before actually making the read or write call. A third technique, discussed in &lt;a class=&quot;docLink&quot;&gt;Chapter 13&lt;/a&gt;, is to mark the filehandle as nonblocking, which causes the read or write operation to return immediately with an error code if the operation would block.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;ch01lev2sec13&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;1_1_7_Standard_I_O_Buffering_&quot; id=&quot;1_1_7_Standard_I_O_Buffering_&quot;&gt;&lt;/a&gt;1.1.7 Standard I/O Buffering&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Although we have spoken of a single buffer for I/O operations on a filehandle, there may in fact be several buffers at different layers of the operating system. For example, when writing to a disk file, there is a very low-level buffer on the disk hardware itself, another one in the SCSI or IDE driver that controls the disk, a third in the driver for the filesystem, and a fourth in the standard C library used by Perl. I may have missed a few.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;You cannot control or even access most of these buffers directly, but there is one class of buffer that you should be aware of. Many of Perl&#39;s I/O operations flow through &quot;stdio,&quot; a standard C-language library which maintains its own I/O buffers independent of the operating system&#39;s.&lt;sup class=&quot;docFootnote&quot;&gt;&lt;a class=&quot;docLink&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;blockquote style=&quot;border-color:rgb(221,221,221);border-style:dashed;border-width:1px;padding:10px;&quot;&gt;&lt;p class=&quot;docFootnote&quot; style=&quot;margin:0;&quot;&gt;&lt;sup&gt;&lt;a name=&quot;ch01fn01&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt; You can think of the stdio library as a layersitting on top of the OS, making the OS look more C-like to programs; similarly, a Pascal standard I/O library makes the OS look as if it were written in Pascal.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Perl&#39;s &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; operator, &lt;tt&gt;read()&lt;/tt&gt;, and &lt;tt&gt;print()&lt;/tt&gt; all use stdio. When you call &lt;tt&gt;print()&lt;/tt&gt;, the data is transferred to an output buffer in the stdio layer before being sent to the operating system itself. Likewise, &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; and &lt;tt&gt;read()&lt;/tt&gt; both read data from an stdio buffer rather than directly from the OS. Each filehandle has its own set of buffers for input and output. For efficiency reasons, stdio waits until its output buffers reach a certain size before flushing their contents to the OS.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Normally, the presence of the stdio buffering is not a problem, but it can run you into trouble when doing more sophisticated types of I/O such as network operations. Consider the common case of an application that requires you to write a small amount of data to a remote server, wait for a response, and then send more data. You may think that the data has been sent across the network, but in fact it may not have been. The output data may still be sitting in its local stdio buffer, waiting for more data to come before flushing the buffer. The remote server will never receive the data, and so will never return a response. Your program will never receive a response and so will never send additional data. Deadlock ensues.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In contrast, the lower-level buffering performed by the operating system doesn&#39;t have this property. The OS will always attempt to deliver whatever data is in its output buffers as soon as the hardware can accept it.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;There are two ways to work around stdio buffering. One is to turn on &quot;autoflush&quot; mode for the filehandle. Autoflush mode applies only to output operations. When active, Perl tells stdio to flush the filehandle&#39;s buffer every time &lt;tt&gt;print()&lt;/tt&gt; is called.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;To turn on autoflush mode, set the special variable &lt;tt&gt;$|&lt;/tt&gt; to a true value. Autoflush mode affects the currently selected filehandle, so to change autoflush mode for a specific filehandle, one must first &lt;tt&gt;select()&lt;/tt&gt; it, set &lt;tt&gt;$|&lt;/tt&gt; to true, and then &lt;tt&gt;select()&lt;/tt&gt; the previously selected filehandle. For example, to turn on autoflush mode for filehandle &lt;tt&gt;FH&lt;/tt&gt;:&lt;/p&gt;
&lt;pre&gt;my $previous = select(FH);
$| = 1;
select($previous);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;You will sometimes see this motif abbreviated using the following mind-blowing idiom:&lt;/p&gt;
&lt;pre&gt;select((select(FH),$|=1)[0]);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;However, it is much cleaner to bring in the &lt;tt&gt;IO::Handle&lt;/tt&gt; module, which adds an &lt;tt&gt;autoflush()&lt;/tt&gt; method to filehandles. With &lt;tt&gt;IO::Handle&lt;/tt&gt; loaded, &lt;tt&gt;FH&lt;/tt&gt; can be put into autoflush mode like this:&lt;/p&gt;
&lt;pre&gt;use IO::Handle;
FH-&amp;gt;autoflush(1);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If the OO syntax confuses you, see the Objects and References section later in this chapter.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The other way to avoid stdio buffering problems is to use the &lt;tt&gt;sysread()i&lt;/tt&gt; and &lt;tt&gt;syswrite()&lt;/tt&gt; calls. These calls bypass the stdio library and go directly to the operating system I/O calls. An important advantage of these calls is that they interoperate well with other low-level I/O calls, such as the four-argument &lt;tt&gt;select()&lt;/tt&gt; call, and with advanced techniques such as nonblocking I/O.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Another ramification of the fact that the &lt;tt&gt;sys*()&lt;/tt&gt; functions bypass stdio is the difference in behavior between &lt;tt&gt;read()&lt;/tt&gt; and &lt;tt&gt;sysread()&lt;/tt&gt; when asked to fetch a larger chunk of data than is available. In the case of &lt;tt&gt;read()&lt;/tt&gt;, the function will block indefinitely until it can fetch exactly the amount of data requested. The only exception to this is when the filehandle encounters the end of file before the full request has been satisfied, in which case &lt;tt&gt;read()&lt;/tt&gt; will return everything to the end of the file. In contrast, &lt;tt&gt;sysread()&lt;/tt&gt; can and will return partial reads. If it can&#39;t immediately read the full amount of data requested, it will return the data that is available. If no data is available, &lt;tt&gt;sysread()&lt;/tt&gt; will block until it can return at least 1 byte. This behavior makes &lt;tt&gt;sysread()&lt;/tt&gt; invaluable for use in network communications, where data frequently arrives in chunks of unpredictable size.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;For these reasons, &lt;tt&gt;sysread()&lt;/tt&gt; and &lt;tt&gt;syswrite()&lt;/tt&gt; are preferred for many network applications.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;ch01lev2sec14&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;1_1_8_Passing_and_Storing_File&quot; id=&quot;1_1_8_Passing_and_Storing_File&quot;&gt;&lt;/a&gt;1.1.8 Passing and Storing Filehandles&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Network applications frequently must open multiple filehandles simultaneously, pass them to subroutines, and keep track of them in hashes and other data structures. Perl allows you to treat filehandles as strings, store them into variables, and pass them around to subroutines. For example, this functional but flawed code fragment stores the &lt;tt&gt;MY_FH&lt;/tt&gt; filehandle into a variable named &lt;tt&gt;$fh&lt;/tt&gt;, and then passes it to a subroutine named &lt;tt&gt;hello()&lt;/tt&gt; to use in printing a friendly message:&lt;/p&gt;
&lt;pre&gt;# Flawed technique
$fh = MY_FH;
hello($fh);
sub hello {
  my $handle = shift;
  print $handle &quot;Howdy folks!/n&quot;;
}
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;This technique often works; however, it will run you into problems as soon asyou try to pass filehandles to subroutines in other packages, such as functions exported by modules. The reason is that passing filehandles as strings loses the filehandle package information. If we pass the filehandle &lt;tt&gt;MY_FH&lt;/tt&gt; from the main script (package &lt;tt&gt;main&lt;/tt&gt;) to a subroutine defined in the &lt;tt&gt;MyUtils&lt;/tt&gt; module, the subroutine will try to access a filehandle named &lt;tt&gt;MyUtils::MY_FH&lt;/tt&gt; rather than the true filehandle, which is &lt;tt&gt;main::MY_FH&lt;/tt&gt;. The same problem also occurs, of course, when a subroutine from one package tries to return a filehandle to a caller from another package.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The correct way to move filehandles around is as a &lt;span class=&quot;docEmphasis&quot;&gt;typeglob&lt;/span&gt; or a &lt;span class=&quot;docEmphasis&quot;&gt;typeglob reference.&lt;/span&gt; Typeglobs are symbol table entries, but you don&#39;t need to know much more about them than that in order to use them (see the &lt;span class=&quot;docEmphasis&quot;&gt;perlref&lt;/span&gt; POD documentation for the full details). To turn a filehandle into a glob put an asterisk (&quot;*&quot;) in front of its name:&lt;/p&gt;
&lt;pre&gt;$fh = *MY_FH;
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;To turn a filehandle into a typeglob reference, put &quot;/*&quot; in front of its name:&lt;/p&gt;
&lt;pre&gt;$fh = /*MY_FH;
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In either case, &lt;tt&gt;$fh&lt;/tt&gt; can now be used to pass the filehandle back and forth between subroutines and to store filehandles in data structures. Of the two forms, the glob reference (&lt;tt&gt;/*HANDLE&lt;/tt&gt;) is the safer, because there&#39;s less risk of accidentally writing to the variable and altering the symbol table. This is the form we use throughout this book, and the one used by Perl&#39;s I/O-related modules, such as IO::Socket.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Typeglob references can be passed directly to subroutines:&lt;/p&gt;
&lt;pre&gt;hello(/*MY_FH):
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;They can also be returned directly by subroutines:&lt;/p&gt;
&lt;pre&gt;my $fh = get_fh();
sub get_fh {
   open (FOO,&quot;foo.txt&quot;) or die &quot;foo: $!&quot;;
   return /*FOO;
}
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Typeglob refs can be used anywhere a bare filehandle is accepted, including as the first argument to &lt;tt&gt;print()&lt;/tt&gt;, &lt;tt&gt;read()&lt;/tt&gt;, &lt;tt&gt;sysread()&lt;/tt&gt;, &lt;tt&gt;syswrite()&lt;/tt&gt;, or any of the socket-related calls that we discuss in later chapters.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Sometimes you will need to examine a scalar variable to determine whether it contains a valid filehandle. The &lt;tt&gt;fileno()&lt;/tt&gt; function makes this possible:&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; width=&quot;90%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$integer = fileno (FILEHANDLE)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);font-weight:bold;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;fileno()&lt;/tt&gt; function accepts a filehandle in the form of a bare string, a typeglob, or a typeglob reference. If the filehandle is valid, &lt;tt&gt;fileno()&lt;/tt&gt; returns the &lt;span class=&quot;docEmphasis&quot;&gt;file descriptor&lt;/span&gt; for the filehandle. This is a small integer that uniquely identifies the filehandle to the operating system. &lt;tt&gt;STDIN&lt;/tt&gt;, &lt;tt&gt;STDOUT&lt;/tt&gt;, and &lt;tt&gt;STDERR&lt;/tt&gt; generally correspond to descriptors 0, 1, and 2, respectively (but this can change if you close and reopen them). Other filehandles have descriptors greater than 3.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If the argument passed to &lt;tt&gt;fileno()&lt;/tt&gt; does not correspond to a valid filehandle (including former filehandles that have been closed), &lt;tt&gt;fileno()&lt;/tt&gt; returns &lt;tt&gt;undef&lt;/tt&gt;. Here is the idiom for checking whether a scalar variable contains a filehandle:&lt;/p&gt;
&lt;pre&gt;die &quot;not a filehandle&quot; unless defined fileno($fh);
&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p&gt;&lt;a name=&quot;ch01lev2sec15&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;1_1_9_Detecting_Errors_&quot; id=&quot;1_1_9_Detecting_Errors_&quot;&gt;&lt;/a&gt;1.1.9 Detecting Errors&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Because of the vicissitudes of Internet communications, I/O errors are common in network applications. As a rule, each of the Perl functions that performs I/O returns &lt;tt&gt;undef&lt;/tt&gt;, a false value, on failure. More specific information can be found by examining the special global variable &lt;tt&gt;$!&lt;/tt&gt;.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;tt&gt;$!&lt;/tt&gt; has an interesting dual nature. Treated as a string, it will return a human-readable error message such as &lt;tt&gt;Permission denied&lt;/tt&gt;. Treated as a number, however, it will return the numeric constant for the error, as defined by the operating system (e.g., &lt;tt&gt;EACCES&lt;/tt&gt;). It is generally more reliable to use these numeric error constants to distinguish particular errors, because they are standardized across operating systems.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;You can obtain the values of specific error message constants by importing them from the &lt;tt&gt;Errno&lt;/tt&gt; module. In the &lt;tt&gt;use&lt;/tt&gt; statement, you can import individual constants by name, or all of them at once. To bring in individual constants, list them in the &lt;tt&gt;use()&lt;/tt&gt; statement, as shown here:&lt;/p&gt;
&lt;pre&gt;use Errno qw(EACCES ENOENT);
my $result = open (FH,&quot;&amp;gt;/etc/passwd&quot;);
if (!$result) { # oops, something went wrong
   if ($! == EACCESS) {
      warn &quot;You do not have permission to open this file.&quot;;
   } elsif ($! == ENOENT) {
      warn &quot;File or directory not found.&quot;;
   } else {
      warn &quot;Some other error occurred: $!&quot;;
   }
}
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;qw()&lt;/tt&gt; operator is used to split a text string into a list of words. The first line above is equivalent to:&lt;/p&gt;
&lt;pre&gt;use Errno (&#39;EACCESS&#39;,&#39;ENOENT&#39;);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;and brings in the &lt;tt&gt;EACCESS&lt;/tt&gt; and &lt;tt&gt;ENOENT&lt;/tt&gt; constants. Notice that we use the numeric comparison operator &quot; &lt;tt&gt;==&lt;/tt&gt; &quot; when comparing &lt;tt&gt;$!&lt;/tt&gt; to numeric constants.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;To bring in all the common error constants, import the tag &lt;tt&gt;:POSIX&lt;/tt&gt;. Thisbrings in the error constants that are defined by the POSIX standard, across-platform API that UNIX, Windows NT/2000, and many other operating systems are largely compliant with. For example:&lt;/p&gt;
&lt;pre&gt;use Errno qw(:POSIX);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Do not get into the habit of testing &lt;tt&gt;$!&lt;/tt&gt; to see if an error occurred during the last operation. &lt;tt&gt;$!&lt;/tt&gt; is set when an operation fails, but is not unset when an operation succeeds. The value of &lt;tt&gt;$!&lt;/tt&gt; should be relied on only immediately after a function has indicated failure.&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;1_2_&quot; id=&quot;1_2_&quot;&gt;&lt;/a&gt;1.2 Using Object-Oriented Syntax with the IO::Handle and IO::File Modules&lt;br /&gt;&lt;/h4&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;1.2.1 Objects and References&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In Perl, references are pointers to data structures. You can create a reference to an existing data structure using the backslash operator. For example:&lt;/p&gt;
&lt;pre&gt;$a = &#39;hi there&#39;;
$a_ref = /$a; # reference to a scalar
@b = (&#39;this&#39;,&#39;is&#39;,&#39;an&#39;,&#39;array&#39;);
$b_ref = /@b; # reference to an array
%c = ( first_name =&amp;gt; &#39;Fred&#39;, last_name =&amp;gt; &#39;Jones&#39;);
$c_ref = /%c; # reference to a hash
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Once a reference has been created, you can make copies of it, as you would any regular scalar, or stuff it into arrays or hashes. When you want to get to the data contained inside a reference, you dereference it using the prefix appropriate for its contents:&lt;/p&gt;
&lt;pre&gt;$a = $$a_ref;
@b = @$b_ref;
%c = %$c_ref;
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;You can index into array and hash references without dereferencing the whole thing by using the &lt;tt&gt;-&amp;gt;&lt;/tt&gt; syntax:&lt;/p&gt;
&lt;pre&gt;$b_ref-&amp;gt;[2];          # yields &quot;an&quot;
$c_ref-&amp;gt;{last_name};  # yields &quot;Jones&quot;
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;It is also possible to create references to anonymous, unnamed arrays and hashes, using the following syntax:&lt;/p&gt;
&lt;pre&gt;$anonymous_array = [&#39;this&#39;,&#39;is&#39;,&#39;an&#39;,&#39;anonymous&#39;,&#39;array&#39;];
$anonymous_hash  = { first_name =&amp;gt;&#39;Jane&#39;, last_name =&amp;gt; &#39;Doe&#39; };
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If you try to print out a reference, you&#39;ll get a string like &lt;tt&gt;HASH(0x82ab0e0)&lt;/tt&gt;, which indicates the type of reference and the memory location where it can be found (which is just short of useless).&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;An &lt;span class=&quot;docEmphasis&quot;&gt;object&lt;/span&gt; is a reference with just a little bit extra. It is &quot;blessed&quot; into a particular module&#39;s package in such a way that it carries information about what module created it.&lt;sup class=&quot;docFootnote&quot;&gt;&lt;a class=&quot;docLink&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt; The blessed reference will continue to work just like other references. For example, if the object named &lt;tt&gt;$object&lt;/tt&gt; is a blessed hash reference, you can index into it like this:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:rgb(221,221,221);border-style:dashed;border-width:1px;padding:10px;&quot;&gt;&lt;p class=&quot;docFootnote&quot; style=&quot;margin:0;&quot;&gt;&lt;sup&gt;&lt;a name=&quot;ch01fn02&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt; The function responsible for turning ordinary references into blessed ones is, naturally enough, called &lt;span class=&quot;docEmphStrong&quot;&gt;bless()&lt;/span&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;$object-&amp;gt;{last_name};
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;What makes objects different from plain references is that they have &lt;span class=&quot;docEmphasis&quot;&gt;methods&lt;/span&gt;. A method call uses the &lt;tt&gt;-&amp;gt;&lt;/tt&gt; notation, but followed by a subroutine name and optional subroutine-style arguments:&lt;/p&gt;
&lt;pre&gt;$object-&amp;gt;print_record(); # invoke the print_record() method
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;You may sometimes see a method called with arguments, like this:&lt;/p&gt;
&lt;pre&gt;$object-&amp;gt;print_record(encoding =&amp;gt; &#39;EBCDIC&#39;);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &quot;=&amp;gt;&quot; symbol is accepted by Perl as a synonym for &#39;,&#39;. It makes the relationship between the two arguments more distinct, and has the added virtue of automatically quoting the argument on the left. This allows us to write encoding rather than &lt;span class=&quot;docEmphasis&quot;&gt;&quot;encoding&quot;&lt;/span&gt;. If a method takes no arguments, it&#39;s often written with the parentheses omitted, as in:&lt;/p&gt;
&lt;pre&gt;$object-&amp;gt;print_record;
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In many cases, &lt;tt&gt;print_record()&lt;/tt&gt; will be a subroutine defined in the object&#39;s package. Assuming that the object was created by a module named BigDatabase, the above is just a fancy way of saying this:&lt;/p&gt;
&lt;pre&gt;BigDatabase::print_record($object);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;However, Perl is more subtle than this, and the &lt;tt&gt;print_record()&lt;/tt&gt;, method definition might actually reside in another module, which the current module &lt;span class=&quot;docEmphasis&quot;&gt;inherits&lt;/span&gt; from. How this works is beyond the scope of this introduction, and can be found in the &lt;span class=&quot;docEmphasis&quot;&gt;perltoot&lt;/span&gt;, &lt;span class=&quot;docEmphasis&quot;&gt;perlobj&lt;/span&gt;, and &lt;span class=&quot;docEmphasis&quot;&gt;perlref&lt;/span&gt; POD pages, as well as in [Wall 2000] and the other general Perl reference works listed in Appendix D.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;To create an object, you must invoke one of its &lt;span class=&quot;docEmphasis&quot;&gt;constructors&lt;/span&gt;. A constructor is a method call that is invoked from the module&#39;s name. For example, to create a new BigDatabase object:&lt;/p&gt;
&lt;pre&gt;$object = BigDatabase-&amp;gt;new(); # call the new() constructor
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Constructors, which are a special case of a &lt;span class=&quot;docEmphasis&quot;&gt;class method,&lt;/span&gt; are frequently named &lt;tt&gt;new()&lt;/tt&gt;. However, any subroutine name is possible. Again, this syntax is part trickery. In most cases an equivalent call would be:&lt;/p&gt;
&lt;pre&gt;$object = BigDatabase::new(&#39;BigDatabase&#39;);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;This is not quite the same thing, however, because class methods can also be inherited.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;ch01lev2sec17&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;1.2.2 The IO::Handle and IO::File Modules&lt;br /&gt;&lt;/h5&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The IO::Handle and IO::File modules, standard components of Perl, together provide object-oriented interface to filehandles. IO::Handle provides generic methods that are shared by all filehandle objects, including pipes and sockets. The more specialized class, IO::File, adds functionality for opening and manipulating files. Together, these classes smooth out some of the bumps and irregularities in Perl&#39;s built-in filehandles, and make larger programs easier to understand and maintain.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;IO::File&#39;s elegance does not by itself provide any very compelling reason to choose the object-oriented syntax over native filehandles. Its main significance is that IO::Socket, IO::Pipe, and other I/O-related modules also inherit their behavior from IO::Handle. This means that programs that read and write from local files and those that read and write to remote network servers share a common, easy-to-use interface.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;We&#39;ll get a feel for the module by looking at a tiny example of a program that opens a file, counts the number of lines, and reports its findings (&lt;a class=&quot;docLink&quot;&gt;Figure 1.4&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Figure 1.4. The count_lines.pl program
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;div id=&quot;rld9&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_212gxq8wfdw_b&quot; style=&quot;width:500px;height:215px;&quot; /&gt;&lt;/div&gt;&lt;/p&gt;
&lt;blockquote style=&quot;border-color:rgb(221,221,221);border-style:dashed;border-width:1px;padding:10px;&quot;&gt;&lt;p style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;b&gt;Lines 1–3: Load modules&lt;/b&gt; We turn on strict syntax checking, and load the IO::File module.&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;b&gt;Lines 4–5: Initialize variables&lt;/b&gt; We recover from the command line the name of the file to perform the line count on, and initialize the &lt;tt&gt;$counter&lt;/tt&gt; variable to zero.&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;b&gt;Line 6: Create a new IO::File object&lt;/b&gt; We call the &lt;tt&gt;IO::File::new()&lt;/tt&gt; method, using the syntax &lt;tt&gt;IO::File-&amp;gt;new()&lt;/tt&gt;. The argument is the name of the file to open. If successful, &lt;tt&gt;new()&lt;/tt&gt; returns a new IO::File object that we can use for I/O. Otherwise it returns &lt;tt&gt;undef&lt;/tt&gt;, and we die with an error message.&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;b&gt;Lines 7–9: Main loop&lt;/b&gt; We call the IO::File object&#39;s &lt;tt&gt;getline()&lt;/tt&gt; method in the test portion of a &lt;tt&gt;while()&lt;/tt&gt; loop. This method returns the next line of text, or &lt;tt&gt;undef&lt;/tt&gt; on end of file—just like &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p class=&quot;docList&quot; style=&quot;margin:0;&quot;&gt;Each time through the loop we bump up &lt;tt&gt;$counter&lt;/tt&gt;. The loop continues until &lt;tt&gt;getline()&lt;/tt&gt; returns &lt;tt&gt;undef.&lt;/tt&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;b&gt;Line 10: Print results&lt;/b&gt; We print out our results by calling &lt;tt&gt;STDOUT-&amp;gt;print()&lt;/tt&gt;. We&#39;ll discuss why this surprising syntax works in a moment.&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;When I ran &lt;span class=&quot;docEmphasis&quot;&gt;count_lines.pl&lt;/span&gt; on the unfinished manuscript for this chapter, I got the following result:&lt;/p&gt;
&lt;pre&gt;% &lt;span class=&quot;docEmphStrong&quot;&gt;count_lines.pl ch1.pod&lt;/span&gt;
Counted 2428 lines
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;IO::File objects are actually blessed typeglob references (see the Passing and Storing Filehandles section earlier in this chapter). This means that you can use them in an object-oriented fashion, as in:&lt;/p&gt;
&lt;pre&gt;$fh-&amp;gt;print(&quot;Function calls are for the birds./n&quot;);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;or with the familiar built-in function calls:&lt;/p&gt;
&lt;pre&gt;print $fh &quot;Object methods are too effete./n&quot;;
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Many of IO::File&#39;s methods are simple wrappers around Perl&#39;s built-in functions. In addition to &lt;tt&gt;print()&lt;/tt&gt; and &lt;tt&gt;getline()&lt;/tt&gt; methods, there are &lt;tt&gt;read()&lt;/tt&gt;, &lt;tt&gt;syswrite()&lt;/tt&gt;, and &lt;tt&gt;close()&lt;/tt&gt; methods, among others. We discuss the pros and cons of using object-oriented method calls and function calls in &lt;a class=&quot;docLink&quot;&gt;Chapter 5&lt;/a&gt;, where we introduce IO:: Socket.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;When you load IO::File (technically, when IO::File loads IO::Handle, which it inherits from), it adds methods to ordinary filehandles. This means that any of the methods in IO::File can also be used with &lt;tt&gt;STDIN&lt;/tt&gt;, &lt;tt&gt;STDOUT&lt;/tt&gt;, &lt;tt&gt;STDERR&lt;/tt&gt;, or even with any conventional filehandles that you happen to create. This is why line 10 of &lt;a class=&quot;docLink&quot;&gt;Figure 1.4&lt;/a&gt; allows us to print to standard output by calling &lt;tt&gt;print()&lt;/tt&gt;.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Of the method listings that follow, only the &lt;tt&gt;new()&lt;/tt&gt; and &lt;tt&gt;new_tmpfile()&lt;/tt&gt; methods are actually defined by IO::File. The rest are inherited from IO::Handle and can be used with other descendents of IO::Handle, such as IO::Socket. This list is not complete. I&#39;ve omitted some of the more obscure methods, including those that allow you to move around inside a file in a record-oriented fashion, because we won&#39;t need them for network communications.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; width=&quot;90%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$fh = IO::File-&amp;gt;new($filename [,$mode [,$perms]])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;new()&lt;/tt&gt; method is the main constructor for IO::File. It is a unified replacement for both &lt;tt&gt;open()&lt;/tt&gt; and &lt;tt&gt;sysopen()&lt;/tt&gt;. Called with a single argument, &lt;tt&gt;new()&lt;/tt&gt; acts like the two-argument form of &lt;tt&gt;open()&lt;/tt&gt;, taking a filename optionally preceded by a mode string. For example, this will open the indicated file for appending:&lt;/p&gt;
&lt;pre&gt;$fh = IO::File-&amp;gt;new(&quot;&amp;gt;darkstar.txt&quot;);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If called with two or three arguments, IO::File treats the second argument as the open mode, and the third argument as the file creation permissions. &lt;tt&gt;$mode&lt;/tt&gt; may be a Perl-style mode string, such as &quot; &lt;tt&gt;+&amp;lt;&lt;/tt&gt; &quot;, or an octal numeric mode, such as those used by &lt;tt&gt;sysopen()&lt;/tt&gt;. As a convenience, IO::File automatically imports the &lt;tt&gt;Fcntl O_*&lt;/tt&gt; constants when it loads. In addition, &lt;tt&gt;open()&lt;/tt&gt; allows for an alternative type of symbolic mode string that is used in the C &lt;tt&gt;fopen()&lt;/tt&gt; call; for example, it allows &quot; &lt;tt&gt;w&lt;/tt&gt; &quot; to open the file for writing. We won&#39;t discuss those modes further here, because they do not add functionality.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The permission agreement given by &lt;tt&gt;$perms&lt;/tt&gt; is an octal number, and has the same significance as the corresponding parameter passed to &lt;tt&gt;sysopen()&lt;/tt&gt;.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;If &lt;tt&gt;new()&lt;/tt&gt; cannot open the indicated file, it will return &lt;tt&gt;undef&lt;/tt&gt; and set &lt;tt&gt;$!&lt;/tt&gt; to the appropriate system error message.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$fh = IO::File-&amp;gt;new_tmpfile&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;new_tmpfile()&lt;/tt&gt; constructor, which is called without arguments, creates a temporary file opened for reading and writing. On UNIX systems, this file is anonymous, meaning that it cannot be seen on the file system. When the IO::File object is destroyed, the file and all its contents will be deleted automatically.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;This constructor is useful for storing large amounts of temporary data.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$result = $fh-&amp;gt;close&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;close()&lt;/tt&gt; method closes the IO::File object, returning a true result if successful. If you do not call &lt;tt&gt;close()&lt;/tt&gt; explicitly, it will be called automatically when the object is destroyed. This happens when the script exits, if you happen to &lt;tt&gt;undef()&lt;/tt&gt; the object, or if the object goes out of scope such as when a &lt;tt&gt;my&lt;/tt&gt; variable reaches the end of its enclosing block.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$result = $fh-&amp;gt;open($filename [,$mode [,$perms]])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;You can reopen a filehandle object on the indicated file by using its &lt;tt&gt;open()&lt;/tt&gt; method. The input arguments are identical to &lt;tt&gt;new()&lt;/tt&gt;. The method result indicates whether the open was successful.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;This is chiefly used for reopening the standard filehandles &lt;tt&gt;STDOUT&lt;/tt&gt;, &lt;tt&gt;STDIN&lt;/tt&gt;, and &lt;tt&gt;STDERR&lt;/tt&gt;. For example:&lt;/p&gt;
&lt;pre&gt;STDOUT-&amp;gt;open(&quot;log.txt&quot;) or die &quot;Can&#39;t reopen STDOUT: $!&quot;;
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Calls to &lt;tt&gt;print()&lt;/tt&gt; will now write to the file &lt;span class=&quot;docEmphasis&quot;&gt;&lt;tt&gt;log.txt&lt;/tt&gt; &lt;/span&gt;.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$result = $fh-&amp;gt;print(@args)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$result=$fh-&amp;gt;printf($fmt,@args)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$bytes=$fh-&amp;gt;write($data [,$length [,$offset]])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$bytes = $fh-&amp;gt;syswrite($data [,$length [,$offset]])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;print()&lt;/tt&gt;, &lt;tt&gt;printf()&lt;/tt&gt;, and &lt;tt&gt;syswrite()&lt;/tt&gt; methods work exactly like their built-in counterparts. For example, &lt;tt&gt;print()&lt;/tt&gt; takes a list of data items, writes them to the filehandle object, and returns true if successful.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;write()&lt;/tt&gt; method is the opposite of &lt;tt&gt;read()&lt;/tt&gt;, writing a stream of bytes to the filehandle object and returning the number successfully written. It is similar to &lt;tt&gt;syswrite()&lt;/tt&gt;, except that it uses stdio buffering. This method corrects the inconsistent naming of the built-in &lt;tt&gt;write()&lt;/tt&gt; function, which creates formatted reports. The IO::File object method that corresponds to the built-in &lt;tt&gt;write()&lt;/tt&gt; goes by the name of &lt;tt&gt;format_write()&lt;/tt&gt;.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$line = $fh-&amp;gt;getline&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;@lines=$fh-&amp;gt;getlines&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$bytes = $fh-&amp;gt;read($buffer,$length &quot;,$offset&quot;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$bytes = $fh-&amp;gt;ysread($buffer,$length &quot;,$offsetr&quot;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;getline()&lt;/tt&gt; and &lt;tt&gt;getlines()&lt;/tt&gt; methods together replace the &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; operator. &lt;tt&gt;getline()&lt;/tt&gt; reads one line from the filehandle object and returns it, behaving in the same way in both scalar and list contexts. The &lt;tt&gt;getlines()&lt;/tt&gt; method acts like &lt;tt&gt;&amp;lt;&amp;gt;&lt;/tt&gt; in a list context, returning a list of all the available lines. &lt;tt&gt;getline()&lt;/tt&gt; will return undef at the end of file.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;read()&lt;/tt&gt; and &lt;tt&gt;sysread()&lt;/tt&gt; methods act just like their built-in function counterparts.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$previous = $fh-&amp;gt;autoflush([$boolean])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;autoflush()&lt;/tt&gt; method gets or sets the &lt;tt&gt;autoflush()&lt;/tt&gt; mode for the filehandle object. Called without arguments, it turns &lt;span class=&quot;docEmphasis&quot;&gt;on&lt;/span&gt; autoflush. Called with a single boolean argument, it sets autoflush to the indicated status. In either case, &lt;tt&gt;autoflush()i&lt;/tt&gt; returns the previous value of the autoflush state.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;$boolean = $fh-&amp;gt;opened&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;opened()&lt;/tt&gt; method returns true if the filehandle object is currently valid. It is equivalent to:&lt;/p&gt;
&lt;pre&gt;defined fileno($fh);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$boolean = $fh-&amp;gt;eof&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;Returns true if the next read on the filehandle object will return EOF.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$fh-&amp;gt;flush&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;flush()&lt;/tt&gt; method immediately flushes any data that is buffered in the filehandle object. If the filehandle is being used for writing, then its buffered data is written to disk (or to the pipe, or network, as we&#39;ll see when we get to IO::Socket objects). If the filehandle is being used for reading, any data in the buffer is &lt;tt&gt;discarded&lt;/tt&gt;, forcing the next read to come from disk.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$boolean = $fh-&amp;gt;blocking(&quot;$boolean&quot;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;blocking()&lt;/tt&gt; method turns on and off blocking mode for the filehandle. &lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;$fh-&amp;gt;clearerr&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;$boolean = $fh-&amp;gt;error&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;These two methods are handy if you wish to perform a series of I/O operations and check the error status only after you&#39;re finished. The &lt;tt&gt;error()i&lt;/tt&gt; method will return true if any errors have occurred on the filehandle since it was created, or since the last call to &lt;tt&gt;clearerr()&lt;/tt&gt;. The &lt;tt&gt;clearerr()&lt;/tt&gt; method clears this flag.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;In addition to the methods listed here, IO::File has a constructor named &lt;tt&gt;new_from_fd()&lt;/tt&gt;, and a method named &lt;tt&gt;fdopen()&lt;/tt&gt;, both inherited from IO::Handle. These methods can be used to save and restore objects in much the way that the &lt;tt&gt;&amp;gt;&amp;amp;FILEHANDLE&lt;/tt&gt; does with standard filehandles.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; width=&quot;90%&quot; border=&quot;1&quot; style=&quot;font-size:1em;line-height:inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$fh = IO::File-&amp;gt;new_from_fd($fd,$mode)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;new_from_fd()&lt;/tt&gt; method opens up a copy of the filehandle object indicated by &lt;tt&gt;$fd&lt;/tt&gt; using the read/write mode given by &lt;tt&gt;$mode&lt;/tt&gt;. The object may be an IO::Handle object, an IO::File object, a regular filehandle, or a numeric file descriptor returned &lt;tt&gt;byfileno()&lt;/tt&gt;. &lt;tt&gt;$mode&lt;/tt&gt; must match the mode with which &lt;tt&gt;$fd&lt;/tt&gt; was originally opened. For example:&lt;/p&gt;
&lt;pre&gt;$saveout = IO::File-&amp;gt;new_from_fd(STDOUT,&quot;&amp;gt;&quot;);
&lt;/pre&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;&lt;span class=&quot;docEmphStrong&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$result = $fh-&amp;gt;fdopen($fd,$mode)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;The &lt;tt&gt;fdopen()&lt;/tt&gt; method is used to reopen an existing filehandle object, making it a copy of another one. The &lt;tt&gt;$fd&lt;/tt&gt; argument may be an IO::Handle object or a regular filehandle, or a numeric file descriptor &lt;tt&gt;$mode&lt;/tt&gt; must match the mode with which &lt;tt&gt;$fd&lt;/tt&gt; was originally opened.&lt;/p&gt;
&lt;p class=&quot;docText&quot; style=&quot;margin:0;&quot;&gt;This is typically used in conjunction with &lt;tt&gt;new_from_fd()&lt;/tt&gt; to restore a saved filehandle:&lt;/p&gt;
&lt;pre&gt;$saveout = IO::File-&amp;gt;new_from_fd(STDOUT,&quot;&amp;gt;&quot;); # save STDOUT
STDOUT-&amp;gt;open(&#39;&amp;gt;log.txt&#39;);                     # reopen on a file
STDOUT-&amp;gt;print(&quot;Yippy yie yay!/n&quot;);            # print something
STDOUT-&amp;gt;fdopen($saveout,&quot;&amp;gt;&quot;);                 # reopen on saved 
&lt;img height=&quot;9&quot; alt=&quot;graphics/ccc.gif&quot; width=&quot;14&quot; align=&quot;left&quot; border=&quot;0&quot; /&gt;value
&lt;/pre&gt;
&lt;div&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-family:-webkit-monospace;white-space:pre;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
 </entry>
 
 <entry>
   <title>How do I add a directory to my include path (@INC) at runtime?</title>
   <link href="http://bo-yang.github.com//2009/01/13/add-a-directory-to-my-include-path-at-runtime"/>
   <updated>2009-01-13T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2009/01/13/add-a-directory-to-my-include-path-at-runtime</id>
   <content type="html">&lt;p&gt;
     &lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(17,17,17);font-family:Arial;font-size:16px;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-size:20px;font-weight:bold;&quot;&gt;How do I add a directory to my include path (@INC) at runtime?&lt;/span&gt;&lt;/span&gt;
&lt;p style=&quot;font-size:100%;&quot;&gt;Here are the suggested ways of modifying your include path, including environment variables, run-time switches, and in-code statements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a name=&quot;the-PERLLIB-environment-variable&quot;&gt;&lt;/a&gt;&lt;b&gt;the PERLLIB environment variable&lt;/b&gt;
&lt;pre class=&quot;verbatim&quot; style=&quot;margin-left:10px;background-image:initial;background-repeat:initial;background-attachment:initial;-webkit-background-clip:initial;-webkit-background-origin:initial;background-color:rgb(238,238,221);width:90%;background-position:initial initial;border-color:rgb(204,204,204);border-style:solid;border-width:1px;padding:10px;&quot;&gt;	$ export PERLLIB=/path/to/my/dir
	$ perl program.pl&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a name=&quot;the-PERL5LIB-environment-variable&quot;&gt;&lt;/a&gt;&lt;b&gt;the PERL5LIB environment variable&lt;/b&gt;
&lt;pre class=&quot;verbatim&quot; style=&quot;margin-left:10px;background-image:initial;background-repeat:initial;background-attachment:initial;-webkit-background-clip:initial;-webkit-background-origin:initial;background-color:rgb(238,238,221);width:90%;background-position:initial initial;border-color:rgb(204,204,204);border-style:solid;border-width:1px;padding:10px;&quot;&gt;	$ export PERL5LIB=/path/to/my/dir
	$ perl program.pl&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a name=&quot;the-perl--Idir-command-line-flag&quot;&gt;&lt;/a&gt;&lt;b&gt;the perl -Idir command line flag&lt;/b&gt;
&lt;pre class=&quot;verbatim&quot; style=&quot;margin-left:10px;background-image:initial;background-repeat:initial;background-attachment:initial;-webkit-background-clip:initial;-webkit-background-origin:initial;background-color:rgb(238,238,221);width:90%;background-position:initial initial;border-color:rgb(204,204,204);border-style:solid;border-width:1px;padding:10px;&quot;&gt;	$ perl -I/path/to/my/dir program.pl&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a name=&quot;the-use-lib-pragma%3a&quot;&gt;&lt;/a&gt;&lt;b&gt;the use lib pragma:&lt;/b&gt;
&lt;pre class=&quot;verbatim&quot; style=&quot;margin-left:10px;background-image:initial;background-repeat:initial;background-attachment:initial;-webkit-background-clip:initial;-webkit-background-origin:initial;background-color:rgb(238,238,221);width:90%;background-position:initial initial;border-color:rgb(204,204,204);border-style:solid;border-width:1px;padding:10px;&quot;&gt;	&lt;a class=&quot;l_k&quot; href=&quot;http://perldoc.perl.org/functions/use.html&quot; style=&quot;color:rgb(139,0,139);font-weight:bold;&quot;&gt;use&lt;/a&gt; &lt;span class=&quot;w&quot; style=&quot;color:rgb(0,0,0);&quot;&gt;lib&lt;/span&gt; &lt;span class=&quot;q&quot; style=&quot;color:rgb(205,85,85);&quot;&gt;&quot;$ENV{HOME}/myown_perllib&quot;&lt;/span&gt;&lt;span class=&quot;sc&quot; style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;font-size:100%;&quot;&gt;The last is particularly useful because it knows about machine dependent architectures. The lib.pm pragmatic module was first included with the 5.002 release of Perl.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Shell向Perl脚本中传递变量的方法</title>
   <link href="http://bo-yang.github.com//2009/01/12/perl-parameters"/>
   <updated>2009-01-12T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2009/01/12/perl-parameters</id>
   <content type="html">&lt;p&gt;&lt;span style=&quot;border-collapse:collapse;color:#000000;font-family:song;font-size:13px;&quot;&gt;&lt;/p&gt;
&lt;div&gt;&lt;span style=&quot;font-family:Arial;&quot;&gt;方法一：&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;font-family:Arial;&quot;&gt;In shell using export&amp;nbsp;&amp;nbsp;to output a variable, and&amp;nbsp;in perl using special variable %ENV to get shell&#39;s variables.&lt;br /&gt;i.e.:&lt;br /&gt;--- shell box---&lt;br /&gt;$ /bin/ksh&lt;br /&gt;# export x=Foo&lt;br /&gt;# perl -e &#39;print $ENV{&quot;x&quot;}&#39;&lt;br /&gt;-------------&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;span style=&quot;border-collapse:collapse;color:#000000;font-size:13px;&quot;&gt;&lt;span style=&quot;font-family:Arial;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;border-collapse:collapse;color:#000000;font-size:13px;&quot;&gt;&lt;span style=&quot;font-family:Arial;&quot;&gt;方法二：&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;border-collapse:collapse;color:#000000;font-family:song;font-size:13px;&quot;&gt;&lt;span style=&quot;border-collapse:separate;font-size:12px;letter-spacing:2px;line-height:18px;&quot;&gt;&lt;span style=&quot;font-family:Arial;&quot;&gt;象C一样，PERL也有存储命令行参数的数组@ARGV，可以用来分别处理各个命令行参数；与C不同的是，$ARGV[0]是第一个参数，而不是程序名本身。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$var = $ARGV[0]; # 第一个参数&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$numargs = @ARGV; # 参数的个数&lt;br /&gt;&amp;nbsp;&amp;nbsp;PERL中，&amp;lt;&amp;gt;操作符实际上是对数组@ARGV的隐含的引用，其工作原理为：&lt;br /&gt;1、当PERL解释器第一次看到&amp;lt;&amp;gt;时，打开以$ARGV[0]为文件名的文件；&lt;br /&gt;2、执行动作shift(@ARGV); 即把数组@ARGV的元素向前移动一个，其元素数量即减少了一个。&lt;br /&gt;3、&amp;lt;&amp;gt;操作符读取在第一步打开的文件中的所有行。&lt;br /&gt;4、读完后，解释器回到第一步重复。&lt;br /&gt;&amp;nbsp;&amp;nbsp;例：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@ARGV = (&quot;myfile1&quot;, &quot;myfile2&quot;); #实际上由命令行参数赋值&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while ($line = &amp;lt;&amp;gt;) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print ($line);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;将把文件myfile1和myfile2的内容打印出来。&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Perl中的特殊变量</title>
   <link href="http://bo-yang.github.com//2009/01/06/special-variable-in-perl"/>
   <updated>2009-01-06T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2009/01/06/special-variable-in-perl</id>
   <content type="html">&lt;p&gt;
&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-size:16px;&quot;&gt;
&lt;div style=&quot;min-height:1100px;counter-reset:__goog_page__ 0;font-family:Verdana;font-size:10pt;line-height:normal;background-color:rgb(255,255,255);margin:6px;padding:0;&quot;&gt;
&lt;h1 style=&quot;text-align:center;font-size:18pt;&quot;&gt;Perl中的特殊变量&lt;br /&gt;&lt;/h1&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;1. $&amp;amp;, $`,$&#39; 用在模式匹配中&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:verdana;&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;b&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;$&amp;amp;  用来存放匹配中的值&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;$`   用来存放匹配中之前所有字符&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;$&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;   用来存放匹配中之后所有字符&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;如：&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;!/usr/bin/perl -w&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;b&gt;&quot;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;b&gt;Hello good  there,neigbor hello&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;b&gt;&quot;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=~&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;S(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;w&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;,/&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;        &lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;print&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;b&gt;&quot;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;b&gt;That actually matched &#39;$&amp;amp;&#39;. &lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;b&gt;&quot;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;        &lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;print&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt; $`&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;b&gt;&quot;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;b&gt; &lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;b&gt;&quot;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;        &lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;print&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt; $&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;b&gt;&#39;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;b&gt;.&quot; &quot;;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;}&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;&lt;br /&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:normal;&quot;&gt;执行的结果为：&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:normal;&quot;&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;&lt;/span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:normal;&quot;&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; align=&quot;top&quot; alt=&quot;&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:normal;&quot;&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;That actually matched &lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;there&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;.&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;Hello good  &lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;neigbor hello&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;&lt;br /&gt;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; align=&quot;top&quot; alt=&quot;&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;&lt;span style=&quot;font-family:verdana;&quot;&gt;&lt;font size=&quot;2&quot;&gt;－－－－－－－－&lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;font-family:verdana;&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;另外常用的变量@_&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;@_是子程序的一个私有变量◆；如果有一个全局变量@_，它将在此子程序调用前存储起来，当子程序调用完成后，其早期的值会被重新赋还给@_◆。这意味着当将参数传递给子程序时不用担心它会影响此程序中其它子程序的@_这个变量的值。嵌套的子程序调用时，@_的值和上述类似。甚至此子程序递归调用时，每一次调用将得到新的@_，因此子程序调用时将得到其自身的参数列表。&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;◆除非调用的子程序前有&amp;amp;而后面没有括号（或者没有参数），此时@_从此调用者的上下文(context)得到。这通常不是个好主意，但有时很&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;有用。&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;2. Perl - $_ and @_&lt;br /&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:Arial;&quot;&gt;
&lt;div class=&quot;generaltext&quot; style=&quot;font-family:Arial, Helvetica, sans-serif;font-style:normal;font-weight:normal;font-variant:normal;color:rgb(0,0,0);background-color:rgb(255,255,255);letter-spacing:normal;text-align:left;vertical-align:top;text-decoration:none;border-bottom-width:0;margin-top:0;margin-bottom:0;&quot;&gt;&lt;font size=&quot;2&quot;&gt;Perl&#39;s a great language for special variables - variables that are set up without the programmer having to intervene and providing information ranging from the number of lines read from the &lt;b&gt;current input file ($.)&lt;/b&gt; through the &lt;b&gt;current process ID ($$) &lt;/b&gt;and the &lt;b&gt;operating system ($^O)&lt;/b&gt;. Other special variables effect how certain operations are performed (&lt;b&gt;$| controlling output buffering / flushing&lt;/b&gt;, for example), or are fundamental in the operation of certain facilities - no more so than $_ and @_.&lt;/p&gt;
&lt;p&gt;Lets clear a misconception. &lt;/font&gt;&lt;b&gt;$_&lt;/b&gt;&lt;font size=&quot;2&quot;&gt; and &lt;/font&gt;&lt;b&gt;@_&lt;/b&gt;&lt;font size=&quot;2&quot;&gt; are &lt;/font&gt;&lt;i&gt;different variables&lt;/i&gt;&lt;font size=&quot;2&quot;&gt;. In Perl, you can have a list and a scalar of the same name, and they refer to unrelated pieces of memory.&lt;/p&gt;
&lt;p&gt;&lt;/font&gt;&lt;font color=&quot;brown&quot;&gt;&lt;b&gt;$_ is known as the &quot;default input and pattern matching space&quot;&lt;/b&gt;.&lt;/font&gt;&lt;font size=&quot;2&quot;&gt; In other words, if you read in from a file handle at the top of a &lt;/font&gt;&lt;b&gt;while&lt;/b&gt;&lt;font size=&quot;2&quot;&gt; loop, or run a &lt;/font&gt;&lt;b&gt;foreach&lt;/b&gt;&lt;font size=&quot;2&quot;&gt; loop and don&#39;t name a loop variable, $_ is set up for you. Then any regular expression matches, &lt;/font&gt;&lt;b&gt;chop&lt;/b&gt;&lt;font size=&quot;2&quot;&gt;s (and &lt;/font&gt;&lt;b&gt;lc&lt;/b&gt;&lt;font size=&quot;2&quot;&gt;s and many more) without a parameter, and even &lt;/font&gt;&lt;b&gt;print&lt;/b&gt;&lt;font size=&quot;2&quot;&gt;s assume you want to work on $_. Thus:&lt;br /&gt;&lt;/font&gt;&lt;code&gt;while ($line = &amp;lt;FH&amp;gt;) {&lt;br /&gt;  if ($line =~ /Perl/) {&lt;br /&gt;    print FHO $line;&lt;br /&gt;    }&lt;br /&gt;  print uc $line;&lt;br /&gt;  }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;2&quot;&gt;Shortens to:&lt;br /&gt;&lt;/font&gt;&lt;code&gt;while (&amp;lt;FH&amp;gt;) {&lt;br /&gt;  /Perl/ and&lt;br /&gt;    print FHO ;&lt;br /&gt;  print uc;&lt;br /&gt;  }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;brown&quot;&gt;&lt;b&gt;@_ is the list of incoming parameters to a sub.&lt;/b&gt;&lt;/font&gt;&lt;font size=&quot;2&quot;&gt; So if you write a sub, you refer to the first parameter in it as &lt;/font&gt;&lt;b&gt;$_[0]&lt;/b&gt;&lt;font size=&quot;2&quot;&gt;, the second parameter as &lt;/font&gt;&lt;b&gt;$_[1]&lt;/b&gt;&lt;font size=&quot;2&quot;&gt; and so on. And you can refer to&lt;/font&gt;&lt;b&gt;$_#&lt;/b&gt;&lt;font size=&quot;2&quot;&gt; as the index number of the last parameter:&lt;br /&gt;&lt;/font&gt;&lt;code&gt;sub demo {&lt;br /&gt;  print &quot;Called with &quot;,$#_+1,&quot; params/n&quot;;&lt;br /&gt;  print &quot;First param was $_[0]/n&quot;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;2&quot;&gt;Note that the &lt;/font&gt;&lt;b&gt;English&lt;/b&gt;&lt;font size=&quot;2&quot;&gt; module adds in the ability to refer to the special variables by other longer, but easier to remember, names such as @ARG for @_ and $PID for $$. But &lt;/font&gt;&lt;code&gt;use English;&lt;/code&gt;&lt;font size=&quot;2&quot;&gt; can have a detrimental performance effect if you&#39;re matching regular expressions against long incoming strings. &lt;/font&gt;&lt;/div&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Perl Notes(I)</title>
   <link href="http://bo-yang.github.com//2008/12/29/perl-note-1"/>
   <updated>2008-12-29T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/12/29/perl-note-1</id>
   <content type="html">&lt;p&gt;&lt;span style=&quot;font-family:Verdana;font-size:13px;&quot;&gt;&lt;/p&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;Part I&amp;nbsp;&amp;nbsp; &amp;nbsp;Programming Perl&lt;/h2&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;1_Perl_Data_Types_029207318089&quot;&gt;&lt;/a&gt;1 Perl Data Types&lt;/h3&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;1_1_Funny_Characters_558344643&quot;&gt;&lt;/a&gt;1.1 Funny Characters&lt;/h4&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;table style=&quot;font-size:1em;line-height:inherit;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Character&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Is a name for:&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;Scalar&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$cents&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;An individual value (number or string)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;Array&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;@&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;@large&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;A list of values, keyed by number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;Hash&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;%&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;%interest&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;A group of values, keyed by string&lt;a name=&quot;INDEX-42&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;Subroutine&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;&amp;amp;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;&amp;amp;how&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;A callable chunk of Perl code&lt;a name=&quot;INDEX-43&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-44&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;Typeglob&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;*&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;*struck&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Everything named&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;struck&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;1_2_Singularities_374153536744&quot;&gt;&lt;/a&gt;1.2&amp;nbsp;Singularities&lt;/h4&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;Strings and numbers are singular pieces of data, while lists of strings or numbers are plural.&amp;nbsp;Scalar variables can be assigned any form of scalar value: integers, floating-point numbers, strings, and even esoteric things like references to other variables, or to objects.&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;&lt;a name=&quot;INDEX-50&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-51&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-52&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-53&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-54&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-55&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-56&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-57&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-58&quot;&gt;&lt;/a&gt;As in the Unix&amp;nbsp;shell, you can use different quoting mechanisms to make different kinds of values. Double quotation marks (double quotes) do&amp;nbsp;&lt;em class=&quot;emphasis&quot;&gt;variable interpolation&lt;/em&gt;&amp;nbsp;and&amp;nbsp;&lt;em class=&quot;emphasis&quot;&gt;backslash interpolation&lt;/em&gt;&amp;nbsp;(such as turning&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;/n&lt;/tt&gt;&amp;nbsp;into a newline) while single quotes suppress interpolation. And backquotes (the ones leaning to the left``) will execute an external program and return the output of the program, so you can capture it as a single string containing all the lines of output.&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;$answer = 42; # an integer
$pi = 3.14159265; # a &quot;real&quot; number
$avocados = 6.02e23; # scientific notation
$pet = &quot;Camel&quot;; # string
$sign = &quot;I love my $pet&quot;; # string with interpolation
$cost = &#39;It costs $100&#39;; # string without interpolation
$thence = $whence; # another variable&#39;s value
$salsa = $moles * $avocados; # a gastrochemical expression
$exit = system(&quot;vi $file&quot;); # numeric status of a command
$cwd = `pwd`; # string output from a command&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a name=&quot;INDEX-59&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-60&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-61&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-62&quot;&gt;&lt;/a&gt;And while we haven&#39;t covered fancy values yet, we should point out that scalars may also hold references to other data structures, including subroutines and objects.&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;$ary = /@myarray; # reference to a named array
$hsh = /%myhash; # reference to a named hash
$sub = /&amp;amp;mysub; # reference to a named subroutine

$ary = [1,2,3,4,5]; # reference to an unnamed array
$hsh = {Na =&amp;gt; 19, Cl =&amp;gt; 35}; # reference to an unnamed hash
$sub = sub { print $state }; # reference to an unnamed subroutine

$fido = new Camel &quot;Amelia&quot;; # reference to an object&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;Following the principle of least surprise, the variable is created with a null value, either&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;&quot;&quot;&lt;/tt&gt;&amp;nbsp;or&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;0&lt;/tt&gt;. Depending on where you use them, variables will be interpreted automatically as strings, as numbers, or as &quot;true&quot; and &quot;false&quot; values (commonly called Boolean values).&amp;nbsp;Perl will automatically convert the data into the form required by the current context, within reason. For example, suppose you said this:&lt;/div&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;$camels = &#39;123&#39;;
print $camels + 1, &quot;/n&quot;;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;The original value of&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$camels&lt;/tt&gt;&amp;nbsp;is a string, but it is converted to a number to add&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;1&lt;/tt&gt;&amp;nbsp;to it, and then converted back to a string to be printed out as&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;124&lt;/tt&gt;.&lt;/p&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;Similarly, a reference behaves as a reference when you give it a &quot;dereference&quot; context, but otherwise acts like a simple scalar value. For example, we might say:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;$fido = new Camel &quot;Amelia&quot;;
if (not $fido) { die &quot;dead camel&quot;; }
$fido-&amp;gt;saddle();&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;1_3_Pluralities_90712378174066&quot;&gt;&lt;/a&gt;1.3&amp;nbsp;Pluralities&lt;/h4&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;Perl has two types of multivalued variables: arrays and hashes.&lt;/div&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;1_3_1_Array_20716473553329706_14659717492759228&quot;&gt;&lt;/a&gt;1.3.1 Array&lt;/h5&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;An&amp;nbsp;&lt;em class=&quot;emphasis&quot;&gt;array&lt;/em&gt;&amp;nbsp;is an ordered list of scalars, accessed[6] by the scalar&#39;s position in the list.&amp;nbsp;To assign a list value to an array, you simply group the values together (with a set of parentheses):&lt;/div&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;@home = (&quot;couch&quot;, &quot;chair&quot;, &quot;table&quot;, &quot;stove&quot;);&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Conversely, if you use&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;@home&lt;/tt&gt;&amp;nbsp;in a list context, such as on the right side of a list assignment, you get back out the same list you put in. So you could set four scalar variables from the array like this:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;($potato, $lift, $tennis, $pipe) = @home;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;These are called list assignments. They logically happen in parallel, so you can swap two variables by saying:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;($alpha,$omega) = ($omega,$alpha);&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;Arrays are zero-based.&amp;nbsp;Array subscripts are enclosed in square brackets [like this], so if you want to select an individual array element, you would refer to it as&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$home[&lt;/tt&gt;&lt;em class=&quot;replaceable&quot;&gt;n&lt;/em&gt;&lt;tt class=&quot;literal&quot;&gt;].&lt;/tt&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;font-family:&#39;-webkit-monospace&#39;;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;Since arrays are ordered, you can do various useful operations on them, such as the stack operations&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;push&lt;/span&gt;&lt;/tt&gt;&amp;nbsp;and&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;pop&lt;/span&gt;&lt;/tt&gt;.&amp;nbsp;Perl regards the&lt;strong&gt;&amp;nbsp;end&amp;nbsp;&lt;/strong&gt;of your array as the top of a stack.&lt;/div&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;1_3_2_Hash_35820974223315716_17378652468323708&quot;&gt;&lt;/a&gt;1.3.2 Hash&lt;/h5&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;A&amp;nbsp;&lt;em class=&quot;emphasis&quot;&gt;hash&lt;/em&gt;&amp;nbsp;is an unordered set of scalars, accessed&amp;nbsp;by some string value that is associated with each scalar. For this reason hashes are often called&amp;nbsp;&lt;em class=&quot;emphasis&quot;&gt;associative arrays&lt;/em&gt;. &amp;nbsp;A hash has no beginning or end.&amp;nbsp;Since the keys to a hash are not automatically implied by their position, you must supply the key as well as the value when populating a hash.&lt;/div&gt;
&lt;div style=&quot;text-align:left;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;color:#000066;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;Suppose you wanted to translate abbreviated day names to the corresponding full names. You could write the following list assignment:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;%longday = (&quot;Sun&quot;, &quot;Sunday&quot;, &quot;Mon&quot;, &quot;Monday&quot;, &quot;Tue&quot;, &quot;Tuesday&quot;,
 &quot;Wed&quot;, &quot;Wednesday&quot;, &quot;Thu&quot;, &quot;Thursday&quot;, &quot;Fri&quot;,
 &quot;Friday&quot;, &quot;Sat&quot;, &quot;Saturday&quot;);&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a name=&quot;INDEX-95&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-96&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-97&quot;&gt;&lt;/a&gt;But that&#39;s rather difficult to read, so Perl provides the&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;&lt;strong&gt;=&amp;gt;&lt;/strong&gt;&lt;/tt&gt;&amp;nbsp;(equals sign, greater-than sign) sequence as an alternative separator to the comma. Using this syntactic sugar (and some creative formatting), it is much easier to see which strings are the keys and which strings are the associated values.&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;%longday = (
 &quot;Sun&quot; =&amp;gt; &quot;Sunday&quot;,
 &quot;Mon&quot; =&amp;gt; &quot;Monday&quot;,
 &quot;Tue&quot; =&amp;gt; &quot;Tuesday&quot;,
 &quot;Wed&quot; =&amp;gt; &quot;Wednesday&quot;,
 &quot;Thu&quot; =&amp;gt; &quot;Thursday&quot;,
 &quot;Fri&quot; =&amp;gt; &quot;Friday&quot;,
 &quot;Sat&quot; =&amp;gt; &quot;Saturday&quot;,
);&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;You can select an individual hash element by enclosing the key in braces (those fancy brackets also known as &quot;curlies&quot;). For example, if you want to find out the value associated with&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;Wed&lt;/tt&gt;&amp;nbsp;in the hash above, you would use&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$longday{&quot;Wed&quot;}&lt;/tt&gt;. Note again that you are dealing with a scalar value, so you use&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$&lt;/tt&gt;&amp;nbsp;on the front, not&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;%&lt;/tt&gt;, which would indicate the entire hash.&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;Linguistically, the relationship encoded in a hash is genitive or possessive, like the word &quot;of&quot; in English, or like &quot;&#39;s&quot;. The wife&amp;nbsp;&lt;em class=&quot;emphasis&quot;&gt;of&lt;/em&gt;&amp;nbsp;Adam is Eve, so we write:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;$wife{&quot;Adam&quot;} = &quot;Eve&quot;;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;1_3_3_Complexities_52397375367&quot;&gt;&lt;/a&gt;1.3.3&amp;nbsp;Complexities&lt;/h5&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;Perl lets you manipulate simple scalar references that happen to refer to complicated arrays and hashes.&amp;nbsp;To extend our previous example, suppose we want to switch from talking about Adam&#39;s wife to Jacob&#39;s wife. Now, as it happens, Jacob had four wives. (Don&#39;t try this at home.) In trying to represent this in Perl, we find ourselves in the odd situation where we&#39;d like to pretend that Jacob&#39;s four wives were really one wife. (Don&#39;t try this at home, either.) You might think you could write it like this:&lt;/div&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;$wife{&quot;Jacob&quot;} = (&quot;Leah&quot;, &quot;Rachel&quot;, &quot;Bilhah&quot;, &quot;Zilpah&quot;); # WRONG&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a name=&quot;INDEX-106&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-107&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-108&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-109&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-110&quot;&gt;&lt;/a&gt;But that wouldn&#39;t do what you want, because even parentheses and commas are not powerful enough to turn a list into a scalar in Perl. (Parentheses are used for syntactic grouping, and commas for syntactic separation.) Rather, you need to tell Perl explicitly that you want to pretend that a list is a scalar. It turns out that square brackets are powerful enough to do that:&amp;nbsp;&amp;nbsp;&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;$wife{&quot;Jacob&quot;} = [&quot;Leah&quot;, &quot;Rachel&quot;, &quot;Bilhah&quot;, &quot;Zilpah&quot;]; # ok&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;That statement creates an unnamed array and puts a reference to it into the hash element&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$wife{&quot;Jacob&quot;}&lt;/tt&gt;.&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;suppose we wanted to list not only Jacob&#39;s wives but all the sons of each of his wives. In this case we want to treat a hash as a scalar. We can use braces for that. (Inside each hash value we&#39;ll use square brackets to represent arrays, just as we did earlier. But now we have an array in a hash in a hash.)&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;$kids_of_wife{&quot;Jacob&quot;} = {
 &quot;Leah&quot; =&amp;gt; [&quot;Reuben&quot;, &quot;Simeon&quot;, &quot;Levi&quot;, &quot;Judah&quot;, &quot;Issachar&quot;, &quot;Zebulun&quot;],
 &quot;Rachel&quot; =&amp;gt; [&quot;Joseph&quot;, &quot;Benjamin&quot;],
 &quot;Bilhah&quot; =&amp;gt; [&quot;Dan&quot;, &quot;Naphtali&quot;],
 &quot;Zilpah&quot; =&amp;gt; [&quot;Gad&quot;, &quot;Asher&quot;],
};&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;That would be more or less equivalent to saying:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;$kids_of_wife{&quot;Jacob&quot;}{&quot;Leah&quot;}[0] = &quot;Reuben&quot;;
$kids_of_wife{&quot;Jacob&quot;}{&quot;Leah&quot;}[1] = &quot;Simeon&quot;;
$kids_of_wife{&quot;Jacob&quot;}{&quot;Leah&quot;}[2] = &quot;Levi&quot;;
$kids_of_wife{&quot;Jacob&quot;}{&quot;Leah&quot;}[3] = &quot;Judah&quot;;
$kids_of_wife{&quot;Jacob&quot;}{&quot;Leah&quot;}[4] = &quot;Issachar&quot;;
$kids_of_wife{&quot;Jacob&quot;}{&quot;Leah&quot;}[5] = &quot;Zebulun&quot;;
$kids_of_wife{&quot;Jacob&quot;}{&quot;Rachel&quot;}[0] = &quot;Joseph&quot;;
$kids_of_wife{&quot;Jacob&quot;}{&quot;Rachel&quot;}[1] = &quot;Benjamin&quot;;
$kids_of_wife{&quot;Jacob&quot;}{&quot;Bilhah&quot;}[0] = &quot;Dan&quot;;
$kids_of_wife{&quot;Jacob&quot;}{&quot;Bilhah&quot;}[1] = &quot;Naphtali&quot;;
$kids_of_wife{&quot;Jacob&quot;}{&quot;Zilpah&quot;}[0] = &quot;Gad&quot;;
$kids_of_wife{&quot;Jacob&quot;}{&quot;Zilpah&quot;}[1] = &quot;Asher&quot;;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;h5 style=&quot;font-size:8pt;&quot;&gt;&lt;a name=&quot;1_3_4_Simplicities_95647719036&quot;&gt;&lt;/a&gt;1.3.4&amp;nbsp;Simplicities&lt;/h5&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;&lt;a name=&quot;INDEX-121&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-122&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-123&quot;&gt;&lt;/a&gt;Perl also has several ways of topicalizing. One important topicalizer is the&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;package&lt;/tt&gt;&amp;nbsp;declaration. Suppose you want to talk about&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;Camel&lt;/tt&gt;s in Perl. You&#39;d likely start off your&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;Camel&lt;/tt&gt;&amp;nbsp;module by saying:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;package Camel;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;Perl will assume from this point on that any unspecified verbs or nouns are about&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;Camel&lt;/tt&gt;s. It does this by automatically prefixing any global name with the module name &quot;&lt;tt class=&quot;literal&quot;&gt;Camel::&lt;/tt&gt;&quot;.&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;&lt;a name=&quot;INDEX-128&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-129&quot;&gt;&lt;/a&gt;When you say&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;package Camel&lt;/tt&gt;, you&#39;re starting a new package. But sometimes you just want to borrow the nouns and verbs of an existing package. Perl lets you do that with a&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;use&lt;/tt&gt;&amp;nbsp;declaration, which not only borrows verbs from another package, but also checks that the module you name is loaded in from disk. In fact, you&amp;nbsp;&lt;em class=&quot;emphasis&quot;&gt;must&lt;/em&gt;&amp;nbsp;say something like:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;use Camel;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;before you say:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;$fido = new Camel &quot;Amelia&quot;;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;In fact, some of the built-in modules don&#39;t actually introduce verbs at all, but simply warp the Perl language in various useful ways. These special modules we call&amp;nbsp;&lt;em class=&quot;emphasis&quot;&gt;pragmas&lt;/em&gt;. For instance, you&#39;ll often see people use the pragma&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;strict&lt;/tt&gt;, like this:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;use strict;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;1_4_Verbs_7150770369917154_6162498742341995&quot;&gt;&lt;/a&gt;1.4 Verbs&lt;/h4&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;Many of the verbs in Perl are commands: they tell the Perl interpreter to do something.&amp;nbsp;A statement starting with a verb is generally purely imperative and evaluated entirely for its side effects. (We sometimes call these verbs&amp;nbsp;&lt;em class=&quot;emphasis&quot;&gt;procedures&lt;/em&gt;, especially when they&#39;re user-defined.)&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;Other verbs translate their input parameters into return values, just as a recipe tells you how to turn raw ingredients into something (hopefully) edible. We tend to call these verbs&amp;nbsp;&lt;em class=&quot;emphasis&quot;&gt;functions.&lt;/em&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;Verbs are also sometimes called operators (when built-in), or subroutines (when user-defined).&amp;nbsp;Historically, Perl required you to put an ampersand character (&lt;tt class=&quot;literal&quot;&gt;&amp;amp;&lt;/tt&gt;) on any calls to user-defined subroutines (see&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$fido = &amp;amp;fetch();&lt;/tt&gt;&amp;nbsp;earlier). But with Perl version 5, the ampersand became optional, so that user-defined verbs can now be called with the same syntax as built-in verbs (&lt;tt class=&quot;literal&quot;&gt;$fido = fetch();&lt;/tt&gt;).&amp;nbsp;We still use the ampersand when talking about the&amp;nbsp;&lt;em class=&quot;emphasis&quot;&gt;name&lt;/em&gt;&amp;nbsp;of the routine, such as when we take a reference to it (&lt;tt class=&quot;literal&quot;&gt;$fetcher = /&amp;amp;fetch;&lt;/tt&gt;).&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;1_5_Filehandles_12350966874510&quot;&gt;&lt;/a&gt;1.5 Filehandles&lt;/h4&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;A filehandle is just a name you give to a file, device, socket, or pipe to help you remember which one you&#39;re talking about, and to hide some of the complexities of buffering and such. (Internally, filehandles are similar to streams from a language like C++ or I/O channels from BASIC.)&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;You create a filehandle and attach it to a file by using&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;tt class=&quot;literal&quot;&gt;&lt;strong&gt;open&lt;/strong&gt;&lt;/tt&gt;. The&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;&lt;strong&gt;open&lt;/strong&gt;&lt;/tt&gt;&amp;nbsp;function takes at least two parameters: the filehandle and filename you want to associate it with. Perl also gives you some predefined (and preopened) filehandles.&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;&lt;strong&gt;STDIN&lt;/strong&gt;&lt;/tt&gt;&amp;nbsp;is your program&#39;s normal input channel, while&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;&lt;strong&gt;STDOUT&lt;/strong&gt;&lt;/tt&gt;&amp;nbsp;is your program&#39;s normal output channel. And&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;&lt;strong&gt;STDERR&lt;/strong&gt;&lt;/tt&gt;&amp;nbsp;is an additional output channel that allows your program to make snide remarks off to the side while it transforms (or attempts to transform) your input into your output.&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;open(SESAME, &quot;filename&quot;) # read from existing file
open(SESAME, &quot;&amp;lt;filename&quot;) # (same thing, explicitly)
open(SESAME, &quot;&amp;gt;filename&quot;) # create file and write to it
open(SESAME, &quot;&amp;gt;&amp;gt;filename&quot;) # append to existing file
open(SESAME, &quot;| output-pipe-command&quot;) # set up an output filter
open(SESAME, &quot;input-pipe-command |&quot;) # set up an input filter&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;As you can see, the name you pick for the filehandle is arbitrary. Once opened, the filehandle&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;SESAME&lt;/tt&gt;&amp;nbsp;can be used to access the file or pipe until it is explicitly closed (with, you guessed it,&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;&lt;strong&gt;close(SESAME)&lt;/strong&gt;&lt;/tt&gt;), or until the filehandle is attached to another file by a subsequent&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;open&lt;/tt&gt;&amp;nbsp;on the same filehandle.&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;Once you&#39;ve opened a filehandle for input, you can read a line using the line reading operator,&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;&amp;lt;&lt;/tt&gt;&lt;tt class=&quot;literal&quot;&gt;&amp;gt;&lt;/tt&gt;.&amp;nbsp;&lt;span style=&quot;text-decoration:underline;&quot;&gt;The angle operator encloses the filehandle (&lt;/span&gt;&lt;tt class=&quot;literal&quot;&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;&amp;lt;SESAME&amp;gt;&lt;/span&gt;&lt;/tt&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;) you want to read lines from. The empty angle operator,&amp;nbsp;&lt;/span&gt;&lt;tt class=&quot;literal&quot;&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;/tt&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;, will read lines from all the files specified on the command line, or&amp;nbsp;&lt;/span&gt;&lt;tt class=&quot;literal&quot;&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;STDIN&lt;/span&gt;&lt;/tt&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;, if none were specified&lt;/span&gt;.&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;An example using the&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;STDIN&lt;/tt&gt;&amp;nbsp;filehandle to read an answer supplied by the user would look something like this:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;print STDOUT &quot;Enter a number: &quot;; # ask for a number
$number = &amp;lt;STDIN&amp;gt;; # input the number
print STDOUT &quot;The number is $number./n&quot;; # print the number&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;&lt;a name=&quot;INDEX-187&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-188&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-189&quot;&gt;&lt;/a&gt;If you try the previous example, you may notice that you get an extra blank line. This happens because the line-reading operation does not automatically remove the newline from your input line (your input would be, for example, &quot;&lt;tt class=&quot;literal&quot;&gt;9/n&lt;/tt&gt;&quot;). For those times when you do want to remove the newline, Perl provides the&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;&lt;strong&gt;chop&lt;/strong&gt;&lt;/tt&gt;&amp;nbsp;and&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;&lt;strong&gt;chomp&lt;/strong&gt;&lt;/tt&gt;&amp;nbsp;functions.&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;chop&lt;/span&gt;&lt;/tt&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;&amp;nbsp;will indiscriminately remove (and return) the last character of the string, while&amp;nbsp;&lt;/span&gt;&lt;tt class=&quot;literal&quot;&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;chomp&lt;/span&gt;&lt;/tt&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;&amp;nbsp;will only remove the end of record marker (generally, &quot;&lt;/span&gt;&lt;tt class=&quot;literal&quot;&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;/n&lt;/span&gt;&lt;/tt&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;&quot;) and return the number of characters so removed.&amp;nbsp;&lt;/span&gt;You&#39;ll often see this idiom for inputting a single line:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;chop($number = &amp;lt;STDIN&amp;gt;); # input number and remove newline&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;2_Operators__668523520231247&quot;&gt;&lt;/a&gt;2 Operators&lt;/h3&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;2_1_Some_Binary_Arithmetic_Ope_7225654777139425&quot;&gt;&lt;/a&gt;2.1&amp;nbsp;Some Binary Arithmetic Operators&lt;/h4&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;table style=&quot;font-size:1em;line-height:inherit;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$a + $b&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Addition&lt;/td&gt;
&lt;td&gt;Sum of&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;and&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$b&lt;/tt&gt;&lt;a name=&quot;INDEX-198&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$a * $b&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Multiplication&lt;/td&gt;
&lt;td&gt;Product of&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;and&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$b&lt;/tt&gt;&lt;a name=&quot;INDEX-199&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$a % $b&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Modulus&lt;/td&gt;
&lt;td&gt;Remainder of&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;divided by&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$b&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$a ** $b&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Exponentiation&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;to the power of&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$b&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;2_2_String_Operators__7529557030647993&quot;&gt;&lt;/a&gt;2.2&amp;nbsp;String Operators&lt;/h4&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;Perl defines a separate operator (&lt;tt class=&quot;literal&quot;&gt;.&lt;/tt&gt;) for string concatenation:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;$a = 123;
$b = 456;
print $a + $b; # prints 579
print $a . $b; # prints 123456&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;&lt;a name=&quot;INDEX-211&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-212&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-213&quot;&gt;&lt;/a&gt;There&#39;s also a &quot;multiply&quot; operator for strings, called the&amp;nbsp;&lt;em class=&quot;emphasis&quot;&gt;repeat&lt;/em&gt;&amp;nbsp;operator. Again, it&#39;s a separate operator (&lt;tt class=&quot;literal&quot;&gt;x&lt;/tt&gt;) to keep it distinct from numeric multiplication:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;$a = 123;
$b = 3;
print $a * $b; # prints 369
print $a x $b; # prints 123123123&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;The&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;x&lt;/tt&gt;&amp;nbsp;operator may seem relatively worthless at first glance, but it is quite useful at times, especially for things like this:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;print &quot;-&quot; x $scrwid, &quot;/n&quot;;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;which draws a line across your screen, presuming&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$scrwid&lt;/tt&gt;&amp;nbsp;contains your screen width, and not your screw identifier.&lt;/div&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;2_3_Assignment_Operators__48074441868811846&quot;&gt;&lt;/a&gt;2.3 Assignment Operators&lt;/h4&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;You can do shortcut with almost any binary operator in Perl, even some that you can&#39;t do it with in C:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;$line .= &quot;/n&quot;; # Append newline to $line.
$fill x= 80; # Make string $fill into 80 repeats of itself.
$val ||= &quot;2&quot;; # Set $val to 2 if it isn&#39;t already &quot;true&quot;.&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;2_4_Unary_Arithmetic_Operators_7676581423729658&quot;&gt;&lt;/a&gt;2.4 Unary Arithmetic Operators&lt;/h4&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;table style=&quot;font-size:1em;line-height:inherit;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;++$a, $a++&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Autoincrement&lt;/td&gt;
&lt;td&gt;Add 1 to&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;--$a, $a--&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Autodecrement&lt;/td&gt;
&lt;td&gt;Subtract 1 from&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;The same with C.&lt;/div&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;2_5_Logical_Operators__22455949615687132&quot;&gt;&lt;/a&gt;2.5 Logical Operators&lt;/h4&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;table style=&quot;font-size:1em;line-height:inherit;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$a &amp;amp;&amp;amp; $b&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;And&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;if&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;is false,&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$b&lt;/tt&gt;&amp;nbsp;otherwise&lt;a name=&quot;INDEX-242&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-243&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$a || $b&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Or&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;if&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;is true,&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$b&lt;/tt&gt;&amp;nbsp;otherwise&lt;a name=&quot;INDEX-244&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-245&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;! $a&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Not&lt;/td&gt;
&lt;td&gt;True if&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;is not true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$a and $b&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;And&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;if&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;is false,&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$b&lt;/tt&gt;&amp;nbsp;otherwise&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$a or $b&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Or&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;if&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;is true,&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$b&lt;/tt&gt;&amp;nbsp;otherwise&lt;a name=&quot;INDEX-246&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;not $a&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Not&lt;/td&gt;
&lt;td&gt;True if&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;is not true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;$a xor $b&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Xor&lt;/td&gt;
&lt;td&gt;True if&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;or&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$b&lt;/tt&gt;&amp;nbsp;is true, but not both&lt;a name=&quot;INDEX-247&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;2_6_Some_Numeric_and_String_Co_6402344861999154&quot;&gt;&lt;/a&gt;2.6&amp;nbsp;Some Numeric and String Comparison Operators&lt;/h4&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;table style=&quot;font-size:1em;line-height:inherit;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;th&gt;Comparison&lt;/th&gt;
&lt;th&gt;Numeric&lt;/th&gt;
&lt;th&gt;String&lt;/th&gt;
&lt;th&gt;Return Value&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;Equal&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;==&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;eq&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;True if&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;is equal to&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$b&lt;/tt&gt;&lt;a name=&quot;INDEX-257&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;Not equal&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;!=&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;ne&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;True if&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;is not equal to&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$b&lt;/tt&gt;&lt;a name=&quot;INDEX-258&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;Less than&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;&amp;lt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;lt&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;True if&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;is less than&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$b&lt;/tt&gt;&lt;a name=&quot;INDEX-259&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;Greater than&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;gt&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;True if&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;is greater than&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$b&lt;/tt&gt;&lt;a name=&quot;INDEX-260&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;Less than or equal&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;&amp;lt;=&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;le&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;True if&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;not greater than&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$b&lt;/tt&gt;&lt;a name=&quot;INDEX-261&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;Comparison&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;&amp;lt;=&amp;gt;&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;cmp&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;0 if equal, 1 if&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;greater, -1 if&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$b&lt;/tt&gt;&amp;nbsp;greater&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;2_7_Some_File_Test_Operators__26567320991307497&quot;&gt;&lt;/a&gt;2.7&amp;nbsp;Some File Test Operators&lt;/h4&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;Here are a few of the file test operators:&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;perl3-tab-over-file&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;table style=&quot;font-size:1em;line-height:inherit;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;-e $a&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Exists&lt;/td&gt;
&lt;td&gt;True if file named in&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;exists&lt;a name=&quot;INDEX-270&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;-r $a&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Readable&lt;/td&gt;
&lt;td&gt;True if file named in&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;is readable&lt;a name=&quot;INDEX-271&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-272&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;-w $a&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Writable&lt;/td&gt;
&lt;td&gt;True if file named in&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;is writable&lt;a name=&quot;INDEX-273&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-274&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;-d $a&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Directory&lt;/td&gt;
&lt;td&gt;True if file named in&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;is a directory&lt;a name=&quot;INDEX-275&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-276&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;-f $a&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;File&lt;/td&gt;
&lt;td&gt;True if file named in&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;is a regular file&lt;a name=&quot;INDEX-277&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-278&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;text-align:left;&quot;&gt;
&lt;td&gt;&lt;tt class=&quot;literal&quot;&gt;-T $a&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;Text File&lt;/td&gt;
&lt;td&gt;True if file named in&amp;nbsp;&lt;tt class=&quot;literal&quot;&gt;$a&lt;/tt&gt;&amp;nbsp;is a text file&lt;a name=&quot;INDEX-279&quot;&gt;&lt;/a&gt;&lt;a name=&quot;INDEX-280&quot;&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;margin:0;&quot;&gt;You might use them like this:&lt;/p&gt;
&lt;blockquote style=&quot;border-color:#dddddd;border-style:dashed;border-width:1px;padding:10px;&quot;&gt;
&lt;pre class=&quot;programlisting&quot;&gt;-e &quot;/usr/bin/perl&quot; or warn &quot;Perl is improperly installed/n&quot;;
-f &quot;/vmlinuz&quot; and print &quot;I see you are a friend of Linus/n&quot;;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;3_Control_Structures__5578092923387885&quot;&gt;&lt;/a&gt;3 Control Structures&lt;/h3&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;3_1_Truth__13155366573482752&quot;&gt;&lt;/a&gt;3.1 Truth&lt;/h4&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;&lt;a name=&quot;INDEX-290&quot;&gt;&lt;/a&gt;&lt;span style=&quot;text-decoration:underline;&quot;&gt;Truth in Perl is always evaluated in a scalar context.&lt;/span&gt;&amp;nbsp;Other than that, no type coercion is done. So here are the rules for the various kinds of values a scalar can hold:&lt;/p&gt;
&lt;ol style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;Any string is true except for&amp;nbsp;&lt;/span&gt;&lt;tt class=&quot;literal&quot;&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/tt&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;&amp;nbsp;and&amp;nbsp;&lt;/span&gt;&lt;tt class=&quot;literal&quot;&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;/tt&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;&lt;a name=&quot;INDEX-291&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;Any number is true except for 0.&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;&lt;a name=&quot;INDEX-292&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;Any reference is true.&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;&lt;a name=&quot;INDEX-293&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;p style=&quot;margin:0;&quot;&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;Any undefined value is false.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;For example:&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;font-family:verdana;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;
&lt;pre style=&quot;color:#000066;font-size:120%;&quot;&gt;&quot;0.00&quot; + 0 # would become the number 0 (coerced by the +), so false.
/$a # is a reference to $a, so true, even if $a is false.
undef() # is a function returning the undefined value, so false.&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>由服务器名字(Host name)获得IP地址</title>
   <link href="http://bo-yang.github.com//2008/12/24/get-ip-addr-from-host-name"/>
   <updated>2008-12-24T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/12/24/get-ip-addr-from-host-name</id>
   <content type="html">&lt;p&gt;
    一下代码可以根据host name获得IP地址：
&lt;div&gt;
&lt;div class=&quot;highlighter&quot;&gt;
&lt;ol start=&quot;1&quot; class=&quot;highlighter-c&quot;&gt;
&lt;li&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include &amp;lt;netdb.h&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include &amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include &amp;lt;arpa/inet.h&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include &amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;span&gt; main(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;span&gt; argc,&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;&lt;span&gt; **argv)&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt;&lt;span&gt; hostent *hptr;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt;&lt;span&gt; in_addr *in_addr_ptr;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;&lt;span&gt; *ptr,**pptr,**listptr,*addr_ptr;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;&lt;span&gt; str[32];&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/*Host name--the first param*/&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;    ptr=argv[1];&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span&gt;((hptr=gethostbyname(ptr))==NULL)&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;    {&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;        printf(&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;gethostbyname error for host: %s/n&quot;&lt;/span&gt;&lt;span&gt;,ptr);&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;        &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;span&gt; -1;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;    }&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/*print official host name*/&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;    printf(&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;offial host name: %s/n&quot;&lt;/span&gt;&lt;span&gt;,hptr-&amp;gt;h_name);&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/*print all the aliases of the host*/&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;&lt;span&gt;(pptr=hptr-&amp;gt;h_aliases;*pptr!=NULL;pptr++)&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;        printf(&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;alias:%s/n&quot;&lt;/span&gt;&lt;span&gt;,*pptr);&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/*print IP address*/&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;&lt;span&gt; (hptr-&amp;gt;h_addrtype) {&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt;&lt;span&gt; AF_INET:&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;        listptr = hptr-&amp;gt;h_addr_list;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;        &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span&gt; ( (in_addr_ptr = (&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt;&lt;span&gt; in_addr *) *listptr) != NULL) {&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;            addr_ptr = inet_ntoa(*in_addr_ptr);&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;            &lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;            printf(&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;address: %s/n&quot;&lt;/span&gt;&lt;span&gt;,addr_ptr);&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;        &lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;            &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;span&gt;(0);&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;        }&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;        &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;span&gt; {&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;            &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;span&gt;(NULL);&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;        }&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;        printf(&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;unknown address type %d/n&quot;&lt;/span&gt;&lt;span&gt;,hptr-&amp;gt;h_addrtype);&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;        &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;span&gt;(NULL);&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;    }&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;span&gt; 0;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-family:verdana;line-height:18px;font-size:10pt;&quot;&gt;&lt;/span&gt;
&lt;p style=&quot;text-indent:2em;line-height:22px;font-size:14px;margin:1em 0 .5em;padding:0;&quot;&gt;&lt;font size=&quot;4&quot;&gt;struct hostent *gethostbyname(const char *name);&lt;br /&gt;这个函数的传入值是域名或者主机名，例如&quot;&lt;/font&gt;&lt;a href=&quot;http://www.google.com%22%2C%22wpc/&quot; style=&quot;text-decoration:none;color:rgb(51,102,153);&quot;&gt;&lt;font size=&quot;4&quot;&gt;www.google.com&quot;,&quot;wpc&lt;/font&gt;&lt;/a&gt;&lt;font size=&quot;4&quot;&gt;&quot;等等。&lt;br /&gt;传出值，是一个hostent的结构（如下）。如果函数调用失败，将返回NULL。&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:2em;line-height:22px;font-size:14px;margin:1em 0 .5em;padding:0;&quot;&gt;&lt;font size=&quot;4&quot;&gt;struct hostent {&lt;br /&gt;  char  *h_name;&lt;br /&gt;  char  **h_aliases;&lt;br /&gt;  int   h_addrtype;&lt;br /&gt;  int   h_length;&lt;br /&gt;  char  **h_addr_list;&lt;br /&gt;  };&lt;br /&gt;解释一下这个结构：&lt;br /&gt;其中，&lt;br /&gt;  char *h_name 表示的是主机的规范名。例如&lt;/font&gt;&lt;a href=&quot;http://www.google.com/&quot; style=&quot;text-decoration:none;color:rgb(51,102,153);&quot;&gt;&lt;font size=&quot;4&quot;&gt;www.google.com&lt;/font&gt;&lt;/a&gt;&lt;font size=&quot;4&quot;&gt;的规范名其实是&lt;/font&gt;&lt;a href=&quot;http://www.l.google.com/&quot; style=&quot;text-decoration:none;color:rgb(51,102,153);&quot;&gt;&lt;font size=&quot;4&quot;&gt;www.l.google.com&lt;/font&gt;&lt;/a&gt;&lt;font size=&quot;4&quot;&gt;。&lt;br /&gt;  char   **h_aliases 表示的是主机的别名。&lt;/font&gt;&lt;a href=&quot;http://www.google.com/&quot; style=&quot;text-decoration:none;color:rgb(51,102,153);&quot;&gt;&lt;font size=&quot;4&quot;&gt;www.google.com&lt;/font&gt;&lt;/a&gt;&lt;font size=&quot;4&quot;&gt;就是google他自己的别名。有的时候，有的主机可能有好几个别名，这些，其实都是为了易于用户记忆而为自己的网站多取的名字。&lt;br /&gt;  int   h_addrtype 表示的是主机ip地址的类型，到底是ipv4(AF_INET)，还是ipv6(AF_INET6)&lt;br /&gt;  int   h_length 表示的是主机ip地址的长度&lt;br /&gt;  int   **h_addr_lisst 表示的是主机的ip地址，注意，这个是以网络字节序存储的。千万不要直接用printf带%s参数来打这个东西，会有问题的哇。所以到真正需要打印出这个IP的话，需要调用inet_ntop()。&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:2em;line-height:22px;font-size:14px;margin:1em 0 .5em;padding:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-size:18px;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(128,128,128);font-family:新宋体;font-size:12px;line-height:14px;&quot;&gt;#include &amp;lt;arpa/inet.h&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:2em;line-height:22px;font-size:14px;margin:1em 0 .5em;padding:0;&quot;&gt;&lt;font size=&quot;4&quot;&gt;const char *inet_ntop(int af, const void *src, char *dst, socklen_t cnt) ：&lt;br /&gt;这个函数，是将类型为af的网络地址结构src，转换成主机序的字符串形式，存放在长度为cnt的字符串中。&lt;br /&gt;这个函数，其实就是返回指向dst的一个指针。如果函数调用错误，返回值是NULL。&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:2em;line-height:22px;font-size:14px;margin:1em 0 .5em;padding:0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-size:18px;&quot;&gt;编译时要加上-lsocket选项，否则编译器将会报出invalid reference的错误。如： gcc -o name2addr name2addr.c -lsocket.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>return (((ulong*)(x))[-1])</title>
   <link href="http://bo-yang.github.com//2008/12/04/return-ulong-pointer"/>
   <updated>2008-12-04T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/12/04/return-ulong-pointer</id>
   <content type="html">&lt;p&gt;
&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-family:������;&quot;&gt;看到一个函数，定义如下： &lt;/span&gt;
&lt;div&gt;
&lt;div class=&quot;highlighter&quot;&gt;
&lt;ol start=&quot;1&quot; class=&quot;highlighter-c&quot;&gt;
&lt;li&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include &quot;u.h&quot;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include &quot;lib.h&quot;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;ulong&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;getcallerpc(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;&lt;span&gt; *x)&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;span&gt; (((&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;ulong&lt;/span&gt;&lt;span&gt;*)(x))[-1]);&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-family:������;&quot;&gt;((ulong*)(x))  将void* 的x针针强制转换为 ulong* &lt;/p&gt;
&lt;p&gt;此时可以理解为x指向一个ulong类型的数组 &lt;br /&gt;[-1] : 表示去x前面的那个元素 &lt;/p&gt;
&lt;p&gt;上面的代码等价与 &lt;/p&gt;
&lt;p&gt;ulong px=（ulong*）x &lt;br /&gt;--px &lt;br /&gt;return (*px) &lt;/p&gt;
&lt;p&gt;一般情况下不会用 下表-1,估计此处有什么特殊用法，要看实际是怎么用的了.&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-family:������;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-family:������;&quot;&gt;------------------------------------------------------------------------&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-family:������;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-family:������;&quot;&gt;ulong getcallerpc(void *x) &lt;br /&gt;{ &lt;br /&gt;    return (((ulong*)(x))[-1]); &lt;br /&gt;} &lt;/p&gt;
&lt;p&gt;在((ulong*)(x))[-1] 中： &lt;br /&gt;x是一个指针 &lt;br /&gt;（ulong*)(x)：将x转换为ulong型的指针，我们假设（ulong*)(x)转换后指针为y，则 &lt;br /&gt;((ulong*)(x))[-1]为：y[-1]，而y[-1]就指向y首地址前面的那个地址。这种情况只有 &lt;br /&gt;当你自己知道前面那个地址是什么了，也就是楼上所说的特殊用法了。~_~&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>NULL Pointer Bugs</title>
   <link href="http://bo-yang.github.com//2008/12/03/null-pointer"/>
   <updated>2008-12-03T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/12/03/null-pointer</id>
   <content type="html">&lt;div style=&quot;min-height:1100px;font-family:Verdana;font-size:10pt;line-height:1;background-color:rgb(255,255,255);width:648px!important;border-color:rgb(204,204,204) rgb(187,187,187) rgb(187,187,187) rgb(204,204,204);border-style:solid;border-width:1px 2px 2px 1px;margin:15px auto 25px;padding:40px 50px;&quot;&gt;
&lt;h1 style=&quot;text-align:center;font-size:18pt;&quot;&gt;NULL Pointer Bugs&lt;br /&gt;&lt;/h1&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;font-family:Charter;&quot;&gt;&lt;font size=&quot;3&quot;&gt;A NULL character pointer is &lt;/font&gt;&lt;b&gt;NOT&lt;/b&gt;&lt;font size=&quot;3&quot;&gt; the same as a pointer to a NULL string. In Solaris, the following program will lead to a &quot;&lt;/font&gt;&lt;span style=&quot;color:rgb(51,0,0);font-family:&#39;courier new&#39;;white-space:pre;&quot;&gt;&lt;font size=&quot;2&quot;&gt;Segmentation Fault&lt;/font&gt;&lt;span style=&quot;color:rgb(0,0,0);font-family:Charter;white-space:normal;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&quot;.&lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;font-family:Charter;&quot;&gt;&lt;br /&gt;&lt;font size=&quot;3&quot;&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;div class=&quot;highlighter&quot;&gt;
&lt;ol start=&quot;1&quot; class=&quot;highlighter-c&quot;&gt;
&lt;li&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;span&gt; main()&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;&lt;span&gt; *&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;&lt;span&gt;=NULL;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;    printf(&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;/n String length=%d&quot;&lt;/span&gt;&lt;span&gt;,strlen(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;&lt;span&gt;));&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;span&gt; 0;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/div&gt;
&lt;div&gt;I don&#39;t know hwy this happens clearly now, and it should be pay more attention.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Korn Shell Notes(V)</title>
   <link href="http://bo-yang.github.com//2008/12/01/kshell-note-5"/>
   <updated>2008-12-01T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/12/01/kshell-note-5</id>
   <content type="html">&lt;p&gt;
     &lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-family:Verdana;font-size:13px;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-size:19px;font-style:italic;font-weight:bold;&quot;&gt;19. Input/Output Commands&lt;/span&gt;&lt;br /&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;19_1_Escape_Characters_1455877&quot; id=&quot;19_1_Escape_Characters_1455877&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;19.1 Escape Characters&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;
&lt;div id=&quot;t.5t&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_183d5p8rtgc_b&quot; style=&quot;width:533px;height:397px;&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;
&lt;div style=&quot;text-align:left;margin-top:0;margin-bottom:0;&quot;&gt;The /c escape character causes the trailing newline to be dropped from the output. It is often used to create prompts.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print &quot;Enter choice: /c&quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    Enter choice: $&lt;/span&gt;&lt;br /&gt;Notice that the command prompt was displayed following the argument, and not on the next line.&lt;/p&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;19_2_print_Options_00785647007&quot; id=&quot;19_2_print_Options_00785647007&quot;&gt;&lt;/a&gt;19.2 print Options&lt;/h3&gt;
&lt;div id=&quot;fkqi&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_184ggh3tnpj_b&quot; style=&quot;width:546px;height:518px;&quot; /&gt;
&lt;div style=&quot;text-align:left;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_19_3_The_exec_Command_3587034&quot; id=&quot;_19_3_The_exec_Command_3587034&quot;&gt;&lt;/a&gt;19.3 The exec Command&lt;/h3&gt;
&lt;p&gt;The &lt;b&gt;exec&lt;/b&gt; command is used to perform I/O redirection with file descriptors 0 through 9 using this format:&lt;br /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;        exec&lt;/b&gt; &lt;i&gt;I/O-redirection-command&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;The I/O redirection performed by the exec command stays in effect until specifically closed, changed, or if the script or shell terminates.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here, file redir.out is opened as file descriptor 5 for reading and writing:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ exec 5&amp;lt;&amp;gt;redir.out&lt;/span&gt;&lt;br /&gt;Now the print command writes something to file descriptor 5:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print —u5 &quot;This is going to fd 5&quot;&lt;/span&gt;&lt;br /&gt;and the cat command reads from it:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ cat &amp;lt;&amp;amp;5&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    This is going to fd 5&lt;/span&gt;&lt;br /&gt;To finish up, we use another exec to close file descriptor 5:&lt;br /&gt;$ exec 5&amp;lt;&amp;amp;—&lt;/p&gt;
&lt;p&gt;Standard input can be taken from a file like this:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    exec 0&amp;lt;file&lt;/span&gt;&lt;br /&gt;Commands could be read in from file, and it would be almost as if you typed them at your terminal.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_19_4_The_read_Command_8516806&quot; id=&quot;_19_4_The_read_Command_8516806&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;19.4 The read Command&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The read command is used to read input from a terminal or file. The basic format for the read command is:&lt;br /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;        read&lt;/b&gt; &lt;i&gt;variables&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;where a line is read from standard input. Each word in the input is assigned to a corresponding variable, so the first variable gets the first word, the second variable the second word, and so on. Here, &quot;This is output&quot; is read in to the variables X, Y, and Z. The first word of the input is This, so it is assigned to the first variable X. The second word is is, so it is assigned to the second variable Y. The third word is output, so it is assigned to Z.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print &quot;This is output&quot; | read X Y Z&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $X&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    This&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $Y&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    is&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $Z&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    output&lt;/span&gt;&lt;br /&gt;&lt;u&gt;&lt;br /&gt;If there aren&#39;t enough variables for all the words in the input, the last variable gets all the remaining words.&lt;/u&gt; This command is the same as the last one, except that an extra string &quot;again&quot; is given.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print &quot;This is output again &quot; | read X Y Z&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $X&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    This&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $Y&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    is&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $Z&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    output again&lt;/span&gt;
&lt;div id=&quot;przl&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_185zd8vcvfj_b&quot; style=&quot;width:541px;height:340px;&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;
&lt;div style=&quot;text-align:left;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;_19_4_1_Reading_Input_from_Fil&quot; id=&quot;_19_4_1_Reading_Input_from_Fil&quot;&gt;&lt;/a&gt;19.4.1 Reading Input from Files&lt;/h4&gt;
&lt;p&gt;The read command by itself will only read one line of input, so you need a looping command with it. To read in the contents of a file, use this format:&lt;br /&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        exec &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;0&lt;/span&gt;&amp;lt;file&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        while read &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;variable&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        do&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;                    commands&lt;/span&gt;&lt;/i&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        done&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;The exec command opens file for standard input, and the while command causes input to be read a line at a time until there is no more input.&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;Here is an alternate format that will also work for reading input from files:&lt;br /&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        cat &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;file&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt; | while read &lt;/span&gt;&lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;variable&lt;/span&gt;&lt;/i&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        do&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;                commands&lt;/span&gt;&lt;/i&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        done&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;On the systems tested, the exec format for reading input from files was about 40-60 times faster than the last version above.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;_19_4_2_The_IFS_Variable_80535&quot; id=&quot;_19_4_2_The_IFS_Variable_80535&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;19.4.2 The IFS Variable&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The read command normally uses the IFS (Internal Field Separator) variable as the word separators. The default for IFS is space, tab, or snewline character, in that order, but it can be set to something else.&lt;br /&gt;By setting IFS to :, the fields in the /etc/passwd file could be read into separate variables.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ cat ifs_test&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    IFS=:&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    exec 0&amp;lt;/etc/passwd&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    while read -r NAME PASS UID GID COMM HOME SHELL&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    do&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;        print &quot;Account name= $NAME&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    Home directory= $HOME&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    Login Shell= $SHELL&quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    done&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_19_4_3_Reading_Input_Interact&quot; id=&quot;_19_4_3_Reading_Input_Interact&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;19.4.3 Reading Input Interactively&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The read command allows input to be read interactively using this format:&lt;br /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;        read&lt;/b&gt; &lt;i&gt;name&lt;/i&gt;&lt;b&gt;?&lt;/b&gt;&lt;i&gt;prompt&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;where &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;prompt&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt; is displayed on standard error and the response is read into &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;name&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;.&lt;/p&gt;
&lt;p&gt;So instead of using two commands to display a prompt and read the input:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print —n &quot;Enter anything: &quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ read ANSWER&lt;/span&gt;&lt;br /&gt;The same thing can be done with one command.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ read ANSWER?&quot;Enter anything: &quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    Enter anything: ANYTHING&lt;/span&gt;&lt;br /&gt;Here is ANSWER:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $ANSWER&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    ANYTHING&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_19_4_4_The_REPLY_variable_360&quot; id=&quot;_19_4_4_The_REPLY_variable_360&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;19.4.4 The&lt;span style=&quot;font-family:Georgia;&quot;&gt; &lt;/span&gt;&lt;b&gt;REPLY&lt;/b&gt; variable&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;If no variables are given to the &lt;b&gt;read&lt;/b&gt; command, the input is automatically assigned to the &lt;b&gt;REPLY&lt;/b&gt; variable. Here, ANYTHING is read into REPLY:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ANYTHING | read&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $REPLY&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    ANYTHING&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;a name=&quot;_20_Miscellaneous_Programming_&quot; id=&quot;_20_Miscellaneous_Programming_&quot;&gt;&lt;/a&gt;&lt;i&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20 Miscellaneous Programming Features&lt;/span&gt;&lt;/span&gt;&lt;/i&gt;&lt;/h2&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_20_1_The_Command_872161202132&quot; id=&quot;_20_1_The_Command_872161202132&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.1 The . Command&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The &lt;b&gt;.&lt;/b&gt; command reads in a complete file, then executes the commands in it as if they were typed in at the prompt. This is done in the current shell, so any variable, alias, or function settings stay in effect. It is typically used to read in and execute a profile, environment, alias, or functions file. Here the .profile file is read in and executed:&lt;br /&gt;$ . .profile&lt;/p&gt;
&lt;p&gt;The following example illustrates the difference between executing files as Korn shell scripts and reading/executing them using the .command. The .test file sets the variable X:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ cat .test&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    X=ABC&lt;/span&gt;&lt;br /&gt;&lt;u&gt;When the .test file is executed as a Korn shell script, variable X is not defined in the current environment, because scripts are run in a subshell&lt;/u&gt;:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ ksh .test&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $X&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $&lt;/span&gt;&lt;br /&gt;&lt;u&gt;After the .test file is read in and executed using the . command, notice that the variable X is still defined&lt;/u&gt;:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ . .test&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $X&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    ABC&lt;/span&gt;&lt;br /&gt;The standard search path, PATH, is checked if the file is not in the current directory.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_20_2_Functions_01172757241874&quot; id=&quot;_20_2_Functions_01172757241874&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.2 Functions&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Functions are most efficient for commands with arguments that are invoked fairly often, and are defined with the following format:&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;        function&lt;/b&gt; &lt;i&gt;name&lt;/i&gt; {&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;                commands&lt;/span&gt;&lt;/i&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        }&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;To maintain compatibility with the Bourne shell, functions can also be declared with this POSIX-style format:&lt;br /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;        function-name&lt;/i&gt;&lt;b&gt;()&lt;/b&gt; {&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;                commands&lt;/span&gt;&lt;/i&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        }&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;These types of functions have many limitations compared to Korn shell style functions, such as no support for local variables.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_20_3_Scope_Availability_75594&quot; id=&quot;_20_3_Scope_Availability_75594&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.3 Scope &amp;amp; Availability&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;By default, functions are not available to subshells. This means that &lt;u&gt;a regular function that was read in your working environment, &lt;b&gt;.profile&lt;/b&gt; file, or environment file would not be available in a Korn shell script.&lt;br /&gt;&lt;/u&gt;&lt;br /&gt;To export a function, use the &lt;b&gt;typeset -fx&lt;/b&gt; command:&lt;br /&gt;&lt;b&gt;        typeset -fx&lt;/b&gt; &lt;i&gt;function-name&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;To make a function available across separate invocations of the Korn shell, include the &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt; typeset -fx&lt;/b&gt; &lt;i&gt;function-name&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt; command in the environment file.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_20_4_Function_Variables_90486&quot; id=&quot;_20_4_Function_Variables_90486&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.4 Function Variables&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;All function variables, except those explicitly declared locally within the function with the &lt;b&gt;typeset&lt;/b&gt; command, are inherited and shared by the calling Korn shell script. In this example, the X, Y, and Z variables are set within and outside of the function f:&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ cat ftest&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    X=1&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    function f {&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;        Y=2&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;        typeset Z=4&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;        print &quot;In function f, X=$X, Y=$Y, Z=$Z&quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;        X=3&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    }&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    f&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    print &quot;Outside function f, X=$X, Y=$Y, Z=$Z&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Notice that when executed, all the variable values are shared between the function and calling script, except for variable Z, because it is explicitly set to a local function variable using the typeset command.&lt;br /&gt;The value is not passed back to the calling Korn shell script:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ ftest&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    In function f, X=1, Y=2, Z=4&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    Outside function f, X=3, Y=2, Z=&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The current working directory, aliases, functions, traps, and open files from the invoking script or current environment are also shared with functions.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_20_5_Displaying_Current_Funct&quot; id=&quot;_20_5_Displaying_Current_Funct&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.5 Displaying Current Functions&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The list of currently available functions are displayed using the &lt;b&gt;typeset -f &lt;/b&gt;command.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_20_6_Autoloading_Functions_38&quot; id=&quot;_20_6_Autoloading_Functions_38&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.6 Autoloading Functions&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;To improve performance, functions can be specified to autoload. &lt;u&gt;This causes the function to be read in when invoked, instead of each time a Korn shell script is invoked, and is used with functions that are not invoked frequently&lt;/u&gt;. To define an autoloading function, use the &lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;typeset -fu&lt;/b&gt; &lt;i&gt;function-name&lt;/i&gt;&lt;/span&gt; command. Here, lsf is made an autoloading function:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset —fu lsf&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The &lt;b&gt;autoload&lt;/b&gt; alias can also be used to define an autoloading function. On most systems, it is preset to &lt;b&gt;typeset -fu&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;b&gt;FPATH&lt;/b&gt; variable which contains the pathnames to search for autoloading functions must be set and have at least one directory for autoloading functions to work.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_20_7_Discipline_Functions_023&quot; id=&quot;_20_7_Discipline_Functions_023&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.7 Discipline Functions&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;u&gt;Discipline functions are a special type of function used to manipulate variables. They are defined but not specifically called. Rather, they are called whenever the variable associated with the function is accessed.&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;There are some specific rules as to how discipline functions are named and accessed. First of all, discipline functions are named using this syntax:&lt;br /&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;       &lt;b&gt; &lt;/b&gt;&lt;b&gt;name.function&lt;/b&gt;&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;Notice the the funcion has two parts separated with a dot. &lt;u&gt;The first part name corresponds to the name of a variable, and the second part must be &lt;b&gt;get&lt;/b&gt;, &lt;b&gt;set&lt;/b&gt;, or &lt;b&gt;unset&lt;/b&gt;&lt;/u&gt;. These correspond to the following operations on the variable:&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;
&lt;ul style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;get&lt;/b&gt;     whenever the base discipline variable is accessed&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;set&lt;/b&gt;     whenever the base discipline variable is set&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;unset&lt;/b&gt;     whenever the base discipline variable is unset&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;For example, the discipline function LBIN.get, LBIN.set, LBIN.unset is called whenever the variable LBIN is accessed, set, or unset.&lt;/p&gt;
&lt;p&gt;All three discipline functions are optional, so not all need to be specified. Within a discipline function, the following special reserved variables can be used:&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;
&lt;ul style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;.sh.name&lt;/b&gt;     name of current variable&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;.sh.value&lt;/b&gt;     value of the current variable&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;.sh.subscript&lt;/b&gt;     name of the subscript (if array variable)&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;From a practical perspective, discipline functions are often used to help debug by tracing the setting and current value of variables in running scripts. Here is a function that can be used to trace setting the value of X:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    function X.set {&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;        print &quot;DEBUG: ${.sh.name} = ${.sh.value}&quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    }&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;br /&gt;Discipline functions are also a good place to centralize your variable assignment validation rules. Here is a function that checks to make sure that X it set ao a number between 3 and 10:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    function X.set {&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;        if (( .sh.value&amp;lt;3 || .sh.value &amp;gt;10 ))&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;        then&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;            print &quot;Bad value for ${.sh.name}: ${.sh.value}&quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;        fi&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    }&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Note that &lt;b&gt;builtin&lt;/b&gt; functions can also be used as additional discipline functions.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_20_8_FPATH_8677511420100927&quot; id=&quot;_20_8_FPATH_8677511420100927&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.8 FPATH&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The &lt;b&gt;FPATH&lt;/b&gt; variable contains a list of colon-separated directories to check when an autoloading function is invoked. It is analogous to&lt;b&gt; PATH&lt;/b&gt; and &lt;b&gt;CDPATH&lt;/b&gt;, except that the Korn shell checks for function files, instead of commands or directories. Each directory in FPATH is searched from left-to-right for a file whose name matches the name of the function. Once found, it is read in and executed in the current environment. With the following &lt;b&gt;FPATH&lt;/b&gt; setting, if an autoloading function &lt;b&gt;lsf&lt;/b&gt; was invoked, the Korn shell would check for a file called &lt;b&gt;lsf&lt;/b&gt; in &lt;b&gt;/home/anatole/.fdir&lt;/b&gt;, then &lt;b&gt;/etc/.functions&lt;/b&gt;, and if existent, read and execute it:&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $FPATH&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    /home/anatole/.fdir:/etc/.functions&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;There is no default value for &lt;b&gt;FPATH&lt;/b&gt;, so if not specifically set, this feature is not enabled.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_20_9_Removing_Function_Defini&quot; id=&quot;_20_9_Removing_Function_Defini&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.9 Removing Function Definitions&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Functions are removed by using the &lt;b&gt;unset -f&lt;/b&gt; command. Here, the rd function is removed:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ unset -f rd&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_20_10_Traps_9392005437985063&quot; id=&quot;_20_10_Traps_9392005437985063&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.10 Traps&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The trap command is used to execute commands when the specified signals are received.&lt;br /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;        trap&lt;/b&gt; commands signals&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;u&gt;Trap commands are useful in controlling side effects from Korn shell scripts&lt;/u&gt;. For example, if you have a script that creates a number of temporary files, and you hit the &amp;lt;BREAK&amp;gt; or &amp;lt;DELETE&amp;gt; key in the middle of execution, you may inadvertently leave the temporary files. By setting a &lt;b&gt;trap&lt;/b&gt; command, the temporary files can be cleaned up on an error or interrupt.&lt;/p&gt;
&lt;p&gt;The &lt;b&gt;trap_test&lt;/b&gt; script creates some files, then removes them when an interrupt is received. &lt;span style=&quot;background-color:rgb(0,255,255);&quot;&gt;Notice that the &lt;/span&gt;&lt;b&gt;trap&lt;/b&gt;&lt;span style=&quot;background-color:rgb(0,255,255);&quot;&gt; command is surrounded in single quotes. This is so that the &lt;/span&gt;&lt;b&gt;FILES&lt;/b&gt;&lt;span style=&quot;background-color:rgb(0,255,255);&quot;&gt; variable is evaluated when the signal is received, not when the trap is set.&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ cat trap_test&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    trap &#39;print &quot;$0 interrupted - removing temp files&quot; ;/&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    rm —rf $FILES; exit 1&#39; 1 2&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    FILES=&quot;a b c d e f&quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    touch $FILES&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    sleep 100&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ trap_test&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    Ctl-c&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    trap_test interrupted - removing temp files&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;If an invalid trap is set, an error is generated.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;_20_10_1_Ignoring_Signals_1856&quot; id=&quot;_20_10_1_Ignoring_Signals_1856&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.10.1 Ignoring Signals&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The &lt;b&gt;trap&lt;/b&gt; command can be used to ignore signals by specifying null as the command argument:&lt;br /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        &lt;b&gt;trap  &quot;&quot; &lt;/b&gt; &lt;i&gt;signals&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;This could be used to make all or part of a Korn shell script uninterruptable using normal interrupt keys like Ctl-c.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;_20_10_2_Resetting_Traps_86836&quot; id=&quot;_20_10_2_Resetting_Traps_86836&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.10.2 Resetting Traps&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The trap command can also be used to reset traps to their default action by omitting the command argument:&lt;br /&gt;    &lt;b&gt;trap&lt;/b&gt; - &lt;i&gt;signals&lt;/i&gt;&lt;br /&gt;or&lt;br /&gt;    &lt;b&gt;trap&lt;/b&gt;&lt;i&gt; signals&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;_20_10_3_Exit_Function_Traps_3&quot; id=&quot;_20_10_3_Exit_Function_Traps_3&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.10.3 Exit &amp;amp; Function Traps&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;A trap can be set to execute when a Korn shell script exits. This is done by using a 0 or EXIT as the signals argument to the trap command:&lt;br /&gt;&lt;b&gt;        trap&lt;/b&gt; &#39;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;commands&lt;/span&gt;&lt;/i&gt;&#39; &lt;b&gt;0&lt;/b&gt;&lt;br /&gt;or&lt;br /&gt;&lt;b&gt;        trap&lt;/b&gt; &#39;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;commands&lt;/span&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&#39; &lt;b&gt;EXIT&lt;/b&gt;&lt;br /&gt;This could be used to consolidate Korn shell script cleanup functions into one place.&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;_20_10_4_Trap_Signal_Precedenc&quot; id=&quot;_20_10_4_Trap_Signal_Precedenc&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.10.4 Trap Signal Precedence&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;If multiple traps are set, the order of precedence is:&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;
&lt;ul style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;DEBUG&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/li&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;ERR&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/li&gt;
&lt;li style=&quot;font-family:Georgia;margin-top:0;margin-bottom:0;&quot;&gt;&lt;i&gt;Signal Number&lt;/i&gt;&lt;/li&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;EXIT&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;a name=&quot;_20_10_5_Trapping_Keyboard_Sig&quot; id=&quot;_20_10_5_Trapping_Keyboard_Sig&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.10.5 Trapping Keyboard Signals&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The Korn shell traps &lt;b&gt;KEYBD&lt;/b&gt; signals (sent when you type a character) and automatically assigns the following reserved variables:&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;
&lt;ul style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;.sh.edchar&lt;/b&gt;     contains last character of key sequence&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;.sh.edtext&lt;/b&gt;     contains current input line&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;.sh.edmode&lt;/b&gt;     contains NULL character (or escape character is user in command mode)&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;.sh.edcol&lt;/b&gt;     contains position within the current line&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_20_11_Debugging_Korn_Shell_Sc&quot; id=&quot;_20_11_Debugging_Korn_Shell_Sc&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;20.11 Debugging Korn Shell Scripts&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The Korn shell provides a number of options that are useful in debugging scripts: &lt;b&gt;noexec&lt;/b&gt;, &lt;b&gt;verbose&lt;/b&gt;, and &lt;b&gt;xtrace&lt;/b&gt;. The noexec option causes commands to be read without being executed. It is used to check for syntax errors in Korn shell scripts. The verbose option causes the input to be displayed as it is read. The xtrace option causes the commands in a script to be displayed as they are executed.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;div&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-family:Verdana;font-size:13px;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_186cd3mp7hq_b&amp;amp;writelyrefresh=0&quot; /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;div&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-family:Verdana;font-size:13px;&quot;&gt;
&lt;div style=&quot;text-align:left;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;h4 style=&quot;font-size:10pt;&quot;&gt;20.11.1 Debugging with trap&lt;/h4&gt;
&lt;p&gt;The &lt;b&gt;trap&lt;/b&gt; command can also be helpful in debugging Korn shell scripts. The syntax for this type of trap command is:&lt;br /&gt;&lt;b&gt;        trap &lt;/b&gt;&lt;i&gt;commands&lt;/i&gt;&lt;b&gt; DEBUG&lt;/b&gt;&lt;br /&gt;or&lt;br /&gt;&lt;b&gt;        trap &lt;/b&gt;&lt;i&gt;commands&lt;/i&gt;&lt;b&gt; ERR&lt;/b&gt;&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;
&lt;div style=&quot;text-align:left;margin-top:0;margin-bottom:0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_1872q8bgfhj_b&quot; style=&quot;width:459px;height:143px;&quot; /&gt;&lt;/p&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;_20_12_Co_Processes_1690269969&quot; id=&quot;_20_12_Co_Processes_1690269969&quot;&gt;&lt;/a&gt;20.12 Co-Processes&lt;/h3&gt;
&lt;p&gt;&lt;u&gt;Co-processes are commands that are terminated with a &lt;b&gt;|&amp;amp;&lt;/b&gt; character. They are executed in the background, but have their standard input and output attached to the current shell.&lt;/u&gt;&lt;i&gt; &lt;/i&gt;The &lt;b&gt;print -p&lt;/b&gt; command is used to write to the standard input of a co-process, while &lt;b&gt;read -p&lt;/b&gt; is used to read from the standard output of a co-process. Here, the output of the date command is read into the DATE variable using the read -p command:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ date |&amp;amp;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    [2] 241&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ read —p DATE&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $DATE&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    Thu Jul 18 12:23:57 PST 1996&lt;/span&gt;&lt;br /&gt;Co-processes can be used to edit a file from within a Korn shell script.&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;
&lt;div id=&quot;s_ck&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_188f9s93ndw_b&quot; style=&quot;width:562px;height:406px;&quot; /&gt;&lt;/div&gt;
&lt;div id=&quot;s_ck&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(255,0,0);font-size:28pt;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-weight:bold;&quot;&gt;THE END&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;text-align:center;&quot;&gt;&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Korn Shell Notes(IV)</title>
   <link href="http://bo-yang.github.com//2008/11/30/kshell-note-4"/>
   <updated>2008-11-30T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/11/30/kshell-note-4</id>
   <content type="html">&lt;div id=&quot;yn69&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;
&lt;h2&gt;&lt;i&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;16 The Environment&lt;/span&gt;&lt;/span&gt;&lt;/i&gt;&lt;br /&gt;
&lt;/h2&gt;
&lt;h2&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/p&gt;
&lt;div id=&quot;i4_8&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;
&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_168dd38bmfm_b&quot; style=&quot;width:472px;height:714px;&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/p&gt;
&lt;div id=&quot;i4_8&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;
&lt;h3&gt;&lt;a id=&quot;16_1_CDPATH_5651453254671944_6_11823947909311716&quot; name=&quot;16_1_CDPATH_5651453254671944_6_11823947909311716&quot;&gt;&lt;/a&gt;&lt;br /&gt;
 16.1 CDPATH&lt;br /&gt;
 &lt;/h3&gt;
&lt;p&gt; The &lt;b&gt;CDPATH&lt;/b&gt;&lt;br /&gt;
variable is provided to make directory navigation easier. It contains a&lt;br /&gt;
list of colon-separated directories to check when a full pathname is&lt;br /&gt;
not given to the cd command. Each directory in CDPATH is searched from&lt;br /&gt;
left-to-right for a directory that matches the cd argument. A : alone&lt;br /&gt;
in CDPATH stands for the current directory.&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;16_2_PATH_2677888549093702_009_6379903118402938&quot; name=&quot;16_2_PATH_2677888549093702_009_6379903118402938&quot;&gt;&lt;/a&gt;&lt;br /&gt;
 16.2 PATH&lt;br /&gt;
 &lt;/h3&gt;
&lt;p&gt; The &lt;b&gt;PATH&lt;/b&gt;&lt;br /&gt;
variable contains a list of colon-separated directories to check when a&lt;br /&gt;
command is invoked. Each directory in PATH is searched from&lt;br /&gt;
left-to-right for a file whose name matches the command name. If not&lt;br /&gt;
found, an error message is displayed. A : alone in PATH specifies to&lt;br /&gt;
check the current directory.&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;16_3_TMOUT_809440743503734_145_3826941331997027&quot; name=&quot;16_3_TMOUT_809440743503734_145_3826941331997027&quot;&gt;&lt;/a&gt;&lt;br /&gt;
 16.3 TMOUT&lt;br /&gt;
 &lt;/h3&gt;
&lt;p&gt;The TMOUT variable specifies the number of seconds that the Korn shell&lt;br /&gt;
will wait for input before displaying a 60-second warning message and&lt;br /&gt;
exiting. If not set, the default used is 0, which disables the timeout&lt;br /&gt;
feature. To set a 10-minute timer, set TMOUT to 600:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ TMOUT=600&lt;/span&gt;&lt;br /&gt;
 This variable is usually set by the system administrator in the &lt;span style=&quot;font-family:Courier New;&quot;&gt;/etc/profile&lt;/span&gt; file.
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;16_4_MAILCHECK_687330215443556&quot; name=&quot;16_4_MAILCHECK_687330215443556&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;16.4 MAILCHECK&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;h3&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The&lt;br /&gt;
MAILCHECK variable specifies how often, in seconds, to check for new&lt;br /&gt;
mail. If not set, or set to zero, new mail is checked before each new&lt;br /&gt;
prompt is displayed. Otherwise, the default setting is 600 seconds (10&lt;br /&gt;
minutes).&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;16_5_MAIL_7713528906556307_892_6743312418053198&quot; name=&quot;16_5_MAIL_7713528906556307_892_6743312418053198&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;16.5 MAIL&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;h3&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The &lt;b&gt;MAIL&lt;/b&gt; variable contains the name of a single mailbox file to check for new mail. It is not used if MAILPATH is set.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;16_6_MAILPATH_3551441223568878&quot; name=&quot;16_6_MAILPATH_3551441223568878&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;16.6 MAILPATH&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;h3&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The&lt;br /&gt;
MAILPATH variable contains a colon-separated list of mailbox files to&lt;br /&gt;
check for new mail and is used if you want to read multiple mailboxes.&lt;br /&gt;
It overrides the MAIL variable if both are set. This MAILPATH setting&lt;br /&gt;
specifies to check two mailbox files, &lt;span style=&quot;font-family:Courier New;&quot;&gt;/home/anatole/mbox and /news/mbox&lt;/span&gt;.&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ print $MAILPATH&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    MAILPATH=/home/anatole/mbox:/news/mbox&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;Just&lt;br /&gt;
so you don&#39;t think you can go snooping around someone else&#39;s mailbox,&lt;br /&gt;
this only works if you have read permission on the mailbox file.&lt;br /&gt;
 If MAILPATH is not set, there is no default.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;_16_7_TERM_9189810912229358_5009562197822405&quot; name=&quot;_16_7_TERM_9189810912229358_5009562197822405&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt; 16.7 TERM &lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;h3&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The&lt;br /&gt;
TERM variable specifies your terminal type, and is usually set by your&lt;br /&gt;
system administrator in the global /etc/profile file. If it&#39;s not set&lt;br /&gt;
there, then it&#39;s probably in your ~/.profile file.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;16_8_Enabling_Disabling_Option_48916886920819536&quot; name=&quot;16_8_Enabling_Disabling_Option_48916886920819536&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;16.8 Enabling/Disabling Options&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;h3&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Korn shell options are enabled with the &lt;b&gt;set -o&lt;/b&gt;&lt;i&gt;option&lt;/i&gt; or &lt;b&gt;set&lt;/b&gt; -&lt;i&gt;option&lt;/i&gt; command. For example, the noglob option disables file name substitution and can be set using either of these commands :&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ set —f&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Verdana;&quot;&gt;or&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ set —o noglob&lt;/span&gt;&lt;br /&gt;
Options can also be enabled by specifying them on the ksh command line.&lt;br /&gt;
Here, a Korn subshell is started with the emacs option enabled:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ ksh —o emacs&lt;/span&gt;&lt;br /&gt;
 Options can be disabled with the &lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;set +o&lt;/b&gt; &lt;i&gt;option&lt;/i&gt;&lt;/span&gt; or &lt;b&gt;set&lt;/b&gt; +&lt;i&gt;option&lt;/i&gt; command. In this example, the noglob option is disabled:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ set +o noglob&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;16_9_Displaying_the_Current_Se_47245364006423674&quot; name=&quot;16_9_Displaying_the_Current_Se_47245364006423674&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;16.9 Displaying the Current Settings&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;h3&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The setting of the current options is displayed with the &lt;b&gt;set -o &lt;/b&gt;command.&lt;/p&gt;
&lt;div id=&quot;kt4h&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;
&lt;a href=&quot;http://docs.google.com/File?id=dd6nw3mt_1728crddqft_b&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_1728crddqft_b&quot; style=&quot;width:455px;height:734px;&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;16_10_Aliases_3822333845613286_08960525051202617&quot; name=&quot;16_10_Aliases_3822333845613286_08960525051202617&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;16.10 Aliases&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;h3&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Aliases&lt;br /&gt;
are command name macros used as shorthand for other commands,&lt;br /&gt;
especially frequently used ones. This saves a lot of typing time.&lt;br /&gt;
Aliases are defined with the alias name=value&lt;br /&gt; command.Make sure to&lt;br /&gt;
enclose the value in quotes if it contains whitespace. Here we create&lt;br /&gt;
an alias l that is set to the ls -Fac command:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ alias l=&quot;ls —Fac&quot;&lt;/span&gt;&lt;br /&gt;
 Now when you type in l,&lt;span style=&quot;font-family:Courier New;&quot;&gt; ls -Fac&lt;/span&gt; is executed:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ l&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    ./&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    ../&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    compress.Z*&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    func.Z*&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    test/&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    uncompress.Z*&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    . . .&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; Alias values can contain any text, including special characters, like wild-cards, pipes, or I/O redirection operators.&lt;/p&gt;
&lt;p&gt; Here we set two aliases: p and h. When invoked, we get h instead of Hello.&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ alias p=&#39;print&#39; h=Hello&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ p h&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    h&lt;/span&gt;&lt;br /&gt;
 After the p alias is reset with a trailing blank, h gets substituted in the next command correctly:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ alias p=&#39;print &#39; h=Hello&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ p h&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    Hello&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id=&quot;16_10_1_Displaying_Current_Ali&quot; name=&quot;16_10_1_Displaying_Current_Ali&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;16.10.1 Displaying Current Aliases&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h4&gt;
&lt;h4&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;A list of the current aliases is displayed using the &lt;b&gt;alias&lt;/b&gt; command without arguments.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id=&quot;16_10_2_Removing_Aliases_26645&quot; name=&quot;16_10_2_Removing_Aliases_26645&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;16.10.2 Removing Aliases&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h4&gt;
&lt;h4&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Aliases are removed with the&lt;b&gt; unalias&lt;/b&gt; command. Let&#39;s try it with the l alias:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ unalias l&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id=&quot;17_Korn_Shell_Scripts_48337193&quot; name=&quot;17_Korn_Shell_Scripts_48337193&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;i&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;17 Korn Shell Scripts&lt;/span&gt;&lt;/span&gt;&lt;/i&gt;&lt;br /&gt;
&lt;/h2&gt;
&lt;h2&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h2&gt;
&lt;h3&gt;&lt;a id=&quot;17_1_Positional_Parameters_109&quot; name=&quot;17_1_Positional_Parameters_109&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;17.1 Positional Parameters&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;h3&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Positional&lt;br /&gt;
parameters are special variables used to keep track of arguments to the&lt;br /&gt;
Korn shell, scripts, and functions. Positional parameter names contain&lt;br /&gt;
only digits and cannot be set directly using &lt;i&gt;variable=value&lt;/i&gt; syntax. By default, parameter zero (or $0) is set to the name of the shell, script or function.&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ print $0&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    /bin/ksh&lt;/span&gt;&lt;br /&gt;
The remaining parameters 1 to n are set to each of the arguments passed&lt;br /&gt;
to the shell, script or function. For example, if you invoke a Korn&lt;br /&gt;
shell script called &lt;b&gt;ptest&lt;/b&gt; and pass the arguments &lt;b&gt;A&lt;/b&gt;, &lt;b&gt;B&lt;/b&gt;, and &lt;b&gt;C&lt;/b&gt;, then in the script ptest, &lt;b&gt;$0&lt;/b&gt; would be set to &lt;b&gt;ptest&lt;/b&gt;, &lt;b&gt;$1&lt;/b&gt; to &lt;b&gt;A&lt;/b&gt;, &lt;b&gt;$2&lt;/b&gt; to &lt;b&gt;B&lt;/b&gt;, and &lt;b&gt;$3&lt;/b&gt; to &lt;b&gt;C&lt;/b&gt;.&lt;/p&gt;
&lt;div id=&quot;oal2&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;
&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_173f7n7tvcw_b&quot; style=&quot;width:240px;height:157px;&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
&lt;div id=&quot;t7df&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;
&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_174pzmvjcfz_b&quot; style=&quot;width:536px;height:541px;&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;
 There are three special Korn shell variables that provide information about the current positional parameters. &lt;u&gt;The first is &lt;b&gt;$#&lt;/b&gt;, and it contains the number of positional parameters&lt;/u&gt;. &lt;u&gt;The other two are &lt;b&gt;$@&lt;/b&gt; and &lt;b&gt;$*&lt;/b&gt;, and they both contain all the positional parameters.&lt;/u&gt;&lt;br /&gt;
So in the above ptest example, $# would be 3, and both $* and $@ would&lt;br /&gt;
be A B C. Here is a Korn shell script that manipulates positional&lt;br /&gt;
parameters. It displays the name of the current script, the number of&lt;br /&gt;
positional parameters, and the value of each of the positional&lt;br /&gt;
parameters:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ cat check_params&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    print &quot;Script name: $0&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    print &quot;Number of args passed: $#&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    print &quot;Arguments passed: $*&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    print &quot;Arg 1=$1, Arg 2=$2, Arg 3=$3&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;17_2_Modifying_Positional_Para&quot; name=&quot;17_2_Modifying_Positional_Para&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;17.2 Modifying Positional Parameters&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;h3&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;By default, &lt;b&gt;$0&lt;/b&gt; is set to the name of the shell, script or function. It cannot be set or modified. The remaining parameters from &lt;b&gt;$1&lt;/b&gt; to&lt;b&gt; $n&lt;/b&gt; can be reassigned with the&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt; &lt;/span&gt;&lt;b&gt;shift&lt;/b&gt;&lt;br /&gt;
command. The shift command, with no arguments, shifts positional&lt;br /&gt;
parameters left once, so that $1 takes the value of $2, $2 takes the&lt;br /&gt;
value of $3, and so on. &lt;u&gt;The original value of $1 is lost.&lt;br /&gt;
&lt;/u&gt; &lt;u&gt;&lt;br /&gt;
&lt;/u&gt;Let&#39;s change the check_params script so that it shifts the positional&lt;br /&gt;
 parameters left once:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ cat check_params&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    print &quot;Script name: $0&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    print &quot;Number of args passed: $#&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    print &quot;Arguments passed: $*&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    print &quot;Arg 1=$1, Arg 2=$2, Arg 3=$3&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    shift&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    print &quot;Number of remaining args: $#&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    print &quot;Remaining args: $*&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    print &quot;Arg 1=$1, Arg 2=$2, Arg 3=$3&quot;&lt;/span&gt;&lt;br /&gt;
 When we run it again with the arguments A B:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ check_params A B&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    Script name: check_params&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    Number of args passed: 2&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    Arguments passed: A B&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    Arg 1=A, Arg 2=B, Arg 3=&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    Number of remaining args: 1&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    Remaining args: B&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    Arg 1=B, Arg 2=, Arg 3=&lt;/span&gt;&lt;br /&gt;
 After the shift command, $1 is set to B and $2 is unset. The original value of $1 is lost.&lt;/p&gt;
&lt;p&gt; The positional parameters can be shifted left more than once by providing an integer argument to the &lt;b&gt;shift&lt;/b&gt; command: &lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;shift &lt;i&gt;n&lt;/i&gt;&lt;/span&gt;&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;17_3_The_exit_command_23414194&quot; name=&quot;17_3_The_exit_command_23414194&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;17.3 The exit command&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;h3&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The &lt;b&gt;exit&lt;/b&gt; command allows you to terminate execution from anywhere in a Korn shell script and return an &lt;b&gt;exit&lt;/b&gt; value using this format:&lt;br /&gt;
&lt;b&gt;        exit&lt;/b&gt;&lt;br /&gt;
 or&lt;br /&gt;
&lt;b&gt;        exit &lt;i&gt;n&lt;/i&gt;&lt;/b&gt;&lt;br /&gt;
 where &lt;i&gt;n&lt;/i&gt; is the exit status to return. &lt;u&gt;If n is not specified, the exit status of the previous command is used&lt;/u&gt;. If you don&#39;t use exit, then scripts finish after the last command is executed.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;_17_4_The_Command__5899032850007576&quot; name=&quot;_17_4_The_Command__5899032850007576&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;17.4 The [[...]] Command&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;h3&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The&lt;br /&gt;
[[...]] command is used to evaluate conditional expressions with file&lt;br /&gt;
attributes, strings, integers, and more. The basic format is:&lt;br /&gt;
         &lt;b&gt;[[&lt;/b&gt;&lt;i&gt;&lt;b&gt; &lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;expression&lt;/span&gt;&lt;/i&gt; &lt;b&gt;]]&lt;/b&gt;&lt;br /&gt;
 where &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;expression&lt;/span&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;
is the condition you are evaluating. There must be whitespace after the&lt;br /&gt;
opening brackets, and before the closing brackets. Whitespace must also&lt;br /&gt;
separate the expression arguments and operators. For example, these are&lt;br /&gt;
incorrect:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    [[$X=$Y]]&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    [[$X = $Y]]&lt;/span&gt;&lt;br /&gt;
 while this is correct:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    [[ $X == $Y ]]&lt;/span&gt;&lt;br /&gt;
 Notice that there is white space between $X, $Y, and the = operator.&lt;/p&gt;
&lt;p&gt;If the expression evaluates to true, then a zero exit status is&lt;br /&gt;
returned, otherwise the expression evaluates to false and a non-zero&lt;br /&gt;
exit status is returned.&lt;/p&gt;
&lt;p&gt; If you are familiar with the&lt;b&gt; test&lt;/b&gt; and &lt;b&gt;[...]&lt;/b&gt;&lt;br /&gt;
commands, then you&#39;ll recognize that [[...]] is just a new and improved&lt;br /&gt;
version of the same commands. It basically functions the same way,&lt;br /&gt;
except that a number of new operators are available.&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;div id=&quot;yn69&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/p&gt;
&lt;div id=&quot;t5_z&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div style=&quot;text-align:center;&quot;&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;h4&gt;&lt;a id=&quot;_17_4_1_Checking_Strings__5241385150842537&quot; name=&quot;_17_4_1_Checking_Strings__5241385150842537&quot;&gt;&lt;/a&gt;&lt;br /&gt;
 17.4.1 Checking Strings&lt;br /&gt;
 &lt;/h4&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;/div&gt;
&lt;div style=&quot;text-align:center;&quot;&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;a href=&quot;http://docs.google.com/File?id=dd6nw3mt_175gwrn86d5_b&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_175gwrn86d5_b&quot; style=&quot;width:507px;height:459px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;
We could use the [[...]] command to check if a variable is set to a&lt;br /&gt;
certain value. Here, variable X is assigned abc, then evaluated in this&lt;br /&gt;
expression:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ X=abc&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ [[ $X = abc ]] &amp;amp;&amp;amp; print &quot;X is set to abc&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    X is set to abc&lt;/span&gt;
&lt;/div&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;
 Using the test and [...] commands, the same command could be written as:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    test &quot;$X&quot; = abc &amp;amp;&amp;amp; print &quot;X is set to abc&quot;&lt;/span&gt;&lt;br /&gt;
 or&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    [ &quot;$X&quot; = abc ] &amp;amp;&amp;amp; print &quot;X is set to abc&quot;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;To check if a variable is set to null, the -z option can be used:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    [[ —z $VAR ]] &amp;amp;&amp;amp; print &quot;VAR is set to null&quot;&lt;/span&gt;&lt;br /&gt;
 or it could be compared to the null string like this:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    [[ $VAR = &quot;&quot; ]] &amp;amp;&amp;amp; &quot;VAR is set to null&quot;&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id=&quot;_17_4_2_Checking_Patterns__24458779692309196&quot; name=&quot;_17_4_2_Checking_Patterns__24458779692309196&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;17.4.2 Checking Patterns&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h4&gt;
&lt;h4&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The Korn shell also lets you compare strings to patterns. We could check if X begins with a &#39;a&#39; like this:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ X=abc&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ [[ $X = a* ]] &amp;amp;&amp;amp; print &quot;$X matches a*&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    abc matches a*&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; Using the +([09]) pattern, we could check if X is set to a number:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ X=123&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ [[ $X = +([0—9]) ]] &amp;amp;&amp;amp; print &quot;$X is a number&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    123 is a number&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id=&quot;_17_4_3_Checking_File_Attribut_4279807512566526&quot; name=&quot;_17_4_3_Checking_File_Attribut_4279807512566526&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;17.4.3 Checking File Attributes&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h4&gt;
&lt;h4&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/p&gt;
&lt;div id=&quot;f9e-&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;
&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_176d9kt7dg6_b&quot; style=&quot;width:432px;height:572px;&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;
 The most basic operation to perform on a file is to see if it exists, and that can be done using the -a operator.&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ touch tmp&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ [[ —a tmp ]] &amp;amp;&amp;amp; print &quot;File tmp exists&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    File tmp exists&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This only indicates that it exists, but not much else. It may be a&lt;br /&gt;
directory, or a symbolic link, but using this operator, that&#39;s all we&lt;br /&gt;
know. If we wanted more information, the -f or -d operators could tell&lt;br /&gt;
us if a file existed and was a regular file (-f) or if it was just a&lt;br /&gt;
directory (-d).&lt;/p&gt;
&lt;h4&gt;&lt;a id=&quot;_17_4_4_Checking_Integer_Attri_07001292456862485&quot; name=&quot;_17_4_4_Checking_Integer_Attri_07001292456862485&quot;&gt;&lt;/a&gt;&lt;br /&gt;
 17.4.4 Checking Integer Attributes&lt;br /&gt;
&lt;/h4&gt;
&lt;div id=&quot;q-dl&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;
&lt;a href=&quot;http://docs.google.com/File?id=dd6nw3mt_177frb3r2c8_b&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_177frb3r2c8_b&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;
The [[...]] command provides a few integer operators that allow&lt;br /&gt;
integers to be compared. It is frequently used to check the number of&lt;br /&gt;
command-line arguments. This expression evaluates to true if there are&lt;br /&gt;
less than or equal to three positional parameters set:&lt;br /&gt;
 [[ $# —le 3 ]] &amp;amp;&amp;amp; print &quot;3 or less args given&quot;
&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;
The ((...)) command offers the same arithmetic comparison operators as&lt;br /&gt;
the [[...]] command, plus many others. Besides offering more arithmetic&lt;br /&gt;
operators, the ((...)) command provides substantial performance&lt;br /&gt;
improvements over the [[...]] and test commands.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id=&quot;_17_4_5_The_Operator__42667919512565855&quot; name=&quot;_17_4_5_The_Operator__42667919512565855&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;17.4.5 The ! Operator&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h4&gt;
&lt;h4&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The ! operator negates the result of any [[...]] expression when used like this:&lt;br /&gt;
&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;[[ ! &lt;i&gt;expression&lt;/i&gt; ]]&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;
 For example, to check if X is not equal to abc:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ X=xyz&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ [[ ! $X = abc ]] &amp;amp;&amp;amp; print &quot;$X not equals abc&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    xyz not equals abc&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;There is one logical operator that can only be implemented with the !&lt;br /&gt;
operator. There is no [[...]] file operator that will evaluate to true&lt;br /&gt;
on a zero-length file.&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ &amp;gt;emptyfile&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ [[ ! —s emptyfile ]] &amp;amp;&amp;amp; print &quot;emptyfile is empty&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;    emptyfile is empty&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h4&gt;&lt;a id=&quot;_17_4_6_Compound_Expressions_47728179982164753&quot; name=&quot;_17_4_6_Compound_Expressions_47728179982164753&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;
 17.4.6 Compound Expressions&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;
&lt;div id=&quot;l2r.&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_179fq89jwhp_b&quot; /&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;(1) &lt;b&gt;&amp;amp;&amp;amp;&lt;/b&gt; - The AND Operator&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;The &amp;amp;&amp;amp; operator is used with the [[...]] command to test if multiple expressions are true using this format:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;    [[ expression1 &amp;amp;&amp;amp; expression2 ]]&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;
 This expression checks if the noglob and noclobber options are set:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;    [[ —o noglob &amp;amp;&amp;amp; —o noclobber ]]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;(2) &lt;b&gt;||&lt;/b&gt; - The OR Operator&lt;br /&gt;The | | operator is used with the [[...]] command to test if expression1 OR expression2 are true using this format:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;    [[ expression1 | | expression2 ]]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h4&gt;&lt;a id=&quot;17_4_7_vs_test_and__7445772201941858&quot; name=&quot;17_4_7_vs_test_and__7445772201941858&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;17.4.7 [ [...] ] vs test and [...]&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The [[...]] command is preferred to test and [...], since many of the errors associated with test and [...] do not occur.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h2&gt;&lt;a id=&quot;_18_Control_Commands&quot; name=&quot;_18_Control_Commands&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;
&lt;i&gt;18 Control Commands&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id=&quot;18_1_The_case_command&quot; name=&quot;18_1_The_case_command&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;18.1 The case command&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The case command provides multiple-branch capability. The syntax for the case command is:
&lt;div id=&quot;of:d&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:401px;height:251px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_180dxmkc4d8_b&quot; /&gt;&lt;br /&gt;where value is compared to &lt;i&gt;pattern1, pattern2, ... patternn&lt;/i&gt;.&lt;/p&gt;
&lt;p&gt;The&lt;br /&gt;
same patterns used in file name substitution can also be used in case&lt;br /&gt;
statements to match patterns. The new Korn shell pattern matching&lt;br /&gt;
formats also allow multiple case patterns to be given like this:
&lt;div id=&quot;p2_e&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img style=&quot;width:613px;height:396px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_181fghtsb7m_b&quot; /&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id=&quot;18_2_The_for_Command&quot; name=&quot;18_2_The_for_Command&quot;&gt;&lt;/a&gt;18.2 The for Command&lt;/h3&gt;
&lt;p&gt;The basic syntax for the for command is:&lt;br /&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        for &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;variable&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt; in &lt;/span&gt;&lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;word1  word2 . . . wordn&lt;/span&gt;&lt;/i&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        do&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;                   &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt; &lt;/i&gt;&lt;i&gt;commands&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        done&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;
&lt;p&gt;File name substitution, command substitution, and variable substitution&lt;br /&gt;
can also be used to generate a list of word arguments for the for&lt;br /&gt;
command. The first line of the previous command could have been given&lt;br /&gt;
as:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;    for FILE in chap[1-3]&lt;/span&gt;&lt;br /&gt;or&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;    for FILE in $(ls chap[1-3])&lt;/span&gt;&lt;br /&gt;or&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;    CHAPS=$(ls chap[1-3])&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;    for FILE in $CHAPS&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;The &lt;b&gt;$* &lt;/b&gt;and &lt;b&gt;$@&lt;/b&gt; variables can be used to loop on command-line arguments like this:&lt;br /&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        for &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;variable&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt; in $*&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        do&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;                commands&lt;/span&gt;&lt;/i&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        done&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;The for command can also be used without the list of word arguments:&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        for &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;variable&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt; &lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Georgia;&quot;&gt;        do&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;
&lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;                commands&lt;/span&gt;&lt;/i&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Georgia;&quot;&gt;        done&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The commands are executed once for each positional parameter, and &lt;i&gt;variable&lt;/i&gt; is set to each successive positional parameter. It is equivalent to:&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;       for &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;variable&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt; in $@&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Georgia;&quot;&gt;        do&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;
&lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;                commands&lt;/span&gt;&lt;/i&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Georgia;&quot;&gt;        done&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;18_3_The_if_Command&quot; name=&quot;18_3_The_if_Command&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;18.3 The if Command&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The basic syntax of the if command is:&lt;br /&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        if &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;command1&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        then&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;                &lt;/span&gt;&lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;commands&lt;/span&gt;&lt;/i&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        &lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;elif &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;command2&lt;br /&gt;        &lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt; then&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;&lt;br /&gt;                commands&lt;br /&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        else&lt;br /&gt;                &lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;commands&lt;/span&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;br /&gt;        fi&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;18_4_The_while_Command&quot; name=&quot;18_4_The_while_Command&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;18.4 The while Command&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id=&quot;_while_command1_do_commands_do&quot; name=&quot;_while_command1_do_commands_do&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;font size=&quot;2&quot;&gt;        while &lt;i&gt;command1&lt;/i&gt;&lt;br /&gt;        do&lt;br /&gt;                &lt;i&gt;commands&lt;/i&gt;&lt;br /&gt;        done&lt;/font&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id=&quot;18_5_The_until_Command&quot; name=&quot;18_5_The_until_Command&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;18.5 The until Command&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id=&quot;The_until_command_is_another_l&quot; name=&quot;The_until_command_is_another_l&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;font size=&quot;2&quot;&gt;The&lt;br /&gt;
until command is another looping command. It&#39;s like the while command,&lt;br /&gt;
except that instead of looping while the condition is true, it loops&lt;br /&gt;
while the condition is false. The syntax for the until command is:&lt;br /&gt;&lt;b&gt;        until &lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;command1&lt;/span&gt;&lt;/i&gt;&lt;b&gt;&lt;br /&gt;        do&lt;br /&gt;                &lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;commands&lt;/span&gt;&lt;/i&gt;&lt;b&gt;&lt;br /&gt;        done&lt;/b&gt;&lt;br /&gt;where commands are executed until command1 returns a zero exit status.&lt;/font&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id=&quot;18_6_Breaking_Out_of_Loops&quot; name=&quot;18_6_Breaking_Out_of_Loops&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;18.6 Breaking Out of Loops&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;break&lt;/b&gt; command  causes an exit from a loop-type command, but not from the entire script.&lt;/p&gt;
&lt;p&gt;The break command can also be used to exit from a nested loop using this format:&lt;br /&gt;&lt;b&gt;        break &lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;n&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;where &lt;/span&gt;&lt;/span&gt;&lt;u&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt; &lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;n&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;u&gt; specifies the &lt;i&gt;n&lt;/i&gt;th enclosing loop to exit from&lt;/u&gt;.&lt;br /&gt;Here is a new version of the nloop script that breaks out of both loops if i equals 2 and j equals 0:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;$ cat nloop&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;for i in 1 2 3&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;do&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;    for j in 0 5&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;    do&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;        if ((i == 2 &amp;amp;&amp;amp; j == 0))&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;        then&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;            break 2&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;        else&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;            print &quot;$i$j&quot;&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;        fi&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;    done&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;done&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Now the output would be:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;    $ nloop&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;    10&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;    15&lt;/span&gt;&lt;br /&gt;If&lt;br /&gt;
break was used instead of break 2, then only the inner for loop would&lt;br /&gt;
have been terminated, and execution would have continued with i set to&lt;br /&gt;
3 in the outer loop, and j set to 0 in the inner loop.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;18_7_The_continue_Command&quot; name=&quot;18_7_The_continue_Command&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;18.7 The continue Command&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The &lt;b&gt;continue&lt;/b&gt; command causes execution to continue at the top of the current loop.&lt;/p&gt;
&lt;p&gt;18.8 The select Command&lt;br /&gt;The &lt;b&gt;select &lt;/b&gt;command&lt;br /&gt;
is used to display a simple menu that contains numbered items, and a&lt;br /&gt;
prompt message. The syntax for the select command is:&lt;/p&gt;
&lt;p&gt;&lt;b&gt;        select &lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;variable &lt;/i&gt;&lt;/span&gt;&lt;b&gt;in &lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;word1 word2 . . . wordn&lt;/span&gt;&lt;/i&gt;&lt;b&gt;&lt;br /&gt;        do&lt;br /&gt;                &lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;commands&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;br /&gt;        done&lt;/b&gt;&lt;br /&gt;where &lt;i&gt;word1&lt;/i&gt; through &lt;i&gt;wordn&lt;/i&gt; are displayed as numbered menu choices followed by a prompt (default #?). &lt;/p&gt;
&lt;p&gt;&lt;u&gt;If the response is in the range 1 through n, then &lt;i&gt;variable&lt;/i&gt; is set to the corresponding word, &lt;b&gt;REPLY&lt;/b&gt; is set to the response, and the commands are executed.&lt;/u&gt; Execution continues until a break, exit, return, or EOF is encountered.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;18.8 The select Command&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The&lt;br /&gt;
select command is used to display a simple menu that contains numbered&lt;br /&gt;
items, and a prompt message. The syntax for the select command is:&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;select &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;variable&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt; in &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;word1 word2 . . . wordn&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;do&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;
&lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;commands&lt;/span&gt;&lt;/i&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;done&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;where &lt;i&gt;word1&lt;/i&gt; through &lt;i&gt;wordn &lt;/i&gt;are displayed as numbered menu choices followed by a prompt (default #?). If the response is in the range 1 through n, then &lt;i&gt;variable&lt;/i&gt; is set to the corresponding word, &lt;b&gt;REPLY&lt;/b&gt; is set to the response, and the &lt;i&gt;commands&lt;/i&gt; are executed. Execution continues until a &lt;b&gt;break&lt;/b&gt;, &lt;b&gt;exit&lt;/b&gt;, &lt;b&gt;return&lt;/b&gt;, or &lt;b&gt;EOF&lt;/b&gt; is encountered.&lt;/p&gt;
&lt;p&gt;The &lt;b&gt;select&lt;/b&gt; command can also be used without the list of word arguments:&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;span&gt;   &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;select &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;variable&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt; &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;do&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;
&lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;commands&lt;/span&gt;&lt;/i&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;done&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;It&lt;br /&gt;
functions the same way as the previous select syntax, except that the&lt;br /&gt;
positional parameters are displayed as numbered menu choices from 1 to&lt;br /&gt;
n, instead of the words from the word list. It is equivalent to:&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;span&gt;   &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;select &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;variable&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt; in &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;&quot;$@&quot;&lt;/i&gt;&lt;/span&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;do&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;
&lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;commands&lt;/span&gt;&lt;/i&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;done&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>korn Shell Notes(III)</title>
   <link href="http://bo-yang.github.com//2008/11/26/kshell-note-3"/>
   <updated>2008-11-26T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/11/26/kshell-note-3</id>
   <content type="html">&lt;p&gt;
     &lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-family:Verdana;font-size:13px;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;font-size:19px;font-style:italic;font-weight:bold;&quot;&gt;6 Variables&lt;/span&gt;
&lt;div id=&quot;xcw:&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;
&lt;div style=&quot;text-align:left;margin-top:0;margin-bottom:0;&quot;&gt;The Korn shell supports four data types: string, integer, float, and array. If a data type is not explicitly defined, the Korn shell will assume that the variable is a string.&lt;/p&gt;
&lt;p&gt;The typeset command can also be used to assign values.&lt;/p&gt;
&lt;p&gt;If a value is not given, the variable is set to null. Here, X is reassigned the null value:&lt;br /&gt;    &lt;b&gt;$ X=&lt;/b&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;6_1_Variable_Attributes_148016&quot; id=&quot;6_1_Variable_Attributes_148016&quot;&gt;&lt;/a&gt;6.1 Variable Attributes&lt;/h3&gt;
&lt;p&gt;Korn shell variables can have one or more attributes that specify their internal representation, access or scope, or the way they are displayed.Variables can be set to integer type for faster arithmetic operations, read-only so that the value cannot be changed, left/right justified for formatting purposes, and more. To assign a value and/or attribute to a Korn shell variable, use the following format with the typeset command:&lt;br /&gt;    &lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;typeset-attribute variable=value&lt;/span&gt;&lt;br /&gt;or&lt;br /&gt;    t&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;ypeset-attribute variable&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Except for readonly, variable attributes can be set before, during, or after assignment. Functionally it makes no difference. Just remember that &lt;b&gt;the attribute has precedence over the value&lt;/b&gt;. This means that if you change the attribute after a value has been assigned, the value may be affected.&lt;/p&gt;
&lt;div id=&quot;lfds&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_157c3wjn8fw_b&quot; style=&quot;width:551px;height:233px;&quot; /&gt;&lt;/p&gt;
&lt;div id=&quot;yo2l&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_159thjp23gb_b&quot; style=&quot;width:414px;height:546px;&quot; /&gt;&lt;/div&gt;
&lt;p&gt;&lt;/div&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;6_2_Lowercase_l_and_Uppercase_&quot; id=&quot;6_2_Lowercase_l_and_Uppercase_&quot;&gt;&lt;/a&gt;6.2 Lowercase (-l) and Uppercase (-u) Attributes&lt;/h3&gt;
&lt;p&gt;These attributes cause the variable values to be changed to lower or uppercase. For example, the lowercase attribute and uppercase value ASPD are assigned to variable MYSYS:&lt;br /&gt;    &lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;$ typeset —l MYSYS=ASPD&lt;/span&gt;&lt;br /&gt;Despite the fact that MYSYS was assigned uppercase ASPD, when accessed, the value is displayed in lowercase:&lt;br /&gt;    &lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;$ print $MYSYS&lt;/span&gt;&lt;br /&gt;    &lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;aspd&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;This is because the attribute affects the variable value, regardless of the assignment. Variable attributes can also be changed after assignment. If we wanted to display variable MYSYS in uppercase, we could just reset the attribute:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset —u MYSYS&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $MYSYS&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    ASPD&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;6_3_Readonly_r_Attribute_58026&quot; id=&quot;6_3_Readonly_r_Attribute_58026&quot;&gt;&lt;/a&gt;6.3 Readonly (-r) Attribute&lt;/h3&gt;
&lt;p&gt;Once the readonly attribute is set, a variable cannot be assigned another value. Here, we use it to set up a restricted PATH:&lt;br /&gt;    &lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;$ typeset —r PATH=/usr/rbin&lt;/span&gt;&lt;br /&gt;If there is an attempt to reset PATH, an error message is generated:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ PATH=$PATH:/usr/bin:&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    /bin/ksh: PATH: is read only&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Unlike other variable attributes, once the readonly attribute is set, it cannot be removed.&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;6_4_Integer_i_Attribute_906875&quot; id=&quot;6_4_Integer_i_Attribute_906875&quot;&gt;&lt;/a&gt;6.4 Integer (-i) Attribute&lt;/h3&gt;
&lt;p&gt;The integer attribute (-i) is used to explicitly declare integer variables. Although it is not necessary to set this attribute when assigning integer values, there are some benefits to it.&lt;/p&gt;
&lt;p&gt;There is one restriction on integer variables. Once a variable is set to integer type, it can&#39;t be assigned a non-integer value:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset —i NUM=abc&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    /bin/ksh: NUM: bad number&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;6_5_The_Float_E_F_Attribute_26&quot; id=&quot;6_5_The_Float_E_F_Attribute_26&quot;&gt;&lt;/a&gt;6.5 The Float (-E, -F) Attribute&lt;/h3&gt;
&lt;p&gt;The float attributes (-E, -F) are used to declare float variables. The -E is used to specify the number of significant digits, while -F is used to specify the precision. In the following example, X is set to a float variable and assigned a value using both formats:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset —E5 X=123.456&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $X&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    123.46&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset —F5 X=123.456&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $X&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    123.45600&lt;/span&gt;&lt;br /&gt;The float command can also be used to declare a float variable, but does not allow for specifying the precision.&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;6_6_Right_R_and_Left_L_Justify&quot; id=&quot;6_6_Right_R_and_Left_L_Justify&quot;&gt;&lt;/a&gt;6.6 Right (-R) and Left (-L) Justify Attributes&lt;/h3&gt;
&lt;p&gt;The right and left justify attributes cause variable values to be justified within their width and are be used to format data. Here, variables A and B are set to right-justify with a field width of 7 characters. Notice that integer values are used, even though the integer attribute is not set.
&lt;div id=&quot;yn69&quot; style=&quot;text-align:left;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;/div&gt;
&lt;div id=&quot;yn69&quot; style=&quot;text-align:left;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;    &lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_158g2383sgc_b&quot; style=&quot;width:316px;height:120px;&quot; /&gt;&lt;br /&gt;If the field width is not large enough for the variable assignment, the value gets truncated. Variable X is assigned a seven-character wide value, but the field width is set to 3, so the first four characters are lost:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset —R3 X=ABCDEFG&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $X&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    EFG&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;If a field width is not given, then it is set with the first variable assignment. Variable Y is assigned a three-character wide value, so the field width is set to 3.&lt;/span&gt;&lt;br /&gt;    $ typeset —L Y=ABC&lt;br /&gt;    $ print $Y&lt;br /&gt;    ABC&lt;br /&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Without explicitly resetting the field width, a subsequent assignment would be restricted to a three-character wide value:&lt;/span&gt;&lt;br /&gt;    $ Y=ZYXWVUT&lt;br /&gt;    $ print $Y&lt;br /&gt;    ZYX&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;6_7_Autoexport_x_Attribute_977&quot; id=&quot;6_7_Autoexport_x_Attribute_977&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;6.7 Autoexport (-x) Attribute&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;It allows you to set and export a variable in one command. Instead of&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset X=abc&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ export X&lt;/span&gt;&lt;br /&gt;you can do this:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset —x X=abc&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;We could use this attribute to add the /lbin directory to the &lt;b&gt;PATH&lt;/b&gt; variable and export it all in one command:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset —x PATH=$PATH:/lbin&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;6_8_Removing_Variable_Attribut&quot; id=&quot;6_8_Removing_Variable_Attribut&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;6.8 Removing Variable Attributes&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Except for readonly, variable attributes are removed with the &lt;b&gt;typeset +&lt;/b&gt;&lt;i&gt;attribute&lt;/i&gt; command. Assuming that the integer attribute was set on the NUM variable, we could remove it like this:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset +i NUM&lt;/span&gt;&lt;br /&gt;and then reassign it a non-integer value:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ NUM=abc&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;b&gt;Once the readonly attribute is set, it cannot be removed&lt;/b&gt;. When we try to do this with the PATH variable that was previously set, we get an error message:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset +r PATH&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    /bin/ksh: PATH: is read only&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;The only way to reassign a readonly variable is to unset it first, then assign a value from scratch.&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;6_9_Checking_Variable_Attribut&quot; id=&quot;6_9_Checking_Variable_Attribut&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;6.9 Checking Variable Attributes&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Attributes of Korn shell variables are listed using the typeset -&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;attribute&lt;/span&gt;&lt;/i&gt; command. For example, to list all the integer type variables and their values:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset —i&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    ERRNO=0&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    MAILCHECK=600&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    PPID=177&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    RANDOM=22272&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    SECONDS=4558&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    TMOUT=0&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;To list only the names of variables with a specific attribute, use the typeset +&lt;i&gt;attribute&lt;/i&gt; command.&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;6_10_More_with_Variables_38599&quot; id=&quot;6_10_More_with_Variables_38599&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;6.10 More with Variables&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;You can do other things with variables, such as assign them the value of another variable, the output of a command, or even the contents of a file.&lt;/p&gt;
&lt;p&gt;Variables can be assigned command output using this format:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;   &lt;b&gt; &lt;/b&gt;&lt;b&gt;variable=$(command)&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;or&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    &lt;b&gt;variable=`command`&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The second format is provided for compatibility with the Bourne shell. Here, UCSC is set to its internet ID by assigning the output of the grep and cut commands:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ UCSC=$(grep UCSC /etc/hosts | cut —f1 —d&quot; &quot;)&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $UCSC&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    128.114.129.1&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Variables can also be assigned the contents of files like this:&lt;br /&gt;&lt;b&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    variable=$(&amp;lt;file)&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;or&lt;br /&gt;&lt;b&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    variable=`cat file`&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;The first format is equivalent to variable=$(cat file). The second format is much slower, but is provided for compatibility with the Bourne shell.&lt;/p&gt;
&lt;p&gt;A &lt;b&gt;nameref&lt;/b&gt; variable is a synonym for another variable and will always have the same value as its associated variable They are created using the following formats:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    &lt;b&gt;nameref &lt;/b&gt;&lt;i&gt;nameref_variable=variable&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;or&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    &lt;b&gt;typeset&lt;/b&gt; &lt;b&gt;-n&lt;/b&gt; &lt;i&gt;nameref_variable=variable&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;For example:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ X=abc&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ nameref Y=X&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $X&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    abc&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $Y&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    abc&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;6_11_Unsetting_Variables_82193&quot; id=&quot;6_11_Unsetting_Variables_82193&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;6.11 Unsetting Variables&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Variable definitions are removed using the &lt;b&gt;unset&lt;/b&gt; command. This is not the same as being set to null.&lt;/p&gt;
&lt;p&gt;Unsetting either the base or nameref variable will unset both variables.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;a name=&quot;7_Special_Parameters_155685234&quot; id=&quot;7_Special_Parameters_155685234&quot;&gt;&lt;/a&gt;&lt;i&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;7 Special Parameters&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/i&gt;&lt;/h2&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;
&lt;div id=&quot;mgds&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_160d8q2vnf3_b&quot; style=&quot;width:537px;height:285px;&quot; /&gt;&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;7_1_The_Parameter_882457770205&quot; id=&quot;7_1_The_Parameter_882457770205&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;7.1 The ? Parameter&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The ? parameter contains the exit status of the last executed command. In this example, the date command is executed. It ran successfully, so the exit status is 0:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ date +%D&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    05/24/96&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $?&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    0&lt;/span&gt;&lt;br /&gt;When used with a pipe, $? contains the exit status of the last command in the pipeline.&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;7_2_The_Parameter_996378622698&quot; id=&quot;7_2_The_Parameter_996378622698&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;7.2 The $ Parameter&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The $ parameter contains the process id of the current shell.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $$&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    178&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;It is useful in creating unique file names within Korn shell scripts.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ touch $0.$$&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ ls *.*&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    ksh.218&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;7_3_Other_Special_Parameters_5&quot; id=&quot;7_3_Other_Special_Parameters_5&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;7.3 Other Special Parameters&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The &lt;b&gt;-&lt;/b&gt; parameter contains the current options in effect. The output of the next command shows that the interactive and monitor options are enabled:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $—&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    im&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;To display the error number of the last failed system call, use the &lt;b&gt;ERRNO&lt;/b&gt; variable. Here, an attempt to display a non-existent file returns an error, so ERRNO is checked for the error number:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ cat tmp.out&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    tmp.out: No such file or directory&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $ERRNO&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    2&lt;br /&gt;&lt;/span&gt;This is system dependent, so it may not be available on your system. Check your documentation or /usr/include/sys/errno.h for more information.&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;a name=&quot;8_Variable_Expansion_888811139&quot; id=&quot;8_Variable_Expansion_888811139&quot;&gt;&lt;/a&gt;&lt;i&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;8 Variable Expansion&lt;/span&gt;&lt;/span&gt;&lt;/i&gt;&lt;/h2&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Variable expansion is the term used for the ability to access and manipulate values of variables and parameters. Basic expansion is done by preceding the variable or parameter name with the $ character. This provides access to the value.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ UULIB=/usr/lib/uucp&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $UULIB&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    /usr/lib/uucp&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;Other types of expansion can be used to return portions or the length of variables, use default or alternate values, check for mandatory setting, and more.&lt;/p&gt;
&lt;p&gt;For the sake of convenience, the term &lt;i&gt;variable&lt;/i&gt; will refer to both variables and parameters in the following sections that discuss variable expansion.
&lt;div id=&quot;b4k6&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;a href=&quot;http://docs.google.com/File?id=dd6nw3mt_161fp2b4mfg_b&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_161fp2b4mfg_b&quot; style=&quot;width:427px;height:711px;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;
&lt;div id=&quot;azy1&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_162fmx9j6d6_b&quot; style=&quot;width:411px;height:465px;&quot; /&gt;&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;8_1_variable_variable_01009047&quot; id=&quot;8_1_variable_variable_01009047&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;8.1 $variable, ${variable}&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;u&gt;This is expanded to the value of variable&lt;/u&gt;. The braces are used to protect or delimit the variable name from any characters that follow. The next example illustrates why braces are used in variable expansion. The variable CA is set to ca:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ CA=ca&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;What if we wanted to reset CA to california? It could be reset to the entire value, but to make a point, let&#39;s try using the current value like this:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ CA=$CAlifornia&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $CA&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;Nothing is printed, because without the braces around the variable CA, the Korn shell looks for a variable named $CAlifornia. None is found, so nothing is substituted. With the braces around variable CA, we get the correct value:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ CA=${CA}lifornia&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $CA&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    california&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;Braces are also needed when attempting to expand positional parameters greater than 9. This ensures that both digits are interpreted as the positional parameter name.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;8_2_variable_45711572132405753&quot; id=&quot;8_2_variable_45711572132405753&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;8.2 ${#&lt;i&gt;variable&lt;/i&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;u&gt;This is expanded to the length of variable.&lt;/u&gt; In this example, X is set to a three-character string, so a length of 3 is returned:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ X=abc&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${#X}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    3&lt;/span&gt;&lt;br /&gt;Whitespace in variable values is also counted as characters.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;8_3_variable_word_variable_wor&quot; id=&quot;8_3_variable_word_variable_wor&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;8.3 ${&lt;i&gt;variable:-word&lt;/i&gt;}, ${&lt;i&gt;variable-word&lt;/i&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;u&gt;This is expanded to the value of variable if it is set and &lt;b&gt;not null&lt;/b&gt;&lt;/u&gt;, otherwise word is expanded. &lt;b&gt;This is used to provide a default value if a variable is not set.&lt;/b&gt; In the following example, the variable X is set to abc. When expanded using this format, the default value abc is used:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ X=abc&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${X:—cde}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    abc&lt;/span&gt;&lt;br /&gt;After X is unset, the alternate value cde is used:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ unset X&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${X:—cde}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    cde&lt;/span&gt;&lt;br /&gt;Notice that the value of X remains unchanged:&lt;br /&gt;$ print $X&lt;br /&gt;$&lt;/p&gt;
&lt;p&gt;Let&#39;s say we needed a command to get the user name. The problem is that some people have it set to USER, while others have it set to LOGNAME. We could use an if command to check one value first, then the other. This would be quite a few lines of code. Or we could use this form of variable expansion to have both values checked with one command. Here, if USER is set, then its value is displayed, otherwise the value of LOGNAME is displayed.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print USER=$USER, LOGNAME=$LOGNAME&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    USER=anatole, LOGNAME=AO&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${USER:—${LOGNAME}}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    anatole&lt;/span&gt;&lt;br /&gt;Now we unset USER to check and make sure that LOGNAME is used:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ unset USER&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${USER:—${LOGNAME}}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    AO&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;But what if both USER and LOGNAME are not set? Another variable could be checked like this:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ unset USER LOGNAME&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${USER:-${LOGNAME:-USER and LOGNAME not set!}}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    USER and LOGNAME not set!&lt;/span&gt;&lt;br /&gt;Or&lt;br /&gt;$ print ${USER—${LOGNAME:—$(whoami)}}&lt;br /&gt;anatole&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Remember that the alternate value is only used and not assigned to anything. &lt;/b&gt;The other format, &lt;u&gt;${variable-word}, causes the variable value to be used, even if it is set to null:&lt;/u&gt;&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset X=&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${X-cde}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;8_4_variable_word_variable_wor_12497100047767162&quot; id=&quot;8_4_variable_word_variable_wor_12497100047767162&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;8.4 ${&lt;i&gt;variable&lt;/i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;:=&lt;/span&gt;&lt;i&gt;word&lt;/i&gt;}, ${&lt;i&gt;variable&lt;/i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;=&lt;/span&gt;&lt;i&gt;word&lt;/i&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;u&gt;This is expanded to the value of variable &lt;b&gt;if set and not null&lt;/b&gt;, otherwise it is set to word, then expande&lt;/u&gt;d. In contrast to the variable expansion format from the previous section, this format is used to assign a default value if one is not already set. In the next example, the variable LBIN is set to /usr/lbin. When expanded using this format, the default value /usr/lbin is used:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ LBIN=/usr/lbin&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${LBIN:=/usr/local/bin}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    /usr/lbin&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;After LBIN is unset, this form of variable expansion causes LBIN to be assigned the alternate value, /usr/local/bin:&lt;br /&gt;$ unset LBIN&lt;br /&gt;$ print ${LBIN:=/usr/local/bin}&lt;br /&gt;/usr/local/bin&lt;/p&gt;
&lt;p&gt;Command substitution can also be used in place of &lt;i&gt;word&lt;/i&gt;. This command sets the SYS variable using only one command:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ unset SYS&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${SYS:=$(hostname)}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    aspd&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The other format, &lt;u&gt;&lt;b&gt;${&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;variable=word&lt;/span&gt;&lt;/i&gt;}&lt;/b&gt;, &lt;span style=&quot;color:rgb(255,0,0);&quot;&gt;causes the variable value to be used, even if it is set to null&lt;/span&gt;&lt;/u&gt;. Here LBIN is not assigned an alternate value. &lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;If := was used instead of =, then LBIN would be set to /usr/local/bin:&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ LBIN=&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${LBIN=/usr/local/bin}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;8_5_variable_word_variable_var_9760769000276923&quot; id=&quot;8_5_variable_word_variable_var_9760769000276923&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;8.5 ${&lt;i&gt;variable&lt;/i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;:?&lt;/span&gt;&lt;i&gt;word&lt;/i&gt;}, ${&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;variable&lt;/span&gt;&lt;/i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;:?&lt;/span&gt;}; ${&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;variable&lt;/span&gt;&lt;/i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;?&lt;/span&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;word&lt;/span&gt;&lt;/i&gt;}, ${&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;variable&lt;/span&gt;&lt;/i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;?&lt;/span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;u&gt;This is expanded to the value of variable &lt;b&gt;if it is set and not null&lt;/b&gt;, otherwise word is printed and the Korn shell exits&lt;/u&gt;. If word is omitted, &quot;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;parameter null or not set&lt;/span&gt;&lt;/b&gt;&quot; is printed. This feature is often used in Korn shell scripts to check if mandatory variables are set. In this example, variable XBIN is first unset. When expanded, the default error is printed:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ unset XBIN&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ : ${XBIN:?}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    /bin/ksh: XBIN: parameter null or not set&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;You could also provide your own error message:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${XBIN:?Oh my God, XBIN is not set!}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    /bin/ksh: XBIN: Oh my God, XBIN is not set!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The other formats, &lt;u&gt;&lt;b&gt;${variable?word}&lt;/b&gt; and&lt;b&gt; ${variable?}&lt;/b&gt;, cause the variable value to be used, even if it is set to null&lt;/u&gt;.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;8_6_variable_word_variable_wor_5404786737635732&quot; id=&quot;8_6_variable_word_variable_wor_5404786737635732&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;8.6 &lt;span style=&quot;font-family:Georgia;&quot;&gt;${&lt;i&gt;variable&lt;/i&gt;:+&lt;i&gt;word &lt;/i&gt;}, ${&lt;i&gt;variable&lt;/i&gt;+&lt;i&gt;word&lt;/i&gt; }&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;u&gt;This is expanded to the value of word if variable is set and not null, otherwise nothing is substituted.&lt;/u&gt; This is basically the opposite of the &lt;span style=&quot;font-family:Georgia;&quot;&gt;${&lt;i&gt;variable&lt;/i&gt;:-&lt;i&gt;word&lt;/i&gt;}&lt;/span&gt; format. Instead of using &lt;i&gt;word&lt;/i&gt; if variable is not set, &lt;i&gt;word &lt;/i&gt;&lt;span style=&quot;color:rgb(255,0,0);&quot;&gt;is used if variable is set&lt;/span&gt;. In the first example Y is set to abc. When expanded, the alternate value def is displayed because Y is set:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ Y=abc&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${Y:+def}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    def&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;Here, Y is unset. Now when expanded, nothing is displayed:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ unset Y&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${Y:+def}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Like the ${variable:-word} format, &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;the alternate value is only used and not assigned to the variable&lt;/span&gt;. Y is still set to null:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $Y&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The other format, &lt;u&gt;${variable+word}, causes the variable value to be used, even if it is set to null&lt;/u&gt;:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ Y=&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${Y+def}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    def&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;8_7_variable_pattern_variable__9965686993673444&quot; id=&quot;8_7_variable_pattern_variable__9965686993673444&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;8.7 ${&lt;i&gt;variable&lt;/i&gt;#&lt;i&gt;pattern&lt;/i&gt;}, ${&lt;i&gt;variable&lt;/i&gt;##&lt;i&gt;pattern&lt;/i&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;u&gt;This is expanded to the value of variable with the smallest (#) or largest (##) part of the left matched by &lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;pattern&lt;/span&gt;&lt;/i&gt; deleted.&lt;/u&gt; What these expansion formats allow you to do is manipulate substrings. To demonstrate the basic functionality, X is set to a string that contains a recurring pattern: abcabcabc.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ X=abcabcabc&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;br /&gt;When expanded to return the substring that deletes the smallest left pattern abc, we get abcabc:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${X#abc*}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    abcabc&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;while the substring that deletes the largest left pattern abc is abcabcabc, or the entire string:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${X##abc*}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We could use this concept to implement the Korn shell version of the UNIX &lt;b&gt;basename&lt;/b&gt; command. The pattern in this command causes the last directory to be returned if variable X is set to&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt; a full pathname:&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ X=/usr/spool/cron&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${X##*/}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    cron&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;8_8_variable_pattern_variable__9711597748100758&quot; id=&quot;8_8_variable_pattern_variable__9711597748100758&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;8.8&lt;span style=&quot;font-family:Georgia;&quot;&gt; ${&lt;i&gt;variable&lt;/i&gt;%&lt;i&gt;pattern&lt;/i&gt;}, ${&lt;i&gt;variable&lt;/i&gt;%%&lt;i&gt;pattern&lt;/i&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;u&gt;This is expanded to the value of variable with the smallest (%) or largest (%%) part of the right matched by pattern deleted.&lt;/u&gt; It could also be used to display file names without their .suffixes:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ X=file.Z&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${X%.*}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    file&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The pattern in this command causes it to act like the UNIX dirname command. Everything except the last directory is returned if variable X is set to a full pathname.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ X=/usr/spool/cron&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${X%/*}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    /usr/spool&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;8_9_variable_pattern1_pattern2_647486001253128&quot; id=&quot;8_9_variable_pattern1_pattern2_647486001253128&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;8.9 ${variable//pattern1/pattern2}, &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;${variable/pattern1/pattern2}; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;${variable#pattern1/pattern2},&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;${variable/%pattern1/pattern2}&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The Korn shell supports four search and replace operations on variables. This example changes all occurrences of abc in X to xyz:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ X=abcabcabc&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${X//abc/xyz}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    xyzxyzxyz&lt;/span&gt;&lt;br /&gt;while this one only changes the first occurrence of abc in X to xyz:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ X=abcabcabc&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${X/abc/xyz}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    xyzabcabc&lt;/span&gt;&lt;br /&gt;See Table 3.6 for detailed explanation of the other formats.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;8_10_variable_start_variable_s&quot; id=&quot;8_10_variable_start_variable_s&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;8.10 ${variable:start}, ${variable:start:length}&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;This format returns a substring. The first returns variable from character position start to end, while the second returns length characters from variable from character position start to end. For example, this returns the first 3 characters of X:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ X=abcdefghij&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print {$X:0:3}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    abc&lt;/span&gt;&lt;br /&gt;while this example returns the value of X starting at character position 5:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ X=abcdefghij&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print {$X:5}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    fghij&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;a name=&quot;9_Array_Variables_111484066583_7120619406923652&quot; id=&quot;9_Array_Variables_111484066583_7120619406923652&quot;&gt;&lt;/a&gt;&lt;i&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;9 Array Variables&lt;/span&gt;&lt;/span&gt;&lt;/i&gt;&lt;/h2&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Arrays can have a maximum of 4096 elements. Array subscripts start at 0 and go up to 4096 (or the maximum element minus one). Any variable can become a one-dimensional array by simply referring to it with a subscript.&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;9_1_Array_Variable_Assignments_8827508166432381&quot; id=&quot;9_1_Array_Variable_Assignments_8827508166432381&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;9.1 Array Variable Assignments &amp;amp; Declarations&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Arrays can be assigned values by using normal variable assignment statements, the &lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;set -A&lt;/span&gt;&lt;/b&gt; command, or the &lt;b&gt;typeset&lt;/b&gt; command:&lt;br /&gt;&lt;i&gt;        variable[0]=value variable[1]=value . . . variable[n]=value&lt;/i&gt;&lt;br /&gt;or&lt;br /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;        set -A &lt;/b&gt;&lt;i&gt;variable value0 value1 . . . valuen&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;or&lt;br /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;        typeset&lt;/b&gt; &lt;i&gt;variable[0]=value variable[1]=value . . .  variable[n]=value&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The only difference between the formats, is that with the set command format, the values are assigned to the array variable sequentially starting from element zero. In the other formats, the array elements can be assigned values in any order.&lt;/p&gt;
&lt;p&gt;Not all the elements of an array need to exist. You can assign values to non-successive elements of an array.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;9_2_Array_Variable_Expansion_6_4298841701820493&quot; id=&quot;9_2_Array_Variable_Expansion_6_4298841701820493&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;9.2 Array Variable Expansion&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;
&lt;div id=&quot;nazz&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_163hqbxwc94_b&quot; style=&quot;width:525px;height:454px;&quot; /&gt;&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Array variables are expanded in the same manner as normal variables and parameters: using the $ character. Without a subscript value, an array variable refers to the first element, or element 0.&lt;/p&gt;
&lt;p&gt;To access the value of a specific array variable element use a subscript. Array variable names and subscripts must be enclosed in braces for proper expansion:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${DAY[3]} ${DAY[5]}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    Thu Sat&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;All the elements of an array can be accessed by using the * or @ as the subscript value. They both return the same value.&lt;/p&gt;
&lt;p&gt;The number of elements of an array variable is returned by using the # in front of the array variable name and using * or @ as the subscript value.&lt;/p&gt;
&lt;p&gt;To get values for a subset of an array, use this format:&lt;br /&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        ${&lt;i&gt;variable&lt;/i&gt;[*]:&lt;i&gt;start_subscript&lt;/i&gt;:&lt;i&gt;num_elements&lt;/i&gt;}&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;or&lt;br /&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;        ${&lt;i&gt;variable&lt;/i&gt;[@]:&lt;i&gt;start_subscript&lt;/i&gt;}&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Arithmetic expressions can be used to return a subscript value. Variable expansion can also be used to generate a subscript value.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;9_3_Array_Variable_Attributes__8870758265256882&quot; id=&quot;9_3_Array_Variable_Attributes__8870758265256882&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;9.3 Array Variable Attributes&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Arrays can also be declared, and assigned values and attributes with the typeset command:&lt;br /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;                typeset&lt;/b&gt;&lt;/span&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt; -attribute variable[0]=value variable[1]=value . . .&lt;/span&gt;&lt;/i&gt;&lt;br /&gt;Once set, attributes apply to all elements of an array. This example sets the uppercase attribute for the DAY array variable using the &lt;b&gt;typeset -u&lt;/b&gt; command:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;        $ typeset —u DAY&lt;/span&gt;&lt;br /&gt;Now all the element values are displayed in upper case:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;        &lt;b&gt;$ print ${DAY[*]}&lt;/b&gt; &lt;b&gt;&lt;span style=&quot;color:rgb(56,118,29);&quot;&gt;#Pay attention to usage.&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;        MON TUE WED THU FRI SAT SUN&lt;/span&gt;&lt;br /&gt;Array element attributes can be set before or after assignment.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;9_4_Array_Variable_Reassignmen_9427135931327939&quot; id=&quot;9_4_Array_Variable_Reassignmen_9427135931327939&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;9.4 Array Variable Reassignments&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Besides using regular &lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;array-element&lt;/i&gt;[n]=&lt;i&gt;value&lt;/i&gt;&lt;/span&gt; or &lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;typeset&lt;/b&gt; &lt;i&gt;arrayelement&lt;/i&gt;[n]=&lt;i&gt;value&lt;/i&gt;&lt;/span&gt; syntax to reassign values, array variables can also have their values reassigned with the set +A command:&lt;br /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;set +A &lt;/b&gt;&lt;i&gt;variable value0 value1 . . .&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;9_5_Associative_Arrays_1665451_4800594123080373&quot; id=&quot;9_5_Associative_Arrays_1665451_4800594123080373&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;9.5 Associative Arrays&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;u&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Associative &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;u&gt;arrays use string subscripts rather than integer subscripts.&lt;/u&gt; Associative arrays are declared using this format:&lt;br /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;                typeset -A&lt;/b&gt; &lt;i&gt;variable&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;where &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;i&gt;variable&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt; is the name of the associative array. Additional arguments can be given to the &lt;b&gt;typeset &lt;/b&gt;command to specify a data type. For example, we can create an associative array to store some exchange rates:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset -AE exchange_rate&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ exchange_rate[&quot;DM&quot;]=1.7&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ exchange_rate[&quot;FF&quot;]=.15&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ exchange_rate[&quot;AS&quot;]=.04&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;To display a list of associative array subscripts:&lt;br /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;               &lt;b&gt; &lt;/b&gt;&lt;b&gt;${!&lt;i&gt;variable&lt;/i&gt;[*]} &lt;/b&gt; &lt;span style=&quot;font-family:Verdana;&quot;&gt;or&lt;/span&gt;  &lt;b&gt;${!&lt;i&gt;variable&lt;/i&gt;[@]}&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;To display the values for all or parts of an associative array:&lt;br /&gt;        &lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;${!&lt;i&gt;variable&lt;/i&gt;[&lt;i&gt;subscript&lt;/i&gt;]}&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;For example, all and a specific exchange rate is displayed here:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print ${!exchange_rate[*]}&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    0.15 1.7&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print &quot;The DM exchange rate is:${exchange_rate[DM]}&quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    1.7&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;a name=&quot;10_Compound_Variables_21190555_19111895095556974&quot; id=&quot;10_Compound_Variables_21190555_19111895095556974&quot;&gt;&lt;/a&gt;&lt;i&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;10 Compound Variables&lt;/span&gt;&lt;/span&gt;&lt;/i&gt;&lt;/h2&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Compound Variables is a meta-datatype which is a group of related values. The syntax for declaring compund variables is:&lt;br /&gt;&lt;i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;    compound_variable&lt;/span&gt;&lt;/b&gt;&lt;/i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;=(&lt;/span&gt;&lt;/b&gt;&lt;i&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;            &lt;/span&gt;&lt;/b&gt;&lt;/i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;[&lt;/span&gt;&lt;/b&gt;&lt;i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;datatype&lt;/span&gt;&lt;/b&gt;&lt;/i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;]&lt;/span&gt;&lt;/b&gt;&lt;i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt; field1&lt;/span&gt;&lt;/b&gt;&lt;/i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;[=&lt;/span&gt;&lt;/b&gt;&lt;i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;value&lt;/span&gt;&lt;/b&gt;&lt;/i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;]&lt;/span&gt;&lt;/b&gt;&lt;i&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;                . . .&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;           &lt;/span&gt;&lt;/b&gt;&lt;/i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt; [&lt;/span&gt;&lt;/b&gt;&lt;i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;datatype&lt;/span&gt;&lt;/b&gt;&lt;/i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;] &lt;/span&gt;&lt;/b&gt;&lt;i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;fieldn&lt;/span&gt;&lt;/b&gt;&lt;/i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;[=&lt;/span&gt;&lt;/b&gt;&lt;i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;value&lt;/span&gt;&lt;/b&gt;&lt;/i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;]&lt;/span&gt;&lt;/b&gt;&lt;i&gt;&lt;b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;            &lt;/span&gt;&lt;/b&gt;&lt;/i&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;)&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;The syntax to display the value of a compound variable field is:&lt;br /&gt;&lt;b&gt;                ${&lt;i&gt;compound_variable.field&lt;/i&gt;}&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;a name=&quot;11_Quoting_12240633368492126_0&quot; id=&quot;11_Quoting_12240633368492126_0&quot;&gt;&lt;/a&gt;&lt;i&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;11 Quoting&lt;/span&gt;&lt;/span&gt;&lt;/i&gt;&lt;/h2&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;There are three types of quotes: &lt;b&gt;single quotes&lt;/b&gt;, &lt;b&gt;double quotes&lt;/b&gt;, and&lt;b&gt; back quotes&lt;/b&gt;. Single and double quotes are similar, except for the way they handle some special characters. Back quotes are used for command output assignment.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;11_1_Single_Quotes_61755968164_7702147783711553&quot; id=&quot;11_1_Single_Quotes_61755968164_7702147783711553&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;11.1 Single Quotes&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Single quotes are also used to hide the meaning of special characters like $, *, /, !, &quot;, ` and /. Any characters between single quotes, except&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt; another single quote, are displayed without interpretation as special characters:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print &#39;* $ / ! ` / &quot;&#39;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    * $ / ! ` / &quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;br /&gt;&lt;b&gt;Variable and command substitution does not take place within single quotes&lt;/b&gt; (because $ and `` lose their special meaning).&lt;b&gt; If you want to access the value of a variable, use double quotes instead of single quotes&lt;/b&gt; (discussed in the next section).&lt;/p&gt;
&lt;p&gt;Variables can be set to null with single quotes:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ X=&#39;&#39;&lt;/span&gt;&lt;br /&gt;Single quotes are also used to assign values to aliases and trap commands, and prevent alias substitution, but we&#39;ll get to that later.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;11_2_Double_Quotes_24466882180_9458656702190638&quot; id=&quot;11_2_Double_Quotes_24466882180_9458656702190638&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;11.2 Double Quotes&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Double quotes are like single quotes, except that they do &lt;b&gt;not &lt;/b&gt;remove the meaning of the special characters $, `, and /. This means that variable and command substitution is performed.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ DB=&quot;$HOME:`pwd`&quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $DB&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    /home/anatole:/tmp&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Double quotes also preserve embedded whitespace and newlines. Here are some examples:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print &quot;Line 1&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    &amp;gt; Line 2&quot;   &lt;span style=&quot;color:rgb(106,168,79);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:rgb(106,168,79);&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;color:rgb(106,168,79);&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The &amp;gt; is the secondary prompt, and is displayed whenever the Korn shell needs more input.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;color:rgb(106,168,79);&quot;&gt;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    Line 1&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    Line 2&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print &quot;A        B&quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    A        B&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In this case, it waits for the closing double quote:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ ADDR=&quot;ASP,Inc&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    &amp;gt; PO Box 23837&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    &amp;gt; San Jose CA 95153 USA&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    &amp;gt; (800)777-UNIX * (510)531-5615&quot;&lt;/span&gt;&lt;br /&gt;Without double quotes around ADDR, we get this:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $ADDR&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    ASP,Inc PO Box 23837 San Jose CA 95153 USA (800) 777-&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    UNIX * (510)531-5615&lt;/span&gt;&lt;br /&gt;Not quite what we wanted. Let&#39;s try it again:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print &quot;$ADDR&quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    ASP,Inc&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    PO Box 23837&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    San Jose CA 95153 USA&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    (800)777-UNIX * (510)531-5615&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;There are also other uses for double quotes. You can set a variable to null:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ NULL=&quot;&quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $NULL&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $&lt;/span&gt;&lt;br /&gt;or display single quotes.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print &quot;&#39;This is in single quotes&#39;&quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    &#39;This is in single quotes&#39;&lt;/span&gt;&lt;br /&gt;If you really wanted to display the $, `, /, or &quot; characters using double quotes, &lt;b&gt;escape them with a backslash&lt;/b&gt; like this:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print &quot;/$HOME is set to $HOME&quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $HOME is set to /home/anatole&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print &quot;/`=back-quote //=slash /&quot;=double-quote&quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    `=back-quote /=slash &quot;=double-quote&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;11_3_Back_Quotes_6698768856003_8325655767694116&quot; id=&quot;11_3_Back_Quotes_6698768856003_8325655767694116&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;11.3 Back Quotes&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;&lt;u&gt;Back quotes are used to assign the output of a command to a variable.&lt;/u&gt;&lt;/b&gt; This format, from the Bourne shell, is accepted by the Korn shell but considered obsolescent. This command sets the variable SYS to the system name:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ SYS=`uuname —l`&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $SYS&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    aspd&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;a name=&quot;12_Command_History_File_256358&quot; id=&quot;12_Command_History_File_256358&quot;&gt;&lt;/a&gt;&lt;i&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;12 Command History File&lt;/span&gt;&lt;/span&gt;&lt;/i&gt;&lt;/h2&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The Korn shell stores the commands that you enter at your terminal in a file, called the command history file. This file is specified by the &lt;b&gt;HISTFILE&lt;/b&gt; variable. If not set, the default is &lt;b&gt;$HOME/.sh_history&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;The number of commands accessible via the command history file is specified by the &lt;b&gt;HISTSIZE&lt;/b&gt; variable. If not set, the last 128 commands are saved, starting from your most recent command.&lt;/p&gt;
&lt;p&gt;There are two ways to access the command history file: using the &lt;b&gt;fc&lt;/b&gt; command, or the in-line editor.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;a name=&quot;13_The_fc_Command_071168033406&quot; id=&quot;13_The_fc_Command_071168033406&quot;&gt;&lt;/a&gt;&lt;i&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;13 The fc Command&lt;/span&gt;&lt;/span&gt;&lt;/i&gt;&lt;/h2&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The &lt;b&gt;fc&lt;/b&gt; command allows you to list, or edit and re-execute history file commands. The fc command also allows you to manipulate the history file using your own choice of editors.&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;13_1_Displaying_the_Command_Hi&quot; id=&quot;13_1_Displaying_the_Command_Hi&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;13.1 Displaying the Command History File&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The format for displaying the command history file with the &lt;b&gt;fc -l&lt;/b&gt; command is:&lt;br /&gt;&lt;b&gt;        fc -l[nr]&lt;/b&gt; [ &lt;i&gt;range&lt;/i&gt; ]&lt;br /&gt;where the -n option causes the command numbers to not be  displayed, and the -r option specifies reverse order (latest commands first). The range of commands to list is given as:&lt;br /&gt;&lt;b&gt;n1 [n2]:&lt;/b&gt;     display list from command n1 to command n2. If n2 is not specified, display all the commands from current command back to command n1.&lt;br /&gt;&lt;b&gt;&lt;i&gt;-count:&lt;/i&gt;&lt;/b&gt;&lt;b&gt;&lt;i&gt;    &lt;/i&gt;&lt;/b&gt; display the last count commands string display all the previous commands back to the command that matches.&lt;br /&gt;&lt;b&gt;string:&lt;/b&gt;&lt;b&gt;    &lt;/b&gt; If no range argument is given, the last sixteen commands are listed.&lt;/p&gt;
&lt;p&gt;If no &lt;i&gt;range &lt;/i&gt;argument is given, the last sixteen commands are listed. Let&#39;s look at the last five commands:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ fc -l -5&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    250 set&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    251 vi /etc/env&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    252 . /etc/env&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    253 set&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    254 alias&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    255 functions&lt;/span&gt;&lt;br /&gt;The &lt;b&gt;history&lt;/b&gt; command is equivalent to &lt;b&gt;fc -l&lt;/b&gt;. The last command could also be given like this. Notice that the order is reversed.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ history —r —5&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    255 functions&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    254 alias&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    253 set&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    252 . /etc/env&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    251 vi /etc/env&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    250 set&lt;/span&gt;&lt;br /&gt;By using a string instead of a count argument, we could search backward for a specific command.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ history —r set&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    258 fc —lr set&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    257 fc —ln —10&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    256 fc —l 250 265&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    255 functions&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    254 alias&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    253 set&lt;/span&gt;&lt;br /&gt;The argument set could also be given as s, or se, since partial strings are also matched. This means that the string f would match functions and fc, while fu would only match functions.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;13_2_Editing_the_Command_Histo_6460225936025381&quot; id=&quot;13_2_Editing_the_Command_Histo_6460225936025381&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;13.2 Editing the Command History File&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Besides displaying the command history file, it can also be edited using the fc command with the following format:&lt;br /&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;                fc [-e &lt;i&gt;editor&lt;/i&gt;] [-r] [&lt;i&gt;range&lt;/i&gt;]&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;or&lt;br /&gt;&lt;b&gt;                fc -e - [&lt;i&gt;old=new&lt;/i&gt;] [&lt;i&gt;command&lt;/i&gt;]&lt;/b&gt;&lt;br /&gt;where the -e editor option is used to specify an editor. If not given, the value of the FCEDIT variable is used, and if not set, the default /bin/ed is used. The -r option reverses the order of the commands, so that the latest commands are displayed first.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;Using &lt;b&gt;r&lt;/b&gt;, the last command could also be given as: &lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;br /&gt;    $ &lt;b&gt;r&lt;/b&gt; 173&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The substitution feature is used to make minor changes to &lt;/span&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;a previous command. Let&#39;s start with &lt;b&gt;print Hello&lt;/b&gt;:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print Hello&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    Hello&lt;/span&gt;&lt;br /&gt;We could change Hello to something else like this.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ r Hello=Goodbye print&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    print Goodbye&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    Goodbye&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;a name=&quot;14_Job_Control&quot; id=&quot;14_Job_Control&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;i&gt;14 Job Control&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Job control allows programs to be stopped and restarted, moved between the foreground and background, their processing status to be displayed, and more. To enable the job control feature, the monitor option must be enabled with the set command:&lt;br /&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;                $ set —o monitor&lt;/span&gt;&lt;/b&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;or&lt;/span&gt;&lt;br style=&quot;font-family:Georgia;&quot; /&gt;&lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;                $ set —m&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;This can be put into the &lt;b&gt;.profile&lt;/b&gt; file so that job control is automatically enabled at login.&lt;/p&gt;
&lt;p&gt;14.1 Manipulating Jobs&lt;br /&gt;Jobs running in the foreground are suspended by typing &lt;b&gt;Ctl-z&lt;/b&gt; (Control-z). So instead of waiting for the long-running &lt;b&gt;split&lt;/b&gt; command to complete, it is interrupted using Ctl-z:&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;br /&gt;    $ split —5000 hugefile&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    Ctl-z&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    [3] + Stoppedsplit —5000 hugefile&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;Stopped and backgrounded jobs are brought back into the foreground with the &lt;b&gt;fg&lt;/b&gt; command. If no argument is given, the current (most recently stopped or backgrounded) job is used. The stopped split job is brought back into the foreground with fg:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ fg&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    split —5000 hugefile&lt;br /&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;or &lt;/span&gt;&lt;br /&gt;    $ fg %3&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;Stopped jobs are put into the background with the &lt;b&gt;bg &lt;/b&gt;command.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;14_2_Checking_Job_Status&quot; id=&quot;14_2_Checking_Job_Status&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;14.2 Checking Job Status&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The status and other information about all jobs is displayed using the &lt;b&gt;jobs&lt;/b&gt; command. The &lt;b&gt;jobs -l&lt;/b&gt; command shows the same information, along with the process ids, while &lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;jobs -p&lt;/span&gt;&lt;/b&gt; only gives you the process ids.&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ jobs —l&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    [3] + 466 Stopped split —5000 hugefile&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    [2] — 465 Running find / —name core —print &amp;amp;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    [1] 463 Running sleep 25 &amp;amp;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;Stopped or background jobs are terminated with the &lt;b&gt;kill&lt;/b&gt; command.&lt;/p&gt;
&lt;p&gt;You can make the Korn shell wait for some or all background jobs to complete with the &lt;b&gt;wait&lt;/b&gt; command. If no argument is given, the Korn shell waits for &lt;u&gt;all background jobs&lt;/u&gt; to complete.&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;br style=&quot;font-family:Verdana;&quot; /&gt;&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;14_3_Job_Control&quot; id=&quot;14_3_Job_Control&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;14.3 Job Control&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;
&lt;div id=&quot;p4e8&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;a href=&quot;http://docs.google.com/File?id=dd6nw3mt_165hjfw2fdd_b&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_165hjfw2fdd_b&quot; style=&quot;border-style:initial;border-color:initial;border-width:0;&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Jobs being executed in the background are prevented from generating output by setting &lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;stty tostop&lt;/span&gt;&lt;/b&gt;. Let&#39;s run the find job again with the &lt;b&gt;tostop&lt;/b&gt; option enabled:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ stty tostop&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ find / —name core —print &amp;amp;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    [2] 1460&lt;br /&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The &lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;stty tostop&lt;/span&gt;&lt;/b&gt; command can be put into your profile file so that &lt;/span&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;background job output is by default disabled.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;The &lt;b&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;nohup &lt;/span&gt;&lt;/b&gt;command can also be used to direct output from background jobs. It causes standard output and standard error to be automatically sent to &lt;b&gt;nohup.out&lt;/b&gt;, or whatever file you give it. One added benefit. The &lt;b&gt;nohup&lt;/b&gt; command will keep jobs running, even if you log out. Here we run the &lt;b&gt;find&lt;/b&gt; job again using &lt;b&gt;nohup&lt;/b&gt;. First we need to enable background job output:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ stty —tostop&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ nohup find / —name core —print &amp;amp;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    [2] 1469&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ wait&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    Sending output to &#39;nohup.out&#39;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    [2] + Done nohup find / —name core —print &amp;amp;&lt;/span&gt;&lt;br /&gt;The find job output is in &lt;b&gt;nohup.out&lt;/b&gt;:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ cat nohup.out&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    /usr/lbin/core&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    /home/anatole/bin/core&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;14.4 Job Names
&lt;div id=&quot;y2h2&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_166cds9fbf2_b&quot; style=&quot;width:431px;height:185px;&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;
&lt;div style=&quot;text-align:left;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;a name=&quot;15_Performing_Arithmetic&quot; id=&quot;15_Performing_Arithmetic&quot;&gt;&lt;/a&gt;&lt;i&gt;15 Performing Arithmetic&lt;/i&gt;&lt;/h2&gt;
&lt;p&gt;All of the operators from the C programming language (except ++, --, and ?:) are now supported by the Korn shell.&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;15_1_The_let_Command&quot; id=&quot;15_1_The_let_Command&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;15.1 The let Command&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Integer arithmetic can be done with the let command and arithmetic expressions. The format for the let command is:&lt;br /&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;                let&lt;/b&gt;  &quot;&lt;i&gt;arithmetic-expression&lt;/i&gt;&quot;&lt;/span&gt;&lt;br /&gt;where arithmetic-expressions can contain constants, operators, and Korn shell variables. &lt;b&gt;Double quotes&lt;/b&gt; are used with arithmetic expressions that contain white space or operators that have special meaning to the Korn shell.&lt;/p&gt;
&lt;p&gt;Notice that in arithmetic expressions, regular variables can be referenced by name only, and do not have to be preceded by $ for substitution to be performed. Both&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ let &quot;X=X + 1&quot;&lt;/span&gt;&lt;br /&gt;and&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ let &quot;X=$X + 1&quot;&lt;/span&gt;&lt;br /&gt;are equivalent. The first format is preferred because parameter expansion does not have to be performed.
&lt;div id=&quot;dspu&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_167gmh78ndp_b&quot; style=&quot;width:431px;height:592px;&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;
&lt;div style=&quot;text-align:left;margin-top:0;margin-bottom:0;&quot;&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;15_2_The_Command&quot; id=&quot;15_2_The_Command&quot;&gt;&lt;/a&gt;15.2 The ((...)) Command&lt;/h3&gt;
&lt;p&gt;The ((...)) command is equivalent to the let command, except that all characters between the (( and )) are treated as quoted arithmetic expressions. This is more convenient to use than let, because many of the arithmetic operators have special meaning to the Korn shell. The following commands are equivalent:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ let &quot;X=X + 1&quot;&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;and&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ ((X=X + 1))&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;15_3_Declaring_Integer_Variabl&quot; id=&quot;15_3_Declaring_Integer_Variabl&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;15.3 Declaring Integer Variables&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;As with ordinary variables, integer variables need not be declared. A variable can simply be given an integer value, and then used in an arithmetic expression. However, variables can be explicitly declared integer type by using the &lt;b&gt;typeset -i&lt;/b&gt; command. There is also another command called &lt;b&gt;integer&lt;/b&gt;, which is equivalent to &lt;b&gt;typeset -i&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;Arithmetic can be performed directly on integer variables without using the let or ((...)) commands, as long as the integer value is being assigned a value. In other words, you can do this:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ integer DAYS=&quot;4 + 3&quot;&lt;/span&gt;&lt;br /&gt;instead of&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ ((DAYS=4 + 3))&lt;/span&gt;&lt;br /&gt;or&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ let &quot;DAYS=4 + 3&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;15_4_Arithmetic_Constants&quot; id=&quot;15_4_Arithmetic_Constants&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;15.4 Arithmetic Constants&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The format for arithmetic constants is:&lt;br /&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;   &lt;b&gt; &lt;/b&gt;&lt;b&gt;    number&lt;/b&gt;&lt;/span&gt;&lt;/i&gt;&lt;br /&gt;or&lt;br /&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;    &lt;b&gt;    base#number&lt;/b&gt;&lt;/span&gt;&lt;/i&gt;&lt;br /&gt;where &lt;u&gt;base is a whole number between 2 and 36, and number is any non-negative integer&lt;/u&gt;. If not specified, the default base is 10. The arithmetic base of a variable can be set with the &lt;b&gt;typeset -i&lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;n&lt;/b&gt; &lt;/span&gt;&lt;/i&gt;command, or by prepending base# to the value. In this example, variable X is set to 5 in base 2 using both formats:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset —i2 X=5&lt;/span&gt;&lt;br /&gt;or&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset —i X=2#101     &lt;span style=&quot;color:rgb(56,118,29);&quot;&gt;#Note here 101 denotes 5 in decimal. &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;If you want to display the value of X in another base, just reset the base with the &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;b&gt;typeset -i&lt;/b&gt;&lt;i&gt;&lt;span style=&quot;font-family:Georgia;&quot;&gt;&lt;b&gt;n&lt;/b&gt; &lt;/span&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;command. Here it is reset to base 3:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ typeset —i3 X&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $X&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    3#12&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;a name=&quot;15_5_Random_Numbers&quot; id=&quot;15_5_Random_Numbers&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;15.5 Random Numbers&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3 style=&quot;font-size:12pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;The Korn shell provides a special variable, &lt;b&gt;RANDOM&lt;/b&gt;, which is used to generate random numbers in the range from 0 to 32767.&lt;/p&gt;
&lt;p&gt;You can also initialize a sequence of random numbers by setting &lt;b&gt;RANDOM&lt;/b&gt; to a value. Here, &lt;b&gt;RANDOM&lt;/b&gt; is set to 7. When subsequently accessed, the values 2726 and 18923 are returned:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ RANDOM=7&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $RANDOM&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    2726&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $RANDOM&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    18923&lt;/span&gt;&lt;br /&gt;When RANDOM is reset to 7 again, the same numbers are returned:&lt;br /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ RANDOM=7&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $RANDOM&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    2726&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    $ print $RANDOM&lt;/span&gt;&lt;br style=&quot;font-family:&#39;Courier New&#39;;&quot; /&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;    18923&lt;/span&gt;&lt;br /&gt;If RANDOM is unset, the special meaning is removed, even if reset.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;a name=&quot;16_The_Environment&quot; id=&quot;16_The_Environment&quot;&gt;&lt;/a&gt;&lt;i&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;16 The Environment&lt;/span&gt;&lt;/span&gt;&lt;/i&gt;&lt;/h2&gt;
&lt;h2 style=&quot;font-size:14pt;&quot;&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;
&lt;div id=&quot;i4_8&quot; style=&quot;text-align:center;margin-top:0;margin-bottom:0;padding:1em 0;&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_168dd38bmfm_b&quot; style=&quot;width:472px;height:714px;&quot; /&gt;&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Korn Shell Notes(II)</title>
   <link href="http://bo-yang.github.com//2008/11/24/kshell-note-2"/>
   <updated>2008-11-24T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/11/24/kshell-note-2</id>
   <content type="html">&lt;br /&gt;
&lt;h1 style=&quot;text-align:center;&quot;&gt;&lt;a id=&quot;_korn_Shell_Mannual_7321622101&quot; name=&quot;_korn_Shell_Mannual_7321622101&quot;&gt;&lt;/a&gt; Korn Shell Notes&lt;br /&gt;&lt;/h1&gt;
&lt;div&gt;
&lt;h2&gt;&lt;a id=&quot;1_Useful_Cmds_5672844878149838_07467550420309199&quot; name=&quot;1_Useful_Cmds_5672844878149838_07467550420309199&quot;&gt;&lt;/a&gt;&lt;i&gt;1 Useful Cmds&lt;/i&gt;&lt;/h2&gt;
&lt;p&gt;&lt;b&gt;wc&lt;/b&gt; - display a count of lines, words and characters in a file.&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;It can be used to count the numbers together with other commands, such as ls, who and so on.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;cut&lt;/b&gt; - cut out selected fields of each line of a file.&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; The name of each unique user that is logged on is displayed using this command:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ who | cut —f1 —d&#39; &#39; | sort —u&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;anatole&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;root&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;b&gt;print&lt;/b&gt; is a Korn shell&amp;nbsp;specialized&amp;nbsp;command which is similar to &lt;span style=&quot;font-family:Courier New;&quot;&gt;echo&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;nl&lt;/b&gt; - line numbering filter.&lt;/div&gt;
&lt;div&gt;
&lt;h2&gt;&lt;a id=&quot;2_Conditional_Execution_938277&quot; name=&quot;2_Conditional_Execution_938277&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;i&gt;2 Process Execution&lt;/i&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id=&quot;2_1_Conditional_Execution_5079_8305832861221516&quot; name=&quot;2_1_Conditional_Execution_5079_8305832861221516&quot;&gt;&lt;/a&gt;2.1 &lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Conditional Execution&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;You can implement a simple if command by using the &amp;amp;&amp;amp; and || operators together like this:&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;command1 &amp;amp;&amp;amp; command2 || command3&lt;/span&gt;&lt;br /&gt;
If command1 returns true, then command2 is executed, which causes&lt;br /&gt;
command3 to not be executed. If command1 does not return true, then&lt;br /&gt;
command2 is not executed, which causes command3 to be executed.&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;
&lt;h3&gt;&lt;a id=&quot;3_Grouping_Commands_3102224048&quot; name=&quot;3_Grouping_Commands_3102224048&quot;&gt;&lt;/a&gt;2.2 Grouping Commands&lt;/h3&gt;
&lt;p&gt;Commands enclosed in {} are executed in current shell. If&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ echo &quot;This is file temp:&quot; ; cat temp | nl&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;This is file temp:&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;1 The rain in Spain&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;2 falls mainly on the plain&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;padding:1em 0;text-align:center;&quot; id=&quot;ozct&quot;&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;then by using {}s, the output will be:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ { echo &quot;This is file temp:&quot;; cat temp ; } | nl&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;1 This is file temp:&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;2 The rain in Spain&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;3 falls mainly on the plain&lt;/span&gt;&lt;br /&gt;There must be whitespace after the opening {, and commands within the {}&#39;s must be terminated with a semi-colon.&lt;/p&gt;
&lt;p&gt;Commands&lt;br /&gt;
enclosed in () are executed in a subshell. Subshells are generated&lt;br /&gt;
whenever you enclose commands in ()&#39;s, perform command substitution,&lt;br /&gt;
for background processes, and for coprocesses.A subshell is a separate&lt;br /&gt;
copy of the parent shell, so variables, functions, and aliases from the&lt;br /&gt;
parent shell are available to the subshell. However, subshells cannot&lt;br /&gt;
change the value of parent shell variables, functions, or aliases.&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_104f3ccnmc3_b&quot; style=&quot;width:501px;height:609px;&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a id=&quot;4_Redirecting_Standard_Output_&quot; name=&quot;4_Redirecting_Standard_Output_&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;a id=&quot;3_Input_Output_Redirection_262_7061543286301161&quot; name=&quot;3_Input_Output_Redirection_262_7061543286301161&quot;&gt;&lt;/a&gt;&lt;i&gt;3 Input/Output Redirection&lt;/i&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id=&quot;3_1_Redirecting_Standard_Outpu_8229576773319682&quot; name=&quot;3_1_Redirecting_Standard_Outpu_8229576773319682&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;3.1 Redirecting Standard Output&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;By using the &amp;gt; symbol, the standard output of a command can be redirected to a file, instead of your terminal.&lt;/p&gt;
&lt;p&gt;You can also use the &amp;gt; command to create an empty file:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ &amp;gt; tmp&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ ls —s tmp&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;0 tmp&lt;/span&gt;&lt;br /&gt;This is equivalent to &lt;span style=&quot;font-family:Courier New;&quot;&gt;touch tmp&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Standard output can be appended to a file by using the &lt;b&gt;&amp;gt;&amp;gt;&lt;/b&gt; redirect operator.&lt;/p&gt;
&lt;p&gt;Standard output is closed with the &lt;b&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;gt;&amp;amp;-&lt;/span&gt;&lt;/b&gt; redirect operator:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ echo &quot;This is going nowhere&quot; &amp;gt;&amp;amp;-&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;$&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;5_The_noclobber_Option_4119643&quot; name=&quot;5_The_noclobber_Option_4119643&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;3.2 The&lt;span style=&quot;font-family:Courier New;&quot;&gt; noclobber&lt;/span&gt; Option&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;To&lt;br /&gt;
prevent redirecting output to an existing file, set the noclobber&lt;br /&gt;
option. By default, this feature is usually disabled, but can be&lt;br /&gt;
enabled with the &lt;b&gt;set -o noclobber&lt;/b&gt; command:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;$ ls &amp;gt; file.out&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;$ set —o noclobber&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The &amp;gt;| operator is used to force overwriting of a file, even if the noclobber option is enabled.&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;6_Redirecting_Standard_Input_2&quot; name=&quot;6_Redirecting_Standard_Input_2&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;3.3 Redirecting Standard Input&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;Standard input to a command is redirected from a file using the &amp;lt; operator.&lt;/p&gt;
&lt;div id=&quot;l-l6&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img style=&quot;width:656px;height:461px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_142zhz6kvd8_b&quot; /&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;h3&gt;&lt;a id=&quot;7_Redirecting_Standard_Error_6&quot; name=&quot;7_Redirecting_Standard_Error_6&quot;&gt;&lt;/a&gt;3.4 Redirecting Standard Error&lt;/h3&gt;
&lt;p&gt;As&lt;br /&gt;
with standard output, standard error is by default directed to your&lt;br /&gt;
terminal, but it can be redirected using the standard error file&lt;br /&gt;
descriptor (2) and the &amp;gt; operator, e.g. &lt;b&gt;2&amp;gt;&lt;/b&gt;
&lt;div id=&quot;kvf6&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img style=&quot;width:453px;height:180px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_143dnb47w36_b&quot; /&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;h3&gt;&lt;a id=&quot;8_More_With_File_Descriptors_7&quot; name=&quot;8_More_With_File_Descriptors_7&quot;&gt;&lt;/a&gt;3.5 More With File Descriptors&lt;/h3&gt;
&lt;p&gt;The &lt;b&gt;&amp;gt;&amp;amp;n &lt;/b&gt;operator&lt;br /&gt;
causes output to be redirected to file descriptor n. This is used when&lt;br /&gt;
you want to direct output to a specific file descriptor.In the next&lt;br /&gt;
command, the standard error and output are sent to ls.out by specifying&lt;br /&gt;
multiple redirections on the same command line. First, &lt;b&gt;&amp;gt;&amp;amp;2&lt;/b&gt;&lt;br /&gt;
causes standard output to be redirected to standard error. Then,&lt;br /&gt;
2&amp;gt;ls.out causes standard error (which is now standard output and&lt;br /&gt;
standard error) to be sent to ls.out:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ ls tmp t.out 2&amp;gt;ls.out 1&amp;gt;&amp;amp;2&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ cat ls.out&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; tmp not found&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; t.out&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;If&lt;br /&gt;
the output of the last command was redirected to a file using the &amp;gt;&lt;br /&gt;
operator, then only the standard output would be redirected. The&lt;br /&gt;
standard error would still be displayed on your terminal.&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ {echo &quot;This is going to stdout&quot;} &amp;gt;&amp;amp;1;/&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;echo &quot;This is going to stderr&quot; &amp;gt;&amp;amp;2;} &amp;gt;out&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;This is going to stderr&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ cat out&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;This is going to stdout.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The&lt;b&gt; &lt;span style=&quot;font-family:Courier New;&quot;&gt;n&amp;gt;&amp;amp;m&lt;/span&gt; &lt;/b&gt;operator&lt;br /&gt;
causes the output from file descriptors n and m to be merged. This&lt;br /&gt;
operator could be used in the previous command to direct both the&lt;br /&gt;
standard output and standard error to the same file.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you wanted the standard output and standard error appended to the output file, the &lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; operator could be used.&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;9_Here_Document_78766796044282&quot; name=&quot;9_Here_Document_78766796044282&quot;&gt;&lt;/a&gt;3.6 Here Document&lt;/h3&gt;
&lt;p&gt;&amp;nbsp;&lt;br /&gt;
Here documents is a term used for redirecting multiple lines of&lt;br /&gt;
standard input to a command. In looser terms, they allow batch input to&lt;br /&gt;
be given to programs and are frequently used to execute interactive&lt;br /&gt;
commands from within Korn shell scripts. The format for a here document&lt;br /&gt;
is:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;command &amp;lt;&amp;lt; word&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; or&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;command &amp;lt;&amp;lt;-word&lt;/span&gt;&lt;/i&gt;&lt;br /&gt;where lines that follow are used as standard input to command until word is read. &lt;/p&gt;
&lt;p&gt;The&lt;br /&gt;
other variation, command &amp;lt;&amp;lt;- word, deletes leading tab characters&lt;br /&gt;
from the here document. It is often used over the first variation to&lt;br /&gt;
produce more readable code when used within larger scripts. A good use&lt;br /&gt;
for here documents is to automate ftp file transfers. This snippet of&lt;br /&gt;
code could be used within a larger script to automatically ftp code to&lt;br /&gt;
or from another server.&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;10_Discarding_Standard_Output_&quot; name=&quot;10_Discarding_Standard_Output_&quot;&gt;&lt;/a&gt;3.7 Discarding Standard Output&lt;/h3&gt;
&lt;p&gt;&amp;nbsp; The &lt;span style=&quot;font-family:Courier New;&quot;&gt;/dev/null&lt;/span&gt; file is like the system trash bin. Anything redirected to it is discarded by the system.
&lt;div id=&quot;d4na&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img style=&quot;width:456px;height:653px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_144g6jg94h3_b&quot; /&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;h2&gt;&lt;a id=&quot;4_File_Name_Substitution_36576_08147998549624513&quot; name=&quot;4_File_Name_Substitution_36576_08147998549624513&quot;&gt;&lt;/a&gt;&lt;i&gt;4 File Name Substitution&lt;/i&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id=&quot;4_1_The_Character_8811087270296203&quot; name=&quot;4_1_The_Character_8811087270296203&quot;&gt;&lt;/a&gt;4.1 The * Character&lt;/h3&gt;
&lt;p&gt;The&lt;br /&gt;
* matches any zero or more characters in current directory, except&lt;br /&gt;
those begin with the &quot;.&quot; character. These must be explicitly matched.&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;4_2_The_Character_9445044472675496&quot; name=&quot;4_2_The_Character_9445044472675496&quot;&gt;&lt;/a&gt;4.2 The ? Character&lt;/h3&gt;
&lt;p&gt;The ? character matches exactly one character.&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;4_3_The_Character_8276669466373929&quot; name=&quot;4_3_The_Character_8276669466373929&quot;&gt;&lt;/a&gt;4.3 The [] Character&lt;/h3&gt;
&lt;p&gt;The [] characters match a single, multiple, or range of characters. &lt;br /&gt;This command lists file names beginning with d or m, and ending with any number 1 through 5:
&lt;div id=&quot;b.as&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img style=&quot;width:574px;height:69px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_145445m29dg_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;In&lt;br /&gt;
the range argument, the first character must be alphabetically less&lt;br /&gt;
than the last character. This means that [c-a] is an invalid range.&lt;br /&gt;
This also means that pattern [0-z] matches any alphabetic or&lt;br /&gt;
alphanumeric character, [A-z] matches any alphabetic character (upper&lt;br /&gt;
and lower case), [0Z] matches any alphanumeric or upper case&lt;br /&gt;
alphabetic character, and [09] matches any alphanumeric character.&lt;/p&gt;
&lt;p&gt;Multiple ranges can also be given. The pattern &lt;span style=&quot;font-family:Courier New;&quot;&gt;[a-jlmr3-7]&lt;/span&gt; would match files names beginning with the letters a through j, l, m, r, and 3 through 7.&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;4_4_The_Character_8385233166155047&quot; name=&quot;4_4_The_Character_8385233166155047&quot;&gt;&lt;/a&gt;4.4 The ! Character&lt;/h3&gt;
&lt;p&gt;The ! character can be used with [ ] to reverse the match. In other words,&lt;span style=&quot;font-family:Courier New;&quot;&gt; [!a]&lt;/span&gt; matches any character, except &lt;span style=&quot;font-family:Courier New;&quot;&gt;a&lt;/span&gt;.&lt;br /&gt;If we want to list all of the file names except those started with d, we could do this:
&lt;div id=&quot;e0s4&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img style=&quot;width:593px;height:98px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_146g3wh6vf8_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;or it can be done more easily using &lt;b&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;[!d]&lt;/span&gt;&lt;/b&gt;:
&lt;div id=&quot;oa2y&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img style=&quot;width:590px;height:72px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_147ggsj9rdd_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;Multiple and range arguments can also be negated. The pattern &lt;b&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;[!lro]*&lt;/span&gt;&lt;/b&gt; would match strings not beginning with l, r, or o, &lt;b&gt;*[!25]&lt;/b&gt; would match strings not ending with 2 through 5, and &lt;b&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;*.[!Z]&lt;/span&gt;&lt;/b&gt; would match strings not ending in .Z.
&lt;div id=&quot;l82v&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img style=&quot;width:419px;height:356px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_148f76gd7dg_b&quot; /&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;h3&gt;&lt;a id=&quot;4_5_Complex_Patterns_6749485921749048&quot; name=&quot;4_5_Complex_Patterns_6749485921749048&quot;&gt;&lt;/a&gt;4.5 Complex Patterns&lt;/h3&gt;
&lt;p&gt;Korn Shell also provides entire patterns matching.
&lt;div id=&quot;qkd5&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img style=&quot;width:533px;height:353px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_150dzwchbcf_b&quot; /&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id=&quot;4_5_1_pattern__7121078334798239&quot; name=&quot;4_5_1_pattern__7121078334798239&quot;&gt;&lt;/a&gt;4.5.1 *(&lt;i&gt;pattern&lt;/i&gt;)&lt;/h4&gt;
&lt;p&gt;This format matches any zero or more occurrences of pattern.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This pattern matches anti, antic, antigen, and antique: &lt;b&gt;$ match anti*(c|gen|que)&lt;/b&gt;&lt;br /&gt;
&lt;h4&gt;&lt;a id=&quot;4_5_2_pattern__3180494268564732&quot; name=&quot;4_5_2_pattern__3180494268564732&quot;&gt;&lt;/a&gt;4.5.2 ?&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;/span&gt;(&lt;i&gt;pattern&lt;/i&gt;)&lt;/h4&gt;
&lt;p&gt;This format matches any zero or one occurrences of pattern. Here are some more patterns using this format:
&lt;div id=&quot;ty67&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;img style=&quot;width:328px;height:164px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_1549w8352fj_b&quot; /&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id=&quot;4_5_3_pattern__1431321966993203&quot; name=&quot;4_5_3_pattern__1431321966993203&quot;&gt;&lt;/a&gt;4.5.3 +(&lt;i&gt;pattern&lt;/i&gt;)&lt;/h4&gt;
&lt;p&gt;This format matches one or more occurrences of pattern.&lt;br /&gt;
&lt;h4&gt;&lt;a id=&quot;4_5_4_pattern__14535345873275873&quot; name=&quot;4_5_4_pattern__14535345873275873&quot;&gt;&lt;/a&gt;4.5.4 @(&lt;i&gt;pattern&lt;/i&gt;)&lt;/h4&gt;
&lt;p&gt;This format matches exactly one occurrence of pattern. Let&#39;s look for words beginning with &lt;b&gt;Ala&lt;/b&gt; or &lt;b&gt;Cla&lt;/b&gt;: &amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;b&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;$ match @([AC]la)*&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;
&lt;h4&gt;&lt;a id=&quot;4_5_5_pattern__6355112508705647&quot; name=&quot;4_5_5_pattern__6355112508705647&quot;&gt;&lt;/a&gt;4.5.5 !(pattern)&lt;/h4&gt;
&lt;p&gt;This format matches anything except pattern. To match any string that does not end in .c, .Z, or .o:&lt;br /&gt;&lt;b&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; !(*.c|*.Z|*.o)&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;or any string that does not contain digits:&lt;br /&gt;&lt;b&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;!(*[0-9]*)&lt;/b&gt;
&lt;div id=&quot;i2wj&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img style=&quot;width:329px;height:256px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_155hnrm7xht_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h3&gt;&lt;a id=&quot;4_6_Disabling_File_Name_Substi_16185795665760638&quot; name=&quot;4_6_Disabling_File_Name_Substi_16185795665760638&quot;&gt;&lt;/a&gt;4.6 Disabling File Name Substitution&lt;/h3&gt;
&lt;p&gt;File name substitution can be disabled by setting the noglob option using the set command:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;$ set —o noglob&lt;/span&gt;&lt;br /&gt;or&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;$ set —f&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The &lt;span style=&quot;font-family:Courier New;&quot;&gt;-o noglob&lt;/span&gt; and &lt;span style=&quot;font-family:Courier New;&quot;&gt;-f options&lt;/span&gt;&lt;br /&gt;
for the set command are the same. Once file name substitution is&lt;br /&gt;
disabled, pattern-matching characters like *, ?, and ] lose their&lt;br /&gt;
special meaning:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ ls a*&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;a* not found&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ ls b?&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;b? not found&lt;/span&gt;&lt;br /&gt;&lt;b&gt;Within [...] patterns, a / character is used to remove the meaning of the special pattern-matching characters.&lt;/b&gt; This means that the [/*/?]* pattern would match file names beginning with * or ?.&lt;br /&gt;
&lt;h2&gt;&lt;a id=&quot;5_Command_Substitution_8604427133040446&quot; name=&quot;5_Command_Substitution_8604427133040446&quot;&gt;&lt;/a&gt;&lt;i&gt;5 Command Substitution&lt;/i&gt;&lt;/h2&gt;
&lt;p&gt;Command&lt;br /&gt;
substitution is a feature that allows output to be expanded from a&lt;br /&gt;
command. It can be used to assign the output of a command to a&lt;br /&gt;
variable, or to imbed the output of a command within another command.&lt;br /&gt;
The format for command substitution is:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;b&gt;&amp;nbsp;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;$(&lt;i&gt;command&lt;/i&gt;)&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;where &lt;i&gt;command&lt;/i&gt; is executed and the output is substituted for the entire &lt;i&gt;$(command)&lt;/i&gt; construct.&lt;br /&gt;For example, to print the current date in a friendly format:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ echo The date is $(date)&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;The date is Fri Jul 27 10:41:21 PST 1996&lt;/span&gt;&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;5_1_Bourne_Shell_Compatibility&quot; name=&quot;5_1_Bourne_Shell_Compatibility&quot;&gt;&lt;/a&gt;5.1 Bourne Shell Compatibility&lt;/h3&gt;
&lt;p&gt;For compatibility with the Bourne shell, the following format for command substitution can also be used:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;b&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;`&lt;/span&gt;&lt;i&gt;command&lt;/i&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt; `&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;Using `. . .` command substitution, we could get the names of the files in the current directory like this:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ echo `ls` are in this directory&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;NEWS asp bin pc are this directory&lt;/span&gt;&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;5_2_Directing_File_Input&quot; name=&quot;5_2_Directing_File_Input&quot;&gt;&lt;/a&gt;5.2 Directing File Input&lt;/h3&gt;
&lt;p&gt;There is also a special form of the &lt;b&gt;$(...)&lt;/b&gt; command that is used to substitute the contents of a file. The format for file input substitution is:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;b&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;$(&amp;lt;file)&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;This is equivalent to&lt;b&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt; $(cat file)&lt;/span&gt;&lt;/b&gt; or `&lt;b&gt;cat file&lt;/b&gt;`, except that it is faster, because an extra process does not have to be created to execute the &lt;span style=&quot;font-family:Courier New;&quot;&gt;cat&lt;/span&gt; command.&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;5_3_Arithmetic_Operations&quot; name=&quot;5_3_Arithmetic_Operations&quot;&gt;&lt;/a&gt;5.3 Arithmetic Operations&lt;/h3&gt;
&lt;p&gt;Another form of the $(...) command is used to substitute the output of&lt;br /&gt;
arithmetic expressions. The value of an arithmetic expression is&lt;br /&gt;
returned when enclosed in double parentheses and preceded with a dollar&lt;br /&gt;
sign.&lt;br /&gt;
&lt;b&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;$((arithmetic-expression))&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;
Here are a few examples.&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;$ echo $((3+5))&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;8&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;$ echo $((8192*16384%23))&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;9&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;5_4_Tilde_Substitution&quot; name=&quot;5_4_Tilde_Substitution&quot;&gt;&lt;/a&gt;5.4 Tilde Substitution&lt;/h3&gt;
&lt;p&gt;Tilde substitution is used to substitute the pathname of a user&#39;s home&lt;br /&gt;
directory for ~user. Words in the command line that start with the&lt;br /&gt;
tilde character cause the Korn shell to check the rest of the word up&lt;br /&gt;
to a slash. If the tilde character is found alone or is only followed&lt;br /&gt;
by a slash, it is replaced with the value of the &lt;b&gt;HOME&lt;/b&gt; variable.&lt;/p&gt;
&lt;div id=&quot;xcw:&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img style=&quot;width:538px;height:198px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_156dqcvxngk_b&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color:rgb(255,255,0);&quot;&gt;&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Korn Shell(K Shell) Notes (I)</title>
   <link href="http://bo-yang.github.com//2008/11/20/kshell-note-1"/>
   <updated>2008-11-20T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/11/20/kshell-note-1</id>
   <content type="html">&lt;br /&gt;
&lt;h1 style=&quot;text-align:center;&quot;&gt;&lt;a id=&quot;_korn_Shell_Mannual_&quot; name=&quot;_korn_Shell_Mannual_&quot;&gt;&lt;/a&gt; Korn Shell Notes&lt;/h1&gt;
&lt;div&gt;
&lt;h3&gt;&lt;a id=&quot;1_Useful_Cmds&quot; name=&quot;1_Useful_Cmds&quot;&gt;&lt;/a&gt;1 Useful Cmds&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;wc&lt;/b&gt; - display a count of lines, words and characters in a file.&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;It can be used to count the numbers together with other commands, such as ls, who and so on.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;cut&lt;/b&gt; - cut out selected fields of each line of a file.&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; The name of each unique user that is logged on is displayed using this command:&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ who | cut —f1 —d&#39; &#39; | sort —u&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;anatole&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;root&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;b&gt;print&lt;/b&gt; is a Korn shell&amp;nbsp;specialized&amp;nbsp;command which is similar to &lt;span style=&quot;font-family:Courier New;&quot;&gt;echo&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;nl&lt;/b&gt; - line numbering filter.&lt;/div&gt;
&lt;div&gt;
&lt;h3&gt;&lt;a id=&quot;2_Conditional_Execution&quot; name=&quot;2_Conditional_Execution&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;2 Conditional Execution&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;You can implement a simple if command by using the &amp;amp;&amp;amp; and || operators together like this:&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;command1 &amp;amp;&amp;amp; command2 || command3&lt;/span&gt;&lt;br /&gt;
If command1 returns true, then command2 is executed, which causes&lt;br /&gt;
command3 to not be executed. If command1 does not return true, then&lt;br /&gt;
command2 is not executed, which causes command3 to be executed.&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;
&lt;h3&gt;&lt;a id=&quot;3_Grouping_Commands&quot; name=&quot;3_Grouping_Commands&quot;&gt;&lt;/a&gt;3 Grouping Commands&lt;/h3&gt;
&lt;p&gt;Commands enclosed in {} are executed in current shell. If&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ echo &quot;This is file temp:&quot; ; cat temp | nl&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;This is file temp:&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;1 The rain in Spain&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;2 falls mainly on the plain&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;padding:1em 0;text-align:center;&quot; id=&quot;ozct&quot;&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;then by using {}s, the output will be:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ { echo &quot;This is file temp:&quot;; cat temp ; } | nl&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;1 This is file temp:&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;2 The rain in Spain&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;3 falls mainly on the plain&lt;/span&gt;&lt;br /&gt;There must be whitespace after the opening {, and commands within the {}&#39;s must be terminated with a semi-colon.&lt;/p&gt;
&lt;p&gt;Commands&lt;br /&gt;
enclosed in () are executed in a subshell. Subshells are generated&lt;br /&gt;
whenever you enclose commands in ()&#39;s, perform command substitution,&lt;br /&gt;
for background processes, and for coprocesses.A subshell is a separate&lt;br /&gt;
copy of the parent shell, so variables, functions, and aliases from the&lt;br /&gt;
parent shell are available to the subshell. However, subshells cannot&lt;br /&gt;
change the value of parent shell variables, functions, or aliases.&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_104f3ccnmc3_b&quot; style=&quot;width:501px;height:609px;&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a id=&quot;4_Redirecting_Standard_Output&quot; name=&quot;4_Redirecting_Standard_Output&quot;&gt;&lt;/a&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;4 Redirecting Standard Output&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;font-family:Verdana;&quot;&gt;By using the &amp;gt; symbol, the standard output of a command can be redirected to a file, instead of your terminal.&lt;/p&gt;
&lt;p&gt;You can also use the &amp;gt; command to create an empty file:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ &amp;gt; tmp&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ ls —s tmp&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;0 tmp&lt;/span&gt;&lt;br /&gt;This is equivalent to &lt;span style=&quot;font-family:Courier New;&quot;&gt;touch tmp&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Standard output can be appended to a file by using the &lt;b&gt;&amp;gt;&amp;gt;&lt;/b&gt; redirect operator.&lt;/p&gt;
&lt;p&gt;Standard output is closed with the &lt;b&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;gt;&amp;amp;-&lt;/span&gt;&lt;/b&gt; redirect operator:&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;$ echo &quot;This is going nowhere&quot; &amp;gt;&amp;amp;-&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;$&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>行行出状元——表扬683路公交车售票员wen师傅</title>
   <link href="http://bo-yang.github.com//2008/11/09/praise-683"/>
   <updated>2008-11-09T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/11/09/praise-683</id>
   <content type="html">&lt;p&gt;
    今天坐683路公交车，又遇到了一个月前遇到的那位售票员（&lt;a href=&quot;http://blog.csdn.net/bonny95/archive/2008/10/12/3062688.aspx&quot;&gt;http://blog.csdn.net/bonny95/archive/2008/10/12/3062688.aspx&lt;/a&gt;）。她依然是那样热情的帮助乘客，依然如数家珍的报站名，依然用音乐抚慰着乘客拥挤的心灵。&lt;/p&gt;
&lt;p&gt;不同的是：车厢内更加整洁了；车厢后面多了一排小花；车厢内的高台上（新型公交车有比较大的高台）铺着她自己做的小垫子供人坐，合理利用了空间，也为乘客提供了方便；大多数乘客已经习惯了她的热诚，放心的把东西交给她保管，甚至有些乘客已经成了她的朋友（亲眼见到一位小姐亲切的叫她“wen姐”和她打招呼，不知道是“闻”还是“文”）；绝大多数公交车内一片漆黑（晚上），只有她的车内灯火通明。&lt;/p&gt;
&lt;p&gt;另外，一位中年妇女下车时不小心把买的爆米花弄撒了，wen师傅连忙安慰她。由此令我联想到坐某辆公交车，由于司机急刹车致使某位小姑娘摔倒在地，小姑娘的同伴抱怨时，而那位售票员竟然还大声呵斥摔倒的小姑娘为什么不小心……&lt;/p&gt;
&lt;p&gt;到了某个我家附近不出名的小站，wen师傅一口气将周围所有的饭店统统报了出来。我不禁伸出大拇指称赞，她笑着说“其实我只是比较喜欢吃东西”我抓住机会看了看她的工作牌，只看清了“&lt;font color=&quot;#ff0000&quot;&gt;&lt;b&gt;120513C&lt;/b&gt;&lt;/font&gt;”，不知道是不是她的工号。&lt;/p&gt;
&lt;p&gt;我要由衷的谢谢她——她用实际行动告诉了我们无论什么事情，哪怕别人都认为没有前途或者无可改进，只要用心，照样也可以做的风生水起。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tcl/Tk Notes (3)</title>
   <link href="http://bo-yang.github.com//2008/11/02/tcl-tk-note-3"/>
   <updated>2008-11-02T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/11/02/tcl-tk-note-3</id>
   <content type="html">&lt;br /&gt;
&lt;h2&gt;Part III&amp;nbsp;Tcl&amp;nbsp;Data&amp;nbsp;Structures&lt;br /&gt;
    &lt;/h2&gt;
&lt;h3&gt;&lt;a id=&quot;1_More_about_Variables_8194860&quot; name=&quot;1_More_about_Variables_8194860&quot;&gt;&lt;/a&gt;1 More&amp;nbsp;about&amp;nbsp;Variables&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
        The &lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;set &lt;/span&gt;command
      &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;The &lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;set&lt;/span&gt;&lt;br /&gt;
command is used to define variables of any type. In addition, the set&lt;br /&gt;
command will return the value &amp;nbsp;of a variable if it is only passed a&lt;br /&gt;
single argument. It treats that argument as a variable name and returns&lt;br /&gt;
the current value of the variable. &lt;/p&gt;
&lt;div style=&quot;padding:1em 0;text-align:left;&quot;&gt;
&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_126frfnfccm_b&quot; style=&quot;width:695px;height:222px;&quot; /&gt;
&lt;/div&gt;
&lt;div style=&quot;padding:1em 0;&quot;&gt;
    &amp;nbsp;&amp;nbsp; &amp;nbsp;In the&amp;nbsp;last&amp;nbsp;command,&amp;nbsp;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;$name&lt;/span&gt;&amp;nbsp;gets&amp;nbsp;substituted&amp;nbsp;with&amp;nbsp;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;var&lt;/span&gt;.&amp;nbsp;Then&amp;nbsp;the&amp;nbsp;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;set&lt;/span&gt;&amp;nbsp;command&amp;nbsp;returns&amp;nbsp;the&amp;nbsp;value&amp;nbsp;of&amp;nbsp;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;var&lt;/span&gt;,&amp;nbsp;which&amp;nbsp;is&amp;nbsp;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;the&amp;nbsp;value&amp;nbsp;of&amp;nbsp;var&lt;/span&gt;.&amp;nbsp;Another&amp;nbsp;way&amp;nbsp;to&amp;nbsp;achieve&amp;nbsp;a&amp;nbsp;level&amp;nbsp;of&amp;nbsp;indirection&amp;nbsp;like&amp;nbsp;this&amp;nbsp;is&amp;nbsp;with&amp;nbsp;nested&amp;nbsp;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;set&lt;/span&gt;&amp;nbsp;commands.&amp;nbsp;The&amp;nbsp;last&amp;nbsp;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;set&lt;/span&gt;&amp;nbsp;command&amp;nbsp;above&amp;nbsp;can&amp;nbsp;be&amp;nbsp;written&amp;nbsp;as&amp;nbsp;follows:&lt;br /&gt;
    &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;set&amp;nbsp;[set&amp;nbsp;name]&lt;/span&gt;&lt;br /&gt;
    &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;i&gt;=&amp;gt;&amp;nbsp;the&amp;nbsp;value&amp;nbsp;of&amp;nbsp;var&lt;/i&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
        The &lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;unset &lt;/span&gt;command&amp;nbsp;
      &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    &amp;nbsp;&amp;nbsp; &amp;nbsp;You can&amp;nbsp;delete&amp;nbsp;a&amp;nbsp;variable&amp;nbsp;with&amp;nbsp;the&amp;nbsp;unset&amp;nbsp;command:&lt;br /&gt;
    &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;unset &lt;i&gt;varName varName2 ...&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
        Using info to find out about variables
      &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    &amp;nbsp;&amp;nbsp; &amp;nbsp;The existence&amp;nbsp;of&amp;nbsp;a&amp;nbsp;variable&amp;nbsp;can&amp;nbsp;be&amp;nbsp;tested&amp;nbsp;with&amp;nbsp;the&amp;nbsp;info&amp;nbsp;exists&amp;nbsp;command.&lt;br /&gt;
    e.g.&amp;nbsp;&lt;br /&gt;
    &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if ![info&amp;nbsp;exists&amp;nbsp;foobar]{&lt;br /&gt;
    &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;set&amp;nbsp;foobar&amp;nbsp;0&lt;br /&gt;
    &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&amp;nbsp;else&amp;nbsp;{&lt;br /&gt;
    &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;incr&amp;nbsp;foobar }&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;2_Tcl_Lists_16283892709607128_38510692397444923&quot; name=&quot;2_Tcl_Lists_16283892709607128_38510692397444923&quot;&gt;&lt;/a&gt;2 Tcl Lists&lt;/h3&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;The Tcl list has the same structure as a Tcl command. That is, a&lt;br /&gt;
list is simply a string with list elements separated by white&lt;br /&gt;
space.Braces or quotes can be used to group words with whitespace into&lt;br /&gt;
a single list element.
&lt;div id=&quot;p_lk&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;img style=&quot;width:585px;height:506px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_1272k4p4qgs_b&quot; /&gt;&lt;br /&gt;&lt;/font&gt;&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;3_Constructing_Lists_list_lapp_6067784235213389&quot; name=&quot;3_Constructing_Lists_list_lapp_6067784235213389&quot;&gt;&lt;/a&gt;&lt;font size=&quot;2&quot;&gt;&lt;a id=&quot;3_Constructing_Lists_list_lapp_064013552814696&quot; name=&quot;3_Constructing_Lists_list_lapp_064013552814696&quot;&gt;&lt;/a&gt;&lt;a id=&quot;3_Constructing_Lists_list_lapp_48234938647299075&quot; name=&quot;3_Constructing_Lists_list_lapp_48234938647299075&quot;&gt;&lt;/a&gt;&lt;a id=&quot;3_Constructing_Lists_list_lapp&quot; name=&quot;3_Constructing_Lists_list_lapp&quot;&gt;&lt;/a&gt;3 Constructing Lists: &lt;span style=&quot;font-family:Courier New;&quot;&gt;list&lt;/span&gt;, &lt;span style=&quot;font-family:Courier New;&quot;&gt;lappend&lt;/span&gt; and &lt;span style=&quot;font-family:Courier New;&quot;&gt;concat&lt;/span&gt;&lt;/font&gt;&lt;/h3&gt;
&lt;p&gt;&lt;font size=&quot;2&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;The &lt;span style=&quot;font-family:Courier New;&quot;&gt;list&lt;/span&gt;&lt;br /&gt;
command constructs a list out of its arguments such that there is one&lt;br /&gt;
list element for each argument. if any of the arguments contain special&lt;br /&gt;
characters, the list command adds some quoting to ensure they are&lt;br /&gt;
parsed as a single element of the resulting list.&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;p&gt;&lt;font size=&quot;2&quot;&gt;e.g. &lt;i&gt;&lt;span style=&quot;font-family:Times New Roman;&quot;&gt;Constructing a list with the&lt;span style=&quot;font-family:Courier New;&quot;&gt; list &lt;/span&gt;command&lt;/span&gt;&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;set x {1 2}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;=&amp;gt; 1 2&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;set x&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;=&amp;gt; 1 2&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;list $x /$ foo&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;=&amp;gt; {1 2} {$} foo&lt;/i&gt;&lt;br /&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;[Note]: The braces used to group the list value into one argument to the set command are not part of the list value.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; The &lt;span style=&quot;font-family:Courier New;&quot;&gt;lappend&lt;/span&gt; command is used to append elements to the end of a list. You can call &lt;span style=&quot;font-family:Courier New;&quot;&gt;lappend&lt;/span&gt; with the name of an undefined variable and the variable will be created.&lt;br /&gt;e.g.&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;lappend new 1 2&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;i&gt; &lt;/i&gt;&lt;i&gt;=&amp;gt; 1 2&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;lappend new 3 &quot;4 5&quot;&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; =&amp;gt; 1 2 3 {4 5}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;set new&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;=&amp;gt; 1 2 3 {4 5}&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; The &lt;span style=&quot;font-family:Courier New;&quot;&gt;concat&lt;/span&gt;&lt;br /&gt;
command is useful for splicing together lists. It works by&lt;br /&gt;
concatenating its arguments together, separating them with spaces. This&lt;br /&gt;
multiple lists into one where the top-level list elements in each input&lt;br /&gt;
list are also top-level list elements in the resulting list.&lt;br /&gt;e.g. &lt;i&gt;Using &lt;span style=&quot;font-family:Courier New;&quot;&gt;concat &lt;/span&gt;to splice together lists.&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;concat 1 {2 3} {4 5 6}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;i&gt; &lt;/i&gt;&lt;i&gt;=&amp;gt; 1 2 3 4 5 6&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; It turns out that double quotes behave much like the &lt;span style=&quot;font-family:Courier New;&quot;&gt;concat&lt;/span&gt; command.&lt;br /&gt;e.g. &lt;i&gt;&lt;span style=&quot;font-family:Times New Roman;&quot;&gt;Double quotes compared to the &lt;span style=&quot;font-family:Courier New;&quot;&gt;list &lt;/span&gt;command.&lt;/span&gt;&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;set x {1 2}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;i&gt;&amp;nbsp; &lt;/i&gt;&lt;i&gt;=&amp;gt; 1 2&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;set y &quot;$x 3&quot;&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;=&amp;gt; 1 2 3&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;set y [concat $x 3]&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;i&gt; &lt;/i&gt;&lt;i&gt;=&amp;gt; 1 2 3&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;set z [list $x 3]&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;=&amp;gt;{1 2} 3&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; The basic rule is that &lt;span style=&quot;font-family:Courier New;&quot;&gt;list &lt;/span&gt;and&lt;span style=&quot;font-family:Courier New;&quot;&gt; lappend&lt;/span&gt; preserve preserve list structure, while &lt;span style=&quot;font-family:Courier New;&quot;&gt;concat&lt;/span&gt;(or double-quotes)eliminate one level of list structure.&lt;br /&gt;&lt;/font&gt;&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;4_Getting_List_Elements_llengt&quot; name=&quot;4_Getting_List_Elements_llengt&quot;&gt;&lt;/a&gt;&lt;font size=&quot;2&quot;&gt;4 Getting List Elements:&lt;span style=&quot;font-family:Courier New;&quot;&gt; llength, lindex, &lt;span style=&quot;font-family:Verdana;&quot;&gt;and&lt;/span&gt; lrange&lt;/span&gt;&lt;/font&gt;&lt;/h3&gt;
&lt;p&gt;&lt;font size=&quot;2&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;The &lt;span style=&quot;font-family:Courier New;&quot;&gt;llength&lt;/span&gt; command returns the number of elements in a list. &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; The &lt;span style=&quot;font-family:Courier New;&quot;&gt;lindex&lt;/span&gt; command returns a particular element of a list. It takes an index. List indices count from zero. The keyword &lt;i&gt;end&lt;/i&gt; means the last element, and it can be used with &lt;span style=&quot;font-family:Courier New;&quot;&gt;lindex, linsert, lrange &lt;/span&gt;and &lt;span style=&quot;font-family:Courier New;&quot;&gt;lreplace&lt;/span&gt;.&lt;br /&gt;e.g.&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;lindex {1 2 3} 0&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;=&amp;gt; 1&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/font&gt;&lt;font size=&quot;2&quot;&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;lindex {1 2 3} 2&lt;/span&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;=&amp;gt; 3&lt;/i&gt;&lt;/font&gt;&lt;font size=&quot;2&quot;&gt;&lt;br /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; The &lt;span style=&quot;font-family:Courier New;&quot;&gt;lrange&lt;/span&gt; command returns a range of list elements. It takes a list and two indices as arguments.&lt;br /&gt;e.g.&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;lrange {1 2 3 {4 5}} 2 end&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;=&amp;gt; 3 {4 5}&lt;/i&gt;&lt;br /&gt;&lt;/font&gt;&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;5_Modifying_Lists_linsert_and_&quot; name=&quot;5_Modifying_Lists_linsert_and_&quot;&gt;&lt;/a&gt;&lt;font size=&quot;2&quot;&gt;5 Modifying Lists: &lt;span style=&quot;font-family:Courier New;&quot;&gt;linsert&lt;/span&gt; and &lt;span style=&quot;font-family:Courier New;&quot;&gt;lreplace&lt;/span&gt;&lt;/font&gt;&lt;/h3&gt;
&lt;p&gt;&lt;font size=&quot;2&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; The &lt;span style=&quot;font-family:Courier New;&quot;&gt;linsert&lt;/span&gt;&lt;br /&gt;
command inserts elements into a list value at a specified index. If the&lt;br /&gt;
index is 0 or less, then elements are added to the front. If the index&lt;br /&gt;
is equal to or greater than the length of the list, then the elements&lt;br /&gt;
are appended to the end. Otherwise, the elements are inserted before&lt;br /&gt;
the element that is currentl as position index.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;lreplace&lt;/span&gt;&lt;br /&gt;
is used to replace a range of list elements with new elements. If you&lt;br /&gt;
don&#39;t specify any new elements, you effectively delete elements from a&lt;br /&gt;
list.&lt;br /&gt;e.g.&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;linsert {1 2} 0 new stuff&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;=&amp;gt; new stuff 1 2&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;set x [list a {b c} e d]&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;=&amp;gt; a {b c} e d&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;lreplace $x 1 2 B C&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;i&gt; &lt;/i&gt;&lt;i&gt;=&amp;gt; a B C d&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;lreplace $x 0 0&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;=&amp;gt; {b c} e d&lt;/i&gt;&lt;br /&gt;&lt;/font&gt;&lt;br /&gt;
&lt;h3&gt;&lt;a id=&quot;6_Searching_Lists_lsearch&quot; name=&quot;6_Searching_Lists_lsearch&quot;&gt;&lt;/a&gt;&lt;font size=&quot;2&quot;&gt;6 Searching Lists: &lt;span style=&quot;font-family:Courier New;&quot;&gt;lsearch&lt;/span&gt;&lt;/font&gt;&lt;/h3&gt;
&lt;p&gt;&lt;font size=&quot;2&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;lsearch&lt;/span&gt; returns the index of a value in the list, or -1 if it is not present. &lt;span style=&quot;font-family:Courier New;&quot;&gt;lsearch&lt;/span&gt; supports pattern matching in its search. Glob-style pattern matching is default, and this canbe disabled with the &lt;span style=&quot;font-family:Courier New;&quot;&gt;-exact&lt;/span&gt; flag.&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;The example below uses&lt;span style=&quot;font-family:Courier New;&quot;&gt; lreplace&lt;/span&gt; to delete elements by not specifying any replacement list elements.&lt;br /&gt;e.g.&lt;br /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; proc delete {list value} {&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; set ix [lsearch -exact $list $value]&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if {$ix&amp;gt;=0} {&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return [lreplace $list $ix $ix]&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } else {&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return $list&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/span&gt;&lt;br style=&quot;font-family:Courier New;&quot; /&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;br /&gt;
&lt;h3&gt;&lt;font size=&quot;2&quot;&gt;7 Sorting List: &lt;span style=&quot;font-family:Courier New;&quot;&gt;lsort&lt;/span&gt;&lt;/font&gt;&lt;/h3&gt;
&lt;p&gt;&lt;font size=&quot;2&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;The three basic types of sorts are specified with the &lt;span style=&quot;font-family:Courier New;&quot;&gt;-ascii, -integer&lt;/span&gt;, or &lt;span style=&quot;font-family:Courier New;&quot;&gt;-real&lt;/span&gt; options. The &lt;span style=&quot;font-family:Courier New;&quot;&gt;-increasing&lt;/span&gt; or &lt;span style=&quot;font-family:Courier New;&quot;&gt;-decreasing&lt;/span&gt; option indicate the sirting order. The default option set is &lt;span style=&quot;font-family:Courier New;&quot;&gt;-ascii -increasing&lt;/span&gt;.
&lt;div id=&quot;y4i8&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:700px;height:341px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_12843xpw3gx_b&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;8 The split And join Commands&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;The &lt;span style=&quot;font-family:Courier New;&quot;&gt;split &lt;/span&gt;command&lt;br /&gt;
takes a string and turns it into a list by breaking it at specified&lt;br /&gt;
characters. Stray double-quotes or curly braces in the input can result&lt;br /&gt;
in invalid list structures and errors in your script. However, the&lt;br /&gt;
split command provides a robust way to turn input lines into proper Tcl&lt;br /&gt;
lists.
&lt;div id=&quot;nj_b&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:659px;height:134px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_129dnrj74dp_b&quot; /&gt;&lt;/div&gt;
&lt;div id=&quot;s61w&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:672px;height:134px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_130f2ksvcpn_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;The&lt;br /&gt;
default split character is white space. If there are multiple separator&lt;br /&gt;
characters in a row, these result in empty list elements- the&lt;br /&gt;
separators are not collapsed. The following command splits on commas,&lt;br /&gt;
periods, spaces and tabs:
&lt;div id=&quot;i_2y&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:299px;height:78px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_131fm4hj3gx_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;The&lt;span style=&quot;font-family:Courier New;&quot;&gt; join &lt;/span&gt;command&lt;br /&gt;
is the inverse of split. It takes a list value and reformats it with&lt;br /&gt;
specified characters separating the list elements. In doing so, it will&lt;br /&gt;
remove any curly braces from the string representation of the list that&lt;br /&gt;
are used to group the top-level elements.
&lt;div id=&quot;z1an&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:269px;height:55px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_132gxv9m5gb_b&quot; /&gt;&lt;/div&gt;
&lt;h3&gt;9 Arrays&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;The index of an array is delimited by parentheses. The&lt;br /&gt;
index can have any string value, and it canbe the result of variable or&lt;br /&gt;
command substitution.&lt;br /&gt;&lt;span&gt;e.g.&lt;span&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;set arra(&lt;/span&gt;&lt;i&gt;index&lt;/i&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;) value&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;The value of an array element is obtained with $ substitution:&lt;br /&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;e.g.&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;set foo $arr(&lt;/span&gt;&lt;i&gt;index&lt;/i&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;)&lt;/span&gt;
&lt;div id=&quot;rrr0&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:551px;height:145px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_133dvtqdmcr_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;If&lt;br /&gt;
you have complex indices, use a comma to separate different parts of&lt;br /&gt;
the index. Avoid putting a pace after the comma. It is legal, but a&lt;br /&gt;
space in an index value will cause problems because parenthesis are not&lt;br /&gt;
used as a grouping mechanism. The space in the index needs to be quoted&lt;br /&gt;
with a backslash, or hte whole variable reference needs to be grouped:&lt;br /&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;e.g.&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;set {arr(I&#39;m asking for trouble)} {I told you so.}&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;If&lt;br /&gt;
the array index is stored in a variable, then there is no problem with&lt;br /&gt;
spaces in the variable&#39;s value. The following works fine:&lt;span&gt;&lt;br /&gt;e.g.&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;set index {&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;font&gt;&lt;font size=&quot;2&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;I&#39;m asking for trouble&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;set arr($index) {&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;font&gt;&lt;font size=&quot;2&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;I told you so.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;The&lt;br /&gt;
name of the array can be the result of a substitution. If the name of&lt;br /&gt;
the array is stored in another variable, then you must use set as shown&lt;br /&gt;
in the last command below to reference the array elements. 
&lt;div id=&quot;v86g&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:622px;height:266px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_134ckqvbpf3_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;10 The Array Command&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;
&lt;div id=&quot;uxsm&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:722px;height:215px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_135g7rtd4rd_b&quot; /&gt;&lt;/div&gt;
&lt;div style=&quot;padding:1em 0;&quot;&gt;
&lt;div id=&quot;j5ji&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:722px;height:215px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_137gkb3k889_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;The array names command is perhaps the most useful because it allows easy iteration through an array with a foreach loop:&lt;br /&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;foreach index [array names arr] {command body}&lt;/span&gt;&lt;br /&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;The order of the names returned by array names is&lt;br /&gt;
arbitrary. It is essentially determined by the hash table&lt;br /&gt;
implementation of the array.&lt;br /&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;The &lt;span style=&quot;font-family:Courier New;&quot;&gt;array get&lt;/span&gt; and &lt;span style=&quot;font-family:Courier New;&quot;&gt;array set&lt;/span&gt; operations are used to convert between an array and a list. The list returned by &lt;span style=&quot;font-family:Courier New;&quot;&gt;array get&lt;/span&gt;&lt;br /&gt;
has an even number of elements.The first element is an index, and the&lt;br /&gt;
next is the corresponding array value. The ordering of the indexes is&lt;br /&gt;
arbitrary. The list argument to &lt;span style=&quot;font-family:Courier New;&quot;&gt;array se&lt;/span&gt;t must have the same structure.&lt;/p&gt;
&lt;div id=&quot;h3:o&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:467px;height:159px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_138fgwktmcn_b&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;11 Environment Variables&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;In UNIX, the process environment variables are available through the global array &lt;span style=&quot;font-family:Courier New;&quot;&gt;env&lt;/span&gt;.&lt;br /&gt;
The name of the environment variable is the index,e.g. env(PATH), and&lt;br /&gt;
the array element contains the current value of the environment&lt;br /&gt;
variable.&lt;/p&gt;
&lt;h3&gt;12 Tracing Variable Values&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;The trace command lets you register a command to be called whenever a variable is accessed, modified or unset. The form is:&lt;br /&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;trace &lt;i&gt;variable name ops command&lt;/i&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;The name is a Tcl variable name, which can be a simple&lt;br /&gt;
variable, an array or a element.If a whole array is traced, then the&lt;br /&gt;
trace is invoked when any element is used according to ops. The ops&lt;br /&gt;
argument is one or more of the letters: r for read traces, w for write&lt;br /&gt;
traces, and u for unset traces. The command is executed when one of&lt;br /&gt;
these events occurs. It is invoked as:&lt;br /&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;command name1 name2 op&lt;/span&gt;&lt;/p&gt;
&lt;div id=&quot;gbxa&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:631px;height:266px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_139f4brdcdj_b&quot; /&gt;&lt;/p&gt;
&lt;div id=&quot;fq6s&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:565px;height:249px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_140c4szdzcj_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Information about traces on a varible is returned with the vinfo option.&lt;br /&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;trace vinfo dynamic&lt;/span&gt;&lt;br /&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;i&gt;=&amp;gt; {r FixDynamic}&lt;/i&gt;&lt;br /&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;A trace is deleted with the &lt;span style=&quot;font-family:Courier New;&quot;&gt;vdelete &lt;span style=&quot;font-family:Verdana;&quot;&gt;trace&lt;/span&gt;&lt;/span&gt; option, which has the same form as the &lt;span style=&quot;font-family:Courier New;&quot;&gt;varible&lt;/span&gt; option.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;/font&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Tcl/Tk Notes (1)</title>
   <link href="http://bo-yang.github.com//2008/10/27/tcl-tk-note-1"/>
   <updated>2008-10-27T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/10/27/tcl-tk-note-1</id>
   <content type="html">&lt;div&gt;
&lt;div style=&quot;text-align:center;&quot;&gt;
&lt;h1&gt;
      Tcl/Tk Notes&lt;br /&gt;
    &lt;/h1&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
&lt;div&gt;&lt;/p&gt;
&lt;h2&gt;
      Part I TCL Overview&lt;br /&gt;
    &lt;/h2&gt;
&lt;h3&gt;
      1 Everything Is a String&lt;br /&gt;
    &lt;/h3&gt;
&lt;p&gt;    &amp;nbsp;&amp;nbsp; &amp;nbsp;In Tcl, evrything is a string, and you have to explicitly ask for evaluation of variables and nested commands.&lt;/p&gt;
&lt;h3&gt;
      2 Substitution&lt;br /&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
        Variable
      &lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;
    &amp;nbsp;&amp;nbsp;&amp;nbsp; The use of dollar sign($) is one kind of substitution. Variables can be assigned values by &lt;span style=&quot;font-family:Courier New;&quot;&gt;set&lt;/span&gt; command.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
        Command Substitution
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; A nested command is delimited by square brackets, [ and ]. The Tcl&lt;br /&gt;
takes everything between the brackets and evaluates it as a command. It&lt;br /&gt;
Reqrites the outer command by replacing the square brackets and&lt;br /&gt;
everything between them with the result of nested command.
&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
      Math Expression
    &lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;
  &amp;nbsp;&amp;nbsp;&amp;nbsp; The &lt;span style=&quot;font-family:Courier New;&quot;&gt;expr &lt;/span&gt;command is used to evaluate math expressions. The Tcl interpreter treats &lt;span style=&quot;font-family:Courier New;&quot;&gt;expr &lt;span style=&quot;font-family:Verdana;&quot;&gt;just like any other command, and it leaves the expression parsing up to the &lt;span style=&quot;font-family:Courier New;&quot;&gt;expr &lt;/span&gt;implementation.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
      Backslash Substitution
    &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp; Backslash(/) is used to quote characters that have special meaning to the interpreter. &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;You can also specify characters that are hard to type directly by giving their octal or hexadecimal value. &lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&amp;nbsp;Another common use of backslashes is to continue long commands on&lt;br /&gt;
multiple lines. A backslash as the last character in a line is&lt;br /&gt;
converted into a space.&lt;br /&gt;
&lt;h3&gt;3 Double Quotes vs. Curly Braces&lt;/h3&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
Double quotes, like braces, are used to group words together. The&lt;br /&gt;
difference between double quotes and curly braces is that quotes allow&lt;br /&gt;
substitutions to occur in the group, while curly braces prevent&lt;br /&gt;
substitutions.
&lt;div id=&quot;o6jd&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://docs.google.com/File?id=dd6nw3mt_112fm5tm2gc_b&quot;&gt;&lt;img style=&quot;width:666px;height:166px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_112fm5tm2gc_b&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
In practice, grouping with curly braces is used when substitutions on&lt;br /&gt;
the argument need to be delayed until a later time( or never done at&lt;br /&gt;
all). Examples include contrl flow statements and procedure&lt;br /&gt;
declararions. Double quotes are usefulin simple cases like the &lt;span style=&quot;font-family:Courier New;&quot;&gt;puts&lt;/span&gt; command.&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Another common use of quotes is with the &lt;span style=&quot;font-family:Courier New;&quot;&gt;format &lt;/span&gt;command&lt;br /&gt;
that is similar to C printf function. The only way to effectively group&lt;br /&gt;
special characters in format command into a single argument is with&lt;br /&gt;
quotes.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;e.g. puts [format &quot;Item: %s/t%5.3f&quot; $name $value]&lt;/span&gt;&lt;br /&gt;
&lt;h3&gt;4 Procedures&lt;/h3&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Tcl uses the &lt;span style=&quot;font-family:Courier New;&quot;&gt;proc&lt;/span&gt; command to define procedures. The syntax is : &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; proc &lt;i&gt;name arglist body&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;color:rgb(255,0,0);&quot;&gt;The &lt;span style=&quot;font-family:Courier New;&quot;&gt;return&lt;/span&gt;&lt;br /&gt;
command in Tcl procedure is optional because the interpreter will&lt;br /&gt;
return the value of the last command in the body as the value of the&lt;br /&gt;
procedure.&lt;/span&gt;&lt;br /&gt;
&lt;h3&gt;5 A While Loop Example &lt;/h3&gt;
&lt;div id=&quot;azjc&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:584px;height:205px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_113d4kxm7gt_b&quot; /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;The loop around boolean expression &lt;span style=&quot;font-family:Courier New;&quot;&gt;$i&amp;lt;=10&lt;/span&gt;&lt;br /&gt;
is crucial, because it delays substitution until while command&lt;br /&gt;
implementation tests the expression. The following expression is an&lt;br /&gt;
infinite loop:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;set i; while $i&amp;lt;=10 {incr i}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;The Tcl interpreter will substitute for $i before while is called, so while gets a constant expression &lt;span style=&quot;font-family:Courier New;&quot;&gt;1&amp;lt;=10&lt;/span&gt;&lt;br /&gt;
that will always be ture.You can avoid this kind of errors by adopting&lt;br /&gt;
a consistent coding style that always groups expressions and command&lt;br /&gt;
bodies with curly braces.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; The command in the example uses &lt;span style=&quot;font-family:Courier New;&quot;&gt;set&lt;/span&gt; with a single argument. When used in this way the &lt;span style=&quot;font-family:Courier New;&quot;&gt;set&lt;/span&gt; command returns the current value of the named variable.&lt;/p&gt;
&lt;h3&gt;6 Grouping And Command Substitution&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Grouping&lt;br /&gt;
decisions are made before substitutions are performed. This means that&lt;br /&gt;
the values of variables or command results do not affect grouping.&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;A&lt;br /&gt;
single round if substitutions is performed before command invocation.&lt;br /&gt;
That is, the result of a substitution is not interpreted a second time.&lt;br /&gt;
This rule is important if you have a variable value or a command result&lt;br /&gt;
that contains special characters such as spaces, dollar-signs, square&lt;br /&gt;
brackets or braces. Because only a single round of substitution is&lt;br /&gt;
done, you don&#39;t have to worry about special characters in values&lt;br /&gt;
causing extra substitutions.&lt;/p&gt;
&lt;h3&gt;7 Comments&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Tcl&lt;br /&gt;
uses # for comments. Unlike many languages, the # character must occur&lt;br /&gt;
at the begining of a command. An easy trick to append a comment to the&lt;br /&gt;
end of a command is to proceed the # with a semicolon in order to&lt;br /&gt;
terminate the previous command.&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;A backslash(/)&lt;br /&gt;
continues a comment line onto the next line of the script. In addition,&lt;br /&gt;
a semi-colon inside a comment is not significant. only a newline&lt;br /&gt;
terminates comments.&lt;br /&gt;
&lt;h3&gt;8 Reference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;backslash Sequences&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div id=&quot;z8dm&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:725px;height:491px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_114hkq332ct_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;Arithmetic Operators&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div id=&quot;t0kt&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:713px;height:448px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_115cx6tf2gk_b&quot; /&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Built-in Math Function&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div id=&quot;wkim&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:584px;height:625px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_116gqq38zfc_b&quot; /&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Core Tcl Commands&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div id=&quot;dwzb&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:584px;height:94px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_117fsn9v3dj_b&quot; /&gt;
&lt;div id=&quot;f3wa&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:561px;height:804px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_118vb3288fz_b&quot; /&gt;&lt;/div&gt;
&lt;div id=&quot;vr6z&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:561px;height:804px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_119vq4tt6fx_b&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Predefined Variables
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&quot;gq9h&quot; style=&quot;padding:1em 0;text-align:left;&quot;&gt;&lt;img style=&quot;width:562px;height:376px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_120c9tpw3fv_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;&lt;/div&gt;
&lt;p&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;div&gt;&lt;span style=&quot;background-color:rgb(255,255,0);&quot;&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;/div&gt;
&lt;p&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>UNIX Workshop Notes</title>
   <link href="http://bo-yang.github.com//2008/10/21/unix-workshop-note"/>
   <updated>2008-10-21T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/10/21/unix-workshop-note</id>
   <content type="html">&lt;p&gt;&amp;lt;style&amp;gt;&lt;br /&gt;
st1/:*{behavior:url(#ieooui) }&lt;br /&gt;
&amp;lt;/style&amp;gt;&lt;br /&gt;
&amp;lt;![endif]--&amp;gt;&lt;/p&gt;
&lt;h1 style=&quot;text-align:center;&quot; align=&quot;center&quot;&gt;&lt;i&gt;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;&#39;&gt;UNIX Workshop&lt;/span&gt;&lt;/i&gt; Notes&lt;/h1&gt;
&lt;h3&gt;1 &lt;a href=&quot;http://hebb.cis.uoguelph.ca/%7Edave/27320/new/unixphil.html&quot;&gt;The&lt;br /&gt;
UNIX Philosophy&lt;/a&gt;&lt;/h3&gt;
&lt;ul style=&quot;margin-top:0;&quot; type=&quot;disc&quot;&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;small&lt;br /&gt;
     is beautiful &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;make&lt;br /&gt;
     each program do one thing well &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;build&lt;br /&gt;
     a prototype as soon as possible &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;choose&lt;br /&gt;
     portability over efficiency &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;store&lt;br /&gt;
     numerical data in flat files &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;use&lt;br /&gt;
     software leverage to your advantage &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;use&lt;br /&gt;
     shell scripts to increase leverage and portability &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;avoid&lt;br /&gt;
     captive user interfaces &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;make&lt;br /&gt;
     every program a filter&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;The Ten Lesser Tenets&lt;/p&gt;
&lt;ul style=&quot;margin-top:0;&quot; type=&quot;disc&quot;&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;allow&lt;br /&gt;
     the user to tailor the environment &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;make&lt;br /&gt;
     operating system kernels small and lightweight &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;use&lt;br /&gt;
     lower case and keep it short &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;save&lt;br /&gt;
     trees &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;silence&lt;br /&gt;
     is golden &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;think&lt;br /&gt;
     parallel &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;the&lt;br /&gt;
     sum of the parts if greater than the whole &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;look&lt;br /&gt;
     for the ninety percent solution &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;worse&lt;br /&gt;
     is better &lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;think&lt;br /&gt;
     hierarchically&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;2 /etc/passwd&lt;/h3&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;The /etc/passwd file determines&lt;br /&gt;
which shell takes effect during your interactive UNIX session.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;/etc/passwd also contains account&lt;br /&gt;
info, which includes UID and GID.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;3 init process&lt;/h3&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;Each process can have one or more&lt;br /&gt;
child process. If you kill the parent of a child process, it automatically&lt;br /&gt;
becomes the child of init.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;&lt;i&gt;init&lt;/i&gt;&lt;/b&gt; is the last process&lt;br /&gt;
created at boot time. It always has a process ID (PID) of 1 (i.e. on all&lt;br /&gt;
Unixes). init is responsible for starting all subsequent processes.&lt;br /&gt;
Consequently, it is the parent (in other words, mother of all processes!) of&lt;br /&gt;
all (non-dummy) Unix processes.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;4 Address Space&lt;/h3&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;For each new process created, the&lt;br /&gt;
kernel sets up an address space in memory. This address space consists of the&lt;br /&gt;
following logical segments:&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot; lang=&quot;ZH-CN&quot;&gt;•&lt;/span&gt; text - contains the program&#39;s instructions.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot; lang=&quot;ZH-CN&quot;&gt;•&lt;/span&gt; data - contains initialized program variables.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot; lang=&quot;ZH-CN&quot;&gt;•&lt;/span&gt; bss - contains uninitialized program variables.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot; lang=&quot;ZH-CN&quot;&gt;•&lt;/span&gt; stack - a dynamically growable segment, it contains&lt;br /&gt;
variables allocated locally&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;and parameters passed to&lt;br /&gt;
functions in the program.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;5 Process&lt;/h3&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:28.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span&gt;&lt;span&gt;1)&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;Context of Process &amp;amp; Context Switching&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;The &lt;b&gt;context of a process&lt;/b&gt; is essentially a snapshot of its current&lt;br /&gt;
runtime environment, including its address space, stack space, etc. At any&lt;br /&gt;
given time, a process can be in user-mode, kernel-mode, sleeping, waiting on&lt;br /&gt;
I/O, and so on. The process scheduling subsystem within the kernel uses a time&lt;br /&gt;
slice of typically 20ms to rotate among currently running processes. Each&lt;br /&gt;
process is given its share of the CPU for 20ms, then left to sleep until its turn&lt;br /&gt;
again at the CPU. This process of moving processes in and out of the CPU is&lt;br /&gt;
called &lt;b&gt;context switching&lt;/b&gt;. The kernel&lt;br /&gt;
makes the operating system appear to be multi-tasking (i.e. running processes&lt;br /&gt;
concurrently) via the use of efficient context-switching.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:28.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span&gt;&lt;span&gt;2)&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;Process status:&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;R - runable, currently on the run&lt;br /&gt;
queue&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;S - currently sleeping (waiting&lt;br /&gt;
on a pipe, completion of I/O, terminal input, memory)&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;T - currently stopped&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;Z - defunct or zombie (a process&lt;br /&gt;
with no swappable image but a structure in memory)&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:28.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span&gt;&lt;span&gt;3)&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;Signal:&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;SIGHUP&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;1&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Hangup&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;SIGINT&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;2&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Interrupt&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;SIGKILL&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;9&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Kill (cannot be&lt;br /&gt;
caught or ignore)&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;SIGTERM&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;15&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Terminate&lt;br /&gt;
(termination signal from SIGKILL)&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;6 Boot and Shutdown UNIX&lt;/h3&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:10.5pt;&quot;&gt;(1) Boot System&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;Boot scripts are normal shell&lt;br /&gt;
scripts. The boot scripts will execute by “init” process through sh. Boot&lt;br /&gt;
scripts’ task include set computer name, set timezone, check hard disk with&lt;br /&gt;
fsck, install file system, configure network interface, start daemon process&lt;br /&gt;
and network services, start log and disk quota etc.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;BSD doesn’t have run level. ATT&lt;br /&gt;
System V has run level define in &lt;b&gt;/etc/inittab&lt;/b&gt;.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;(2) Shutdown System&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:46.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Poweroff&lt;br /&gt;
( !!! may damage system )&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:46.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Shutdown&lt;br /&gt;
( good way )&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:46.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;halt (&lt;br /&gt;
will change system to single user mode )&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:46.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;reboot&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:46.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;init or&lt;br /&gt;
telinit ( change the run level )&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;7 su V.S. su -&lt;/h3&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot; lang=&quot;ZH-CN&quot;&gt;”&lt;/span&gt;su &amp;lt;account&amp;gt;” only change to another user’s&lt;br /&gt;
account. “su – &amp;lt;account&amp;gt;“ will excute&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;user’s profile while changing.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot; lang=&quot;ZH-CN&quot;&gt;“&lt;/span&gt;su” or “su –“ without any account parameter means&lt;br /&gt;
you hope to change to&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;superuser(root).&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;8 Unix Environment &lt;/h3&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:28.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span&gt;&lt;span&gt;1)&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;setup user environment in ksh&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:64.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;$HOME/.profile&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:64.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;shell variables: varname=value&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:64.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;unset variables&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:64.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;aliases&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:64.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;options&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;Any variable can become an&lt;br /&gt;
environment variable with the command&lt;b&gt;:&lt;br /&gt;
export &lt;i&gt;varnames&lt;/i&gt;&lt;/b&gt;.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;environment file will told sub&lt;br /&gt;
process other variables, options, aliases that shell wish to told it. Environment&lt;br /&gt;
file name can be any name, as long as you set the environment variable ENV to&lt;br /&gt;
the file&#39;s name.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;span style=&quot;color:red;&quot;&gt;Alias&lt;/span&gt;&lt;br /&gt;
is a synonym for a command or command string. You define an alias by entering&lt;br /&gt;
(or adding to your .profile) a line with the following form: &lt;b&gt;alias &lt;i&gt;new&lt;/i&gt;=&lt;i&gt;original&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;span style=&quot;color:red;&quot;&gt;Options&lt;/span&gt;&lt;br /&gt;
let you change the shell&#39;s behavior. The basic commands that relate to options&lt;br /&gt;
are &lt;b&gt;set -o &lt;i&gt;optionnames&lt;/i&gt;&lt;/b&gt; and &lt;b&gt;set +o &lt;i&gt;optionnames&lt;/i&gt;&lt;/b&gt;, where &lt;b&gt;&lt;i&gt;optionnames&lt;/i&gt;&lt;/b&gt;&lt;br /&gt;
is a list of option names separated by blanks. the &lt;b&gt;-&lt;/b&gt; turns the named option on, while the &lt;b&gt;+&lt;/b&gt; turns it off.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:28.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span&gt;&lt;span&gt;2)&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;Built-in Variables&lt;/p&gt;
&lt;ul style=&quot;margin-top:0;&quot; type=&quot;disc&quot;&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;PS1,&lt;br /&gt;
     PS2, PS3 , PS4&lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;TERM&lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;PATH,&lt;br /&gt;
     MANPATH&lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;HOME&lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;PWD&lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;HISTFILE&lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;EDITOR&lt;/li&gt;
&lt;li class=&quot;MsoNormal&quot;&gt;VISUAL&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;9 Common Control Characters&lt;/h3&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:36pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span&gt;&lt;span&gt;1)&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;Erase Character&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:72pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;[BACKSPACE]&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:72pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-size:9.5pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;[DELETE], [DEL] key&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:72pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-size:9.5pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:Arial;&quot;&gt;[CTRL-H]&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:36pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span&gt;&lt;span&gt;2)&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;Other Control Characters&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:46.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;[CTRL-U]&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Erases&lt;br /&gt;
the whole input line; you can start over.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:46.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;[CTRL-S]&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Pauses&lt;br /&gt;
output from a program that is writing to the screen.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:46.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;[CTRL-Q]&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Restarts&lt;br /&gt;
output after a pause by [CTRL-S].&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:46.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;[CTRL-D]&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Used&lt;br /&gt;
to signal end-of-input for some programs.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;10 File System Inside&lt;/h3&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-align:center;text-indent:10.5pt;&quot; align=&quot;center&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img src=&quot;/DOCUME%7E1/bonny/LOCALS%7E1/Temp/msohtml1/01/clip_image002.gif&quot; width=&quot;519&quot; border=&quot;0&quot; height=&quot;193&quot; /&gt;&lt;!--[endif]--&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;super&lt;/b&gt; block describes the state of the file system: the total size&lt;br /&gt;
of the partition, the block size, pointers to a list of free blocks, the inode&lt;br /&gt;
number of the root directory, magic number, etc.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-align:center;text-indent:10.5pt;&quot; align=&quot;center&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img src=&quot;/DOCUME%7E1/bonny/LOCALS%7E1/Temp/msohtml1/01/clip_image004.gif&quot; width=&quot;177&quot; border=&quot;0&quot; height=&quot;151&quot; /&gt;&lt;!--[endif]--&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;11 I/O Redirection&lt;/h3&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-align:center;text-indent:10.5pt;&quot; align=&quot;center&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img src=&quot;/DOCUME%7E1/bonny/LOCALS%7E1/Temp/msohtml1/01/clip_image006.gif&quot; width=&quot;576&quot; border=&quot;0&quot; height=&quot;394&quot; /&gt;&lt;!--[endif]--&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;xargs&lt;/b&gt; &lt;i&gt;[options] [command]&lt;/i&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;Execute command (with any initial&lt;br /&gt;
arguments), but read remaining arguments from standard input instead of&lt;br /&gt;
specifying them directly. xargs passes these arguments in several bundles to&lt;br /&gt;
command, allowing command to process more arguments than it could normally&lt;br /&gt;
handle at once. The arguments are typically a long list of filenames (generated&lt;br /&gt;
by ls or find, for example) that get passed to xargs via a pipe.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;Example:&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;grep for pattern in all files on&lt;br /&gt;
the home directory /home/foo:&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:36pt;&quot;&gt;&lt;i&gt;find /home/foo -print | xargs grep pattern &amp;gt; out &amp;amp;&lt;/i&gt;&lt;/p&gt;
&lt;h3&gt;12 Search and Patterns&lt;/h3&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;(1) Searching Commands&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:46.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;… find&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:46.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;… grep&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:46.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;… egrep&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:46.5pt;text-indent:-18pt;&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span style=&quot;font-family:Symbol;&quot;&gt;&lt;span&gt;·&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;… fgrep&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot; lang=&quot;ZH-CN&quot;&gt;①&lt;/span&gt;&lt;b&gt; find&lt;/b&gt; &lt;i&gt;pathname(s)&lt;br /&gt;
condition(s)&lt;/i&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;find descends the directory tree&lt;br /&gt;
beginning at each pathname and locates files that meet the specified&lt;br /&gt;
conditions. At least one pathname and one condition must be specified. The most&lt;br /&gt;
useful conditions include -print (which must be explicitly given to display any&lt;br /&gt;
output), -name and -type (for general use), -exec and -size (for advanced&lt;br /&gt;
users), and -mtime and -user (for administrators). Examples:&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;i&gt;find $HOME –print&lt;/i&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;i&gt;find $HOME –name ‘core’ –exec rm –rf {} /;&lt;/i&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot; lang=&quot;ZH-CN&quot;&gt;②&lt;/span&gt; &lt;b&gt;grep&lt;/b&gt; &lt;i&gt;[options] regexp [files]&lt;/i&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;Search one or more files for&lt;br /&gt;
lines that match a regular expression regexp. Examples:&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;List the number of users who use&lt;br /&gt;
the korn shell:&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;i&gt;grep -c /bin/ksh /etc/passwd&lt;/i&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;List header files that have at&lt;br /&gt;
least one #include directive:&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;i&gt;grep -l &#39;^#include&#39; /usr/include/*&lt;/i&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;List files that don&#39;t contain&lt;br /&gt;
pattern:&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;i&gt;grep -c pattern files | grep :0&lt;/i&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;(2) Patterns (Regular Expressions&lt;br /&gt;
)&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;A regular expression describes a &lt;b&gt;pattern&lt;br /&gt;
&lt;/b&gt;or a particular sequence of characters, although it does not necessarily&lt;br /&gt;
specify a single exact sequence. Pattern is composed of mixed sequence of&lt;br /&gt;
characters and &lt;b&gt;metacharacters&lt;/b&gt;.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-align:center;text-indent:10.5pt;&quot; align=&quot;center&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img src=&quot;/DOCUME%7E1/bonny/LOCALS%7E1/Temp/msohtml1/01/clip_image008.gif&quot; width=&quot;483&quot; border=&quot;0&quot; height=&quot;454&quot; /&gt;&lt;!--[endif]--&gt;&lt;/p&gt;
&lt;h3&gt;13 UNIX Power Tools&lt;/h3&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;(1) Backup &amp;amp; Compression&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;tar&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;cpio&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;dd&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;compress&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;uncompress&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;unzip&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;gzip/gunzip/zcat&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;bzip2/bzcat&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;filename suffix&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:10.55pt;text-indent:10.5pt;&quot;&gt;. .tar&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:10.55pt;text-indent:10.5pt;&quot;&gt;. .Z&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:10.55pt;text-indent:10.5pt;&quot;&gt;. .gz&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:10.55pt;text-indent:10.5pt;&quot;&gt;. .tar.Z&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:10.55pt;text-indent:10.5pt;&quot;&gt;. .tar.gz&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:10.55pt;text-indent:10.5pt;&quot;&gt;. .zip&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:10.55pt;text-indent:10.5pt;&quot;&gt;. .bz; .tar.bz&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:10.55pt;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;(2) Text Processing&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;cut&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/b&gt;Select columns for display.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;join&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/b&gt;Merge different columns into a database.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;paste&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/b&gt;Merge columns or switch order.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;sort&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/b&gt;Sort or merge files.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;tr&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/b&gt;Translate (redefine) characters.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;uniq&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/b&gt;Find repeated or unique lines in a file.&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;sed&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/b&gt;Stream editor, edit one or more files without user&lt;br /&gt;
interaction&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;awk&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/b&gt;Use the pattern-matching program to modify the&lt;br /&gt;
specified files&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;(3) Job Control&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:36pt;&quot;&gt;jobs&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:36pt;&quot;&gt;fg&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:36pt;&quot;&gt;bg&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:36pt;&quot;&gt;ps&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:36pt;&quot;&gt;kill&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;(4) Communication and network&lt;br /&gt;
utilities&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;ftp&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;rsh/remsh&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;$HOME/.rhosts&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;rup&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;mailx&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;$HOME/.forward&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;ping&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;netstat&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&lt;b&gt;ifconfig&lt;/b&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:10.5pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Perl笔记（一）</title>
   <link href="http://bo-yang.github.com//2008/10/06/perl-note-1"/>
   <updated>2008-10-06T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/10/06/perl-note-1</id>
   <content type="html">&lt;p&gt;
    1 Perl中所有数字内部格式一致，只有双精度浮点数（Perl内部没有整数值）。&lt;br /&gt;2 Perl中允许用下划线来分隔比较长的整数，如612980400283768和612_980_400_283_768是相同的值。&lt;br /&gt;3 Perl中的非十进制整数：八进制以0开头，十六机制以0x开头，二进制以0b开头。&lt;br /&gt;4 Perl中的数字操作符除加减乘除之外，还有模数运算符(%)和指数操作符(**)。对于%，两个操作数首先变成对应的整数值，如10.5%3.2首先变成10%3后再计算。在模数运算中，如果有一个操作数为负数，其结果和Perl的具体实现有关。另外，通常不能进行一个负数的非整数次方的运算（这将产生一个复数），除非有了Math::Complex模块。&lt;br /&gt;5 单引号字符串&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;单引号不是字符串的一部分，但Perl可以用它辨别字符串的开始和结束。除了单引号或者反斜线（包括换行字符，如果字符串在下一行继续）之外的任何字符都表示它自身。要得到一个反斜线，可以把两个反斜线放在一起；要得到单引号，需要在单引号之前加上反斜线。单引号字符串中的/n不会被当作换行符来处理，其仅仅是两个字符/和n。只有在反斜线后面接的是/或者是单引号&#39;才会被当作特殊字符来处理。&lt;br /&gt;6 双引号字符串&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;双引号字符串中/n为换行符。双引号中的转义字符：&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ 符号&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 含义&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /n&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 换行&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /r&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 回车&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /t&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 制表符&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /f&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ formfeed&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /b&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 退格&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /a&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 响铃&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /e&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ escape(ASCII中的escape字符)&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /007&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 任何八进制值（这里是007=bell）&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /x7f&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 任何十六进制值（这里是007＝bell）&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /cC&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 一个控制符（这里是Ctrl+c）&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ //&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 反斜线&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /&quot;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 双引号&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /l&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 下个字符小写&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /L&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 接下来的字符均小写直到/E&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /u&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 下个字符大写&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /U&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 接下来的字符均大写知道/E&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /Q&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 在non-word字符之前加上/,直到/E&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br /&gt;｜ /E&amp;nbsp;&amp;nbsp; &amp;nbsp;｜ 结束/L, /E和/Q&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;｜&lt;br /&gt;&amp;nbsp;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;/p&gt;
&lt;p&gt;双引号字符串的另一个性质是可以进行变量内插，也即当使用字符串时，如果字符串中含有变量名，将由变量的当前值替换它。&lt;/p&gt;
&lt;p&gt;7 字符串操作符&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;字符串可由.操作符连接。&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;字符串重复操作符为小写字母x，如&quot;fred&quot; x 3 #&quot;fredfredfred&quot;, 5 x 4 #实际上是&quot;5555&quot;。&lt;/p&gt;
&lt;p&gt;8 数字和字符串之间的自动转换&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;Perl将在需要的时候根据标量值之间的操作符自动进行数字和字符串之间的自动转换。 &lt;/p&gt;
&lt;p&gt;9 Perl中的标量变量都形如$fred。当一个字符串由双引号括起来时，如果变量前没有反斜线，则变量的值会被替换（如果一个变量未被赋值，则将使用空值）。Perl提供了分隔符{}将变量名括起来，如：&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;$what=&quot;brontosaurus steak&quot;;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;$n=3;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;print &quot;fred ate $n $whats./n&quot;;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;#输出不是steaks，而是$whats的值&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;print &quot;fred ate $n ${what}s./n&quot;;&amp;nbsp;&amp;nbsp; &amp;nbsp;#现在使用$what的值。&lt;/p&gt;
&lt;p&gt;10 Perl中没有Boolean类型，但可以利用一下几条法则帮助记忆：&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;如果值为数字，0是false，其余为真；&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;如果值为字符串，则空串(&#39;&#39;)为false，其余为真；&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;如果值的类型既不是数字又不是字符串，则将其转换为数值或字符串再利用上述规则。&lt;/p&gt;
&lt;p&gt;11 行输入运算符：&amp;lt;STDIN&amp;gt;。&amp;lt;STDIN&amp;gt;作为标量值来使用，Perl每次在标准输入中读入文本下一行，将其传给&amp;lt;STDIN&amp;gt;。利用&amp;lt;STDIN&amp;gt;读入的字符串行尾是有换行符的，可以利用chomp函数来去掉。chomp是一个函数，作为函数它有一个返回值，为移除的字符的个数。在使用chomp时，可以使用或不使用（），这又是perl中的一条通用规则：除非移除它们会改变含义，否则括号是可以省略的。如果结尾有两个或两个以上的换行符，chomp仅去掉一个。&lt;/p&gt;
&lt;p&gt;12 undef值&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;Perl中，变量在第一次赋值前有一个特殊值undef，如果该变量是数值型，则undef为0；如果是字符串，则undef为空串。&lt;/p&gt;
&lt;p&gt;13 defined函数&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Solaris环境变量</title>
   <link href="http://bo-yang.github.com//2008/09/27/solaris-environment-variable"/>
   <updated>2008-09-27T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/09/27/solaris-environment-variable</id>
   <content type="html">&lt;p&gt;
    ～/.profile 是在用户的主目录下的一个文件，每次用户登陆都会执行这里边的ENV环境变量设置。&lt;br /&gt;
/etc/profile是一个全局的环境变量设置，只要登陆系统的用户都会执行里面的ENV环境变量设置&lt;br /&gt;
~/.kshrc是在用户的主目录下面的，每次执行KSH下面的子shell的时候，都会执行这里面的ENV环境变量设置。&lt;br /&gt;
~/.dtprofile是在用户的主目录下面的，在这里设置你进入CDE时的一些变量设置，如果用户没有通过CDE进入过系统，那么将不会产生这个文件，只有用户曾经用CDE进入过系统后就会自动生成一个.dtprofile文件，然后还可以对里边的变量进行设置。。&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 如果在这个文件里的DTSOURCEPROFILE的变量设置为true则会读取用户瞩目路下的.profile文件里的变量设置，如果没有这个变量或者设置为false，那么将不读取.profile里的环境变量。&lt;/p&gt;
&lt;p&gt;如果想让刚刚改变的.profile .kshrc里面的设置马上生效使用，可以使用以下的命令：&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; . ~/.profile&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; . ~/.kshrc&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[转]C++ 运算符优先级列表</title>
   <link href="http://bo-yang.github.com//2008/09/26/cpp-operator-priority"/>
   <updated>2008-09-26T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/09/26/cpp-operator-priority</id>
   <content type="html">&lt;p&gt;
&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-family:Verdana;font-size:14px;&quot;&gt;&lt;br /&gt;
&lt;h2 style=&quot;margin-top:10px;font-size:1em;&quot;&gt;&lt;a id=&quot;viewpost1_TitleUrl&quot; href=&quot;http://www.cppblog.com/aqazero/archive/2006/06/08/8284.html&quot; style=&quot;text-decoration:none;color:rgb(0,102,0);&quot;&gt;C++ 运算符优先级列表&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cppreference.com/operator_precedence.html&quot; style=&quot;text-decoration:none;color:rgb(0,102,0);&quot;&gt;http://www.cppreference.com/operator_precedence.html&lt;/a&gt; &lt;br /&gt;
&lt;table class=&quot;code-table&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&quot;code-table-th&quot;&gt;Precedence&lt;/th&gt;
&lt;th class=&quot;code-table-th&quot;&gt;Operator&lt;/th&gt;
&lt;th class=&quot;code-table-th&quot;&gt;Description&lt;/th&gt;
&lt;th class=&quot;code-table-th&quot;&gt;Example&lt;/th&gt;
&lt;th class=&quot;code-table-th&quot;&gt;Associativity&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;1&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;()&lt;br /&gt;[]&lt;br /&gt;-&amp;gt;&lt;br /&gt;.&lt;br /&gt;::&lt;br /&gt;++&lt;br /&gt;--&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Grouping operator&lt;br /&gt;Array access&lt;br /&gt;Member access from a pointer&lt;br /&gt;Member access from an object&lt;br /&gt;Scoping operator&lt;br /&gt;Post-increment&lt;br /&gt;Post-decrement&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;(a + b) / 4;&lt;br /&gt;array[4] = 2;&lt;br /&gt;ptr-&amp;gt;age = 34;&lt;br /&gt;obj.age = 34;&lt;br /&gt;Class::age = 2;&lt;br /&gt;for( i = 0; i &amp;lt; 10; i++ ) ...&lt;br /&gt;for( i = 10; i &amp;gt; 0; i-- ) ...&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;left to right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;2&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;!&lt;br /&gt;~&lt;br /&gt;++&lt;br /&gt;--&lt;br /&gt;-&lt;br /&gt;+&lt;br /&gt;*&lt;br /&gt;&amp;amp;&lt;br /&gt;(type)&lt;br /&gt;&lt;a href=&quot;http://www.cppreference.com/keywords/sizeof.html&quot; style=&quot;text-decoration:none;color:rgb(0,102,0);&quot;&gt;sizeof&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Logical negation&lt;br /&gt;Bitwise complement&lt;br /&gt;Pre-increment&lt;br /&gt;Pre-decrement&lt;br /&gt;Unary minus&lt;br /&gt;Unary plus&lt;br /&gt;Dereference&lt;br /&gt;Address of&lt;br /&gt;Cast to a given type&lt;br /&gt;Return size in bytes&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;if( !done ) ...&lt;br /&gt;flags = ~flags;&lt;br /&gt;for( i = 0; i &amp;lt; 10; ++i ) ...&lt;br /&gt;for( i = 10; i &amp;gt; 0; --i ) ...&lt;br /&gt;int i = -1;&lt;br /&gt;int i = +1;&lt;br /&gt;data = *ptr;&lt;br /&gt;address = &amp;amp;obj;&lt;br /&gt;int i = (int) floatNum;&lt;br /&gt;int size = sizeof(floatNum);&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;right to left&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;3&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;-&amp;gt;*&lt;br /&gt;.*&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Member pointer selector&lt;br /&gt;Member pointer selector&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;ptr-&amp;gt;*var = 24;&lt;br /&gt;obj.*var = 24;&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;left to right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;4&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;*&lt;br /&gt;/&lt;br /&gt;%&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Multiplication&lt;br /&gt;Division&lt;br /&gt;Modulus&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;int i = 2 * 4;&lt;br /&gt;float f = 10 / 3;&lt;br /&gt;int rem = 4 % 3;&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;left to right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;5&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;+&lt;br /&gt;-&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Addition&lt;br /&gt;Subtraction&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;int i = 2 + 3;&lt;br /&gt;int i = 5 - 1;&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;left to right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;6&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;&amp;lt;&amp;lt;&lt;br /&gt;&amp;gt;&amp;gt;&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Bitwise shift left&lt;br /&gt;Bitwise shift right&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;int flags = 33 &amp;lt;&amp;lt; 1;&lt;br /&gt;int flags = 33 &amp;gt;&amp;gt; 1;&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;left to right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;7&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;&amp;lt;&lt;br /&gt;&amp;lt;=&lt;br /&gt;&amp;gt;&lt;br /&gt;&amp;gt;=&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Comparison less-than&lt;br /&gt;Comparison less-than-or-equal-to&lt;br /&gt;Comparison greater-than&lt;br /&gt;Comparison geater-than-or-equal-to&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;if( i &amp;lt; 42 ) ...&lt;br /&gt;if( i &amp;lt;= 42 ) ...&lt;br /&gt;if( i &amp;gt; 42 ) ...&lt;br /&gt;if( i &amp;gt;= 42 ) ...&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;left to right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;8&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;==&lt;br /&gt;!=&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Comparison equal-to&lt;br /&gt;Comparison not-equal-to&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;if( i == 42 ) ...&lt;br /&gt;if( i != 42 ) ...&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;left to right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;9&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;&amp;amp;&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Bitwise AND&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;flags = flags &amp;amp; 42;&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;left to right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;10&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;^&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Bitwise exclusive OR&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;flags = flags ^ 42;&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;left to right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;11&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;|&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Bitwise inclusive (normal) OR&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;flags = flags | 42;&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;left to right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;12&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Logical AND&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;if( conditionA &amp;amp;&amp;amp; conditionB ) ...&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;left to right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;13&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;||&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Logical OR&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;if( conditionA || conditionB ) ...&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;left to right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;14&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;? :&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Ternary conditional (if-then-else)&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;int i = (a &amp;gt; b) ? a : b;&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;right to left&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;15&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;=&lt;br /&gt;+=&lt;br /&gt;-=&lt;br /&gt;*=&lt;br /&gt;/=&lt;br /&gt;%=&lt;br /&gt;&amp;amp;=&lt;br /&gt;^=&lt;br /&gt;|=&lt;br /&gt;&amp;lt;&amp;lt;=&lt;br /&gt;&amp;gt;&amp;gt;=&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Assignment operator&lt;br /&gt;Increment and assign&lt;br /&gt;Decrement and assign&lt;br /&gt;Multiply and assign&lt;br /&gt;Divide and assign&lt;br /&gt;Modulo and assign&lt;br /&gt;Bitwise AND and assign&lt;br /&gt;Bitwise exclusive OR and assign&lt;br /&gt;Bitwise inclusive (normal) OR and assign&lt;br /&gt;Bitwise shift left and assign&lt;br /&gt;Bitwise shift right and assign&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;int a = b;&lt;br /&gt;a += 3;&lt;br /&gt;b -= 4;&lt;br /&gt;a *= 5;&lt;br /&gt;a /= 2;&lt;br /&gt;a %= 3;&lt;br /&gt;flags &amp;amp;= new_flags;&lt;br /&gt;flags ^= new_flags;&lt;br /&gt;flags |= new_flags;&lt;br /&gt;flags &amp;lt;&amp;lt;= 2;&lt;br /&gt;flags &amp;gt;&amp;gt;= 2;&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;right to left&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;16&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;,&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;Sequential evaluation operator&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;for( i = 0, j = 0; i &amp;lt; 10; i++, j++ ) ...&lt;/td&gt;
&lt;td class=&quot;code-table-td&quot; style=&quot;font-size:12px;&quot;&gt;left to right&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>《Beiginning Linux programming || Linux 程序设计》读书笔记(四)</title>
   <link href="http://bo-yang.github.com//2008/09/23/beginning-linux-programming-4"/>
   <updated>2008-09-23T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/09/23/beginning-linux-programming-4</id>
   <content type="html">&lt;div&gt;(21) Trap&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;The trap command is used to specify the&lt;br /&gt;
actions to take on receipt of signals.&amp;nbsp;A common use is to tidy up a&lt;br /&gt;
script when it is interrupted.&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;The trap command is passed the action to take, followed by the signal name (or names) to trap on:
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;background-color:rgb(238,238,238);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:rgb(238,238,238);&quot;&gt;trap command signal&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;Remember&lt;br /&gt;
that the scripts are normally interpreted from top to bottom, so you&lt;br /&gt;
must specify the trap&amp;nbsp;command before the part of the script you wish to&lt;br /&gt;
protect.&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;To see the signal numbers and associated names, you can just type &lt;span style=&quot;font-family:Courier New;background-color:rgb(204,204,204);&quot;&gt;trap -l &lt;/span&gt;at a command prompt.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
To reset a trap condition to the default, simply specify the command as&lt;br /&gt;
-. To ignore a signal, set the command to the empty string &lt;span style=&quot;font-family:Courier New;&quot;&gt;‘’&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;Signal&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Description&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;b&gt;HUP (1)&lt;/b&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; Hang up; usually sent when a terminal goes offline, or a user logs out&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;b&gt;INT (2)&lt;/b&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; Interrupt; usually sent by pressing Ctrl+C&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;b&gt;QUIT (3)&lt;/b&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; Quit; usually sent by pressing Ctrl+/&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;b&gt;ABRT (6)&amp;nbsp;&lt;/b&gt; &amp;nbsp;&amp;nbsp; &amp;nbsp; Abort; usually sent on some serious execution error&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;b&gt;ALRM (14)&lt;/b&gt; &amp;nbsp;&amp;nbsp; &amp;nbsp; Alarm; usually used for handling timeouts&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;b&gt;TERM (15) &lt;/b&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;Terminate; usually sent by the system when it’s shutting down&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;(22) unset&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&amp;nbsp;The unset command removes variables or functions from the environment.&lt;br /&gt;
It can’t do this to read-only variables defined by the shell itself,&lt;br /&gt;
such as IFS. &lt;/p&gt;
&lt;p&gt;(23) &lt;b&gt;find&lt;/b&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; The full syntax for the find command is as follows:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;b&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;find [path] [options] [tests] [actions]&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;Option&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Meaning&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;-depth&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Search the contents of a directory before looking at the directory itself.&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;-follow&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Follow symbolic links.&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;-maxdepths N&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;Search at most N levels of the directory when searching.&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;-mount (or -xdev) &amp;nbsp;&amp;nbsp; &amp;nbsp;Don’t search directories on other file systems.&lt;/span&gt;&lt;br /&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;br /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;Test&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Meaning&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;-atime N&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;The file was last accessed N days ago.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;-mtime N&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;The file was last modified N days ago.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;-name pattern&amp;nbsp;&amp;nbsp; &amp;nbsp;The name of the file, excluding any path, matches the pattern pro-&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;vided. To ensure that the pattern is passed to find, and not evaluated&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;by the shell immediately, the pattern must always be in quotes.&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;-newer otherfile&amp;nbsp;&amp;nbsp; &amp;nbsp;The file is newer than the file otherfile.&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;-type C&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; The file is of type C, where C can be of a particular type; the most&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;common are “d” for a directory and “f” for a regular file. For other&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;types consult the manual pages.&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;-user username&amp;nbsp;&amp;nbsp; &amp;nbsp;The file is owned by the user with the given name.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;Operator, &amp;nbsp;&amp;nbsp; &amp;nbsp;Short Form Operator, &amp;nbsp;&amp;nbsp; &amp;nbsp;Long Form Meaning&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -not&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Invert the test.&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;-a&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -and&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Both tests must be true.&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;-o&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; -or&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Either test must be true.&lt;/span&gt;&lt;br /&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;br /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;Action&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Meaning&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;-exec command&amp;nbsp;&amp;nbsp; &amp;nbsp;Execute a command. This is one of the most common actions. See the&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;explanation following this table for how parameters may be passed to&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;the command. This action must be terminated with a &lt;/span&gt;&lt;b&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;/;&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt; character pair.&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;-ok command&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Like -exec, except that it prompts for user confirmation of each file on&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;which it will carry out the command before executing the command.&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;This action must be terminated with a &lt;/span&gt;&lt;b&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;/;&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt; character pair.&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;-print&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; Print out the name of the file.&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;-ls&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Use the command &lt;/span&gt;&lt;span style=&quot;font-family:Courier New;color:rgb(0,0,255);background-color:rgb(204,204,204);&quot;&gt;ls -dils&lt;/span&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt; on the current file.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;(24) &lt;b&gt;grep&lt;/b&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;The grep command takes options, a pattern to match, and files to search in:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;color:rgb(0,0,255);&quot;&gt;grep [options] PATTERN [FILES]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;Option &amp;nbsp;&amp;nbsp; &amp;nbsp;Meaning&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;font-family:Courier New;background-color:rgb(204,204,204);&quot;&gt;-c&lt;/span&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Rather than print matching lines, print a count of the number of linesthat match.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;font-family:Courier New;background-color:rgb(204,204,204);&quot;&gt;-E&lt;/span&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Turn on extended expressions.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;font-family:Courier New;background-color:rgb(204,204,204);&quot;&gt;-h&lt;/span&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Suppress the normal prefixing of each output line with the name of the file it was found in.&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;font-family:Courier New;background-color:rgb(204,204,204);&quot;&gt;-i&lt;/span&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;Ignore case.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;font-family:Courier New;background-color:rgb(204,204,204);&quot;&gt;-l&lt;/span&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;List the names of the files with matching lines; don’t output the actual matched line.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;font-family:Courier New;background-color:rgb(204,204,204);&quot;&gt;-v&lt;/span&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Invert the matching pattern to select nonmatching lines, rather than matching lines.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;(25) Regular Expressions&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;The most frequently used are shown in the following table:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp; Character&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Meaning&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &lt;b&gt;^&lt;/b&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;Anchor to the beginning of a line&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &lt;b&gt;$&lt;/b&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;Anchor to the end of a line&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &lt;b&gt;.&lt;/b&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;Any single character&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; [ ]&lt;/b&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;The square braces contain a range of characters, any one of which&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; may be matched, such as a range of characters like a–e or an inverted&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; range by preceding the range with a ^ symbol.&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;If you want to use any of these characters as “normal” characters, precede them with a /.&lt;/p&gt;
&lt;p&gt;There are also some useful special match patterns that can be used in square braces, as described in the following table:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;Match Pattern&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Meaning&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; [:alnum:]&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Alphanumeric characters&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; [:alpha:]&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; Letters&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; [:ascii:]&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; ASCII characters&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; [:blank:]&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; Space or tab&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; [:cntrl:]&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; ASCII control characters&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; [:digit:]&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; Digits&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; [:graph:]&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; Noncontrol, nonspace characters&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; [:lower:]&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; Lowercase letters&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; [:print:]&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; Printable characters&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; [:punct:]&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Punctuation characters&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; [:space:]&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Whitespace characters, including vertical tab&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; [:upper:]&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; Uppercase letters&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; [:xdigit:]&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; Hexadecimal digits&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In addition, if the &lt;span style=&quot;font-family:Courier New;&quot;&gt;-E&lt;/span&gt;&lt;br /&gt;
for extended matching is also specified, other characters that control&lt;br /&gt;
the completion of matching may follow the regular expression (see the&lt;br /&gt;
following table). With grep it is also necessary to precede these&lt;br /&gt;
characters with a &lt;span style=&quot;font-family:Courier New;&quot;&gt;/&lt;/span&gt;.
&lt;div id=&quot;qc05&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img style=&quot;width:989px;height:354px;&quot; src=&quot;http://docs.google.com/a/ecdesk.jp/File?id=dd6nw3mt_92dx4f5fdf_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;Examples:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;$ grep &quot;e$&quot; words2.txt&lt;/span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;color:rgb(56,118,29);&quot;&gt;# this finds lines that end in the letter e.&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;$ grep a[[:blank:]] words2.txt&lt;/span&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;color:rgb(39,78,19);&quot;&gt;# find words that end with the letter a.&amp;nbsp; [[:blank:]]&amp;nbsp; tests for a space or a tab&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;$ grep -E [a-z]/{10/} words2.txt&lt;/span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;color:rgb(56,118,29);&quot;&gt;#&lt;br /&gt;
use the extended grep mode to search for lowercase words that are&lt;br /&gt;
exactly 10 characterslong. Do this by specifying a range of &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;# characters&lt;br /&gt;
to match a to z, and a repetition of 10 matches&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;(26) Command Execution&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Execute a command and put the output of the command into a variable. You can do this by using the &lt;span style=&quot;font-family:Courier New;color:rgb(0,0,255);&quot;&gt;$(command)&lt;/span&gt; syntax.The result of the &lt;span style=&quot;font-family:Courier New;color:rgb(0,0,255);&quot;&gt;$(command)&lt;/span&gt; is simply the output from the command. If you want to get the result into a variable, you can just assign it in the usual way:&lt;br /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;whoisthere=$(who)&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;echo $whoisthere&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);&quot; /&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;(27) Arithmetic Expansion&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; The &lt;span style=&quot;font-family:Courier New;&quot;&gt;expr&lt;/span&gt;&lt;br /&gt;
command can enable simple arithmetic commands to be processed, but this&lt;br /&gt;
is quite slow to execute because a new shell is invoked to process the &lt;span style=&quot;font-family:Courier New;&quot;&gt;expr&lt;/span&gt; command.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; A newer and better alternative is &lt;span style=&quot;font-family:Courier New;&quot;&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;$((...))&lt;/span&gt; &lt;/span&gt;expansion. By enclosing the expression you wish to evaluate in &lt;span style=&quot;font-family:Courier New;color:rgb(0,0,255);&quot;&gt;$((...))&lt;/span&gt;, you can perform simple arithmetic much more efficiently.&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot; /&gt;&lt;br style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot;&gt;x=0&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot;&gt;while [ &quot;$x&quot; -ne 10 ]; do&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; echo $x&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; x=$(($x+1))&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot;&gt;done&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot; /&gt;&lt;br style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot;&gt;exit 0&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;(28) Parameter Expansion
&lt;div id=&quot;cwzl&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img style=&quot;width:987px;height:449px;&quot; src=&quot;http://docs.google.com/a/ecdesk.jp/File?id=dd6nw3mt_93d54kdkcr_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;These&lt;br /&gt;
substitutions are often useful when you’re working with strings. The&lt;br /&gt;
last four, which remove parts of strings, are especially useful for&lt;br /&gt;
processing filenames and paths, as the following example shows.&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;unset foo&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;echo ${foo:-bar}&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;foo=fud&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;echo ${foo:-bar}&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;foo=/usr/bin/X11/startx&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;echo ${foo#*/}&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;echo ${foo##*/}&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;bar=/usr/local/etc/local/networks&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;echo ${bar%local*}&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;echo ${bar%%local*}&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;exit 0&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The output is:&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;bar&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;fud&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;usr/bin/X11/startx&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;startx&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;/usr/local/etc&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);font-family:Courier New;&quot;&gt;/usr&lt;/span&gt;&lt;/p&gt;
&lt;div id=&quot;by20&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img style=&quot;width:867px;height:225px;&quot; src=&quot;http://docs.google.com/a/ecdesk.jp/File?id=dd6nw3mt_94gv3fx3ck_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;(29) Here Document&lt;br /&gt;One&lt;br /&gt;
special way of passing input to a command from a shell script is to use&lt;br /&gt;
a here document. This document allows a command to execute as though it&lt;br /&gt;
were reading from a file or the keyboard, whereas in fact it’s getting&lt;br /&gt;
input from the script.&lt;/p&gt;
&lt;p&gt;A here document starts with the leader &lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;, followed by a special sequence of characters that is repeated at the end of the document. &lt;span style=&quot;font-family:Courier New;&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;br /&gt;
is the shell’s label redirector, which in this case forces the command&lt;br /&gt;
input to be the here document. This special sequence acts as a marker&lt;br /&gt;
to tell the shell where the here document ends. The marker sequence&lt;br /&gt;
must not appear in the lines to be passed to the command, so it’s best&lt;br /&gt;
to make them memorable and fairly unusual.&lt;br /&gt;&lt;br style=&quot;background-color:rgb(238,238,238);&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);&quot; /&gt;&lt;br style=&quot;background-color:rgb(238,238,238);&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);&quot;&gt;cat &amp;lt;&amp;lt;!FUNKY!&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);&quot;&gt;hello&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);&quot;&gt;this is a here&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);&quot;&gt;document&lt;/span&gt;&lt;br style=&quot;background-color:rgb(238,238,238);&quot; /&gt;&lt;br style=&quot;background-color:rgb(238,238,238);&quot; /&gt;&lt;span style=&quot;background-color:rgb(238,238,238);&quot;&gt;!FUNKY!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;4.7 Debugging Shell&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&amp;nbsp;Since scripts are interpreted, there’s no compilation overhead in&lt;br /&gt;
modifying and retrying a script. The main way to trace more complicated&lt;br /&gt;
errors is to set various shell options. To do this, you can either use&lt;br /&gt;
command-line options after invoking the shell or use the set command.&lt;br /&gt;
The following table summarizes the options:
&lt;div id=&quot;qs.8&quot; style=&quot;padding:1em 0;text-align:center;&quot;&gt;&lt;img style=&quot;width:984px;height:351px;&quot; src=&quot;http://docs.google.com/File?id=dd6nw3mt_95frsmv27m_b&quot; /&gt;&lt;/div&gt;
&lt;p&gt;4.8 Dialog Utility&lt;/p&gt;
&lt;p&gt;Example1:&lt;br /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;# Ask some questions and collect the answer&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;dialog --title &quot;Questionnaire&quot; --msgbox &quot;Welcome to my simple survey&quot; 9 18&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;dialog --title &quot;Confirm&quot; --yesno &quot;Are you willing to take part?&quot; 9 18&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;if [ &quot;$?&quot; != 0 ]; then&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp; dialog --infobox &quot;Thank you anyway&quot; 5 20&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp; sleep 2&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp; dialog --clear&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp; exit 0&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;fi&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;dialog --title &quot;Questionnaire&quot; --inputbox &quot;Please enter your name&quot; 9 30 2&amp;gt;_1.txt&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;Q_NAME=$(cat _1.txt)&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;dialog --menu &quot;$Q_NAME, what music do you like best?&quot; 15 30 4 1 &quot;Classical&quot; 2 &quot;Jazz&quot; 3 &quot;Country&quot; 4 &quot;Other&quot; 2&amp;gt;_1.txt&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;Q_MUSIC=$(cat _1.txt)&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;if [ &quot;$Q_MUSIC&quot; = &quot;1&quot; ]; then&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp; dialog --title &quot;Likes Classical&quot; --msgbox &quot;Good choice!&quot; 12 25&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;else&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp; dialog --title &quot;Doesn’t like Classical&quot; --msgbox &quot;Shame&quot; 12 25&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;fi&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;sleep 2&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;dialog --clear&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;exit 0&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Explanation:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;You start with a simple welcome screen, before asking the user if he will take part using the simple &lt;span style=&quot;font-family:Courier New;&quot;&gt;--yesno&lt;/span&gt; option of dialog. You use the &lt;b&gt;&lt;span style=&quot;font-family:Courier New;color:rgb(0,0,255);&quot;&gt;$?&lt;/span&gt;&lt;/b&gt; variable to check the reply. If he agreed, you then get his name, store it in a variable &lt;span style=&quot;font-family:Courier New;&quot;&gt;Q_NAME&lt;/span&gt;, and ask what sort of music he likes, using the --menu option of dialog. By storing the numerical output in the variable &lt;span style=&quot;font-family:Courier New;&quot;&gt;Q_MUSIC&lt;/span&gt;, you can see what he answered, and give an appropriate response.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>《Beiginning Linux programming || Linux 程序设计》读书笔记(三)</title>
   <link href="http://bo-yang.github.com//2008/09/18/beginning-linux-programming-3"/>
   <updated>2008-09-18T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/09/18/beginning-linux-programming-3</id>
   <content type="html">&lt;p&gt;
&lt;span class=&quot;Apple-style-span&quot; style=&quot;color:rgb(0,0,0);font-family:Verdana;font-size:13px;&quot;&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;(8) Shell Function&lt;br /&gt;    &lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;function_name () {&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;        statements&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;    }&lt;/span&gt;&lt;br /&gt;    &lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;    You must always define a function before you can invoke it.When a function is invoked, the positional parameters to the script, &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;$*, $@, $#, $1, $2,&lt;/span&gt; and so on, are replaced by the parameters to the function.When the function finishes, they are restored to their previous values.&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;    You can make functions return numeric values using the return command. The usual way to make functions return strings is for the function to store the string in a variable, which can then be used after the function finishes. Alternatively, you can echo a string and catch the result, like this:&lt;br /&gt;        &lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;foo () { echo JAY;}&lt;/span&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;...&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;result=”$(foo)“&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;    &lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;    You can declare local variables within shell functions by using the &lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;local&lt;/span&gt; keyword. The variable is then only in scope within the function.&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;p&gt;(9) &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;i&gt;break&lt;/i&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;(10) The &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;b&gt;:&lt;/b&gt;&lt;/span&gt; Command&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;    The colon command is an alias for true.&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;    The : construct is also useful in the conditional setting of variables. For example,
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;        &lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;: ${var:=value}&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;Without the :, the shell would try to evaluate &lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;$var&lt;/span&gt; as a command.&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;p&gt;(11) Continue&lt;/p&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;(12) The &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;b&gt;.&lt;/b&gt;&lt;/span&gt; Command&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;(13) eval&lt;br /&gt;    The eval command enables you to evaluate arguments. It’s built into the shell and doesn’t normally exist as a separate command. &lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;eval&lt;/span&gt; is a bit like an extra $: It gives you the value of the value of a variable.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;(14) exec&lt;br /&gt;    The exec command has two different uses. Its typical use is to replace the current shell with a different program.&lt;br /&gt;    The second use of exec is to modify the current file descriptors:&lt;br /&gt;        &lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;exec 3&amp;lt; afile&lt;/span&gt;&lt;br /&gt;    This causes file descriptor three to be opened for reading from file afile. It’s rarely used.&lt;/p&gt;
&lt;p&gt;(15) export&lt;br /&gt;    The &lt;span style=&quot;font-family:&#39;Courier New&#39;;&quot;&gt;export&lt;/span&gt; command creates an environment variable from its parameter that can be seen by other scripts and programs invoked from the current program. &lt;/p&gt;
&lt;p&gt;(16) expr&lt;br /&gt;    The expr command evaluates its arguments as an expression. It’s most commonly used for simple arithmetic in the following form:&lt;br /&gt;        &lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;x=`expr $x + 1`&lt;/span&gt;&lt;br /&gt;   The `` (backtick) characters make x take the result of executing the command expr $x + 1. You could also write it using the syntax $( ) rather than backticks, like this:&lt;br /&gt;        &lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;x=$(expr $x + 1)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;(17) printf&lt;br /&gt;(18) return &lt;br /&gt;(19) set&lt;br /&gt;    The set command sets the parameter variables for the shell. It can be a useful way of using fields in commands that output space-separated values.&lt;br /&gt;        &lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;        echo the date is $(date)&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;        set $(date)&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;        echo The month is $2&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;        exit 0&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This program sets the parameter list to the date command’s output and then uses the positional parameter $2 to get at the month.Since the date command is sensitive to the language locale, in reality you would have extracted the name of the month using date +%B. &lt;/p&gt;
&lt;p&gt;    The most commonly used form of the command is set -x, which makes a script display a trace of its currently executing command. &lt;/p&gt;
&lt;p&gt;(20) Shift&lt;br /&gt;    The &lt;i&gt;shift&lt;/i&gt; command moves all the parameter variables down by one, so that $2 becomes $1, $3 becomes $2, and so on. The previous value of &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;$1&lt;/span&gt; is discarded, while &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;$0&lt;/span&gt; remains unchanged. If a numerical parameter is specified in the call to shift, the parameters move that many spaces. The other variables, &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;$*&lt;/span&gt;, &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;$@&lt;/span&gt;, and &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;$#&lt;/span&gt;, are also modified in line with the new arrangement of parameter variables.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;(21) Trap&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span&gt;    &lt;/span&gt;The trap command is used to specify the actions to take on receipt of signals. A common use is to tidy up a script when it is interrupted.&lt;br /&gt;&lt;span&gt;    The trap command is passed the action to take, followed by the signal name (or names) to trap on:&lt;/span&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;&lt;span&gt;    &lt;span&gt;    &lt;/span&gt;&lt;/span&gt;trap command signal&lt;/div&gt;
&lt;div style=&quot;margin-top:0;margin-bottom:0;&quot;&gt;Remember that the scripts are normally interpreted from top to bottom, so you must specify the trap command before the part of the script you wish to protect.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fedora 9中Firefox启动后进入www.s.com的解决方法</title>
   <link href="http://bo-yang.github.com//2008/09/15/firefox-problem"/>
   <updated>2008-09-15T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/09/15/firefox-problem</id>
   <content type="html">&lt;p&gt;
    几个月来，自从手动装上Firefox3.0之后，在Fedora桌面上点击图标启动Firefox一直进入www.s.com（本来我的主页设置为iGoogle），而且图标也不再显示为Firefox的图标。很是让人郁闷。（注：据说该问题只是在图形界面下点击图标才会出现，若在命令行下面直接用命令启动Firefox不会有这个问题。）&lt;/p&gt;
&lt;p&gt;今天搜了一下，发现有这个问题的人还比较多，但大多没有解决方法。找了半天之后总算发现有人给出了方法。原来问题出自 ~/.local/share/applications/preferred-web-browser.desktop 中的Exec选项。&lt;/p&gt;
&lt;p&gt;手动装完Firefox之后把我的preferred-web-browser.desktop中的Exec改成了&lt;br /&gt;&lt;font color=&quot;#ff0000&quot;&gt;Exec=/opt/firefox/firefox &quot;%s&quot;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;由于我是在我的个人用户下装的Firefox 3，因此root用户并没有受到影响，root用户的preferred-web-browser.desktop也没有被该变。于是我参照root用户的配置把Exec改成了&lt;br /&gt;&lt;font color=&quot;#0000ff&quot;&gt;Exec=/opt/firefox/firefox %u&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;同时把Icon选项改成了 &lt;font color=&quot;#0000ff&quot;&gt;Icon=firefox&lt;/font&gt;&lt;br /&gt;把Name改为 &lt;font color=&quot;#0000ff&quot;&gt;Name=Firefox Web Browser&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;再重新启动Firefox，一切正常！&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>《Beginning Linux Programming》读书笔记（二）</title>
   <link href="http://bo-yang.github.com//2008/09/14/beginning-linux-programming-2"/>
   <updated>2008-09-14T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/09/14/beginning-linux-programming-2</id>
   <content type="html">&lt;p&gt;
    &amp;nbsp;&lt;font size=&quot;4&quot;&gt;&lt;b&gt;3 基本的Shell命令&lt;/b&gt;&lt;/font&gt;&lt;br /&gt;3.1 Redirecting Output&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 管道重定向：&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 对文件追加：&amp;gt;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;For&lt;br /&gt;
&quot;&amp;gt;&quot;, by default, if the file already exists, then it will be&lt;br /&gt;
overwritten. If you want to change the default behavior, you can use&lt;br /&gt;
the command &lt;i&gt;set -o noclobber&lt;/i&gt; (or &lt;i&gt;set -C&lt;/i&gt;), which sets the noclobber option to prevent a file from being overwritten using redirection. You can cancel this option using &lt;i&gt;set +o noclobber&lt;/i&gt;. &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; For &quot;&amp;gt;&amp;gt;&quot;, outputs are appended to the end of the file.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
File descriptor 0 is the standard input to a program, file descriptor 1&lt;br /&gt;
is the standard output, and file descriptor 2 is the standard error&lt;br /&gt;
output. It’s unusual to want to redirect any other than the standard&lt;br /&gt;
ones: 0, 1, and 2.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; To redirect the&lt;br /&gt;
standard error output, preface the &amp;gt; operator with the number of the&lt;br /&gt;
file descriptor you wish to redirect. Because the standard error is on&lt;br /&gt;
file descriptor 2, use the 2&amp;gt; operator. This is often useful to&lt;br /&gt;
discard error information and prevent it from appearing on the screen.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; The command&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $ kill -HUP 1234 &amp;gt;killout.txt 2&amp;gt;killerr.txt&lt;br /&gt;will put the output and error information into separate files.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; If you prefer to capture both sets of output into a single file, you can use the &lt;i&gt;&lt;span id=&quot;mtpf0&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;/i&gt; operator to combine the two outputs. Therefore,&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $ kill -1 1234 &amp;gt;killouterr.txt 2&amp;gt;&amp;amp;1&lt;br /&gt;will&lt;br /&gt;
put both the output and error outputs into the same file. Notice the&lt;br /&gt;
order of the operators. This reads as “redirect standard output to the&lt;br /&gt;
file killouterr.txt, and then direct standard error to the same place&lt;br /&gt;
as the standard output.” If you get the order wrong, the redirect won’t&lt;br /&gt;
work as you expect.&lt;/p&gt;
&lt;p&gt;3.2 Redirecting Input&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;&lt;/p&gt;
&lt;p&gt;3.3 Pipes&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Processes connected by pipes can run simultaneously and are automatically rescheduled as data flows between them.&lt;/p&gt;
&lt;p&gt;3.4 &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;i&gt;file&lt;/i&gt;&lt;/span&gt; command&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; The best way to check if a file is a script or not is to use the &lt;i&gt;file&lt;/i&gt; command — for example, &lt;i&gt;&lt;span id=&quot;rbhf0&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;file first&lt;/span&gt;&lt;/i&gt; or &lt;i&gt;file /bin/bash&lt;/i&gt;. &lt;/p&gt;
&lt;p&gt;3.5 &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;i&gt;read&lt;/i&gt;&lt;/span&gt; command
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;You can assign user input to a variable by using the &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;i&gt;read&lt;/i&gt;&lt;/span&gt; command.The read normally&amp;nbsp;completes when the user presses Enter.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;3.6 &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;i&gt;which&lt;/i&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;Check which command is used, e.g. &lt;i&gt;which test&lt;/i&gt;.&lt;/p&gt;
&lt;p&gt;3.7 &lt;i&gt;touch&lt;/i&gt; filename&lt;br /&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Check whether it exists and create it if it doesn’t.
&lt;div&gt;&lt;font size=&quot;4&quot;&gt;4 Shell Scripts&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;4.1 Quoting&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&amp;nbsp;If you&amp;nbsp;enclose a $ variable expression in double quotes, then it’s&lt;br /&gt;
replaced with its value when the line is executed.&amp;nbsp;If you enclose it in&lt;br /&gt;
single quotes, then no substitution takes place. You can also remove&lt;br /&gt;
the special&amp;nbsp;meaning of the $ symbol by prefacing it with a /.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&amp;nbsp;Usually, strings are enclosed in double quotes, which protects&lt;br /&gt;
variables from being separated by whitespace but allows $ expansion to&lt;br /&gt;
take place.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;4.2 Environment Variables&lt;/div&gt;
&lt;div style=&quot;padding:1em 0;text-align:center;&quot; id=&quot;tfjq&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_59g32fh2hs_b&quot; style=&quot;width:830px;height:522px;&quot; /&gt;&lt;/div&gt;
&lt;div style=&quot;padding:1em 0;text-align:left;&quot; id=&quot;tfjq&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;If you want to check out how the program works in a different environment by running&amp;nbsp;the &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;i&gt;env &amp;lt;command&amp;gt;&lt;/i&gt;&lt;/span&gt;, try looking at the env manual pages.&lt;/div&gt;
&lt;p&gt;4.3 Parameter&amp;nbsp;Variables&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&amp;nbsp;If&lt;br /&gt;
your&amp;nbsp;script&amp;nbsp;is&amp;nbsp;invoked&amp;nbsp;with&amp;nbsp;parameters,&amp;nbsp;some&amp;nbsp;additional&amp;nbsp;variables&amp;nbsp;are&amp;nbsp;created.&amp;nbsp;If&amp;nbsp;no&amp;nbsp;parameters&amp;nbsp;are&amp;nbsp;passed,&amp;nbsp;the&amp;nbsp;environment&amp;nbsp;variable&amp;nbsp;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;$#&lt;/span&gt;&amp;nbsp;still&amp;nbsp;exists&amp;nbsp;but&amp;nbsp;has&amp;nbsp;a&amp;nbsp;value&amp;nbsp;of&amp;nbsp;0.
&lt;div style=&quot;padding:1em 0;text-align:center;&quot; id=&quot;mmzl&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_60d6q52vkg_b&quot; style=&quot;width:822px;height:231px;&quot; /&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
As&amp;nbsp;you&amp;nbsp;can&amp;nbsp;see,&amp;nbsp;within&amp;nbsp;double&amp;nbsp;quotes,&amp;nbsp;$@&amp;nbsp;expands&amp;nbsp;the&amp;nbsp;positional&amp;nbsp;parameters&amp;nbsp;as&amp;nbsp;separate&amp;nbsp;fields,&amp;nbsp;regardless&amp;nbsp;of&amp;nbsp;the&amp;nbsp;IFS&amp;nbsp;value.&amp;nbsp;In&amp;nbsp;general,&amp;nbsp;if&amp;nbsp;you&amp;nbsp;want&amp;nbsp;access&amp;nbsp;to&amp;nbsp;the&amp;nbsp;parameters,&amp;nbsp;$@&amp;nbsp;is&amp;nbsp;the&amp;nbsp;sensible&amp;nbsp;choice.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;4.4 A Problem With Variables&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;For a script&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;background-color:rgb(204,204,204);font-family:Courier New;&quot;&gt;if [ $timeofday = “yes” ]&lt;/span&gt;&lt;br /&gt;, if just press &quot;Enter&quot;,rather than answer anything.When the variable &lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;timeofday &lt;/span&gt;&lt;span style=&quot;background-color:rgb(255,255,255);&quot;&gt;was tested,&lt;/span&gt;&lt;/span&gt; it consisted of a blank string. Therefore, the &lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;if&lt;/span&gt; clause looks like&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;if [ = “yes” ]&lt;/span&gt;&lt;br /&gt;which isn&#39;t a valid condition. To avoid this, you must use quotes around the variable:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;if [ “$timeofday” = “yes” ]&lt;/span&gt;&lt;br /&gt;An empty variable then gives the valid test:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;if [ “” = “yes” ]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;Remember&lt;br /&gt;
that adding the quotes tells the shell to consider everything between&lt;br /&gt;
them as a single string. This is one way of getting spaces to be stored&lt;br /&gt;
in a variable.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;4.5 The &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;i&gt;test&lt;/i&gt;&lt;/span&gt; or &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;i&gt;[&lt;/i&gt;&lt;/span&gt; Command&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;The &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;i&gt;[&lt;/i&gt;&lt;/span&gt; and &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;i&gt;test&lt;/i&gt;&lt;/span&gt; commands are synonymous, except that when the &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;i&gt;[&lt;/i&gt;&lt;/span&gt; command is used, a trailing &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;i&gt;]&lt;/i&gt;&lt;/span&gt; is also used. The &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;i&gt;test&lt;/i&gt;&lt;/span&gt; or &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;i&gt;[&lt;/i&gt;&lt;/span&gt; can be used to check to see whether a file exists.&lt;/div&gt;
&lt;div&gt;e.g.&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;i&gt;test -f &amp;lt;filename&amp;gt; &lt;/i&gt;or&lt;i&gt; [ -f &amp;lt;filename&amp;gt; ]&lt;/i&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;(&lt;span style=&quot;color:rgb(255,0,0);&quot;&gt;Note: You must put spaces between the [ braces and the condition being checked.&lt;/span&gt;)&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;Conditions that you can use &lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;&lt;i&gt;test&lt;/i&gt;&lt;/span&gt; command are:&lt;/div&gt;
&lt;div style=&quot;padding:1em 0;text-align:center;&quot; id=&quot;p1.x&quot;&gt;&lt;img src=&quot;http://docs.google.com/File?id=dd6nw3mt_61fhn45rcs_b&quot; style=&quot;width:546px;height:645px;&quot; /&gt;&lt;/div&gt;
&lt;div&gt;4.6 Control Structures&lt;/div&gt;
&lt;div&gt;(1)&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;if&lt;/span&gt; &lt;i&gt;condition&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;then&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;i&gt;statements&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;elif&lt;/span&gt; &lt;i&gt;condition&lt;/i&gt;&lt;span style=&quot;font-family:Courier New;&quot;&gt;; then&lt;/span&gt; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;else&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;i&gt;statements&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;fi&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;(2)&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-family:Courier New;&quot;&gt;for&lt;/span&gt; &lt;i&gt;&lt;span style=&quot;font-family:Arial;&quot;&gt;variable&lt;/span&gt;&lt;/i&gt; &lt;span style=&quot;font-family:Courier New;&quot;&gt;in&lt;/span&gt; &lt;i&gt;values&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;do&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;i&gt;statements&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;done&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Note: &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;for file in $(ls f*.sh); do&lt;/span&gt;&lt;br /&gt;In this example,&amp;nbsp; the parameter list for the for command is provided by the output of the command enclosed in the $() sequence.&lt;/p&gt;
&lt;p&gt;(3) &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;while&lt;/span&gt; &lt;i&gt;condition&lt;/i&gt; &lt;span style=&quot;font-family:Courier New;&quot;&gt;do&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;i&gt;statements&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;done&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;(4) &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;until &lt;/span&gt;&lt;i&gt;condition&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;do&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;i&gt;statements&lt;/i&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;font-family:Courier New;&quot;&gt;done&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;background-color:rgb(255,229,153);font-family:Arial;&quot;&gt;Note:&amp;nbsp;&amp;nbsp;&amp;nbsp; In general, if a loop should always execute at least once, use a &lt;span style=&quot;font-family:Courier New;&quot;&gt;while&lt;/span&gt; loop; if it may not need to execute at all, use an &lt;span style=&quot;font-family:Courier New;&quot;&gt;until&lt;/span&gt; loop.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;(5)&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;case variable in&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;pattern [ | pattern] ...) statements;;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;pattern [ | pattern] ...) statements;;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;...&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;esac&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;background-color:rgb(255,229,153);&quot;&gt;Note:&lt;br /&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&quot;background-color:rgb(255,229,153);&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;Notice&lt;br /&gt;
that each pattern line is terminated with double semicolons (;;). You&lt;br /&gt;
can put multiple statements between each pattern and the next, so a&lt;br /&gt;
double semicolon is needed to mark where one statement ends and the&lt;br /&gt;
next pattern begins.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&quot;background-color:rgb(255,229,153);&quot;&gt;&lt;br /&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&quot;background-color:rgb(255,229,153);&quot;&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/span&gt;Be&lt;br /&gt;
careful with the case construct if you are using wildcards such as ‘*‘&lt;br /&gt;
in the pattern. The problem is that the first matching pattern will be&lt;br /&gt;
taken, even if a later pattern matches more exactly.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(6) Lists
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;b&gt;AND&lt;/b&gt;&lt;br /&gt;
List: The AND list construct enables you to execute a series of&lt;br /&gt;
commands, executing the next command only if all the previous commands&lt;br /&gt;
have succeeded. The syntax is&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;statement1 &amp;amp;&amp;amp; statement2 &amp;amp;&amp;amp; statement3 &amp;amp;&amp;amp; ...&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;b&gt;OR&lt;/b&gt;&lt;br /&gt;
List: The OR list construct enables us to execute a series of commands&lt;br /&gt;
until one succeeds, and then not execute any more. The syntax is as&lt;br /&gt;
follows:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;statement1 || statement2 || statement3 || ...&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(7) Statement Blocks&lt;br /&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;If you want to use multiple statements in a place&lt;br /&gt;
where only one is allowed, such as in an AND or OR list, you can do so&lt;br /&gt;
by enclosing them in braces {} to make a statement block.&lt;/p&gt;
&lt;p&gt;(8) Shell Function&lt;br /&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;function_name () {&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;statements&lt;/span&gt;&lt;br style=&quot;background-color:rgb(204,204,204);&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;background-color:rgb(204,204,204);&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>《Linux程序设计》读书笔记（一）</title>
   <link href="http://bo-yang.github.com//2008/09/11/linux-program-design-1"/>
   <updated>2008-09-11T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/09/11/linux-program-design-1</id>
   <content type="html">&lt;p&gt;
    &amp;nbsp;
&lt;div id=&quot;xrgo&quot; style=&quot;text-align:center;&quot;&gt;&lt;font size=&quot;5&quot;&gt;&lt;span id=&quot;y5c80&quot; style=&quot;font-family:SimHei, 黑体, MS Hei, sans-serif;&quot;&gt;《Linux程序设计》读书笔记&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;
&lt;p&gt;&lt;b&gt;&lt;br /&gt;&lt;font size=&quot;4&quot;&gt;1、编译C程序的技巧&lt;/font&gt;&lt;/b&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在调用C语言编译器的时候可以通过给出“-I”标志来引用保存在下级子目录或者非标准目录下的头文件，如：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$ gcc -I /usr/openwin/include fred.c&lt;br /&gt;它会使编译器在/usr/openwin/include的子目录和标准目录两个地方去查找fred.c程序里所包含的头文件。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 用grep查找含有某些特定定义与函数生命的头文件是很方便的。如：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $ grep EXIT_ *.h&lt;br /&gt;grep命令会在该子目录下的所有名字以.h结尾的文件里查找字符串“EXIT_”。&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;b&gt;2、库文件&lt;/b&gt;&lt;/font&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
标准的系统库文件一般保存在/lib或/usr/lib子目录中。库文件的名字永远以“lib”这几个字母打头，随后便是函数库说明的部分（比如用c表示&lt;br /&gt;
这是一个C语言函数库，用m表示一个数学运算库），文件名的最后部分以一个“.”开始，然后给出这个库文件的类型：静态函数库.a;共享函数库.so&lt;br /&gt;
或.sa。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在通知编译器查找某个库文件的时候，既可以给出其完整的路径名，也可以使用“-l”标志，。如：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $ cc -o fred fred.c /usr/lib/libm.a&lt;br /&gt;或&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $ cc -o fred fred.c -lm&lt;br /&gt;-lm代表标准目录库中名为libm.a的函数库。 更详细的解释参见下面的例子。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;虽然库文件与头文件相似，都是被保存在某个标准位置，但我们仍然可以通过“-L”标志给编译器增加搜索子目录库。如：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $ cc -o x11fred -L/usr/openwin/lib x11fred.c -lX11&lt;br /&gt;该命令在编译和链接程序x11fred时将使用在子目录/usr/openwin/lib中找到的libX11函数库版本。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2.1 静态库(archive)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 假设现有源文件bill.c和fred.c，则建立静态库的方法：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; （1）编译源文件生成二进制目标文件，需要在调用C编译器时加上“-c”选项以防止生成最终应用程序。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $ cc -c bill.c fred.c&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; （2）为函数库建立一个头文件（lib.h），它的作用是在我们的函数库里对这两个函数进行声明；如果有程序要使用这个函数库，就必须使用include引用。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img alt=&quot;&quot; /&gt;&lt;img alt=&quot;&quot; /&gt;（3）调用程序（program.c）引用库函数头文件并调用其中的函数。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; （4）使用ar工具简历档案并把目标代码加入其中。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $ &lt;b&gt;ar crv&lt;/b&gt; libfoo.a bill.o fred.o&lt;br /&gt;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;另外，某些系统（尤其是Berkley&amp;nbsp;UNIX操作系统发展而来的系统）上，要想成功是用函数库，必须先为这个函数库建立一个内容表：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $ &lt;b&gt;ranlib&lt;/b&gt; libfoo.a&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 可以通过使用“-L”选项告诉编译器静态库的位置：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $ cc -o program program.o -L. -lfoo&lt;br /&gt;“-L.”告诉编译器在当前子目录中查找函数库。“-lfoo”选项告诉编译器使用那个名为libfoo.a的函数库（或者一个名为libfoo.so的共享库，如果有的话）。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 可以使用nm命令查看某个目标代码文件、函数库或者可执行程序里都包含那些函数。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2.2 共享库&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
如果一个程序使用了共享库，它的连接方式是这样的：它本身不再保存函数的代码，而只保存共享代码的调用线索，共享代码是在运行的时候才加入其中的。对&lt;br /&gt;
Linux系统而言，负责加载共享库并解析客户程序中函数调用线索的程序（即共享库动态加载器）是ld.so或ld-linux.so.2；查找共享库的&lt;br /&gt;
其他地点是在/etc/ld.so.conf文件里配置的；如果这个文件进行了修改，就需要用ldconfig命令进行处理。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 可以使用&lt;b&gt;ldd&lt;/b&gt;程序查看某个程序要求使用的是哪一个共享库：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $ ldd program&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; .so类似于Windows中的.DLL文件，是运行时加入程序的；.sa类似于Windows中的.LIB文件，是加入到可执行文件里面的。&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;b&gt;3 基本的Shell命令&lt;/b&gt;&lt;/font&gt;&lt;br /&gt;3.1 Redirecting Output&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 管道重定向：&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 对文件追加：&amp;gt;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;For&lt;br /&gt;
&quot;&amp;gt;&quot;, by default, if the file already exists, then it will be&lt;br /&gt;
overwritten. If you want to change the default behavior, you can use&lt;br /&gt;
the command &lt;i&gt;set -o noclobber&lt;/i&gt; (or &lt;i&gt;set -C&lt;/i&gt;), which sets the noclobber option to prevent a file from being overwritten using redirection. You can cancel this option using &lt;i&gt;set +o noclobber&lt;/i&gt;. &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; For &quot;&amp;gt;&amp;gt;&quot;, outputs are appended to the end of the file.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
File descriptor 0 is the standard input to a program, file descriptor 1&lt;br /&gt;
is the standard output, and file descriptor 2 is the standard error&lt;br /&gt;
output. It’s unusual to want to redirect any other than the standard&lt;br /&gt;
ones: 0, 1, and 2.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; To redirect the&lt;br /&gt;
standard error output, preface the &amp;gt; operator with the number of the&lt;br /&gt;
file descriptor you wish to redirect. Because the standard error is on&lt;br /&gt;
file descriptor 2, use the 2&amp;gt; operator. This is often useful to&lt;br /&gt;
discard error information and prevent it from appearing on the screen.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; The command&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $ kill -HUP 1234 &amp;gt;killout.txt 2&amp;gt;killerr.txt&lt;br /&gt;will put the output and error information into separate files.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; If you prefer to capture both sets of output into a single file, you can use the &lt;i&gt;&lt;span id=&quot;mtpf0&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;/i&gt; operator to combine the two outputs. Therefore,&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; $ kill -1 1234 &amp;gt;killouterr.txt 2&amp;gt;&amp;amp;1&lt;br /&gt;will&lt;br /&gt;
put both the output and error outputs into the same file. Notice the&lt;br /&gt;
order of the operators. This reads as “redirect standard output to the&lt;br /&gt;
file killouterr.txt, and then direct standard error to the same place&lt;br /&gt;
as the standard output.” If you get the order wrong, the redirect won’t&lt;br /&gt;
work as you expect.&lt;/p&gt;
&lt;p&gt;3.2 Redirecting Input&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;&lt;/p&gt;
&lt;p&gt;3.3 Pipes&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Processes connected by pipes can run simultaneously and are automatically rescheduled as data flows between them.&lt;/p&gt;
&lt;p&gt;3.4 file command&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; The best way to check if a file is a script or not is to use the &lt;i&gt;file&lt;/i&gt; command — for example, &lt;i&gt;&lt;span id=&quot;rbhf0&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;file first&lt;/span&gt;&lt;/i&gt; or &lt;i&gt;file /bin/bash&lt;/i&gt;. &lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;4&quot;&gt;4 Shell Scripts&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;P60, to be continued...&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>类成员函数指针浅析</title>
   <link href="http://bo-yang.github.com//2008/09/08/function-pointer-in-class"/>
   <updated>2008-09-08T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/09/08/function-pointer-in-class</id>
   <content type="html">&lt;p&gt;
    今天看某软件的源代码时，发现有这样一行
&lt;div class=&quot;highlighter&quot;&gt;
&lt;ol class=&quot;highlighter-c&quot; start=&quot;1&quot;&gt;
&lt;li&gt;&lt;span&gt;typedef&amp;nbsp;CPB_RETVAL&amp;nbsp;(CPBprb_Prb::*CPBprb_action)(CPBprb_Prb&amp;nbsp;&amp;amp;,&amp;nbsp;unsigned);&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;其中CPB_RETVAL是一个enum类型，CPBprb_Prb是一个类，CPBprb_action在代码中其他地方没有找到定义。因不知这行代码所为何意，遂在论坛发贴请教&lt;a href=&quot;http://topic.csdn.net/u/20080908/11/0f127830-8c90-414d-9bab-5d946b115522.html?seed=1500702230&quot;&gt;http://topic.csdn.net/u/20080908/11/0f127830-8c90-414d-9bab-5d946b115522.html?seed=1500702230&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;承蒙众多高手赐教，才知上段代码定义了成员函数指针&lt;span&gt;类型CPBprb_action，&lt;/span&gt;该类型函数有2个参数，类型分别为CPBprb_Prb &amp;amp;, unsigned，返回值类型为CPB_RETVAL。此函数指针的类型有个定义域，它是类CPBprb_Prb的成员&lt;span&gt;（CPBprb_Prb::*CPBprb_action）。&lt;/p&gt;
&lt;p&gt;另外，&lt;/span&gt;&lt;span&gt;CPBprb_action不仅可以指向&lt;/span&gt;CPBprb_Prb的成员函数，也可以指向CPBprb_Prb的派生类成员函数。甚至,CPBprb_Prb里可以根本就没有任何诸如CPB_RETVAL functionName (CPBprb_Prb &amp;amp;, unsigned)这样的函数,而完全可以在CPBprb_Prb的派生类里去增加 CPB_RETVAL functionName (CPBprb_Prb &amp;amp;, unsigned);这样的函数，如：&lt;/p&gt;
&lt;div class=&quot;highlighter&quot;&gt;
&lt;ol class=&quot;highlighter-c&quot; start=&quot;1&quot;&gt;
&lt;li&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include&amp;nbsp;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;&amp;nbsp;A&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A(){};&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt;&lt;span&gt;&amp;nbsp;~A(){};&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;};&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;&amp;nbsp;B&amp;nbsp;:&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;A&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;B(){};&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;~B(){};&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;span&gt;&amp;nbsp;Fb(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;span&gt;&amp;nbsp;a){&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;span&gt;&amp;nbsp;a*a;}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;};&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;typedef&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;span&gt;&amp;nbsp;(A::*Myfunction)(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;span&gt;&amp;nbsp;main()&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;B*&amp;nbsp;pB&amp;nbsp;=&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;&lt;span&gt;&amp;nbsp;B;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Myfunction&amp;nbsp;pf&amp;nbsp;=&amp;nbsp;(Myfunction)(&amp;amp;B::Fb);&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;span&gt;&amp;nbsp;retValue&amp;nbsp;=&amp;nbsp;(pB-&amp;gt;*pf)(3);&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;std::cout&amp;lt;&amp;lt;retValue;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;std::cin&amp;gt;&amp;gt;retValue;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;span&gt;&amp;nbsp;1;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;通过typedef int (A::*Myfunction)(int);定义的Myfunction是A的成员（函数指针），但只能在类外定义。&lt;/p&gt;
&lt;p&gt;需要指出的是，使用指向成员函数的指针变量是比较危险的!因此不建议这么用。&lt;/p&gt;
&lt;p&gt;（&lt;font color=&quot;#800000&quot;&gt;上文引用了论坛中对我帖子的回复，再次对关心并帮助我的人表示感谢。&lt;/font&gt;）&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;#000080&quot;&gt;PS：&lt;/font&gt;&lt;br /&gt;
&lt;h1&gt;函数指针(全局函数/类成员函数)和函数对象&lt;/h1&gt;
&lt;p&gt;（原文链接：&lt;a href=&quot;http://www.ccrun.com/article.asp?i=1005&amp;amp;d=sc37og&quot;&gt;http://www.ccrun.com/article.asp?i=1005&amp;amp;d=sc37og&lt;/a&gt;）&lt;/p&gt;
&lt;h2&gt;关键字：函数指针 全局函数 类成员函数 函数对象 Function object &lt;/h2&gt;
&lt;h2&gt;作者：ErranLi&amp;nbsp; &amp;nbsp; 更新：2007-01-06 02:31:47&amp;nbsp; &amp;nbsp; 浏览：9166&lt;/h2&gt;
&lt;div id=&quot;divCodeArea&quot;&gt;
&lt;div class=&quot;source&quot;&gt;
&lt;p&gt;
函数指针(全局函数/类成员函数)、函数对象(Function&amp;nbsp;object)&lt;/p&gt;
&lt;p&gt;一.&amp;nbsp;函数指针类型为全局函数.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include&amp;nbsp;&quot;stdafx.h&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include&amp;nbsp;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;reserved&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;TestAction;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;typedef&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;void&lt;/span&gt;&amp;nbsp;(*fp)(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;);&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;void&lt;/span&gt;&amp;nbsp;Drink(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;i)&lt;br /&gt;
{&lt;br /&gt;
&amp;nbsp; &amp;nbsp; cout&amp;lt;&amp;lt;&lt;span class=&quot;quotedstring&quot;&gt;&quot;No.&amp;nbsp;&quot;&lt;/span&gt;&amp;lt;&amp;lt;i&amp;lt;&amp;lt;&lt;span class=&quot;quotedstring&quot;&gt;&quot;&amp;nbsp;drink...&quot;&lt;/span&gt;&amp;lt;&amp;lt;endl;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;void&lt;/span&gt;&amp;nbsp;Eat(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;i)&lt;br /&gt;
{&lt;br /&gt;
&amp;nbsp; &amp;nbsp; cout&amp;lt;&amp;lt;&lt;span class=&quot;quotedstring&quot;&gt;&quot;No.&amp;nbsp;&quot;&lt;/span&gt;&amp;lt;&amp;lt;i&amp;lt;&amp;lt;&lt;span class=&quot;quotedstring&quot;&gt;&quot;&amp;nbsp;eat...&quot;&lt;/span&gt;&amp;lt;&amp;lt;endl;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;TestAction&lt;br /&gt;
{&lt;br /&gt;
&lt;span class=&quot;reserved&quot;&gt;public&lt;/span&gt;:&lt;br /&gt;
&amp;nbsp; &amp;nbsp; fp&amp;nbsp;testAct;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;void&lt;/span&gt;&amp;nbsp;TestAct(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;i)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;if&lt;/span&gt;&amp;nbsp;(testAct&amp;nbsp;!=&amp;nbsp;NULL)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; testAct(i);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; }&lt;br /&gt;
};&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;main(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;argc,&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;char&lt;/span&gt;*&amp;nbsp;argv[])&lt;br /&gt;
{&lt;br /&gt;
&amp;nbsp; &amp;nbsp; TestAction&amp;nbsp;doact;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.testAct&amp;nbsp;=&amp;nbsp;&amp;amp;Drink;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(0);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(1);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(2);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.testAct&amp;nbsp;=&amp;nbsp;&amp;amp;Eat;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(0);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(1);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(2);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;二.&amp;nbsp;函数指针类型为类成员函数.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include&amp;nbsp;&quot;stdafx.h&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include&amp;nbsp;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;reserved&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;Action;&lt;br /&gt;
&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;TestAction;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;nbsp;函数指针类型为类&amp;nbsp;Action&amp;nbsp;的成员函数&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;reserved&quot;&gt;typedef&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;void&lt;/span&gt;&amp;nbsp;(Action::*fp)(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;);&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;Action&lt;br /&gt;
{&lt;br /&gt;
&lt;span class=&quot;reserved&quot;&gt;public&lt;/span&gt;:&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;void&lt;/span&gt;&amp;nbsp;Drink(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;i)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cout&amp;lt;&amp;lt;&lt;span class=&quot;quotedstring&quot;&gt;&quot;No.&amp;nbsp;&quot;&lt;/span&gt;&amp;lt;&amp;lt;i&amp;lt;&amp;lt;&lt;span class=&quot;quotedstring&quot;&gt;&quot;&amp;nbsp;drink...&quot;&lt;/span&gt;&amp;lt;&amp;lt;endl;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; }&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;void&lt;/span&gt;&amp;nbsp;Eat(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;i)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cout&amp;lt;&amp;lt;&lt;span class=&quot;quotedstring&quot;&gt;&quot;No.&amp;nbsp;&quot;&lt;/span&gt;&amp;lt;&amp;lt;i&amp;lt;&amp;lt;&lt;span class=&quot;quotedstring&quot;&gt;&quot;&amp;nbsp;eat...&quot;&lt;/span&gt;&amp;lt;&amp;lt;endl;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; }&lt;br /&gt;
};&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;TestAction&lt;br /&gt;
{&lt;br /&gt;
&lt;span class=&quot;reserved&quot;&gt;public&lt;/span&gt;:&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &lt;span class=&quot;comment&quot;&gt;//&amp;nbsp;定义一个函数指针&lt;/span&gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; fp&amp;nbsp;testAct;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &lt;span class=&quot;comment&quot;&gt;//Action&amp;nbsp;对象实例&amp;nbsp;,&amp;nbsp;该指针用于记录被实例化的&amp;nbsp;Action&amp;nbsp;对象&lt;/span&gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; Action&amp;nbsp;*&amp;nbsp;pAction;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;void&lt;/span&gt;&amp;nbsp;TestAct(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;i)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;if&lt;/span&gt;&amp;nbsp;((pAction&amp;nbsp;!=&amp;nbsp;NULL)&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;(testAct&amp;nbsp;!=&amp;nbsp;NULL))&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span class=&quot;comment&quot;&gt;//&amp;nbsp;调用&lt;/span&gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; (pAction-&amp;gt;*testAct)(i);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;
&amp;nbsp; &amp;nbsp; }&lt;br /&gt;
};&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;main(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;argc,&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;char&lt;/span&gt;*&amp;nbsp;argv[])&lt;br /&gt;
{&lt;br /&gt;
&amp;nbsp; &amp;nbsp; Action&amp;nbsp;act;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; TestAction&amp;nbsp;doact;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.pAction&amp;nbsp;=&amp;nbsp;&amp;amp;act;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.testAct&amp;nbsp;= &amp;amp;Action::Drink;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(0);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(1);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(2);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.testAct&amp;nbsp;= &amp;amp;Action::Eat;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(0);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(1);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(2);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;三.&amp;nbsp;函数对象&amp;nbsp;(Function&amp;nbsp;object)&lt;br /&gt;
&lt;span class=&quot;sp874&quot;&gt;// 本文转自 C++Builder研究 - http://www.ccrun.com/article.asp?i=1005&amp;amp;d=sc37og&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include&amp;nbsp;&quot;stdafx.h&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include&amp;nbsp;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;preprocessor&quot;&gt;#include&amp;nbsp;&amp;lt;functional&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;Action;&lt;br /&gt;
&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;Drink;&lt;br /&gt;
&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;Eat;&lt;br /&gt;
&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;TestAction;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;Action&lt;br /&gt;
{&lt;br /&gt;
&lt;span class=&quot;reserved&quot;&gt;public&lt;/span&gt;:&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;operator&lt;/span&gt;()(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;i)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Act(i);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;return&lt;/span&gt;&amp;nbsp;i;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; }&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;virtual&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;void&lt;/span&gt;&amp;nbsp;Act(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;i)&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;
};&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;Drink&amp;nbsp;:&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;public&lt;/span&gt;&amp;nbsp;Action&lt;br /&gt;
{&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;void&lt;/span&gt;&amp;nbsp;Act(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;i)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cout&amp;lt;&amp;lt;&lt;span class=&quot;quotedstring&quot;&gt;&quot;No.&amp;nbsp;&quot;&lt;/span&gt;&amp;lt;&amp;lt;i&amp;lt;&amp;lt;&lt;span class=&quot;quotedstring&quot;&gt;&quot;&amp;nbsp;drink...&quot;&lt;/span&gt;&amp;lt;&amp;lt;endl;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; }&lt;br /&gt;
};&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;Eat&amp;nbsp;:&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;public&lt;/span&gt;&amp;nbsp;Action&lt;br /&gt;
{&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;void&lt;/span&gt;&amp;nbsp;Act(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;i)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cout&amp;lt;&amp;lt;&lt;span class=&quot;quotedstring&quot;&gt;&quot;No.&amp;nbsp;&quot;&lt;/span&gt;&amp;lt;&amp;lt;i&amp;lt;&amp;lt;&lt;span class=&quot;quotedstring&quot;&gt;&quot;&amp;nbsp;eat...&quot;&lt;/span&gt;&amp;lt;&amp;lt;endl;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; }&lt;br /&gt;
};&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;TestAction&lt;br /&gt;
{&lt;br /&gt;
&lt;span class=&quot;reserved&quot;&gt;public&lt;/span&gt;:&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;void&lt;/span&gt;&amp;nbsp;TestAct(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;i,&amp;nbsp;Action&amp;amp;&amp;nbsp;testAct)&lt;br /&gt;
&amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; testAct(i);&lt;br /&gt;
&amp;nbsp; &amp;nbsp; }&lt;br /&gt;
};&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;main(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;argc,&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;char&lt;/span&gt;*&amp;nbsp;argv[])&lt;br /&gt;
{&lt;br /&gt;
&amp;nbsp; &amp;nbsp; TestAction&amp;nbsp;doact;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(0,&amp;nbsp;Drink());&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(1,&amp;nbsp;Drink());&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(2,&amp;nbsp;Drink());&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(0,&amp;nbsp;Eat());&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(1,&amp;nbsp;Eat());&lt;br /&gt;
&amp;nbsp; &amp;nbsp; doact.TestAct(2,&amp;nbsp;Eat());&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;虽然传递函数指针被广泛应用于事件驱动系统中，以此实现回调函数通过指针来调用。但&amp;nbsp;C++&amp;nbsp;还是提供了另外一种可供选择的办法，即函数对象，利用它可以&lt;br /&gt;
避免使用函数指针。这样做有几个优点。首先，&amp;nbsp;因为对象可以在内部修改而不用改动外部接口，因此设计更灵活，更富有弹性。函数对象也具备有存储先前调用结&lt;br /&gt;
果的数据成员。。&amp;nbsp;此外，编译器可以内联函数对象，从而进一步增强性能。函数对象可以具体表达依赖成员模板的通用算法&amp;nbsp;,&amp;nbsp;这些算法借助普通的函数指针难&lt;br /&gt;
以完成。例用函数对象实现了一个通用的&amp;nbsp;Negation&amp;nbsp;算法操作：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include&amp;nbsp;&quot;stdafx.h&quot;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;preprocessor&quot;&gt;#include&amp;nbsp;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;Negate&lt;br /&gt;
{&lt;br /&gt;
&lt;span class=&quot;reserved&quot;&gt;public&lt;/span&gt;:&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;template&lt;/span&gt;&amp;lt;&lt;span class=&quot;reserved&quot;&gt;class&lt;/span&gt;&amp;nbsp;T&amp;gt;&amp;nbsp;T&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;operator&lt;/span&gt;()(T&amp;nbsp;t)&amp;nbsp;const&lt;br /&gt;
&amp;nbsp; &amp;nbsp; {&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;return&lt;/span&gt;&amp;nbsp;-t;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; }&lt;br /&gt;
};&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;void&lt;/span&gt;&amp;nbsp;Callback(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;n,&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;const&lt;/span&gt;&amp;nbsp;Negate&amp;amp;&amp;nbsp;neg)&amp;nbsp; &lt;span class=&quot;comment&quot;&gt;//&amp;nbsp;传递一个函数对象&lt;/span&gt;&lt;br /&gt;
{&lt;br /&gt;
&amp;nbsp; &amp;nbsp; n&amp;nbsp;=&amp;nbsp;neg(n);&amp;nbsp; &lt;span class=&quot;comment&quot;&gt;//&amp;nbsp;调用重载的&amp;nbsp;()&amp;nbsp;操作&amp;nbsp;来对&amp;nbsp;n&amp;nbsp;进行&amp;nbsp;negate&amp;nbsp;操作&lt;/span&gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; cout&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;n&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;endl;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;main(&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;nbsp;argc,&amp;nbsp;&lt;span class=&quot;reserved&quot;&gt;char&lt;/span&gt;*&amp;nbsp;argv[])&lt;br /&gt;
{&lt;br /&gt;
&amp;nbsp; &amp;nbsp; &lt;span class=&quot;comment&quot;&gt;//&amp;nbsp;调用方式一&lt;/span&gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; Callback(5,&amp;nbsp;Negate());&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &lt;span class=&quot;comment&quot;&gt;//&amp;nbsp;调用方式二&lt;/span&gt;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; Negate&amp;nbsp;neg;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; cout&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;neg(9.99999)&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;endl;&lt;br /&gt;
&amp;nbsp; &amp;nbsp; cout&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;neg(&lt;span class=&quot;reserved&quot;&gt;__int32&lt;/span&gt;(39999999))&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;endl;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &lt;span class=&quot;reserved&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp; STL&amp;nbsp;库中定义了很多函数对象以供相关算法调用，如&amp;nbsp;模板化的函数对象&amp;nbsp;greater&amp;lt;&amp;gt;&amp;nbsp;或者&amp;nbsp;less&amp;lt;&amp;gt;:&lt;/p&gt;
&lt;p&gt;vector&amp;nbsp;&amp;lt;&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;vi;&lt;br /&gt;
&lt;span class=&quot;comment&quot;&gt;//..&amp;nbsp;填充向量&lt;/span&gt;&lt;br /&gt;
sort(vi.begin(),&amp;nbsp;vi.end(),&amp;nbsp;greater&amp;lt;&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;gt;()&amp;nbsp;);&lt;span class=&quot;comment&quot;&gt;//&amp;nbsp;降序&amp;nbsp;(descending)&lt;/span&gt;&lt;br /&gt;
sort(vi.begin(),&amp;nbsp;vi.end(),&amp;nbsp;less&amp;lt;&lt;span class=&quot;reserved&quot;&gt;int&lt;/span&gt;&amp;gt;()&amp;nbsp;);&amp;nbsp;&lt;span class=&quot;comment&quot;&gt;//&amp;nbsp;升序&amp;nbsp;(ascending)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;!-- end of divCodeArea --&gt;&lt;/p&gt;
&lt;p&gt;本文转自：http://www.cppblog.com/erran/archive/2006/12/26/16868.html&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:rgb(255,0,0);&quot;&gt;函数对象（function&amp;nbsp;&lt;br /&gt;
object）,又名仿函数（functor),是重载了operator（）的一个类，其实在stl算法中有大量运用，c++标准预定义的如&lt;br /&gt;
less &amp;lt;&amp;gt;,greater &amp;lt;&amp;gt;,bind2nd &amp;lt;&amp;gt;等&amp;nbsp; &lt;br /&gt; &amp;nbsp; 为什么引入仿函数？&amp;nbsp;  &lt;br /&gt; &amp;nbsp; 原因：&amp;nbsp;  &lt;br /&gt; &amp;nbsp; １．仿函数有具体型别，可用在模板参数，而函数不行&amp;nbsp;  &lt;br /&gt; &amp;nbsp; ２．同类仿函数可有不同植，可代表不同状态，比函数灵活（须定义多个）&amp;nbsp;  &lt;br /&gt; &amp;nbsp; ３．仿函数可能比普通函数快&amp;nbsp;  &lt;br /&gt; &amp;nbsp; ．．．．．．．．可能还有，不过凭印象就这些了&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>函数对象</title>
   <link href="http://bo-yang.github.com//2008/09/08/function-object"/>
   <updated>2008-09-08T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/09/08/function-object</id>
   <content type="html">&lt;p&gt;
    看到有个概念叫“函数对象”，搜了一下关于它的解释： &lt;/p&gt;
&lt;p&gt; &lt;span style=&quot;color:rgb(255,0,0);&quot;&gt;函&lt;br /&gt;
数对象（function&amp;nbsp;&lt;br /&gt;
object）,又名仿函数（functor),是重载了operator（）的一个类，其实在stl算法中有大量运用，c++标准预定义的如&lt;br /&gt;
less &amp;lt;&amp;gt;,greater &amp;lt;&amp;gt;,bind2nd &amp;lt;&amp;gt;等&amp;nbsp; &lt;br /&gt; &amp;nbsp; 为什么引入仿函数？&amp;nbsp;  &lt;br /&gt; &amp;nbsp; 原因：&amp;nbsp;  &lt;br /&gt; &amp;nbsp; １．仿函数有具体型别，可用在模板参数，而函数不行&amp;nbsp;  &lt;br /&gt; &amp;nbsp; ２．同类仿函数可有不同植，可代表不同状态，比函数灵活（须定义多个）&amp;nbsp;  &lt;br /&gt; &amp;nbsp; ３．仿函数可能比普通函数快&amp;nbsp;  &lt;br /&gt; &amp;nbsp; ．．．．．．．．可能还有，不过凭印象就这些了&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &lt;font color=&quot;#ff0000&quot;&gt;和普通函数相比,在不破坏接口的情况下,函数对象可以有自己的状态.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;另外，&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;#ff0000&quot;&gt;1 什么是函数对象 &lt;/p&gt;
&lt;p&gt; c＋＋在模板方面使用很多的一个技术，写一个类，这个类有个成员函数，可以让类象函数一样运行。 &lt;br /&gt; 主要用于模板函数中。 &lt;/p&gt;
&lt;p&gt; 2 实现 &lt;/p&gt;
&lt;p&gt; 类的成员函数，()可以让一个类运行起来象一个函数一样，如我们在排序的时候我们使用sort &lt;br /&gt; 可能sort是这样的sort(int, int) &lt;br /&gt; 我们自己可以写一个类，其中重载void operator()(int, int)来实现。 &lt;/p&gt;
&lt;p&gt; for_each（begin, end, func) &lt;br /&gt; 这个func如果是函数的话，会把value（*it)放在函数的参数位置上，如果是一个类在那个位置，将会调用运算符函数()来将参数传递进去。首先调用构造函数，构造函数初始化一个对象后，对象调用函数()来实现函数对象操作。 &lt;/p&gt;
&lt;p&gt; 3 函数对象的优势 &lt;/p&gt;
&lt;p&gt; 函数对象的功能于函数的功能是一样的，那为什么要使用默认构造函数。 &lt;br /&gt; 1 函数对象是一个智能对象，他可以利用对象中的成员函数，和成员变量。 &lt;br /&gt; 2 完全可以使用类的优势，可以使用类的重载特性，同样的一个类的名字，可以调用各种函数。 &lt;/font&gt; &lt;/p&gt;
&lt;p&gt;在&lt;i&gt;more exceptional c++&lt;/i&gt;和&lt;i&gt;The C++ Programming Language&lt;/i&gt;等书里有看到。&lt;/p&gt;
&lt;p&gt;函数对象示例：
&lt;div class=&quot;highlighter&quot;&gt;
&lt;ol class=&quot;highlighter-c&quot; start=&quot;1&quot;&gt;
&lt;li&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;nbsp;Negate.cpp&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;preprocessor&quot;&gt;#include&amp;nbsp;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt;&lt;span&gt;&amp;nbsp;std;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;&amp;nbsp;Negate&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;template&amp;lt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span&gt;&amp;nbsp;T&amp;gt;&amp;nbsp;T&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&lt;span&gt;()(T&amp;nbsp;t)&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;span&gt;&amp;nbsp;-t;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;};&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;&lt;span&gt;&amp;nbsp;Callback(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;span&gt;&amp;nbsp;n,&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;span&gt;&amp;nbsp;Negate&amp;amp;&amp;nbsp;neg)&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;nbsp;传递一个函数对象&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;n&amp;nbsp;=&amp;nbsp;neg(n);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;nbsp;调用重载的&amp;nbsp;()&amp;nbsp;操作&amp;nbsp;来对&amp;nbsp;n&amp;nbsp;进行&amp;nbsp;negate&amp;nbsp;操作&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;n&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;endl;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;span&gt;&amp;nbsp;main(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;span&gt;&amp;nbsp;argc,&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;&lt;span&gt;*&amp;nbsp;argv[])&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;nbsp;调用方式一&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Callback(5,&amp;nbsp;Negate());&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;nbsp;调用方式二&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Negate&amp;nbsp;neg;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;neg(9.99999)&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;endl;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cout&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;neg(__int32(39999999))&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;endl;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;getchar();&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;span&gt;&amp;nbsp;0;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;PS：&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;ArticleContent1_ArticleContent1_lblContent&quot;&gt;&lt;/span&gt;
&lt;p class=&quot;p14&quot; align=&quot;center&quot;&gt;&lt;b&gt;定义函数对象 &lt;/b&gt;&lt;/p&gt;
&lt;table width=&quot;100%&quot; align=&quot;center&quot; border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;0&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td bgcolor=&quot;#febf01&quot;&gt;
&lt;table width=&quot;100%&quot; align=&quot;center&quot; border=&quot;0&quot; cellpadding=&quot;3&quot; cellspacing=&quot;0&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width=&quot;60%&quot; bgcolor=&quot;#eeeeee&quot;&gt;时间：2001/02/07 15:22&lt;/td&gt;
&lt;td width=&quot;40%&quot; bgcolor=&quot;#eeeeee&quot;&gt;作者：vckbase &lt;a target=&quot;_blank&quot; href=&quot;http://www.vckbase.com/&quot;&gt;VC知识库&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!--标题:结束--&gt;&lt;br /&gt;&lt;!--正文:开始--&gt;&lt;/p&gt;
&lt;p&gt;　 尽管函数指针被广泛用于实现函数回调，但C++还提供了一个重要的实现回调函数的方法，那就是函数对象。函数对象（也称“算符”）是重载了“()”操作符的普通类对象。因此从语法上讲，函数对象与普通的函数行为类似。 &lt;/p&gt;
&lt;p&gt;用函数对象代替函数指针有几个优点，首先，因为对象可以在内部修改而不用改动外部接口，因此设计更灵活，更富有弹性。函数对象也具备有存储先前调用&lt;br /&gt;
结果的数据成员。在使用普通函数时需要将先前调用的结果存储在全程或者本地静态变量中，但是全程或者本地静态变量有某些我们不愿意看到的缺陷。 &lt;/p&gt;
&lt;p&gt;其次，在函数对象中编译器能实现内联调用，从而更进一步增强了性能。这在函数指针中几乎是不可能实现的。 &lt;/p&gt;
&lt;p&gt;下面举例说明如何定义和使用函数对象。首先，声明一个普通的类并重载“()”操作符： &lt;/p&gt;
&lt;p&gt;class Negate &lt;/p&gt;
&lt;p&gt;{ &lt;/p&gt;
&lt;p&gt;public: &lt;/p&gt;
&lt;p&gt;int operator() (int n) { return -n;} &lt;/p&gt;
&lt;p&gt;}; &lt;/p&gt;
&lt;p&gt;重载操作语句中，记住第一个圆括弧总是空的,因为它代表重载的操作符名；第二个圆括弧是参数列表。一般在重载操作符时，参数数量是固定的，而重载“()”操作符时有所不同，它可以有任意多个参数。 &lt;/p&gt;
&lt;p&gt;因为在Negate中内建的操作是一元的（只有一个操作数），重载的“()”操作符也只有一个参数。返回类型与参数类型相同-本例中为int。函数返回与参数符号相反的整数。 &lt;/p&gt;
&lt;p&gt;使用函数对象 &lt;/p&gt;
&lt;p&gt;我们现在定义一个叫Callback()的函数来测试函数对象。Callback()有两个参数：一个为int一个是对类Negate的引用。Callback()将函数对象neg作为一个普通的函数名： &lt;/p&gt;
&lt;p&gt;#include &lt;/p&gt;
&lt;p&gt;using std::cout; &lt;/p&gt;
&lt;p&gt;void Callback(int n, Negate &amp;amp; neg) &lt;/p&gt;
&lt;p&gt;{ &lt;/p&gt;
&lt;p&gt;int val = neg(n); //调用重载的操作符“()” &lt;/p&gt;
&lt;p&gt;cout &amp;lt;&amp;lt; val; &lt;/p&gt;
&lt;p&gt;} &lt;/p&gt;
&lt;p&gt;不要的代码中，注意neg是对象，而不是函数。编译器将语句 &lt;/p&gt;
&lt;p&gt;int val = neg(n); &lt;/p&gt;
&lt;p&gt;转化为 &lt;/p&gt;
&lt;p&gt;int val = neg.operator()(n); &lt;/p&gt;
&lt;p&gt;通常，函数对象不定义构造函数和析构函数。因此，在创建和销毁过程中就不会发生任何问题。前面曾提到过，编译器能内联重载的操作符代码，所以就避免了与函数调用相关的运行时问题。 &lt;/p&gt;
&lt;p&gt;为了完成上面个例子，我们用主函数main()实现Callback()的参数传递： &lt;/p&gt;
&lt;p&gt;int main() &lt;/p&gt;
&lt;p&gt;{ &lt;/p&gt;
&lt;p&gt;Callback(5, Negate() ); //输出 -5 &lt;/p&gt;
&lt;p&gt;} &lt;/p&gt;
&lt;p&gt;本例传递整数5和一个临时Negate对象到Callback()，然后程序输出-5。 &lt;/p&gt;
&lt;p&gt;模板函数对象 &lt;/p&gt;
&lt;p&gt;从上面的例子中可以看出，其数据类型被限制在int，而通用性是函数对象的优势之一，如何创建具有通用性的函数对象呢？方法是使用模板，也就是将重载的操作符“（）”定义为类成员模板，以便函数对象适用于任何数据类型：如double，_int64或char： &lt;/p&gt;
&lt;p&gt;class GenericNegate &lt;/p&gt;
&lt;p&gt;{ &lt;/p&gt;
&lt;p&gt;public: &lt;/p&gt;
&lt;p&gt;template T operator() (T t) const {return -t;} &lt;/p&gt;
&lt;p&gt;}; &lt;/p&gt;
&lt;p&gt;int main() &lt;/p&gt;
&lt;p&gt;{ &lt;/p&gt;
&lt;p&gt;GenericNegate negate; &lt;/p&gt;
&lt;p&gt;cout&amp;lt;&amp;lt; negate(5.3333); // double &lt;/p&gt;
&lt;p&gt;cout&amp;lt;&amp;lt; negate(10000000000i64); // __int64 &lt;/p&gt;
&lt;p&gt;} &lt;/p&gt;
&lt;p&gt;如果用普通的回调函数实现上述的灵活性是相当困难的。 &lt;/p&gt;
&lt;p&gt;标准库中函数对象 &lt;/p&gt;
&lt;p&gt;C++标准库定义了几个有用的函数对象，它们可以被放到STL算法中。例如，sort()算法以判断对象（predicate&lt;br /&gt;
object）作为其第三个参数。判断对象是一个返回Boolean型结果的模板化的函数对象。可以向sort()传递greater&amp;lt;&amp;gt;或&lt;br /&gt;
者less&amp;lt;&amp;gt;来强行实现排序的升序或降序： &lt;/p&gt;
&lt;p&gt;#include // for greater&amp;lt;&amp;gt; and less&amp;lt;&amp;gt; &lt;/p&gt;
&lt;p&gt;#include //for sort() &lt;/p&gt;
&lt;p&gt;#include &lt;/p&gt;
&lt;p&gt;using namespace std; &lt;/p&gt;
&lt;p&gt;int main() &lt;/p&gt;
&lt;p&gt;{ &lt;/p&gt;
&lt;p&gt;vector vi; &lt;/p&gt;
&lt;p&gt;//..填充向量 &lt;/p&gt;
&lt;p&gt;sort(vi.begin(), vi.end(), greater() );//降序( descending ) &lt;/p&gt;
&lt;p&gt;sort(vi.begin(), vi.end(), less() ); //升序 ( ascending ) &lt;/p&gt;
&lt;p&gt;} &lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>C语言函数中定义大数组耗尽堆栈的问题</title>
   <link href="http://bo-yang.github.com//2008/08/26/big-array-in-c"/>
   <updated>2008-08-26T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/08/26/big-array-in-c</id>
   <content type="html">&lt;p&gt;
    今晚上一同学请我帮忙看一个C程序，GCC编译时一直抱错，说是段错误。&lt;br /&gt;程序本身写的比较差，但编译能通过，只是有几十个警告。&lt;br /&gt;两个小时过去了，在Eclipse+GCC下没有找到问题（这个环境还不熟悉），换到了VC下面，逐步调试，才发现问题出在被main调用的一个叫做readmctal()的函数的前面几行中。该函数如下：
&lt;div class=&quot;highlighter&quot;&gt;
&lt;ol class=&quot;highlighter-c&quot; start=&quot;1&quot;&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;&lt;span&gt;&amp;nbsp;readmctal(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;{&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;span&gt;&amp;nbsp;number,count,sign,num_tally,nflag;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;span&gt;&amp;nbsp;ncell,nstep,mstep,sum;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;&lt;span&gt;&amp;nbsp;*(str_temp[80]);&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;&lt;span&gt;&amp;nbsp;temp_spectra[num_cell][egroup],temp_error[num_cell][egroup];&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;&lt;span&gt;&amp;nbsp;temp_flux[num_cell],temp_flux_error[num_cell];&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&lt;span&gt;&amp;nbsp;total_cell_no[num_cell];&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sum=0;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;number=0;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/*&amp;nbsp;open&amp;nbsp;the&amp;nbsp;mctal&amp;nbsp;file&amp;nbsp;*/&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span&gt;&amp;nbsp;((fpt_mc=fopen(&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;mctal&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span&gt;))==NULL){&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;/nERROR&amp;nbsp;-&amp;nbsp;Cannot&amp;nbsp;open&amp;nbsp;mctal&amp;nbsp;file/n&quot;&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit(1);&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;File&amp;nbsp;mctal&amp;nbsp;opened.../n&quot;&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;......&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;同时
&lt;div class=&quot;highlighter&quot;&gt;
&lt;ol class=&quot;highlighter-c&quot; start=&quot;1&quot;&gt;
&lt;li&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&amp;nbsp;define&amp;nbsp;num_cell&amp;nbsp;9999&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li class=&quot;alt&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&amp;nbsp;define&amp;nbsp;egroup&amp;nbsp;175&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;定义的二位数组实在是太大了。看了反汇编之后感觉貌似是堆栈的问题，试着将&lt;br /&gt;&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;&lt;span&gt;&amp;nbsp;temp_spectra[num_cell][egroup],temp_error[num_cell][egroup];&lt;/span&gt;&lt;br /&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;&lt;span&gt;&amp;nbsp;temp_flux[num_cell],temp_flux_error[num_cell];&lt;/span&gt;&lt;br /&gt;移动到函数体外，大功告成！&lt;br /&gt;到Linux下用GCC编译，“段错误”的提示消失了。&lt;/p&gt;
&lt;p&gt;经过分析，我认为一个函数分配的内存是有限的，在函数体内定义的二维数组太大了，耗尽了堆栈，因此报错。&lt;/p&gt;
&lt;p&gt;PS：论坛达人的观点：&lt;br /&gt;&lt;font color=&quot;#ff6600&quot;&gt;养成良好的编程习惯，一般公司都有coding style，里面应该有规定： &lt;br /&gt; 函数内部(局部变量)禁止定义大数组，而应使用动态内存；如数组需传入函数应使用指针作为参数； &lt;br /&gt; 其实就算你调用这个函数不出错，但是如果函数嵌套很多的话也会发生segment error &lt;br /&gt; 在某些资源有限的系统下，更需要注意这个问题，比如51单片机&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;#ff6600&quot;&gt;函数内是在栈分配内存，栈大小一般限制在1M到2M &lt;br /&gt; 函数外则是全局变量，在DATA段分配内存&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;#000000&quot;&gt;PSPS：转一篇关于C内存分配的文章，原文链接&lt;/font&gt;：&lt;u&gt;&lt;a href=&quot;http://www.lupaworld.com/bbs/viewthread.php?tid=29577&quot;&gt;http://www.lupaworld.com/bbs/viewthread.php?tid=29577&lt;/a&gt;&lt;/u&gt;&lt;br /&gt;
&lt;h2&gt;浅谈C内存分配&lt;/h2&gt;
&lt;div id=&quot;postmessage_58839&quot; class=&quot;t_msgfont&quot;&gt;很早之前写的了，现在发到C版来。&lt;/p&gt;
&lt;p&gt;关于C语言内存方面的话题要真说起来的话那恐怕就没头了，所以本文仅仅是一个浅谈。&lt;br /&gt;
关于内存问题不同平台之间有一定的区别。本文所指的平台是x86的Linux平台&lt;br /&gt;
用C语言做程序（其实其他语言也一样），不仅要熟悉语法，其实很多相关的背景知识也很重要。在学习和研究C语言中内存分配的问题前，首先要了解一下Linux分配给进程（运行中的程序）的地址空间是什么样的。&lt;br /&gt;
总的来说有3个段，即代码段，数据段和堆栈段（学过汇编的朋友一定很熟悉了）。代码段就是存储程序文本的，所以有时候也叫做文本段，指令指针中的指令就是&lt;br /&gt;
从这里取得。这个段一般是可以被共享的，比如你在Linux开了2个Vi来编辑文本，那么一般来说这两个Vi是共享一个代码段的，但是数据段不同（这点有&lt;br /&gt;
点类似C++中类的不同对象共享相同成员函数）。数据段是存储数据用的，还可以分成初始化为非零的数据区，BSS，和堆(Heap)三个区域。初始化非零&lt;br /&gt;
数据区域一般存放静态非零数据和全局的非零数据。BSS是Block Started by&lt;br /&gt;
Symbol的缩写，原本是汇编语言中的术语。该区域主要存放未初始化的全局数据和静态数据。还有就是堆了，这个区域是给动态分配内存是使用的，也就是用&lt;br /&gt;
malloc等函数分配的内存就是在这个区域里的。它的地址是向上增长的。最后一个堆栈段（注意，堆栈是Stack,堆是Heap，不是同一个东西），堆&lt;br /&gt;
栈可太重要了，这里存放着局部变量和函数参数等数据。例如递归算法就是靠栈实现的。栈的地址是向下增长的。具体如下：&lt;br /&gt;
========高地址&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;=======&lt;br /&gt;
程序栈&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; 堆栈段&lt;br /&gt;
&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;向下增长&lt;br /&gt;
“空洞”&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;=======&lt;br /&gt;
&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;向上增长&lt;br /&gt;
堆&lt;br /&gt;
------&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; 数据段&lt;br /&gt;
BSS&lt;br /&gt;
------&lt;br /&gt;
非零数据&lt;br /&gt;
=========低地址&amp;nbsp; &amp;nbsp; =======&lt;br /&gt;
=========&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; =======&lt;br /&gt;
代码&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;代码段&lt;br /&gt;
=========&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; =======&lt;br /&gt;
需要注意的是，代码段和数据段之间有明确的分隔，但是数据段和堆栈段之间没有，而且栈是向下增长，堆是向上增长的，因此理论上来说堆和栈会“增长到一起”，但是操作系统会防止这样的错误发生，所以不用过分担心。&lt;br /&gt;
有了以上理论做铺垫，下面就说动态内存的分配。上面说了，动态内存空间是在堆中分配的。实现动态分配的也就是下面几个函数：&lt;br /&gt;
stdlib.h ：&lt;br /&gt;
void *malloc(size_t size);&lt;br /&gt;
void *calloc(size_t nmemb, size_t size);&lt;br /&gt;
void *realloc(void *ptr, size_t size);&lt;br /&gt;
void free(void *ptr);&lt;br /&gt;
一个一个说吧。malloc就是分配一个size大小的内存空间，并且用一个void类型的指针指向这个空间，然后返回这个指针。也就是说，malloc&lt;br /&gt;
返回了一个指向size大小的空间的void类型的指针，如果要使用这个空间，还得把void*类型转换成一个你需要的类型，比如int*之类。&lt;br /&gt;
calloc和malloc基本一样，不同的是有两点，一是calloc分配的空间大小是由nmemb*size决定的，也就是说nmemb是条目个数，&lt;br /&gt;
而size可以看成是条目的大小，计算总空间任务由calloc去做。二是calloc返回的空间都用0填充，而malloc则不确定内存中会有什么东&lt;br /&gt;
西。realloc是用来改变已经分配的空间的大小。指针ptr是void类型的，它应该指向一个需要重新分配大小的空间，而size参数则是重新分配之&lt;br /&gt;
后的整个空间大小，而不是增加的大小。同样，返回的是一个指向新空间的指针。free用来释放由上面3个函数分配的空间，其参数就是指向某空间的指针。&lt;br /&gt;
基本就这些了，这些都是比较基础的话题，高级话题和细节问题还有很多，这里就不进行说明了，有机会我会继续总结一番的&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>《UNIX教程》读书笔记(一)</title>
   <link href="http://bo-yang.github.com//2008/08/21/unix-textbook"/>
   <updated>2008-08-21T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/08/21/unix-textbook</id>
   <content type="html">&lt;p&gt;
    《UNIX教程》读书笔记&lt;/p&gt;
&lt;p&gt;Part I&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UNIX Shell&lt;/p&gt;
&lt;p&gt;&lt;b&gt;1 文件类型&lt;/b&gt;
&lt;ul id=&quot;vflc1&quot;&gt;
&lt;li id=&quot;vflc2&quot;&gt;d 目录。&lt;/li&gt;
&lt;li id=&quot;vflc3&quot;&gt;l 符号链接(指向另一个文件)。&lt;/li&gt;
&lt;li id=&quot;vflc4&quot;&gt;s 套接字文件。&lt;/li&gt;
&lt;li id=&quot;vflc5&quot;&gt;b 块设备文件。&lt;/li&gt;
&lt;li id=&quot;vflc6&quot;&gt;c 字符设备文件。&lt;/li&gt;
&lt;li id=&quot;vflc7&quot;&gt;p 命名管道文件。&lt;/li&gt;
&lt;li id=&quot;vflc8&quot;&gt;- 普通文件，或者更准确地说，不属于以上几种类型的文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;2 该变权限位&lt;/b&gt;&lt;br /&gt;chmod命令的一般格式为：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;i&gt;chmod [who] operator [permission] filename&lt;/i&gt;&lt;br /&gt;w h o的含义是：&lt;br /&gt;u 文件属主权限。&lt;br /&gt;g 同组用户权限。&lt;br /&gt;o 其他用户权限。&lt;br /&gt;a 所有用户(文件属主、同组用户及其他用户)。&lt;br /&gt;o p e r a t o r的含义：&lt;br /&gt;+ 增加权限。&lt;br /&gt;- 取消权限。&lt;br /&gt;= 设定权限。&lt;br /&gt;p e r m i s s i o n的含义：&lt;br /&gt;r 读权限。&lt;br /&gt;w 写权限。&lt;br /&gt;x 执行权限。&lt;br /&gt;s 文件属主和组s e t - I D。&lt;br /&gt;t 粘性位*。&lt;br /&gt;l 给文件加锁，使其他用户无法访问。&lt;br /&gt;u,g,o 针对文件属主、同组用户及其他用户的操作。&lt;/p&gt;
&lt;p&gt;chmod命令绝对模式的一般形式为：&lt;br /&gt;chmod [mode] file&lt;br /&gt;其中m o d e是一个八进制数。&lt;/p&gt;
&lt;p&gt;&lt;b&gt;3 目录&lt;/b&gt;&lt;br /&gt;目录的读权限位意味着可以列出其中的内容。写权限位意味着可以在该目录中创建文件，如果不希望其他用户在你的目录中创建文件，可以取消相应的写权限位。执行权限位则意味着搜索和访问该目录。&lt;/p&gt;
&lt;p&gt;如果把同组用户或其他用户针对某一目录的权限设置为- - x，那么他们将无法列出该目录中的文件。如果该目录中有一个执行位置位的脚本或程序，只要用户知道它的路径和文件名，仍然可以执行它。用户不能够进入该目录并不妨碍他的执行。&lt;/p&gt;
&lt;p&gt;目录的权限将会覆盖该目录中文件的权限。&lt;/p&gt;
&lt;p&gt;&lt;b&gt;4 suid/guid&lt;/b&gt;&lt;br /&gt;suid&lt;br /&gt;
意味着如果某个用户对属于自己的shell脚本设置了这种权限，那么其他用户在执行这一脚本时也会具有其属主的相应权限。于是，如果根用户的某一个脚本设&lt;br /&gt;
置了这样的权限，那么其他普通用户在执行它的期间也同样具有根用户的权限。同样的原则也适用于guid，执行相应脚本的用户将具有该文件所属用户组中用户&lt;br /&gt;
的权限。&lt;/p&gt;
&lt;p&gt;有相当一些U N I X命令也设置了s u i d和g u i d。如果想找出这些命令，可以进入/ b i n或/ s b i n目&lt;br /&gt;录，执行下面的命令：&lt;br /&gt;$ ls -l | grep &#39;^...s&#39;&lt;br /&gt;上面的命令是用来查找s u i d文件的；&lt;br /&gt;$ ls -l | grep &#39;^...s..s&#39;&lt;br /&gt;上面的命令是用来查找s u i d和g u i d的。&lt;/p&gt;
&lt;p&gt;如果希望设置s u i d，那么就将相应的权限位之前的那一位设置为4；如果希望设置g u i d，那么就将相应的权限&lt;br /&gt;位之前的那一位设置为2；如果希望两者都置位，那么将相应的权限位之前的那一位设置为4+2。&lt;br /&gt;一旦设置了这一位，一个s将出现在x的位置上。记住：在设置s u i d或g u i d的同时，相应的&lt;br /&gt;执行权限位必须要被设置。例如，如果希望设置g u i d，那么必须要让该用户组具有执行权限。&lt;br /&gt;如果想要对文件l o g i n设置s u i d，它当前所具有的权限为rwx rw- r-- (741)，需要在使用&lt;br /&gt;c h m o d命令时在该权限数字的前面加上一个4，即chmod 4741，这将使该文件的权限变为rws&lt;br /&gt;rw- r - -。&lt;br /&gt;$ chmod 4741 logit&lt;/p&gt;
&lt;p&gt;还可以使用符号方式来设置s u i d / g u i d。如果某个文件具有这样的权限： rwx r-x r- x，那么&lt;br /&gt;可以这样设置其s u i d：&lt;br /&gt;chmod u+s &amp;lt;filename&amp;gt;&lt;br /&gt;于是该文件的权限将变为： rws r-x r-x&lt;br /&gt;在查找设置了s u i d的文件时，没准会看到具有这样权限的文件：rwS r-x r- x，其中S为大写。&lt;br /&gt;它表示相应的执行权限位并未被设置，这是一种没有什么用处的s u i d设置，可以忽略它的存在。&lt;/p&gt;
&lt;p&gt;在改变一个文件的所有权时，相应的suid也将被清除，这是出于安全性的考虑。&lt;/p&gt;
&lt;p&gt;&lt;b&gt;5 chown和chgrp&lt;/b&gt;&lt;br /&gt;chown命令的一般形式为：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;chmod -R -h owner file&lt;br /&gt;-R选项意味着对所有子目录下的文件也都进行同样的操作。- h选项意味着在改变符号链接文件的属主时不影响该链接所指向的目标文件。&lt;br /&gt;c h g r p命令和c h o w n命令的格式差不多.&lt;/p&gt;
&lt;p&gt;如果你希望知道自己属于哪些用户组，可以用group或id命令。如果要查看其他用户所属于的组，可以用命令group XXX，XXX是某个用户名。&lt;/p&gt;
&lt;p&gt;&lt;b&gt;6 umask&lt;/b&gt;&lt;br /&gt;umask命令确定了你创建文件的缺省模式.一般来说，u m a s k命令是在/ e t c / p r o f i l e文件中设置的，每个用户在登录时都会引用这个文&lt;br /&gt;件，所以如果希望改变所有用户的u m a s k，可以在该文件中加入相应的条目。如果希望永久性&lt;br /&gt;地设置自己的u m a s k值，那么就把它放在自己$ H O M E目录下的. p r o f i l e或. b a s h _ p r o f i l e文件中。&lt;/p&gt;
&lt;p&gt;表1-8 umask值与权限&lt;br /&gt;umask &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;文件&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;目录&lt;br /&gt;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;6 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7&lt;br /&gt;1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;6 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;6&lt;br /&gt;2 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5&lt;br /&gt;3 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4&lt;br /&gt;4 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3&lt;br /&gt;5 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2&lt;br /&gt;6 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1&lt;br /&gt;7 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&lt;/p&gt;
&lt;p&gt;&lt;b&gt;7 符号链接（软连接）&lt;/b&gt;&lt;br /&gt;该命令的一般形式为：&lt;br /&gt;ln [-s] source_path target_path&lt;br /&gt;其中的路径可以是目录也可以是文件。&lt;/p&gt;
&lt;p&gt;8 find命令&lt;br /&gt;find命令的一般形式为：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;find pathname -options [-print -exec -ok]&lt;/p&gt;
&lt;p&gt;让我们来看看该命令的参数：&lt;br /&gt;pathname find命令所查找的目录路径。例如用.来表示当前目录，用/来表示系统根目录。&lt;br /&gt;-print find命令将匹配的文件输出到标准输出。&lt;br /&gt;-exec find命令对匹配的文件执行该参数所给出的s h e l l命令。相应命令的形式为&#39; command&#39; {} /;，注意{ }和/；之间的空格。&lt;br /&gt;-ok 和- exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，&lt;br /&gt;在执行每一个命令之前，都会给出提示，让用户来确定是否执行。&lt;/p&gt;
&lt;p&gt;find命令有很多选项或表达式，每一个选项前面跟随一个横杠-。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-name 按照文件名查找文件。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-perm 按照文件权限来查找文件。在使用这一选项的时候，最好使用八进制的权限表示法。$ find . -perm 755 -print&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-prune 使用这一选项可以使f i n d命令不在当前指定的目录中查找，如果同时使用了-depth选项，那么-prune选项将被find命令忽略。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-user 按照文件属主来查找文件。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-group 按照文件所属的组来查找文件。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-mtime&lt;br /&gt;
-n +n 按照文件的更改时间来查找文件， - n表示文件更改时间距现在n天以内，+&lt;br /&gt;
n表示文件更改时间距现在n天以前。Find命令还有-atime和-ctime选项，但它们都和-mtime选项相似，所以我们在这里只介绍&lt;br /&gt;
-mtime选项。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-nogroup 查找无有效所属组的文件，即该文件所属的组在/etc/groups中不存在。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-nouser 查找无有效属主的文件，即该文件的属主在/etc/passwd中不存在。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-newer file1 ! file2 查找更改时间比文件f i l e 1新但比文件f i l e 2旧的文件。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-type 查找某一类型的文件，诸如：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b - 块设备文件。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;d - 目录。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c - 字符设备文件。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;p - 管道文件。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;l - 符号链接文件。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;f - 普通文件。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-size n[c] 查找文件长度为n块的文件，带有c时表示文件长度以字节计。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-depth 在查找文件时，首先查找当前目录中的文件，然后再在其子目录中查找。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-fstype 查找位于某一类型文件系统中的文件，这些文件系统类型通常可以在配置文件/etc/fstab中找到，该配置文件中包含了本系统中有关文件系统的信息。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-mount 在查找文件时不跨越文件系统m o u n t点。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-follow 如果f i n d命令遇到符号链接文件，就跟踪至链接所指向的文件。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-cpio 对匹配的文件使用c p i o命令，将这些文件备份到磁带设备中。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fedora 9安装星际译王(stardict)</title>
   <link href="http://bo-yang.github.com//2008/07/31/fedora-startdict"/>
   <updated>2008-07-31T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/07/31/fedora-startdict</id>
   <content type="html">&lt;p&gt;
    Fedora 9安装星际译王(stardict)&lt;/p&gt;
&lt;p&gt;一直苦于Linux下没有好用的翻译软件，一直再用Google的在线辞典，感觉还好。但Google在线词典最大的问题就是不能屏幕取词，而且用起来也不怎么方便，于是下决心找到一款比较好的翻译软件。&lt;/p&gt;
&lt;p&gt;Google了一下，发现了星际译王的口碑不错，于是去&lt;a id=&quot;aa:_3&quot; href=&quot;http://stardict.sourceforge.net/cn/download.php&quot;&gt;&lt;span id=&quot;aa:_4&quot; class=&quot;articlebody&quot;&gt;http://stardict.sourceforge.net/cn/download.php &lt;/span&gt;&lt;/a&gt;上下了一个rpm安装包，结果安装时报错：&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;aa:_7&quot; class=&quot;articlebody&quot;&gt;rpm -ivh stardict-3.0.1-1.fc8.i386.rpm &lt;br /&gt;
error: Failed dependencies:&lt;br /&gt;
&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;espeak is needed by stardict-3.0.1-1.fc8.i386&lt;br /&gt;
&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;libespeak.so.1 is needed by stardict-3.0.1-1.fc8.i386&lt;/p&gt;
&lt;p&gt;又下了.bz2的安装包，./configure时有N多错误。幼小的心灵倍受打击，深感国产Linux软件之不专业。&lt;/p&gt;
&lt;p&gt;正郁闷之时，忽见网上有人说用yum安装。于是打开终端输入 yum install stardict，没想到竟然成功安装了！根本不需要特殊配置。&lt;/p&gt;
&lt;p&gt;然后又下载了可用于星际译王的朗道英汉、汉英辞典，rpm安装，一切顺利。&lt;/p&gt;
&lt;p&gt;试着在终端敲入 stardict运行了一下，界面很漂亮，效果很不错。顿时感觉国产开源软件还是有希望的。&lt;/p&gt;
&lt;p&gt;谢谢胡正等前辈！&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>CDMA2000 Channel Naming Conventions</title>
   <link href="http://bo-yang.github.com//2008/07/20/cdma2000-naming"/>
   <updated>2008-07-20T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/07/20/cdma2000-naming</id>
   <content type="html">&lt;div id=&quot;j5f.&quot; style=&quot;text-align:left;&quot;&gt;&lt;font size=&quot;5&quot; face=&quot;Arial&quot;&gt;&lt;b&gt;CDMA2000 Channel Naming Conventions&lt;/b&gt;&lt;/font&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;/font&gt;&lt;/div&gt;
&lt;p&gt;&lt;font face=&quot;Arial&quot;&gt;&amp;nbsp;Many&lt;br /&gt;
cdma2000 standards refer to logical channels, physical channels, or&lt;br /&gt;
both. The following naming conventions apply to all cdma2000 standards.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/font&gt;&lt;font size=&quot;3&quot; face=&quot;Arial&quot;&gt;&lt;b&gt;1 Logical Channel Naming Convention&lt;/b&gt;&lt;/font&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;br /&gt;&amp;nbsp;A logical channel name consists of three lower case letters followed by “ch” (channel). A hyphen is&lt;br /&gt;&amp;nbsp;used after the first letter. Table 1Table 1shows the naming conventions for the logical channels that&lt;br /&gt;&amp;nbsp;are used in this family of standards.&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;lzyc&quot; style=&quot;color:rgb(0,255,0);&quot;&gt;&amp;nbsp;&lt;span id=&quot;lzyc0&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;Table 1. Naming Conventions for Logical Channels&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;span id=&quot;aphs&quot; style=&quot;color:rgb(255,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;First Letter&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Second Letter &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Third letter&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;f = Forward&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; d = Dedicated &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; t = Traffic&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;r = Reverse&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c = Common&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s = Signaling&lt;/p&gt;
&lt;p&gt;&amp;nbsp;For example, the logical channel name for the Forward Dedicated Traffic Channel is f-dtch.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;2 Physical Channel Naming Convention&lt;/b&gt;&lt;br /&gt;&amp;nbsp;Physical channels are represented by upper case abbreviations. As in the case of logical channels,&lt;br /&gt;&amp;nbsp;the first letters in the names of the channels indicate the direction of the channel (i.e., forward or&lt;br /&gt;&amp;nbsp;reverse) and is followed by a hyphen. Table 2Table 2 shows the names and meanings of all the&lt;br /&gt;&amp;nbsp;physical channels designated in cdma2000.&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;mb:00&quot; style=&quot;color:rgb(0,0,255);&quot;&gt;Table 2. Physical Channel Names&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span id=&quot;t8.q&quot; style=&quot;color:rgb(255,0,0);&quot;&gt;&amp;nbsp;Channel Name&lt;sup&gt;1 &lt;/sup&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Physical Channel&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F/R-FCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Forward/Reverse Fundamental Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F/R-DCCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Forward/Reverse Dedicated Control Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; F/R-SCCH&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Forward/Reverse Supplemental Code Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; F/R-SCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Forward/Reverse Supplemental Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; F-PCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Paging Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; F-QPCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Quick Paging Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R-ACH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Access Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F/R-CCCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Forward/Reverse Common Control Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F/R-PICH&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Forward/Reverse Pilot Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F-APICH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Dedicated Auxiliary Pilot Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F-TDPICH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Transmit Diversity Pilot Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F-ATDPICH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Auxiliary Transmit Diversity Pilot Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F-SYNCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Sync Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F-CPCCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Common Power Control Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F-CACH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Common Assignment Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R-EACH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Enhanced Access Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F-BCCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Broadcast Control Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F-PDCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Forward Packet Date Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F-PDCCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Forward Packet Data Control Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R-ACKCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Reverse Acknowledgement Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R-CQICH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Reverse Channel Quality Indicator Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F-ACKCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Forward Acknowledgement Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F-GCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Forward Grant Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;F-RCCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Forward Rate Control Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R-PDCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Reverse Packet Data Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R-PDCCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Reverse Packet Data Control Channel&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;R-REQCH &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Reverse Request Channel&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;span id=&quot;dbu80&quot; style=&quot;color:rgb(255,0,0);&quot;&gt;1 &lt;/span&gt;&lt;/b&gt;The notations “F/R” and “Forward/Reverse” represent two different&lt;br /&gt;physical channels (i.e., one forward channel and one reverse&lt;br /&gt;channel)&lt;/p&gt;
&lt;p&gt;For example, the physical channel name for the Forward Fundamental Channel is F-FCH.&lt;/p&gt;
&lt;p&gt;References:&lt;br /&gt;&amp;nbsp;&lt;i&gt;3GPP2 C.S0001-D v2.0&lt;/i&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>《Advanced Programming in the UNIX Environment》读书笔记（2）</title>
   <link href="http://bo-yang.github.com//2008/07/13/advanced-programming-in-unix-2"/>
   <updated>2008-07-13T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/07/13/advanced-programming-in-unix-2</id>
   <content type="html">&lt;div class=&quot;Section1&quot;&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;8&lt;/span&gt;&lt;span&gt;、&lt;span lang=&quot;EN-US&quot;&gt;UNIX Standards&lt;a name=&quot;mw921&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 35.35pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;mw923&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mw922&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;ISO C &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; In late 1989, ANSI Standard X3.1591989 for the C programming language was approved. This standard has also been adopted as international standard ISO/IEC 9899:1990.&lt;a name=&quot;uowh&quot;&gt;&lt;/a&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; In 1999, the ISO C standard was updated and approved as ISO/IEC 9899:1999, largely to improve support for applications that perform numerical processing.&lt;a name=&quot;gvok&quot;&gt;&lt;/a&gt;&lt;a name=&quot;q_4m&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:10pt;font-family:&quot;Verdana&quot;, &quot;sans-serif&quot;;&#39;&gt;&lt;br style=&quot;page-break-before:auto;&quot; /&gt; &lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;Section2&quot;&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 35.35pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;xg.0&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gvok1&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;IEEE POSIX &lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:10pt;font-family:&quot;Verdana&quot;, &quot;sans-serif&quot;;&#39;&gt;&lt;br style=&quot;page-break-before:auto;&quot; /&gt; &lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;Section3&quot;&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 70.7pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;ns.o1&quot;&gt;&lt;/a&gt;&lt;a name=&quot;ns.o0&quot;&gt;&lt;/a&gt;&lt;a name=&quot;ns.o&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;ISO/IEC 9945-1 (IEEE Standard 1003.1-1996), which includes &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IEEE Standard 1003.1-1990&lt;a name=&quot;ns.o2&quot;&gt;&lt;/a&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IEEE Standard 1003.1b-1993 (real-time extensions)&lt;a name=&quot;ns.o3&quot;&gt;&lt;/a&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; IEEE Standard 1003.1c-1995 (pthreads)&lt;a name=&quot;ns.o4&quot;&gt;&lt;/a&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IEEE Standard 1003.1i-1995 (real-time technical corrigenda)&lt;a name=&quot;ns.o5&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 70.7pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;ns.o8&quot;&gt;&lt;/a&gt;&lt;a name=&quot;ns.o7&quot;&gt;&lt;/a&gt;&lt;a name=&quot;ns.o6&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;IEEE P1003.1a draft standard (system interface revision) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 70.7pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;u0gs1&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs0&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;IEEE Standard 1003.1d-1999 (advanced real-time extensions) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 70.7pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;u0gs4&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs3&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs2&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;IEEE Standard 1003.1j-2000 (more advanced real-time extensions) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 70.7pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;u0gs7&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs6&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs5&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;IEEE Standard 1003.1q-2000 (tracing) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 70.7pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;u0gs10&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs9&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs8&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;IEEE Standard 1003.2d-1994 (batch extensions) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 70.7pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;u0gs13&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs12&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs11&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;IEEE P1003.2b draft standard (additional utilities) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 70.7pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;u0gs16&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs15&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs14&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;Parts of IEEE Standard 1003.1g-2000 (protocol-independent interfaces) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 70.7pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;u0gs19&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs18&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs17&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;ISO/IEC 9945-2 (IEEE Standard 1003.2-1993) &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-left:70.7pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;u0gs22&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs21&quot;&gt;&lt;/a&gt;&lt;a name=&quot;u0gs20&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;The Base Specifications of the Single UNIX Specification, version 2, which include&lt;a name=&quot;is6n&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-left:106.05pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;is6n1&quot;&gt;&lt;/a&gt;&lt;a name=&quot;is6n0&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;System Interface Definitions, Issue 5&lt;a name=&quot;ns.o17&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 106.05pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;is6n2&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;Commands and Utilities, Issue 5 &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 106.05pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;x_8b2&quot;&gt;&lt;/a&gt;&lt;a name=&quot;x_8b1&quot;&gt;&lt;/a&gt;&lt;a name=&quot;x_8b0&quot;&gt;&lt;/a&gt;&lt;a name=&quot;x_8b&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;System Interfaces and Headers, Issue 5 &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 70.7pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;buwi1&quot;&gt;&lt;/a&gt;&lt;a name=&quot;buwi0&quot;&gt;&lt;/a&gt;&lt;a name=&quot;buwi&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;Open Group Technical Standard, Networking Services, Issue 5.2 &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 70.7pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;xv1g1&quot;&gt;&lt;/a&gt;&lt;a name=&quot;xv1g0&quot;&gt;&lt;/a&gt;&lt;a name=&quot;xv1g&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;ISO/IEC 9899:1999, Programming Languages - C &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot;&gt;&lt;a name=&quot;z5bm0&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;br /&gt; &lt;!--[if !supportLineBreakNewLine]--&gt;&lt;br /&gt; &lt;!--[endif]--&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:10pt;font-family:&quot;Verdana&quot;, &quot;sans-serif&quot;;&#39;&gt;&lt;br style=&quot;page-break-before:auto;&quot; /&gt; &lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;Section4&quot;&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 35.35pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;ega3&quot;&gt;&lt;/a&gt;&lt;a name=&quot;z5bm2&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;The Single UNIX Specification &lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:10pt;font-family:&quot;Verdana&quot;, &quot;sans-serif&quot;;&#39;&gt;&lt;br style=&quot;page-break-before:auto;&quot; /&gt; &lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;Section5&quot;&gt;
&lt;p class=&quot;MsoBodyText&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; A superset of the POSIX.1 standard, specifies additional interfaces that extend the functionality provided by the basic POSIX.1 specification.&lt;a name=&quot;cz0e0&quot;&gt;&lt;/a&gt; &lt;a name=&quot;cz0e1&quot;&gt;&lt;/a&gt;&lt;br /&gt; &lt;!--[if !supportLineBreakNewLine]--&gt;&lt;br /&gt; &lt;!--[endif]--&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:10pt;font-family:&quot;Verdana&quot;, &quot;sans-serif&quot;;&#39;&gt;&lt;br style=&quot;page-break-before:auto;&quot; /&gt; &lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;Section6&quot;&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin:0 0 14.15pt 35.35pt;text-indent:-14.15pt;&quot;&gt;&lt;a name=&quot;cz0e4&quot;&gt;&lt;/a&gt;&lt;a name=&quot;cz0e3&quot;&gt;&lt;/a&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:Symbol;&quot;&gt;&lt;span&gt;&amp;middot;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;FIPS &lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:10pt;font-family:&quot;Verdana&quot;, &quot;sans-serif&quot;;&#39;&gt;&lt;br style=&quot;page-break-before:auto;&quot; /&gt; &lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;Section7&quot;&gt;
&lt;p class=&quot;MsoBodyText&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a name=&quot;q_4m1&quot;&gt;&lt;/a&gt;&lt;br /&gt; &lt;!--[if !supportLineBreakNewLine]--&gt;&lt;br /&gt; &lt;!--[endif]--&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:10pt;font-family:&quot;Verdana&quot;, &quot;sans-serif&quot;;&#39;&gt;&lt;br style=&quot;page-break-before:always;&quot; /&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;9&lt;/span&gt;&lt;span&gt;、&lt;span lang=&quot;EN-US&quot;&gt;The header &amp;lt;sys/types.h&amp;gt; defines some implementation-dependent data types, called theprimitive system data types. More of these data types are defined in other headers also. These data types are defined in the headers with the C typedef facility. Most end in &lt;a name=&quot;y1vk&quot;&gt;&lt;/a&gt;&lt;span style=&quot;color:red;&quot;&gt;_t&lt;/span&gt;.&lt;a name=&quot;y1vk0&quot;&gt;&lt;/a&gt; &lt;a name=&quot;psmj&quot;&gt;&lt;/a&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Figure 2.20. Some common primitive system data types&lt;a name=&quot;psmj0&quot;&gt;&lt;/a&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Type&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Description&lt;a name=&quot;psmj1&quot;&gt;&lt;/a&gt;  caddr_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; core address (Section 14.9)&lt;a name=&quot;psmj2&quot;&gt;&lt;/a&gt;  clock_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; counter of clock ticks (process time) (Section 1.10)&lt;a name=&quot;psmj3&quot;&gt;&lt;/a&gt;  comp_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; compressed clock ticks (Section 8.14)&lt;a name=&quot;psmj4&quot;&gt;&lt;/a&gt;  dev_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; device numbers (major and minor) (Section 4.23)&lt;a name=&quot;psmj5&quot;&gt;&lt;/a&gt;  fd_set&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; file descriptor sets (Section 14.5.1)&lt;a name=&quot;psmj6&quot;&gt;&lt;/a&gt;  fpos_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; file position (Section 5.10)&lt;a name=&quot;psmj7&quot;&gt;&lt;/a&gt;  gid_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; numeric group IDs&lt;a name=&quot;psmj8&quot;&gt;&lt;/a&gt;  ino_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; i-node numbers (Section 4.14)&lt;a name=&quot;psmj9&quot;&gt;&lt;/a&gt;  mode_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; file type, file creation mode ( ection 4.5)&lt;a name=&quot;psmj10&quot;&gt;&lt;/a&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; S&lt;a name=&quot;psmj11&quot;&gt;&lt;/a&gt;  nlink_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; link counts for directory entries (Section 4.14)&lt;a name=&quot;psmj12&quot;&gt;&lt;/a&gt;  off_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; file sizes and offsets (signed) (seek, Section 3.6)&lt;a name=&quot;psmj13&quot;&gt;&lt;/a&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; l&lt;a name=&quot;psmj14&quot;&gt;&lt;/a&gt;  pid_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; process IDs and process group IDs (signed) ( ections 8.2 and 9.4)&lt;a name=&quot;psmj15&quot;&gt;&lt;/a&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; S&lt;a name=&quot;psmj16&quot;&gt;&lt;/a&gt;  ptrdiff_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; result of subtracting two pointers (signed)&lt;a name=&quot;psmj17&quot;&gt;&lt;/a&gt;  rlim_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; resource limits (Section 7.11)&lt;a name=&quot;psmj18&quot;&gt;&lt;/a&gt;  sig_atomic_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; data type that can be accessed atomically ( ection 10.15)&lt;a name=&quot;psmj19&quot;&gt;&lt;/a&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; S&lt;a name=&quot;psmj20&quot;&gt;&lt;/a&gt;  sigset_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; signal set (Section 10.11)&lt;a name=&quot;psmj21&quot;&gt;&lt;/a&gt;  size_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; sizes of objects (such as strings) (unsigned) ( ection 3.7)&lt;a name=&quot;psmj22&quot;&gt;&lt;/a&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; S&lt;a name=&quot;psmj23&quot;&gt;&lt;/a&gt;  ssize_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; functions that return a count of bytes (signed) (ead, write, Section 3.7)&lt;a name=&quot;psmj24&quot;&gt;&lt;/a&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; r&lt;a name=&quot;psmj25&quot;&gt;&lt;/a&gt;  time_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; counter of seconds of calendar time (Section 1.10)&lt;a name=&quot;psmj26&quot;&gt;&lt;/a&gt;  uid_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; numeric user IDs&lt;a name=&quot;psmj27&quot;&gt;&lt;/a&gt;  wchar_t&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; can represent all distinct character codes&lt;a name=&quot;psmj28&quot;&gt;&lt;/a&gt; &lt;a name=&quot;jawo&quot;&gt;&lt;/a&gt;  10 Conflicts Between Standards&lt;a name=&quot;tx.f&quot;&gt;&lt;/a&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp; ISO C defines the function clock to return the amount of CPU time used by a process. The value returned is a value. To convert this value to seconds, we divide it by CLOCKS_PER_SEC, which is defined in the&amp;lt;time.h&amp;gt; header. POSIX.1 defines clock_t the function times that returns both the CPU time (for the caller and all its terminated children) and the clock time. All these time values are clock_t values. The sysconf function is used to obtain the number of clock ticks per second for use with the return values from the&amp;nbsp; times function. What we have is the same term, clock ticks per second, defined differently by ISO C and POSIX.1. Both standards also use the same data type (clock_t ) to hold these different values. The difference can be seen in Solaris, whereclock returns microseconds (hence CLOCKS_PER_SEC is 1 million), whereassysyconf returns the value 100 for clock ticks per second.&lt;a name=&quot;dlcl6&quot;&gt;&lt;/a&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp; Another area of potential conflict is when the ISO C standard specifies a function, but doesn&#39;t specify it as strongly as POSIX.1 does.&lt;a name=&quot;dlcl7&quot;&gt;&lt;/a&gt;  This is the case for functions that require a different implementation in a POSIX environment (with multiple processes) than in an ISO C&lt;a name=&quot;dlcl8&quot;&gt;&lt;/a&gt;  environment (where very little can be assumed about the host operating system). Nevertheless, many POSIX-compliant systems&lt;a name=&quot;dlcl9&quot;&gt;&lt;/a&gt;  implement the ISO C function, for compatibility. The signal function is an example. If we unknowingly use thesignal function provided by&lt;a name=&quot;dlcl10&quot;&gt;&lt;/a&gt;  Solaris (hoping to write portable code that can be run in ISO C environments and under older UNIX systems), it&#39;ll provide semantics&lt;a name=&quot;dlcl11&quot;&gt;&lt;/a&gt;  different from the POSIX.1 sigaction function.&lt;a name=&quot;j9..&quot;&gt;&lt;/a&gt; &lt;a name=&quot;j9..0&quot;&gt;&lt;/a&gt;  11 Most file I/O on a UNIX system can be performed using only five functions: &lt;/span&gt;&lt;/span&gt;&lt;a name=&quot;ysfe&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;open&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;&lt;a name=&quot;ysfe0&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;read&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;&lt;a name=&quot;ysfe1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;write&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;&lt;a name=&quot;ysfe2&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;lseek&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;, and &lt;/span&gt;&lt;a name=&quot;ysfe3&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;close&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;.They&#39;re are often referred to as &lt;a name=&quot;i_f:&quot;&gt;&lt;/a&gt;unbuffered I/O, in contrast to the standard I/O routines. The term &lt;a name=&quot;fj4f&quot;&gt;&lt;/a&gt;unbuffered means that each &lt;/span&gt;&lt;a name=&quot;fj4f0&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;read&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; or &lt;/span&gt;&lt;a name=&quot;fj4f1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;write&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; invokes a system call in the kernel. These unbuffered I/O functions are not part of ISO C, but are part of POSIX.1 and the Single UNIX Specification.&lt;a name=&quot;fj4f2&quot;&gt;&lt;/a&gt; &lt;a name=&quot;dlcl12&quot;&gt;&lt;/a&gt;  12 File Descriptors&lt;a name=&quot;mwcb&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;mwcb0&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; To the kernel, all open files are referred to by file descriptors. A file descriptor is a non-negative integer. When we open an existing file or create a new file, the kernel returns a file descriptor to the process. When we want to read or write a file, we identify the file with the file descriptor that was returned by &lt;/span&gt;&lt;a name=&quot;mwcb1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;open&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; or &lt;/span&gt;&lt;a name=&quot;mwcb2&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;creat&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; as an argument to either &lt;/span&gt;&lt;a name=&quot;mwcb3&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;read&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; or &lt;/span&gt;&lt;a name=&quot;mwcb4&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;write&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;. &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;idd1e17659&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb20&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e17654&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb19&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e17649&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb18&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e17644&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb17&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e17641&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb16&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e17636&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb15&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e17631&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb14&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e17626&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb13&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e17621&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb12&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e17614&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb11&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e17609&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb10&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e17606&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb9&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e17603&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb8&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e17600&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb7&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e17595&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb6&quot;&gt;&lt;/a&gt;&lt;a name=&quot;mwcb5&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; By convention, UNIX System shells associate file descriptor 0 with the standard input of a process, file descriptor 1 with the standard output, and file descriptor 2 with the standard error. This convention is used by the shells and many applications; it is not a feature of the UNIX kernel. &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;s7u6&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&amp;nbsp; The magic numbers 0, 1, and 2 should be replaced in POSIX-compliant applications with the symbolic constants &lt;/span&gt;&lt;a name=&quot;s7u60&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;STDIN_FILENO&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;&lt;a name=&quot;s7u61&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;STDOUT_FILENO&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;, and &lt;/span&gt;&lt;a name=&quot;s7u62&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;STDERR_FILENO&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;. These constants are defined in the &lt;/span&gt;&lt;a name=&quot;s7u63&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; header. &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;s7u65&quot;&gt;&lt;/a&gt;&lt;a name=&quot;s7u64&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;s7u66&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;13&lt;a name=&quot;s1x1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;zn8x&quot;&gt;&lt;/a&gt;&lt;a name=&quot;s1x10&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; (1) open&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; Function &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;zn8x0&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A file is opened or created by calling the &lt;/span&gt;&lt;a name=&quot;zn8x1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;open&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; function. &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0 4.3pt .0001pt;&quot;&gt;&lt;a name=&quot;zn8x9&quot;&gt;&lt;/a&gt;&lt;a name=&quot;zn8x8&quot;&gt;&lt;/a&gt;&lt;a name=&quot;zn8x7&quot;&gt;&lt;/a&gt;&lt;a name=&quot;zn8x6&quot;&gt;&lt;/a&gt;&lt;a name=&quot;zn8x5&quot;&gt;&lt;/a&gt;&lt;a name=&quot;zn8x4&quot;&gt;&lt;/a&gt;&lt;a name=&quot;zn8x3&quot;&gt;&lt;/a&gt;&lt;a name=&quot;inta172&quot;&gt;&lt;/a&gt;&lt;a name=&quot;zn8x2&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:2pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; class=&quot;MsoNormalTable&quot; style=&quot;margin-left:3.6pt;border-collapse:collapse;&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width=&quot;539&quot; valign=&quot;top&quot; style=&quot;border-style:solid solid none;border-color:gray gray -moz-use-text-color;border-width:1pt 1pt medium;padding:3.6pt;width:404.6pt;&quot;&gt;
&lt;p class=&quot;TableContents&quot;&gt;&lt;a name=&quot;zn8x14&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://blog.csdn.net/unreadable/ch03lev1sec3.html#PLID0&quot;&gt;[View full width]&lt;/a&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;PreformattedText&quot;&gt;&lt;a name=&quot;zn8x15&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;#include   &amp;lt;fcntl.h&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;PreformattedText&quot;&gt;&lt;a name=&quot;zn8x17&quot;&gt;&lt;/a&gt;&lt;a name=&quot;zn8x16&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;int open(const char *&lt;a name=&quot;zn8x18&quot;&gt;&lt;/a&gt;pathname, int &lt;a name=&quot;zn8x19&quot;&gt;&lt;/a&gt;oflag, ... /*&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;PreformattedText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a name=&quot;zn8x21&quot;&gt;&lt;/a&gt;&lt;a name=&quot;zn8x20&quot;&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;mode_t &lt;a name=&quot;zn8x22&quot;&gt;&lt;/a&gt;mode&lt;span&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;*/ );&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;zn8x23&quot;&gt;&lt;/a&gt;&lt;a name=&quot;zn8x25&quot;&gt;&lt;/a&gt;&lt;a name=&quot;zn8x24&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;TableContents&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;539&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color gray gray;border-width:medium 1pt 1pt;padding:3.6pt;width:404.6pt;&quot;&gt;
&lt;p align=&quot;right&quot; class=&quot;TableContents&quot; style=&quot;margin-bottom:14.15pt;text-align:right;&quot;&gt;&lt;a name=&quot;zn8x26&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;Returns:   file descriptor if OK, 1 on error &lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;s1x11&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(2)&lt;/span&gt;&lt;a name=&quot;s1x12&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt; creat&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; Function &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;s1x13&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A new file can also be created by calling the &lt;/span&gt;&lt;a name=&quot;s1x14&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;creat&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; function. &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0 4.3pt .0001pt;&quot;&gt;&lt;a name=&quot;s1x112&quot;&gt;&lt;/a&gt;&lt;a name=&quot;s1x111&quot;&gt;&lt;/a&gt;&lt;a name=&quot;s1x110&quot;&gt;&lt;/a&gt;&lt;a name=&quot;s1x19&quot;&gt;&lt;/a&gt;&lt;a name=&quot;s1x18&quot;&gt;&lt;/a&gt;&lt;a name=&quot;s1x17&quot;&gt;&lt;/a&gt;&lt;a name=&quot;s1x16&quot;&gt;&lt;/a&gt;&lt;a name=&quot;inta25&quot;&gt;&lt;/a&gt;&lt;a name=&quot;s1x15&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:2pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; class=&quot;MsoNormalTable&quot; style=&quot;margin-left:3.6pt;border-collapse:collapse;&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width=&quot;491&quot; valign=&quot;top&quot; style=&quot;border-style:solid solid none;border-color:gray gray -moz-use-text-color;border-width:1pt 1pt medium;padding:3.6pt;width:368.6pt;&quot;&gt;
&lt;p class=&quot;PreformattedText&quot;&gt;&lt;a name=&quot;s1x114&quot;&gt;&lt;/a&gt;&lt;a name=&quot;s1x113&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;#include &amp;lt;fcntl.h&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;PreformattedText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;s1x116&quot;&gt;&lt;/a&gt;&lt;a name=&quot;s1x115&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;int creat(const char *&lt;a name=&quot;s1x117&quot;&gt;&lt;/a&gt;pathname,   mode_t &lt;a name=&quot;s1x118&quot;&gt;&lt;/a&gt;mode);&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;s1x119&quot;&gt;&lt;/a&gt;&lt;a name=&quot;s1x121&quot;&gt;&lt;/a&gt;&lt;a name=&quot;s1x120&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;TableContents&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;491&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color gray gray;border-width:medium 1pt 1pt;padding:3.6pt;width:368.6pt;&quot;&gt;
&lt;p align=&quot;right&quot; class=&quot;TableContents&quot; style=&quot;margin-bottom:14.15pt;text-align:right;&quot;&gt;&lt;a name=&quot;s1x122&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;Returns:   file descriptor opened for write-only if OK, 1 on error &lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;iy57&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;idd1e18450&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus07&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e18445&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus06&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e18440&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus05&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e18433&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus04&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e18428&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus03&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e18423&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus02&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e18416&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus01&quot;&gt;&lt;/a&gt;&lt;a name=&quot;idd1e18411&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus00&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus0&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Note that this function is equivalent to &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;PreformattedText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;gus08&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;open (&lt;a name=&quot;gus09&quot;&gt;&lt;/a&gt;pathname, O_WRONLY | O_CREAT | O_TRUNC, &lt;a name=&quot;gus010&quot;&gt;&lt;/a&gt;mode);&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; (3) &lt;/span&gt;&lt;a name=&quot;gus011&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;close&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; Function &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;gus012&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;An open file is closed by calling the &lt;/span&gt;&lt;a name=&quot;gus013&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;close&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; function. &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0 4.3pt .0001pt;&quot;&gt;&lt;a name=&quot;gus021&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus020&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus019&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus018&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus017&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus016&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus015&quot;&gt;&lt;/a&gt;&lt;a name=&quot;inta17&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus014&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:2pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; class=&quot;MsoNormalTable&quot; style=&quot;margin-left:3.6pt;border-collapse:collapse;&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width=&quot;491&quot; valign=&quot;top&quot; style=&quot;border-style:solid solid none;border-color:gray gray -moz-use-text-color;border-width:1pt 1pt medium;padding:3.6pt;width:368.6pt;&quot;&gt;
&lt;p class=&quot;PreformattedText&quot;&gt;&lt;a name=&quot;gus023&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus022&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;PreformattedText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;gus025&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus024&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;int close(int &lt;a name=&quot;gus026&quot;&gt;&lt;/a&gt;filedes);&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;gus027&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus029&quot;&gt;&lt;/a&gt;&lt;a name=&quot;gus028&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;TableContents&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;491&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color gray gray;border-width:medium 1pt 1pt;padding:3.6pt;width:368.6pt;&quot;&gt;
&lt;p align=&quot;right&quot; class=&quot;TableContents&quot; style=&quot;margin-bottom:14.15pt;text-align:right;&quot;&gt;&lt;a name=&quot;gus030&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;Returns:   0 if OK, 1 on error &lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a name=&quot;c1z6&quot;&gt;&lt;/a&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp; (4) &lt;/span&gt;&lt;a name=&quot;c1z60&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;lseek&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; Function&lt;a name=&quot;c1z61&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0 4.3pt .0001pt;&quot;&gt;&lt;a name=&quot;c1z65&quot;&gt;&lt;/a&gt;&lt;a name=&quot;c1z64&quot;&gt;&lt;/a&gt;&lt;a name=&quot;c1z63&quot;&gt;&lt;/a&gt;&lt;a name=&quot;c1z62&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:2pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; class=&quot;MsoNormalTable&quot; style=&quot;margin-left:3.6pt;border-collapse:collapse;&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width=&quot;417&quot; valign=&quot;top&quot; style=&quot;border-style:solid solid none;border-color:gray gray -moz-use-text-color;border-width:1pt 1pt medium;padding:3.6pt;width:312.95pt;&quot;&gt;
&lt;p class=&quot;PreformattedText&quot;&gt;&lt;a name=&quot;c1z67&quot;&gt;&lt;/a&gt;&lt;a name=&quot;c1z66&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;PreformattedText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;c1z69&quot;&gt;&lt;/a&gt;&lt;a name=&quot;c1z68&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;off_t lseek(int &lt;a name=&quot;c1z610&quot;&gt;&lt;/a&gt;filedes,   off_t &lt;a name=&quot;c1z611&quot;&gt;&lt;/a&gt;offset, int &lt;a name=&quot;c1z612&quot;&gt;&lt;/a&gt;whence);&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;c1z613&quot;&gt;&lt;/a&gt;&lt;a name=&quot;c1z615&quot;&gt;&lt;/a&gt;&lt;a name=&quot;c1z614&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;TableContents&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;417&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color gray gray;border-width:medium 1pt 1pt;padding:3.6pt;width:312.95pt;&quot;&gt;
&lt;p align=&quot;right&quot; class=&quot;TableContents&quot; style=&quot;margin-bottom:14.15pt;text-align:right;&quot;&gt;&lt;a name=&quot;c1z616&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;Returns:   new file offset if OK, 1 on error &lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;c1z617&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp; (5) &lt;/span&gt;&lt;a name=&quot;yszo&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;read&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; Function &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;yszo0&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Data is read from an open file with the &lt;/span&gt;&lt;a name=&quot;yszo1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;read&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; function. &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0 4.3pt .0001pt;&quot;&gt;&lt;a name=&quot;yszo9&quot;&gt;&lt;/a&gt;&lt;a name=&quot;yszo8&quot;&gt;&lt;/a&gt;&lt;a name=&quot;yszo7&quot;&gt;&lt;/a&gt;&lt;a name=&quot;yszo6&quot;&gt;&lt;/a&gt;&lt;a name=&quot;yszo5&quot;&gt;&lt;/a&gt;&lt;a name=&quot;yszo4&quot;&gt;&lt;/a&gt;&lt;a name=&quot;yszo3&quot;&gt;&lt;/a&gt;&lt;a name=&quot;inta262&quot;&gt;&lt;/a&gt;&lt;a name=&quot;yszo2&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:2pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; class=&quot;MsoNormalTable&quot; style=&quot;margin-left:3.6pt;border-collapse:collapse;&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width=&quot;491&quot; valign=&quot;top&quot; style=&quot;border-style:solid solid none;border-color:gray gray -moz-use-text-color;border-width:1pt 1pt medium;padding:3.6pt;width:368.6pt;&quot;&gt;
&lt;p class=&quot;PreformattedText&quot;&gt;&lt;a name=&quot;yszo11&quot;&gt;&lt;/a&gt;&lt;a name=&quot;yszo10&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;PreformattedText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;yszo13&quot;&gt;&lt;/a&gt;&lt;a name=&quot;yszo12&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;ssize_t read(int &lt;a name=&quot;yszo14&quot;&gt;&lt;/a&gt;filedes,   void *&lt;a name=&quot;yszo15&quot;&gt;&lt;/a&gt;buf, size_t &lt;a name=&quot;yszo16&quot;&gt;&lt;/a&gt;nbytes);&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;yszo17&quot;&gt;&lt;/a&gt;&lt;a name=&quot;yszo19&quot;&gt;&lt;/a&gt;&lt;a name=&quot;yszo18&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;TableContents&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;491&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color gray gray;border-width:medium 1pt 1pt;padding:3.6pt;width:368.6pt;&quot;&gt;
&lt;p align=&quot;right&quot; class=&quot;TableContents&quot; style=&quot;margin-bottom:14.15pt;text-align:right;&quot;&gt;&lt;a name=&quot;yszo20&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;Returns:   number of bytes read, 0 if end of file, 1 on error &lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;iy570&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp; (6) &lt;/span&gt;&lt;a name=&quot;f53g&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;write&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; Function &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoBodyText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;a name=&quot;f53g0&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Data is written to an open file with the &lt;/span&gt;&lt;a name=&quot;f53g1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;Teletype&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;write&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; function. &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0 4.3pt .0001pt;&quot;&gt;&lt;a name=&quot;f53g9&quot;&gt;&lt;/a&gt;&lt;a name=&quot;f53g8&quot;&gt;&lt;/a&gt;&lt;a name=&quot;f53g7&quot;&gt;&lt;/a&gt;&lt;a name=&quot;f53g6&quot;&gt;&lt;/a&gt;&lt;a name=&quot;f53g5&quot;&gt;&lt;/a&gt;&lt;a name=&quot;f53g4&quot;&gt;&lt;/a&gt;&lt;a name=&quot;f53g3&quot;&gt;&lt;/a&gt;&lt;a name=&quot;inta380&quot;&gt;&lt;/a&gt;&lt;a name=&quot;f53g2&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:2pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; class=&quot;MsoNormalTable&quot; style=&quot;margin-left:3.6pt;border-collapse:collapse;&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width=&quot;539&quot; valign=&quot;top&quot; style=&quot;border-style:solid solid none;border-color:gray gray -moz-use-text-color;border-width:1pt 1pt medium;padding:3.6pt;width:404.6pt;&quot;&gt;
&lt;p class=&quot;TableContents&quot;&gt;&lt;a name=&quot;f53g14&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a href=&quot;http://blog.csdn.net/unreadable/ch03lev1sec8.html#PLID0&quot;&gt;[View full width]&lt;/a&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;PreformattedText&quot;&gt;&lt;a name=&quot;f53g15&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;#include   &amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;PreformattedText&quot;&gt;&lt;a name=&quot;f53g17&quot;&gt;&lt;/a&gt;&lt;a name=&quot;f53g16&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;ssize_t write(int &lt;a name=&quot;f53g18&quot;&gt;&lt;/a&gt;filedes, const void *&lt;a name=&quot;f53g19&quot;&gt;&lt;/a&gt;buf, size_t&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;PreformattedText&quot; style=&quot;margin-bottom:14.15pt;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;a name=&quot;f53g21&quot;&gt;&lt;/a&gt;&lt;a name=&quot;f53g20&quot;&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a name=&quot;f53g22&quot;&gt;&lt;/a&gt;nbytes);&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;f53g23&quot;&gt;&lt;/a&gt;&lt;a name=&quot;f53g25&quot;&gt;&lt;/a&gt;&lt;a name=&quot;f53g24&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;TableContents&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;539&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color gray gray;border-width:medium 1pt 1pt;padding:3.6pt;width:404.6pt;&quot;&gt;
&lt;p align=&quot;right&quot; class=&quot;TableContents&quot; style=&quot;margin-bottom:14.15pt;text-align:right;&quot;&gt;&lt;a name=&quot;f53g26&quot;&gt;&lt;/a&gt;&lt;span lang=&quot;EN-US&quot;&gt;Returns:   number of bytes written if OK, 1 on error &lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
 </entry>
 
 <entry>
   <title>《Advanced Programming in the UNIX Environment》读书笔记（1）</title>
   <link href="http://bo-yang.github.com//2008/07/10/advanced-programming-in-unix"/>
   <updated>2008-07-10T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/07/10/advanced-programming-in-unix</id>
   <content type="html">&lt;div id=&quot;mnm0&quot;&gt;
&lt;p id=&quot;i6v1&quot; style=&quot;font-family:Verdana;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;span id=&quot;kf-u0&quot;&gt;1、系统口令文件通常为/etc/passwd。口令文件中的登录项由7个以冒号分隔的字段组成：登录名、加密口令、数字用户ID、数字组&amp;nbsp;ID、注释字段、起始目录以及shell程序。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p id=&quot;i6v10&quot; style=&quot;font-family:Verdana;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;span id=&quot;kf-u1&quot;&gt; 2、不能出现在文件名中的字符只有两个：/和空操作符(null)。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p id=&quot;i6v12&quot; style=&quot;font-family:Verdana;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;span id=&quot;kf-u2&quot;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; 当创建一个新目录时，自动创建了两个文件名：.和..。.引用当前目录，..引用父目录。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p id=&quot;n50c&quot; style=&quot;font-family:Verdana;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;span id=&quot;n50c1&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; A process can change its working directory with the &lt;span style=&quot;color:rgb(255,0,0);&quot; id=&quot;n50c2&quot;&gt;&lt;strong&gt;chdir&lt;/strong&gt; &lt;/span&gt;function.&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p id=&quot;i6v14&quot; style=&quot;font-family:Verdana;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;span id=&quot;kf-u3&quot;&gt; 3、&lt;/span&gt;&lt;img alt=&quot;&quot; /&gt;&lt;span id=&quot;kf-u4&quot;&gt;ls(1)用以引用UNIX手册集中的一个特定项，它引用第一部分中的ls项。各部分通常用数字1～8表示，在每个部分中的各项则按字母顺序排列。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;2&quot;&gt;4、&lt;/font&gt;UNIX目录操作函数：opendir, readdir, closedir。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 三个用于进程控制的主要函数：fork, exec, waitpid。&lt;br /&gt;5、头文件&amp;lt;unistd.h&amp;gt;中包含了许多UNIX系统服务的函数原型，函数原型是ANSI&amp;nbsp;C标准的组成部分。&lt;br /&gt;6、当度量一个进程的执行时间时，UNIX系统使用三个进程时间值：&lt;/p&gt;
&lt;ul id=&quot;ri8j0&quot;&gt;
&lt;li id=&quot;ri8j1&quot;&gt;时钟时间&lt;/li&gt;
&lt;li id=&quot;ri8j2&quot;&gt;用户CPU时间 &lt;/li&gt;
&lt;li id=&quot;ri8j4&quot;&gt;系统CPU时间&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 时钟时间又称为墙上时钟时间（wall clock time），是进程运行的时间总量，其值与系统中同时运行的进程数有关。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 用户CPU时间是执行用户指令所用的时间量。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 系统CPU时间是为该进程执行内核所经历的时间。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 用户CPU时间 和 系统CPU时间的&lt;strong&gt;和&lt;/strong&gt;被称为CPU时间。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 要取得任一进程的时钟时间、用户时间和系统时间很简单，只需执行命令time(1), 其参数是要度量其执行时间的命令。如：&lt;br /&gt;[bonn@localhost unix_advance]$ time ps&lt;br /&gt;&amp;nbsp; PID TTY&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TIME CMD&lt;br /&gt;&amp;nbsp;3734 pts/2&amp;nbsp;&amp;nbsp;&amp;nbsp; 00:00:00 bash&lt;br /&gt;&amp;nbsp;6743 pts/2&amp;nbsp;&amp;nbsp;&amp;nbsp; 00:00:00 ps&lt;/p&gt;
&lt;p&gt;real&amp;nbsp;&amp;nbsp;&amp;nbsp; 0m0.023s&lt;br /&gt;user&amp;nbsp;&amp;nbsp;&amp;nbsp; 0m0.010s&lt;br /&gt;sys&amp;nbsp;&amp;nbsp;&amp;nbsp; 0m0.013s&lt;/p&gt;
&lt;p&gt;7、BSD: the Berkeley Software Distribution&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>开源授权协议</title>
   <link href="http://bo-yang.github.com//2008/06/27/open-source-license"/>
   <updated>2008-06-27T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/06/27/open-source-license</id>
   <content type="html">&lt;p style=&quot;margin-bottom:0;&quot;&gt;&lt;font face=&quot;Times New Roman, serif&quot;&gt;［说明］：本文摘自《程序员》2008年06月刊许洪波教授的《开源授权协议（License）初探》一文，版权归原作者所有。&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin-bottom:0;&quot;&gt;&lt;font face=&quot;Times New Roman, serif&quot;&gt;&lt;br /&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin-bottom:0;&quot;&gt;&lt;font face=&quot;Times New Roman, serif&quot;&gt;1&lt;/font&gt;、&lt;font face=&quot;Times New Roman, serif&quot;&gt;OSI(&lt;a href=&quot;http://www.opensource.org/&quot;&gt;www.opensource.org&lt;/a&gt;)&lt;/font&gt;是目前世界上针对开源软件授权进行认证的唯一机构。 &lt;/p&gt;
&lt;p style=&quot;margin-bottom:0;&quot;&gt;&lt;font face=&quot;Times New Roman, serif&quot;&gt;2&lt;/font&gt;、开源软件的特点： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p style=&quot;margin-bottom:0;&quot;&gt;免费的再发布：软件授权拥有者必须允许，包括软件的获得者和使用者将软件重新分发给其他人，而不向版权的拥有者支付版权相关的费用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p style=&quot;margin-bottom:0;&quot;&gt;源代码的访问：开源授权需要提供源代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p style=&quot;margin-bottom:0;&quot;&gt;衍生作品：授权必须允许使用者修改软件，并在其基础上做出创新工作。授权必须允许这些修改和衍生作品在和原来的软件版权条件相同下发布。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p style=&quot;margin-bottom:0;&quot;&gt;杜绝歧视：只要遵守开源许可版权，人人都可以使用开源软件；同时，开源软件版权不得限制任何人在特定领域使用该软件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;margin-bottom:0;&quot;&gt;&lt;font face=&quot;Times New Roman, serif&quot;&gt;3&lt;/font&gt;、开源授权模式：&lt;/p&gt;
&lt;p style=&quot;margin-bottom:0;&quot;&gt;  （&lt;font face=&quot;Times New Roman, serif&quot;&gt;1&lt;/font&gt;）强开源约束授权&amp;mdash;&amp;mdash;&lt;font face=&quot;Times New Roman, serif&quot;&gt;GNU GPL&lt;/font&gt;。基于&lt;font face=&quot;Times New Roman, serif&quot;&gt;GPL&lt;/font&gt;的任何软件及衍生应用程序，其源代码必须公开，并不得因此收费。&lt;/p&gt;
&lt;p style=&quot;margin-bottom:0;&quot;&gt;  （&lt;font face=&quot;Times New Roman, serif&quot;&gt;2&lt;/font&gt;）弱开源约束授权&amp;mdash;&amp;mdash;&lt;font face=&quot;Times New Roman, serif&quot;&gt;Mozilla&lt;/font&gt;公用授权（&lt;font face=&quot;Times New Roman, serif&quot;&gt;MPL&lt;/font&gt;）和&lt;font face=&quot;Times New Roman, serif&quot;&gt;LGPL&lt;/font&gt;。&lt;font face=&quot;Times New Roman, serif&quot;&gt;MPL&lt;/font&gt;协议要求假如你修改了一个基于&lt;font face=&quot;Times New Roman, serif&quot;&gt;MPL&lt;/font&gt;协议的源代码，则必须列入或公开你所做的修改。假如你的软件采用了基于&lt;font face=&quot;Times New Roman, serif&quot;&gt;LGPL&lt;/font&gt;的开源软件，&lt;font face=&quot;Times New Roman, serif&quot;&gt;LGPL&lt;/font&gt;要求任何针对&lt;font face=&quot;Times New Roman, serif&quot;&gt;LGPL&lt;/font&gt;开源软件的修改必须公开其源代码，但不要求基于源代码之上的衍生应用开放其源代码。&lt;/p&gt;
&lt;p style=&quot;margin-bottom:0;&quot;&gt;  （&lt;font face=&quot;Times New Roman, serif&quot;&gt;3&lt;/font&gt;）无开源约束授权&amp;mdash;&amp;mdash;&lt;font face=&quot;Times New Roman, serif&quot;&gt;BSD&lt;/font&gt;授权协议。&lt;font face=&quot;Times New Roman, serif&quot;&gt;BSD&lt;/font&gt;几乎允许用户做任何他们想要想要在&lt;font face=&quot;Times New Roman, serif&quot;&gt;BSD&lt;/font&gt;的授权代码上做的事情；他们也可以将软件用于免费或商业目的；他们也可以发布或不发布变更后的源代码。&lt;font face=&quot;Times New Roman, serif&quot;&gt;BSD&lt;/font&gt;的唯一要求就是软件使用者声明他们使用了软件原作者的著作权。&lt;/p&gt;
&lt;p style=&quot;margin-bottom:0;&quot;&gt;（4）其他开源授权。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>硬盘安装Fedora 9时死机？</title>
   <link href="http://bo-yang.github.com//2008/06/06/fedora9-hard-disk"/>
   <updated>2008-06-06T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/06/06/fedora9-hard-disk</id>
   <content type="html">&lt;p&gt;
    前天晚上在Fedora9下装完ATI显卡的驱动以后，升级系统，昨天早晨起来一看，我的本本过热休眠了（发现Fedora下经常出现这种情况，而Windows下很少出现，可见Linux的电源管理确实还有问题），当时没有管它。&lt;/p&gt;
&lt;p&gt;昨天晚上到了半夜，决定切换到Fedora下玩一玩，结果发现进不了图形界面了，字符界面也还闪来闪去的，实在没办法，重装。非常不幸的是，重装到一半的时候，CPU过热又歇菜了。&lt;/p&gt;
&lt;p&gt;这时重启发现只能进grub控制台，无法进Windows了。顿时傻了。&lt;/p&gt;
&lt;p&gt;今天早晨来实验室上网搜索修复MBR的方法，最简单的就是用Windows安装盘。拿出Win2003的盘插到光驱一试，没反应，My God！光驱又坏了！！！难道我辛辛苦苦好几年积攒的文档就眼看要人间蒸发付诸东流了吗？&lt;/p&gt;
&lt;p&gt;我不甘心，继续搜索grub的使用方法，试着敲入如下的命令：&lt;/p&gt;
&lt;pre&gt;kernel (hd0,6)/isolinux/vmlinuz &amp;lt;br  /&amp;gt;initrd (hd0,6)/isolinux/initrd.img &amp;lt;br  /&amp;gt;boot&lt;/pre&gt;
&lt;p&gt;成功了，终于可以进入继续安装Fedora 9的界面了！&lt;br /&gt;只要能够进入一个操作系统就好说了，不管它是Windows还是Linux！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>EMC-CBR故障诊断研究（四）</title>
   <link href="http://bo-yang.github.com//2008/06/05/emc-cbr-4"/>
   <updated>2008-06-05T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/06/05/emc-cbr-4</id>
   <content type="html">&lt;p&gt;&lt;font size=&quot;3&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-size:12pt;line-height:173%;font-family:宋体;&quot;&gt;1、系统组成&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;line-height:173%;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; 本系统是由&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;CBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;和&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;RBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;组成的混合系统。系统结构如下图&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;所示。系统的核心是推理机，推理机根据用户输入的故障描述，既可以将故障描述转化为新的案例，从而进行对案例库进行操作；又可以将故障描述转化为事实，对规则库进行操作。但&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;CBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;和&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;RBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;的地位并不是等同的，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;CBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;起主导作用，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;RBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;对&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;CBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;起监督作用，二者的推理结果由综合机制进行综合。本系统采用友好的人机界面，普通用户输入故障描述后，系统经推理后给出诊断建议，并对给出的建议进行解释。另外，为了便于对系统知识（案例库、知识库和事实库）进行管理，系统可以由知识工程师进行修改。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:22.7pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/系统结构.JPG&quot; alt=&quot;&quot; /&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:22.7pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;2、案例表示与存储&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:22.7pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;参见博文&amp;ldquo;EMC-CBR故障诊断研究（一、二）&amp;rdquo;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:22.7pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;3、案例检索&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:22.7pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;参见博文&amp;ldquo;EMC-CBR故障诊断研究（三）&amp;rdquo;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:22.7pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;4、&lt;span style=&quot;font-size:12pt;line-height:173%;font-family:宋体;&quot;&gt;案例重用&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;line-height:173%;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;案例重用的主要任务是对检索到的案例的结论进行修正。基本思想就是将案例库中与目标案例最相似的案例的结论与次相似的案例的结论进行对比，如果二者仅仅是谓词函数的参数不同，可以认定无需对最佳匹配案例进行修改；如果二者不仅参数不同而且有谓词上的出入，则需启用基于规则的推理，最终利用&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;CBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;和&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;RBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;的综合机制利用&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;RBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;的结论对最佳匹配案例的结论进行修正。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;5、 &lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;line-height:173%;font-family:宋体;&quot;&gt;案例的保存&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;line-height:173%;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style=&quot;line-height:22pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在案例保存时要进行模式归纳（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;Schema Induction&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;）。模式归纳的含义就是指：如果类比导致了一个解，则执行两类似体的泛化过程，以便形成一个抽象的案例模式。简而言之，就是寻找两类似体的共性，然后加以抽象和泛化。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;案例保存的过程可以看作一个归纳学习的过程，很多归纳学习的方法都可以应用于案例保存，如产生预测试方法（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;INDUCE1.2&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;）。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;6、案例的维护&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;
&lt;p style=&quot;text-indent:21pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;心理学家在研究记忆机理时，提出了著名的遗忘曲线理论，即长期不用的信息将会被逐渐遗忘。在基于案例推理中，案例库的维护很重要，必须将长期不用的案例删除，因为这种案例很可能是噪声案例，例如误诊的病例、误判的案件等。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;Aha&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;建议对案例库中的每个案例建立一个匹配记录，就可以删除那些噪声或无用的案例，以维护案例库的有效性。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;Aha&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;提出案例求精算法&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;IB3&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;，表述如下&lt;/span&gt;&lt;sup&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;[51]&lt;/span&gt;&lt;/sup&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;输入：案例库&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;S&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;和测试案例集&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;T&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;输出：精化案例库&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;S&amp;rsquo;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;过程：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:57pt;text-indent:-36pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span&gt;（1）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;从测试案例集&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;T&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;中任选一个测试案例&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;t&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;；&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;!--[endif]--&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:57pt;text-indent:-36pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span&gt;（2）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;设法从案例库&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;S&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;中找到一个案例&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;s&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;，它与&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;t&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;有最佳匹配，其相似度超过某个阈值；&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;!--[endif]--&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:57pt;text-indent:-36pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span&gt;（3）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;如果找不到这样的&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;s&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;，则转到（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;8&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;）；&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;!--[endif]--&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:57pt;text-indent:-36pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span&gt;（4）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;若确认&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;t&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;和&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;s&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;属于同一类，则转（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;9&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;）；否则把&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;t&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;加上它所属的类&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;c&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;的标志后存入库&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;S&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;；&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;!--[endif]--&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:57pt;text-indent:-36pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span&gt;（5）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;从库&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;S&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;中找出所有这样的案例&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;s&lt;sub&gt;i&lt;/sub&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;，它们和&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;t&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;的相似程度至多不大于&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;s&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;和&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;t&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;的相似程度，所有这些&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;s&lt;sub&gt;i&lt;/sub&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;的匹配记录要扣分；&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;!--[endif]--&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:57pt;text-indent:-36pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span&gt;（6）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;从库&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;S&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;中删除记录分数小于某个规定值的所有案例；&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;!--[endif]--&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:57pt;text-indent:-36pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span&gt;（7）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;如果测试集的案例已经用完，则算法结束，否则转（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;1&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;）；&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;!--[endif]--&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:57pt;text-indent:-36pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span&gt;（8）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;从库&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;S&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;中任选一个案例&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;s&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;，转到（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;4&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;）；&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;!--[endif]--&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:57pt;text-indent:-36pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span&gt;（9）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;从库&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;S&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;中找出所有这样的案例&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;s&lt;sub&gt;i&lt;/sub&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;，它们和&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;t&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;的相似程度至少不亚于&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;s&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;和&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;t&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;的相似程度；&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;!--[endif]--&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:57pt;text-indent:-36pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span&gt;（10）&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;转到（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;7&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;）。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;!--[endif]--&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;3&quot;&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  7、 &lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;line-height:173%;font-family:宋体;&quot;&gt;基于规则的推理&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;line-height:173%;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;基于规则推理（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;RBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;）子系统是一个简化的专家系统。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;RBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;子系统由事实库和规则库组成，规则库中存放由专家经验中提取出来的专家规则，以产生式表示；事实库是由推理机通过人机界面从用户的输入中提取出来的事实，以命题逻辑表示。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;例如，和上面讨论的&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;case6&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;相关的规则有&amp;ldquo;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:楷体_GB2312;&quot;&gt;使用导电橡胶、衬垫之类的屏蔽材料时，不但要保证接触面上的良好的导电性（接触面去除所有漆），而且还要保证一定的压缩量。&amp;rdquo;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;，可以用产生式规则表述如下：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;color:rgb(0,176,80);&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;margin-left:21pt;text-align:left;line-height:22pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;Shielding(product, conductive_tape) &lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;&amp;or;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt; Shielding(product, condutive_gasket) =&amp;gt; Wipe_off(interface, lacquer) &lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;&amp;and;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt; (Compress(conductive_tape) &lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;&amp;or;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt; Compress(conductive_ gasket))&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;RBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;的推理采用不确定性推理。不确定推理包括前提条件的不确定性、结论的不确定性以及推理过程的不确定性。根据电磁兼容知识的特点，必须综合利用这三种不确定性才能比较确切的模拟电磁兼容专家的推理过程。不确定推理的通用表示方法为&lt;/span&gt;&lt;sup&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;[20]&lt;/span&gt;&lt;/sup&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:22pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; IF&lt;/span&gt;&lt;/strong&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt; [(p&lt;sub&gt;1&lt;/sub&gt;, f&lt;sub&gt;1&lt;/sub&gt;, t&lt;sub&gt;1&lt;/sub&gt;) &lt;strong&gt;AND&lt;/strong&gt; (p&lt;sub&gt;2&lt;/sub&gt;, f&lt;sub&gt;2&lt;/sub&gt;, t&lt;sub&gt;2&lt;/sub&gt;) &lt;strong&gt;AND&lt;/strong&gt; &amp;hellip; &lt;strong&gt;AND&lt;/strong&gt; (p&lt;sub&gt;m&lt;/sub&gt;, f&lt;sub&gt;m&lt;/sub&gt;, t&lt;sub&gt;m&lt;/sub&gt;)]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:22pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; THEN&lt;/span&gt;&lt;/strong&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt; [((q&lt;sub&gt;1&lt;/sub&gt;, g&lt;sub&gt;1&lt;/sub&gt;, s&lt;sub&gt;1&lt;/sub&gt;), (q&lt;sub&gt;2&lt;/sub&gt;, g&lt;sub&gt;2&lt;/sub&gt;, s&lt;sub&gt;2&lt;/sub&gt;)&amp;hellip;)] &lt;strong&gt;WITH CF&lt;/strong&gt;(R)&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:0;line-height:22pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;其中，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;p&lt;sub&gt;i&lt;/sub&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;表示模糊前提条件，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;q&lt;sub&gt;i&lt;/sub&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;表示模糊结论及动作，&lt;/span&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;CF&lt;/span&gt;&lt;/strong&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;(R)&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;为可信度，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;f&lt;sub&gt;i&lt;/sub&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;是表达前件的可能性分布，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;t&lt;sub&gt;i&lt;/sub&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;是前件的确信程度，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;g&lt;sub&gt;i&lt;/sub&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;是表达结论的可能性分布，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;s&lt;sub&gt;1&lt;/sub&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;是结论的确信程度。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:22pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 对于前件，可以采用表达方案：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span style=&quot;position:relative;top:12pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/p.JPG&quot; alt=&quot;&quot; /&gt;,&lt;span style=&quot;font-style:italic;&quot;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;为模糊命题，&lt;span style=&quot;font-style:italic;&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span style=&quot;position:relative;top:3pt;&quot;&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;为对象名，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;A&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;是&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span style=&quot;position:relative;top:3pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;x&lt;/span&gt;的属性名，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;D&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;是确定性状态表达，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;是&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span style=&quot;position:relative;top:12pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;p&lt;/span&gt;的相应的确定性命题，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span style=&quot;position:relative;top:3pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img height=&quot;16&quot; width=&quot;9&quot; src=&quot;/DOCUME~1/ADMINI~1/LOCALS~1/Temp/msohtmlclip1/01/clip_image021.gif&quot; alt=&quot;&quot; /&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;是命题的不确定性度量。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:22pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;例如，某模糊命题为：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:22pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:楷体_GB2312;&quot;&gt;如果为感应耦合&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;(&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:楷体_GB2312;&quot;&gt;可信度&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;0.9)&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:楷体_GB2312;&quot;&gt;，且电路频率很高&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;(&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:楷体_GB2312;&quot;&gt;模糊数&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;0.8)&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:楷体_GB2312;&quot;&gt;，则耦合为容性耦合&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;(&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:楷体_GB2312;&quot;&gt;可信度&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;0.7)&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:楷体_GB2312;&quot;&gt;。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:22pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;则该命题可以表述为：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;line-height:22pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; IF&lt;/span&gt;&lt;/strong&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt; [(p&lt;sub&gt;1&lt;/sub&gt;,0.9) &lt;strong&gt;AND&lt;/strong&gt; (p&lt;sub&gt;2&lt;/sub&gt;,0.8)] &lt;strong&gt;THEN&lt;/strong&gt;[(q&lt;sub&gt;1&lt;/sub&gt;, 0.7)] &lt;strong&gt;WITH CF&lt;/strong&gt;(R)&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:0;line-height:22pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;其中，&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/p1.JPG&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/p2.JPG&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:0;line-height:22pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/q1.JPG&quot; alt=&quot;&quot; /&gt;，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;R&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;为根据不确定推理理论计算出的整个命题的可信度。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:0;line-height:22pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 8、 &lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;line-height:173%;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;CBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;line-height:173%;font-family:宋体;&quot;&gt;和&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;line-height:173%;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;RBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;line-height:173%;font-family:宋体;&quot;&gt;的综合机制&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;line-height:173%;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt; &lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:0;line-height:22pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;&amp;nbsp;&amp;nbsp; 当目标案例和&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;CBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;案例库中的源案例的相似度低于阈值时，启用&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;RBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;。如果利用&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;RBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;能够推导出结果，则将&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;RBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;的结论作为最终诊断结果，将&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;CBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;的结论作为建议一同提交给用户；如果由于规则的不完整&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;RBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;无法推导出结论，则将&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;CBR&lt;/span&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;的结论作为诊断结果提交给用户，但此时必须注明该结论的可信度（可信度可以用目标案例和源案例的相似度表示）。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:12pt;font-family:宋体;&quot;&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:12pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>逻辑表达式词法分析器分析结果的显示</title>
   <link href="http://bo-yang.github.com//2008/05/27/logic-parser-result"/>
   <updated>2008-05-27T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/05/27/logic-parser-result</id>
   <content type="html">&lt;p&gt;
&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 上篇博客文章《&lt;a href=&quot;void(0);/*1211894183336*/&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;简易逻辑表达式词法分析器&lt;/span&gt;&lt;/a&gt;》讲到设计了一个逻辑表达式词法分析器，这次以那个词法分析器作为后端，利用VC搭建前端界面，展示一下分析效果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/词法分析器结果.JPG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 分析结果以树的形式表示：同一级节点表示具有相同的等级，参数比它的谓词的等级要高，比如Missile(x)中Missile等级为0级，x为1级。分析之后各个节点存储在Parser.list中，可以根据该链表的节点的level属性将各节点插入树种的相应位置。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 分析以上逻辑表达式可知，各个节点的等级如下：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Missile&amp;nbsp; x&amp;nbsp; AND&amp;nbsp; Owns&amp;nbsp; Nono&amp;nbsp; Sub&amp;nbsp; x&amp;nbsp; =&amp;gt;&amp;nbsp; Sells&amp;nbsp; West&amp;nbsp; x&amp;nbsp; Nono&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp;&amp;nbsp;&amp;nbsp; 2&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 可见，利用堆栈来辅助将节点插入树中是最理想的方法。思路如下：将树的TVI_ROOT压栈；若当前节点的等级大于其前一个节点，将前一个节点压栈；若当前节点等级小于前一个节点，出栈前一节点等级 和&amp;nbsp; 当前节点等级之差次；若当前节点等级等于前一节点等级，既不压栈也不出栈。每个当前节点的父节点为栈顶元素。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 源代码如下：&lt;/p&gt;
&lt;div style=&quot;border:.5pt solid windowtext;padding:4px 5.4pt;background:rgb(230,230,230) none repeat scroll 0 0;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;width:95%;&quot;&gt;
&lt;div&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; /&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;CPPageFaultLogicExpression::OnBnClickedButtonParse()&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot; /&gt;&lt;img align=&quot;top&quot; style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot; id=&quot;_58_1515_Closed_Text&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_58_1515_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;TODO:&amp;nbsp;在此添加控件通知处理程序代码&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UpdateData(TRUE);&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(m_strLogicExpression&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; /&gt;&lt;img align=&quot;top&quot; style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot; id=&quot;_137_168_Closed_Text&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_137_168_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MessageBox(L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;请输入逻辑表达式！&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;);&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; /&gt;&lt;img align=&quot;top&quot; style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot; id=&quot;_177_1499_Closed_Text&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_177_1499_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_parser.Parse((wstring)m_strLogicExpression);&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;进行词法分析&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_bIsParsed&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;TRUE;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; /&gt;&lt;img align=&quot;top&quot; style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot; id=&quot;_261_284_Closed_Text&quot;&gt;/**/&lt;/span&gt;&lt;span id=&quot;_261_284_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(128,128,128);&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;/&amp;nbsp;向词法分析树种添加分析结果&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(128,128,128);&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:rgb(128,128,128);&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_tLexer.DeleteAllItems();&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;清除所有节点&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;NodeList_It&amp;nbsp;it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;m_parser.list.begin();&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;NodeList_It&amp;nbsp;tmp_it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;it;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;wchar_t&amp;nbsp;tmp[&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;128&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;];&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;wcscpy(tmp,it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;content.c_str());&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stack&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;HTREEITEM&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;st;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;定义堆栈&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TVINSERTSTRUCT&amp;nbsp;tvInsert;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tvInsert.hParent&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;TVI_ROOT;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tvInsert.hInsertAfter&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;TVI_LAST;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tvInsert.item.mask&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;TVIF_TEXT;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tvInsert.item.pszText&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;tmp;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HTREEITEM&amp;nbsp;hcur&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;TVI_ROOT;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;st.push(hcur);&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hcur&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;m_tLexer.InsertItem(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;tvInsert);&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;插入根节点&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HTREEITEM&amp;nbsp;hprev;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hprev&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;hcur;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int&amp;nbsp;level=0,max_level=0;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(it;it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;!=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;m_parser.list.end();it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; /&gt;&lt;img align=&quot;top&quot; style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot; id=&quot;_846_1474_Closed_Text&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_846_1474_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;wcscpy(tmp,it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;content.c_str());&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;level&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;tmp_it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;level)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;当前节点深度大于前一节点时，前一节点所在的树的位置入栈&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; /&gt;&lt;img align=&quot;top&quot; style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot; id=&quot;_952_1042_Closed_Text&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_952_1042_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;st.push(hprev);&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hcur&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;m_tLexer.InsertItem(tmp,hprev,TVI_LAST);&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;插入新的节点&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;level&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;tmp_it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;level)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;当前节点深度小于前一节点时，根据两节点深度之差将保存的节点出栈&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; /&gt;&lt;img align=&quot;top&quot; style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot; id=&quot;_1120_1292_Closed_Text&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1120_1292_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;level&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;tmp_it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;level;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;while&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;level&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;level&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;--&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; /&gt;&lt;img align=&quot;top&quot; style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot; id=&quot;_1186_1207_Closed_Text&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1186_1207_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;st.pop();&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hprev&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;st.top();&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hcur&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;m_tLexer.InsertItem(tmp,hprev,TVI_LAST);&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;插入新的节点&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;level&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;tmp_it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;level)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;当前节点深度等于前一节点时，根据栈顶元素插入新节点&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; /&gt;&lt;img align=&quot;top&quot; style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot; id=&quot;_1365_1440_Closed_Text&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1365_1440_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hprev&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;st.top();&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hcur&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;m_tLexer.InsertItem(tmp,hprev,TVI_LAST);&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hprev&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;hcur;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmp_it&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;it;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UpdateData(FALSE);&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;end&amp;nbsp;of&amp;nbsp;else&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; PS1:&amp;nbsp; 当初考虑到中文的支持，利用wstring定义节点内容，现在发现是个错误，在字符转换的过程中很是麻烦，耽误了不少时间，走了不少弯路。&lt;br /&gt;&amp;nbsp; PS2: 也许因为我对STL不是很熟悉，感觉比较麻烦，不知道如何被C++标准委员会接纳的？&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>利用VC设计简易逻辑表达式词法分析器</title>
   <link href="http://bo-yang.github.com//2008/05/24/vc-logic-parser"/>
   <updated>2008-05-24T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/05/24/vc-logic-parser</id>
   <content type="html">&lt;p class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot; align=&quot;center&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;简易逻辑表达式词法分析器&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot; align=&quot;center&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;待分析的逻辑表达式如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&quot;font-size:9pt;font-family:新宋体;color:rgb(163,21,21);&quot; lang=&quot;EN-US&quot;&gt;EXISTS(x)(Missile(x) AND Owns(Father(Nono),Part_of(x))) =&amp;gt; Sells(West,x,Nono)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;为了处理逻辑表达式，必须首先提取出逻辑表达式的各个部分：关键字&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(AND, OR, NOT, FORALL, EXISTS, =&amp;gt;)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、谓词和参数，同时必须对于表达式中多余的空格必须删除。这项工作由一个词法分析器完成。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;该词法分析器最基础的部分是一个自定义节点&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Node&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，定义如下：&lt;/span&gt;&lt;/p&gt;
&lt;div style=&quot;border:.5pt solid windowtext;padding:4px 5.4pt;background:rgb(230,230,230) none repeat scroll 0 0;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;width:95%;&quot;&gt;
&lt;div&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; align=&quot;top&quot; /&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;Node&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span id=&quot;_11_489_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_11_489_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;:&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;VARIABLEs&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;enum&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;NodeType&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_50_76_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_50_76_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{KEYWORD,&amp;nbsp;PREDICATE,&amp;nbsp;PARAM}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Types&amp;nbsp;of&amp;nbsp;the&amp;nbsp;node.&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;static&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;wstring&amp;nbsp;KeyWord[];&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;NodeType&amp;nbsp;type;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;wstring&amp;nbsp;content;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;content&amp;nbsp;of&amp;nbsp;the&amp;nbsp;node.&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;level;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Record&amp;nbsp;the&amp;nbsp;level&amp;nbsp;of&amp;nbsp;the&amp;nbsp;node,for&amp;nbsp;example:&amp;nbsp;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Owns(Nono,Sub(x))---&quot;Owns&quot;&amp;nbsp;in&amp;nbsp;level&amp;nbsp;0,&quot;Nono&quot;&quot;Sub&quot;&amp;nbsp;in&amp;nbsp;level&amp;nbsp;1&amp;nbsp;and&amp;nbsp;x&amp;nbsp;in&amp;nbsp;level&amp;nbsp;2.&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;FUNCTIONs&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Node();&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Node(wstring&amp;nbsp;con,NodeType&amp;nbsp;type_&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;KEYWORD,&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;lev&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;);&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;~&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;Node();&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;virtual&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;Node&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;operator&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(Node&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;);&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Overrides&amp;nbsp;of&amp;nbsp;operator=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;protected&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;:&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif&quot; align=&quot;top&quot; /&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin-left:10.5pt;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Node&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;主要有三个部分：该节点内容、节点类型、节点的等级（用以对提取出的表达式进行进一步的分析）。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;同时定义了一个链表：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;color:blue;&quot; lang=&quot;EN-US&quot;&gt;typedef&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt; list&amp;lt;Node&amp;gt; NodeList; &lt;span style=&quot;color:green;&quot;&gt;// Define List.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;该链表用于存储整个逻辑表达式。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;同时定义了一个类&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Parser&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，封装了&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;NodeList&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;用于对逻辑表达式进行操作。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;border:.5pt solid windowtext;padding:4px 5.4pt;background:rgb(230,230,230) none repeat scroll 0 0;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;width:95%;&quot;&gt;
&lt;div&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; align=&quot;top&quot; /&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;Parser&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span id=&quot;_13_201_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_13_201_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;:&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;VARIABLEs&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;NodeList&amp;nbsp;list;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Node&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;node;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;FUNCTIONs&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Parser()&lt;/span&gt;&lt;span id=&quot;_91_103_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_91_103_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&amp;nbsp;node&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;NULL;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;~&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;Parser();&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Node&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;Parse(wstring&amp;nbsp;str,&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;cur_pos&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;);&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;function&amp;nbsp;to&amp;nbsp;parse&amp;nbsp;a&amp;nbsp;string.&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;private&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;:&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif&quot; align=&quot;top&quot; /&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;color:rgb(163,21,21);&quot; lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;词法分析器的核心函数就是&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;Node* Parser::Parse(wstring str,&lt;span style=&quot;color:blue;&quot;&gt;int&lt;/span&gt; cur_pos)&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;该函数主要针对逻辑表达式中的&lt;/span&gt;&lt;span style=&quot;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&#39;(&#39;&lt;/span&gt;&lt;span style=&quot;font-family:新宋体;&quot;&gt;、&lt;span lang=&quot;EN-US&quot;&gt;&#39; &#39;&lt;/span&gt;、&lt;span lang=&quot;EN-US&quot;&gt;&#39;,&#39;&lt;/span&gt;以及&lt;span lang=&quot;EN-US&quot;&gt;&#39;)&#39;&lt;/span&gt;进行分析，流程图如下：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:新宋体;&quot;&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B%E5%9B%BE.JPG&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;运行结果如下：&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;img alt=&quot;词法分析器运行结果&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90%E5%99%A8%E7%BB%93%E6%9E%9C.JPG&quot; align=&quot;center&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&amp;nbsp;&lt;br /&gt;
分析结果以树的形式表示：同一级节点表示具有相同的等级，参数比它的谓词的等级要高，比如Missile(x)中Missile等级为0级，x为1级。分&lt;br /&gt;
析之后各个节点存储在Parser.list中，可以根据该链表的节点的level属性将各节点插入树种的相应位置。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 分析以上逻辑表达式可知，各个节点的等级如下：&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Missile&amp;nbsp; x&amp;nbsp; AND&amp;nbsp; Owns&amp;nbsp; Nono&amp;nbsp; Sub&amp;nbsp; x&amp;nbsp; =&amp;gt;&amp;nbsp; Sells&amp;nbsp; West&amp;nbsp; x&amp;nbsp; Nono&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp;&amp;nbsp;&amp;nbsp; 2&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
可见，利用堆栈来辅助将节点插入树中是最理想的方法。思路如下：将树的TVI_ROOT压栈；若当前节点的等级大于其前一个节点，将前一个节点压栈；若当&lt;br /&gt;
前节点等级小于前一个节点，出栈前一节点等级 和&amp;nbsp;&lt;br /&gt;
当前节点等级之差次；若当前节点等级等于前一节点等级，既不压栈也不出栈。每个当前节点的父节点为栈顶元素。&lt;br /&gt;&lt;span style=&quot;font-family:新宋体;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:新宋体;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:新宋体;&quot;&gt;源代码如下：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;
&lt;div style=&quot;border:.5pt solid windowtext;padding:4px 5.4pt;background:rgb(230,230,230) none repeat scroll 0 0;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;width:95%;&quot;&gt;
&lt;div&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;span id=&quot;_0_50_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;/**/&lt;/span&gt;&lt;span id=&quot;_0_50_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(128,128,128);&quot;&gt;////////////////////////////////////////////////&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(128,128,128);&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; align=&quot;top&quot; /&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Function&amp;nbsp;Name:&amp;nbsp;Parse&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Input:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a&amp;nbsp;wstring(must),&amp;nbsp;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;the&amp;nbsp;start&amp;nbsp;position&amp;nbsp;of&amp;nbsp;being&amp;nbsp;parsed(choiced).&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Output:&amp;nbsp;a&amp;nbsp;parsed&amp;nbsp;list&#39;s&amp;nbsp;head.&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span id=&quot;_193_243_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;/**/&lt;/span&gt;&lt;span id=&quot;_193_243_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(128,128,128);&quot;&gt;////////////////////////////////////////////////&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(128,128,128);&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; align=&quot;top&quot; /&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;Node&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;Parser::Parse(wstring&amp;nbsp;str,&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;cur_pos)&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span id=&quot;_289_3089_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_289_3089_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int&amp;nbsp;start=cur_pos;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Node&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;tmpNode&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;NULL;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;wchar_t&amp;nbsp;pstr[&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;40&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;temp&amp;nbsp;var&amp;nbsp;to&amp;nbsp;record&amp;nbsp;words.&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;k&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;used&amp;nbsp;together&amp;nbsp;with&amp;nbsp;pstr.&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;level&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;space_pos&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Deal&amp;nbsp;with&amp;nbsp;the&amp;nbsp;first&amp;nbsp;keywords&amp;nbsp;of&amp;nbsp;a&amp;nbsp;propositional&amp;nbsp;fuction.&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Such&amp;nbsp;as&amp;nbsp;NOT,&amp;nbsp;EXISTS(x),&amp;nbsp;FORALL(y)&amp;nbsp;and&amp;nbsp;so&amp;nbsp;on.&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;EXAMPLE:&amp;nbsp;EXISTS(x)(Missile(x)&amp;nbsp;AND&amp;nbsp;Owns(Nono,x))&amp;nbsp;=&amp;gt;&amp;nbsp;Sells(West,x,Nono)&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;EXAMPLE:&amp;nbsp;NOT(Missile(x))&amp;nbsp;AND&amp;nbsp;Owns(Nono,Sub(x))&amp;nbsp;=&amp;gt;&amp;nbsp;Sells(West,x,Nono)&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;EXAMPLE:&amp;nbsp;Missile(x)&amp;nbsp;AND&amp;nbsp;Owns(Nono,Sub(x))&amp;nbsp;=&amp;gt;&amp;nbsp;Sells(West,x,Nono)&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;while&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(cur_pos&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;!=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;str.length())&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_814_3064_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_814_3064_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(str[cur_pos]&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Words&amp;nbsp;before&amp;nbsp;&#39;(&#39;&amp;nbsp;only&amp;nbsp;can&amp;nbsp;be&amp;nbsp;KEYWORD&amp;nbsp;or&amp;nbsp;PREDICATE.&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_897_1409_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_897_1409_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;isKeyWord&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;i&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;i&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;sizeof&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(Node::KEYWORD);&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;i)&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_971_1192_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_971_1192_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;wcscmp(pstr,Node::KeyWord[i].c_str()))&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;pstr==Node::KeyWord[i]&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_1049_1187_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1049_1187_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;isKeyWord&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpNode&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;Node(pstr,Node::KEYWORD,level);&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;list.push_back(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;tmpNode);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Insert&amp;nbsp;keyword.&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;break&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;isKeyWord&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;wcscmp(pstr,L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;))&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;pstr&amp;nbsp;is&amp;nbsp;not&amp;nbsp;keyword&amp;nbsp;or&amp;nbsp;NULL&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_1265_1371_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1265_1371_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpNode&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;Node(pstr,Node::PREDICATE,level);&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;list.push_back(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;tmpNode);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Insert&amp;nbsp;PREDICATE.&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;level;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;cur_pos;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;k&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(str[cur_pos]&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_1443_2068_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1443_2068_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(str[cur_pos&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;!=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;if&amp;nbsp;a&amp;nbsp;&#39;&amp;nbsp;&#39;&amp;nbsp;follows&amp;nbsp;&#39;)&#39;,then&amp;nbsp;compare&amp;nbsp;the&amp;nbsp;following&amp;nbsp;to&amp;nbsp;or&amp;nbsp;three&amp;nbsp;with&amp;nbsp;keyword.&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_1553_2010_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1553_2010_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(wcscmp(pstr,L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;))&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;pstr&amp;nbsp;is&amp;nbsp;not&amp;nbsp;empty&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_1606_2005_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1606_2005_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;wstring&amp;nbsp;strAND(str,cur_pos&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;);&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;wstring&amp;nbsp;strOR(str,cur_pos&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;);&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;strAND.compare(L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;AND&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;||&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;strOR.compare(L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;OR&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;||&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;strOR.compare(L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;))&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_1771_1963_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1771_1963_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpNode&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;Node(pstr,Node::KEYWORD,level);&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;list.push_back(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;tmpNode);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Insert&amp;nbsp;keyword.&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;cur_pos;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;k&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memset(pstr,L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;sizeof&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(pstr));&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;continue&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Error!&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;cur_pos;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Ignore&amp;nbsp;whitespace.&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;continue&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(str[cur_pos]&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;pstr&amp;nbsp;must&amp;nbsp;be&amp;nbsp;a&amp;nbsp;param&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_2126_2542_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_2126_2542_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;wcscmp(pstr,L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;str[cur_pos&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;In&amp;nbsp;a&amp;nbsp;case&amp;nbsp;like:&amp;nbsp;Owns(Father(Nono),Sub(x))&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_2225_2245_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_2225_2245_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;cur_pos;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(wcscmp(pstr,L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;))&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;pstr&amp;nbsp;is&amp;nbsp;not&amp;nbsp;empty&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_2301_2527_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_2301_2527_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(str[cur_pos&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Something&amp;nbsp;between&amp;nbsp;a&amp;nbsp;&#39;)&#39;&amp;nbsp;and&amp;nbsp;a&amp;nbsp;&#39;,&#39;,&amp;nbsp;Error!&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;);&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_2404_2521_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_2404_2521_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpNode&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;Node(pstr,Node::PARAM,level);&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;list.push_back(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;tmpNode);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Insert&amp;nbsp;PARAM.&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;cur_pos;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;k&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(str[cur_pos]&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_2577_2968_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_2577_2968_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;wcscmp(pstr,L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;str[cur_pos&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;In&amp;nbsp;a&amp;nbsp;case&amp;nbsp;like:&amp;nbsp;Owns(Father(Nono),Sub(x))&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_2676_2696_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_2676_2696_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;cur_pos;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(wcscmp(pstr,L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;))&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;if&amp;nbsp;pstr&amp;nbsp;is&amp;nbsp;not&amp;nbsp;empty&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_2753_2943_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_2753_2943_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(str[cur_pos&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Error!&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exit(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;);&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_2821_2938_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_2821_2938_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpNode&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;Node(pstr,Node::PARAM,level);&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;list.push_back(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;tmpNode);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Insert&amp;nbsp;PARAM.&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;cur_pos;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;--&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;level;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;k&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; align=&quot;top&quot; /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_2979_3025_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_2979_3025_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pstr[k&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;str[cur_pos&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;];&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;continue&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memset(pstr,L&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;sizeof&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(pstr));&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;list.front();&lt;br /&gt;&lt;img alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif&quot; align=&quot;top&quot; /&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;font-family:新宋体;&quot;&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>线性坐标系到对数坐标系的变换——EMC测试曲线的绘制</title>
   <link href="http://bo-yang.github.com//2008/05/23/draw-emc-test-curve"/>
   <updated>2008-05-23T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/05/23/draw-emc-test-curve</id>
   <content type="html">&lt;p&gt;        &lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 绘制测试曲线的核心函数为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:10.5pt;font-family:&quot;Calibri&quot;, &quot;sans-serif&quot;;&#39;&gt;CEMCView::DrawFrameCurve()&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;函数。该函数可以根据测试的频段和该频段的测试数据在对数坐标系的对应位置绘制测试曲线。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:10.5pt;font-family:&quot;Calibri&quot;, &quot;sans-serif&quot;;&#39;&gt;DrawFrameCurve()&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;函数绘制曲线的流程图如图&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:10.5pt;font-family:&quot;Calibri&quot;, &quot;sans-serif&quot;;&#39;&gt;1&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;所示：&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/测试流程图.JPG&quot; /&gt;&lt;br /&gt;图1 测试流程图&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/R3131A.JPG&quot; /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;&amp;nbsp;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 图2 R3131A屏幕显示的线性坐标系&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 每次测试，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Advantest R3131A&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;频谱仪都会对所测频段采样&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;501&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;个点，每个点对应的测试值不小于&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;512&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，如图&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3-29&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;所示。大于&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3392&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;的数值不在频谱仪屏幕上显示，但会记录下这个值，因为这个值也是有效的。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Advantest R3131A&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;频谱仪默认纵轴每格代表&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;10dB&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，因此频谱仪的测试值&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3392-512=2880&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;对应着&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;80dB&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;。对于在计算机上绘制的对数坐标系而言，若纵轴表示&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;M dB&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，因此对数坐标系纵坐标最大值对应的频谱仪测试值为：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/dtop.JPG&quot; /&gt;&lt;br /&gt;&lt;span style=&quot;position:relative;top:12pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:12pt;&quot;&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;设&lt;span style=&quot;font-style:italic;&quot;&gt;Y&lt;/span&gt;&lt;sub&gt;top&lt;/sub&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-style:italic;&quot;&gt;&lt;span style=&quot;position:relative;top:7pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;为对数坐标系左上角对应的计算机屏幕上的纵坐标值，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:6pt;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;Y&lt;/span&gt;&lt;sub&gt;bot&lt;/sub&gt;表示对数坐标系左下角对应的计算机屏幕上的纵坐标值，&lt;span style=&quot;font-style:italic;&quot;&gt;y&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;表示对数坐标系中某个测试点对应的计算机屏幕上的纵坐标值，&lt;span style=&quot;font-style:italic;&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:3pt;&quot;&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;表示该测试点对应的频谱仪测试值，对数坐标系纵坐标从&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;开始，则：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:16pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/dtop2.JPG&quot; /&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;因此，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:16pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/y.JPG&quot; /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;right&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:right;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:red;&quot;&gt;(3-1)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;对于横坐标，如果已知测试的起始频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:6pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;f&lt;sub&gt;start&lt;/sub&gt;，起始频率对应的计算机横坐标为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:6pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;span&gt;x&lt;sub&gt;start&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，测试终止频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:7pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;f&lt;sub&gt;stop&lt;/sub&gt;，测试终止频率对应的计算机横坐标为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:7pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;x&lt;sub&gt;stop&lt;/sub&gt;，该频段的起始频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:7pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;f&lt;sub&gt;frmstart&lt;/sub&gt;，结合图&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3-16&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;可得该频段起始频率对应的计算机坐标&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:7pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;有：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-align:center;text-indent:21pt;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/x.JPG&quot; /&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-align:center;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:16pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;因此&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/xfrmstart.JPG&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:35pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;如果每个测试频段有&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:3pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;N个采样点，也即有&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:3pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;N个测试数据，那么该频段中第&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:3pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;i个数据对应的频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:6pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;f&lt;sub&gt;i&lt;/sub&gt;，且&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:12pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/fi.JPG&quot; /&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;式中，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:7pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;f&lt;sub&gt;frmstop&lt;/sub&gt;&amp;mdash;&amp;mdash;测试频段的终止频率。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;第&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:3pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;i个数据对应的计算机横坐标为：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/xi.JPG&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;right&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:right;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:35pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:red;&quot;&gt;(3-2)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;如果在某个测试频段内的第&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:3pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;i个数据的测试值为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:3pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;d，则该点对应的计算机屏幕坐标为(x&lt;sub&gt;i&lt;/sub&gt;,y&lt;sub&gt;i&lt;/sub&gt;)&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:6pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:6pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;x&lt;sub&gt;i&lt;/sub&gt;、y&lt;sub&gt;i&lt;/sub&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:6pt;&quot;&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;可分别根据式&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:red;&quot;&gt;(3-1)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;和式&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:red;&quot;&gt;(3-2)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;求出。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;&quot;&gt;PS:&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;font size=&quot;4&quot;&gt;&lt;span style=&quot;color:rgb(255,0,0);&quot;&gt;CSDN不支持把Word中的公式自动保存为图片实在是太难用了，每次都要自己先把公式转化为图片然后再插入到文章里，麻烦！&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>案例检索——EMC-CBR故障诊断研究（三）</title>
   <link href="http://bo-yang.github.com//2008/05/22/emc-cbr-3"/>
   <updated>2008-05-22T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/05/22/emc-cbr-3</id>
   <content type="html">&lt;p style=&quot;text-indent:18pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:18pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;案例检索的核心任务就是计算新案例和案例库中的案例的相似度，而相似度要由案例的故障特征和系统结构确定。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:18pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:18pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）案例属性之间的距离&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:18pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;由于系统结构直接影响着&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;EMI&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;的大小，即便两个设备具有相同的物理布局但采用不同的元件或材料，其&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;EMC&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;的效果也是不同的，因此两个案例之间的&amp;ldquo;系统结构&amp;rdquo;之间的距离不仅和谓词相关，而且要考虑到谓词函数的参数&amp;mdash;&amp;mdash;谓词往往表示结构布局，而参数往往表示材料或元件。因此，在计算案例属性之间的距离时，对于案例属性中的谓词和参数要赋予不同的权值。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:18pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;设&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;case-i&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;的某个属性&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;故障特征或系统结构&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;有&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;m&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;个谓词，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;case-j&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;对应的该属性有&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;个谓词，且二者相同的谓词个数为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;k&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，其中&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;min(m,n)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;ge;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;k&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;。若该属性中，谓词权重为&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/Omegap.JPG&quot; /&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:7pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，参数权重为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:7pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/Omegaq.JPG&quot; /&gt;，&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/OmegaAdd.JPG&quot; /&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:7pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，则定义两案例在该属性的距离为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;text-indent:18pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:12pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/dij.JPG&quot; /&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:0;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;其中，&lt;/span&gt; &lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:7pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/bijh.JPG&quot; /&gt;为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;case-i&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;case-j&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;中第&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;span style=&quot;position:relative;top:3pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;h&lt;/span&gt;个相同的谓词的参数之间的匹配程度，有&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;text-indent:18pt;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:16pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/bij2.JPG&quot; /&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:0;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:0;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;该定义只考虑了相同的谓词以及相同谓词对应的参数之间的关系，两案例相同的谓词越多，则这两个案例之间的距离越短。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:0;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:0;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）案例的相似度&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:0;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;设&lt;span style=&quot;font-style:italic;&quot;&gt;d&lt;/span&gt;&lt;sub&gt;1&lt;/sub&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-style:italic;&quot;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;为两案例&amp;ldquo;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;故障特征&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;rdquo;属性的距离，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;d&lt;/span&gt;&lt;sub&gt;2&lt;/sub&gt;为两案例&amp;ldquo;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;系统结构&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;rdquo;属性的距离，由于&lt;span style=&quot;font-style:italic;&quot;&gt;0&amp;lt;=d&lt;sub&gt;1&lt;/sub&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;d&lt;/span&gt;&lt;sub&gt;2&lt;/sub&gt;&amp;lt;=1，则可以定义两案例的相似度为：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;text-indent:0;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/SIM.JPG&quot; alt=&quot;&quot; /&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:0;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;其中，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;SIM&lt;sub&gt;1&lt;/sub&gt;、&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;SIM&lt;sub&gt;2&lt;/sub&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;分别为两案例&amp;ldquo;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;故障特征&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;rdquo;属性、&amp;ldquo;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;系统结构&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;rdquo;属性对应的相似度，且&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;text-indent:0;&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:6pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/SIMi.JPG&quot; alt=&quot;&quot; /&gt;，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;i=1,2&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;案例库中和目标案例相似度最大的案例，就是最佳匹配案例。当然，有可能出现即便是最佳匹配案例和目标案例的相似度也比较小的情况。可以为了保证最终结果的正确性，设定一个相似度的阈值，低于该阈值的相似度的案例不能作为最终结果使用，必须利用专家系统对结果进行修正。&lt;/span&gt;&lt;/font&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>半旗.默哀.国歌</title>
   <link href="http://bo-yang.github.com//2008/05/19/wenchuan-earthquake"/>
   <updated>2008-05-19T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/05/19/wenchuan-earthquake</id>
   <content type="html">&lt;p&gt;	    document.domain=&quot;qq.com&quot;;&lt;br /&gt;
	    //parent.qZEditor.callback();&lt;br /&gt;
	   function init(){&lt;br /&gt;
		    var key = location.hash.substr(1);&lt;br /&gt;
		    document.editorID  = key;&lt;br /&gt;
		    parent.editorHash[key].callback();&lt;br /&gt;
	   }&lt;/p&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;font size=&quot;4&quot;&gt;&amp;nbsp;今天下午，2008年5月19日14：28分，我来到北京理工大学东操场，和其他近万名师生一起，集体为汶川大地震遇难者默哀。这次活动是学校倡议的，本没有安排我们即将毕业的硕士参加，但我们还是去了。下午2点操场上已经占满了人，BTV对这次活动现场直播。默哀前，低年级的小朋友们的表现令我很不满，他（她）们的态度很不严肃，部分女生的着装也不庄重，表现不合时宜。但是当开始默哀时，他/她们能够迅速进入状态，没有人交谈，没有手机响起，没有骚动，还是难能可贵的。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 默哀过程中，防空警报声、汽车鸣笛声此起彼伏，为逝者而悲号，为生者而祈祷。尽管我还年轻，尽管我远离灾区，但我脑海中再一次涌现出那句话&amp;mdash;&amp;mdash;&amp;ldquo;人应该赶快生活&amp;rdquo;。&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font size=&quot;4&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font size=&quot;4&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;默哀完毕，根据指挥老师的提议，我们和自己身边的同学手拉手，唱起了久违的国歌。国歌是那么熟悉有那么陌生&amp;mdash;&amp;mdash;熟悉是因为从小就听着国歌长大，陌生是因为很少有机会自己亲口唱起它。今天，总算给了我们一个唱响国歌的机会。&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font size=&quot;4&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font size=&quot;4&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;  今天凌晨1：30从女朋友家出发走向她们县的火车站，3点多坐火车回北京。在由北京西站回学校的公交车上，看到了（确切地说是听到了，人多，只能听到电视的声音，却看不到图像）电视里天安门降半旗的情景。国旗护卫队迈着整齐的步伐走到旗杆前，奏国歌，升国旗，国旗升好后，只听一位国旗护卫队员高喊&amp;ldquo;降&amp;mdash;&amp;mdash;半&amp;mdash;&amp;mdash;旗&amp;mdash;&amp;mdash;&amp;rdquo;，我身体一颤，莫名的辛酸油然而生，之后就是很长时间的寂静。平时公交车里即便寥寥数人也异常热闹，但今天早晨，却非常安静。尽管只有少数人能看到电视屏幕，但大多数人都在倾听，神情都很肃穆。&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font size=&quot;4&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font size=&quot;4&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 路过几家宾馆和国营机构，鲜艳的五星红旗都在旗杆的半空中摇晃着，向路人诉说着这个国家正在经历的苦难&amp;hellip;&amp;hellip;&lt;/font&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>硬盘安装Fedora 9成功</title>
   <link href="http://bo-yang.github.com//2008/05/14/fedora9-install-hard-disk"/>
   <updated>2008-05-14T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/05/14/fedora9-install-hard-disk</id>
   <content type="html">&lt;p&gt;
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 昨天晚上半夜（5月13日晚23：56分）我登陆到fedora项目的主页一看，My God，Fedora 9已经可以下载了！我立马开始下载。由于速度只有几百K/S，只好先睡觉。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 今天早上6：30就起来了，第一件事就是准备将Fedora 9刻录到光盘，然后准备安装。几天前就已经将光盘买好了，Nero也装好了，就等着刻呢。非常恶心的是，我一连试了三张白盘，一次也没刻录成功！气得我七窍生烟！还不到两年，破本本的刻录光驱就不能刻录了！Shit！&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 8点多感到实验室，半路上就决定了要从硬盘安装Fedora 9。上网查资料，N多，感觉还蛮简单的。照做。下载Grub for Linux，设置好，设置menu.lst。问题来了，将Fedora的iso映像放到哪里呢？还有就是我的Windows分区是NTFS格式的，留出来的空闲分区才15G，太小了，怎么改变分区大小呢？&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 有人说DVD版的Fedora要解压缩，有人说不用，但都要放到Fat或fat32分区里。上网，下载了Partition Manager，结果安装时说不能用于Windows Server 2003下面。Shit@！只好重新搜到了一个可以用于Server 2003下调整分区的软件。调好之后，重启进入grub安装。结果进不去Fedora安装界面！&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 找遍了所有原因，才发现自己在menu.lst中的initrd写成了intrid！唉！改正后终于进入了安装界面。这时却又找不到Fedora映像了。哦，原来我直接将iso给解压缩了。shit！不得不重新将Fedora的iso映像拷到fat32分区，重新装，一切OK！&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 大二的时候就装过Red Hat Linux9，当时装了玩了几次，感觉很不好用，就给删了。大四毕业又玩了一段时间Fedora core3，感觉好多了。后来在实验室电脑上装了Fedora 7，感觉很好。前几天用Wubi在笔记本上装Ubuntu8.04，结果不成功，很是郁闷。在实验室台式机上却成功了。进到Ubuntu后完了几次，感觉很不爽&amp;mdash;&amp;mdash;界面不怎么好看，桌面版自带的软件少得可怜，要通过网络安装，可我们平时很难上外网（拜教育网所赐）。总的说来，还是比较喜欢Red Hat 的产品，毕竟人家定位在企业级应用。而且听说Linus用的Linux版本就是Fedora哦。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 最近一年来逐渐对Linux情有独钟，也越来越不喜欢用Windows了。毕竟这是两种不同的模式，两种不同的文化。现在对知识产权的意识越来越强烈了，以前一直用盗版，现在不想用了，但又没钱买正版Windows下的软件，因此还是转到Linux的好。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 向开源进军！&lt;/p&gt;
&lt;p&gt;PS：硬盘安装Linux的详细设置请参阅&lt;/p&gt;
&lt;h1 class=&quot;title&quot;&gt;&lt;a href=&quot;void(0);/*1210765405981*/&quot;&gt;以WinGrub 引导安装Fedora 4.0 为例，详述用WinGrub来引导Linux的安装&lt;/a&gt;&lt;/h1&gt;
</content>
 </entry>
 
 <entry>
   <title>EMC测试曲线选择缩放功能的实现</title>
   <link href="http://bo-yang.github.com//2008/05/10/emc-curve-zoom"/>
   <updated>2008-05-10T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/05/10/emc-curve-zoom</id>
   <content type="html">&lt;p align=&quot;center&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;EMC&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;测试曲线选择缩放功能的实现&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:center;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;EMC&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;测试完成后，一般以曲线的形式显示在对数坐标系中。由于测试数据非常多，而对数坐标常常使得大量的数据分布不均，经常在一些地方使得测试曲线叠加在一起，看不清楚具体的数值和趋势。一幅&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;CE102&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;测试曲线如图&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;所示：&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img height=&quot;430&quot; width=&quot;800&quot; alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/CE102-全频段--2008-05-08.jpg&quot; /&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:center;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;图&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1 CE102-&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;全频段测试曲线图&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;由图可见，要想看清&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;2MHz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;以后的数据只有两种方法：选择感兴趣的频段重新测试，或者将感兴趣的频段放大。重新测试需要耗费更多的时间，也是一种无谓的重复劳动，而且在某些情况下无法实现（没有频谱仪或接收机在身边的时候）。选择感兴趣的频段放大，既节省时间，又便于查看。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;本程序中选择放大的使用方法极为简单，按下工具栏的放大按钮，在测试坐标系中按下并拖动鼠标左键选择频段，释放鼠标左键，这样就可以将选择的频段的测试曲线放大了。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;img height=&quot;495&quot; width=&quot;800&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/左键选择放大区域.JPG&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:center;text-indent:21pt;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;!--[if !vml]--&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:center;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;图&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;2 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;选择放大的方法&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;margin-left:21pt;text-align:left;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;在图&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;中绿色虚线就是按下并拖动鼠标左键进行选择时的效果。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;margin-left:21pt;text-align:left;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;放大后的曲线如图&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;所示：&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:left;text-indent:21pt;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img height=&quot;430&quot; width=&quot;800&quot; alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/选择并放大的区域.jpg&quot; /&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; class=&quot;MsoNormal&quot; style=&quot;text-align:center;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;图&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;选择放大后的测试曲线&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;margin-left:21pt;text-align:left;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;放大后按下工具栏的缩小按钮就可以重新显示原始的测试数据。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;margin-left:21pt;text-align:left;text-indent:21pt;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;margin-left:21pt;text-align:left;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;下面介绍一下程序的编写。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;margin-left:21pt;text-align:left;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;选择频段的过程至少包含三个相关函数：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:新宋体;color:blue;&quot;&gt;void&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:9pt;font-family:新宋体;&quot;&gt; CEMCView::OnLButtonDown(UINT nFlags, CPoint point)&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot;&gt;、&lt;span lang=&quot;EN-US&quot; style=&quot;color:blue;&quot;&gt;void&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; CEMCView::OnLButtonUp(UINT nFlags, CPoint point)&lt;/span&gt;和&lt;span lang=&quot;EN-US&quot; style=&quot;color:blue;&quot;&gt;void&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt; CEMCView::OnMouseMove(UINT nFlags, CPoint point)&lt;/span&gt;。三个函数的定义如下：&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div style=&quot;border:.5pt solid windowtext;padding:4px 5.4pt;background:rgb(230,230,230) none repeat scroll 0 0;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;width:95%;&quot;&gt;
&lt;div&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;CEMCView::OnLButtonDown(UINT&amp;nbsp;nFlags,&amp;nbsp;CPoint&amp;nbsp;point)&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; style=&quot;display:none;&quot; /&gt;&lt;/span&gt;&lt;span id=&quot;_56_193_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_56_193_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;TODO:&amp;nbsp;在此添加消息处理程序代码和/或调用默认值&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_lBtnDownPoint&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;point;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;记录按下鼠标左键的点&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_bIsLBtnDown&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;TRUE;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CScrollView::OnLButtonDown(nFlags,&amp;nbsp;point);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif&quot; /&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
&lt;div style=&quot;border:.5pt solid windowtext;padding:4px 5.4pt;background:rgb(230,230,230) none repeat scroll 0 0;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;width:95%;&quot;&gt;
&lt;div&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;CEMCView::OnMouseMove(UINT&amp;nbsp;nFlags,&amp;nbsp;CPoint&amp;nbsp;point)&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; style=&quot;display:none;&quot; /&gt;&lt;/span&gt;&lt;span id=&quot;_54_986_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_54_986_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;TODO:&amp;nbsp;在此添加消息处理程序代码和/或调用默认值&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(m_bIsWorking&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;m_bIsLBtnDown&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;m_bOldVersion)&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_141_942_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_141_942_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(point.x&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;m_maxMouseX)&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_maxMouseX&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;point.x;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(point.y&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;m_maxMouseY)&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_maxMouseY&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;point.y;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CRect&amp;nbsp;rect(m_lBtnDownPoint.x&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;,m_lBtnDownPoint.y&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;,m_maxMouseX&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;,m_maxMouseY&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CClientDC&amp;nbsp;dc(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;geometric&amp;nbsp;pen.&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LOGBRUSH&amp;nbsp;logBrush;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logBrush.lbStyle&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;BS_SOLID;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logBrush.lbColor&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;RGB(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;17&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;255&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;17&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;);&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;RGB(0,51,51);&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&amp;nbsp;pen(PS_DOT&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;PS_GEOMETRIC&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;PS_ENDCAP_FLAT,&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;logBrush);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;pOldPen&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;dc.SelectObject(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;pen);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;InvalidateRect(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;rect);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;UpdateWindow();&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;绘制虚线矩形&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dc.MoveTo(m_lBtnDownPoint);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dc.LineTo(m_lBtnDownPoint.x,point.y);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dc.MoveTo(m_lBtnDownPoint.x,point.y);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dc.LineTo(point);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dc.MoveTo(point);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dc.LineTo(point.x,m_lBtnDownPoint.y);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dc.MoveTo(point.x,m_lBtnDownPoint.y);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dc.LineTo(m_lBtnDownPoint);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dc.SelectObject(pOldPen);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CScrollView::OnMouseMove(nFlags,&amp;nbsp;point);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif&quot; /&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;border:.5pt solid windowtext;padding:4px 5.4pt;background:rgb(230,230,230) none repeat scroll 0 0;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;width:95%;&quot;&gt;
&lt;div&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;CEMCView::OnLButtonUp(UINT&amp;nbsp;nFlags,&amp;nbsp;CPoint&amp;nbsp;point)&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; style=&quot;display:none;&quot; /&gt;&lt;/span&gt;&lt;span id=&quot;_54_337_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_54_337_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;TODO:&amp;nbsp;在此添加消息处理程序代码和/或调用默认值&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_bIsLBtnDown&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;FALSE;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_zoomStartX&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;m_lBtnDownPoint.x;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_zoomStopX&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;point.x;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;更新视图&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;m_bOldVersion)&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_196_292_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_196_292_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(m_bIsZoomed)&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; style=&quot;display:none;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_218_243_Closed_Text&quot; style=&quot;border:1px solid rgb(128,128,128);background-color:rgb(255,255,255);display:none;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_218_243_Open_Text&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_bDrawZoom&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;TRUE;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;Invalidate();&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;UpdateWindow();&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CScrollView::OnLButtonUp(nFlags,&amp;nbsp;point);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif&quot; /&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;margin-left:21pt;text-align:left;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;由于测试是分成多段进行的，测试曲线的绘制也是分成多段来进行，因此选择放大时也要考虑到所选择区域是否包含关键点（频率段与频率段之间的边界点）。因此选择放大频段的显示也分为三种情况进行考虑：选择的起始点和终止点在同一分段内、在两相邻频段内、在不相邻的不同频段内。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; class=&quot;MsoNormal&quot; style=&quot;margin-left:21pt;text-align:left;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;由于选择放大显示的代码较多，只介绍编程思路吧。首先根据鼠标左键选择的起始点和终止点的&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;X&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;坐标确定起始频率和终止频率，然后确定起始点和终止点的相对位置（即上段所说的三种情况），接下来重绘坐标系，针对三种不同情况分段绘制曲线，最后重绘军标线。&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>【原创】案例推理(CBR)中案例的存储与检索——EMC-CBR故障诊断研究（二）</title>
   <link href="http://bo-yang.github.com//2008/05/05/emc-cbr-2html"/>
   <updated>2008-05-05T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/05/05/emc-cbr-2html</id>
   <content type="html">&lt;p&gt;
&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:Times New Roman;&quot;&gt;&amp;nbsp;&amp;nbsp; 最近一直在研究案例推理，看到好多论文都在大谈&lt;/span&gt;CBR理论，很是崇拜。不过一直有一个问题没有搞懂，就是案例（case）到底是怎么存储的呢？&lt;/p&gt;
&lt;p&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; CBR的大师们如Schank、Koldner等人一般用动态存储模型&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:10.5pt;font-family:&quot;Calibri&quot;, &quot;sans-serif&quot;;&#39;&gt;Dynamic Memory Model&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;）&lt;/span&gt;，如&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&#39;font-size:10.5pt;font-family:&quot;Times New Roman&quot;, &quot;serif&quot;;&#39;&gt;Ray Bareiss者一般采用&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;类别&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;案例模型（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;The Category &amp;amp; Exemplar Model&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;），中科院史忠植&lt;/span&gt;教授也提出了自己的一种由于以网络发展而来的方法。大师们的境界非我一AI菜鸟所能领悟，大师们的方法也非我能够掌握。幸好看到国内外有几篇论文比较浅显，说可以用关系型数据库来存储，一笔带过，很是潇洒，但我更加一头雾水了。&lt;/p&gt;
&lt;p&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 迷糊了半个月，在高济教授等编著的《人工智能基础》（高等教育出版社，2002）第三章看到了语义网络表示方法，文中同时给出了如何将语义网络转换为一阶 谓词表示的方法，因此茅塞顿开，有了《EMC-CBR故障诊断研究（一）》一文中的成果。但一阶谓词逻辑又该如何存储到数据库呢？&lt;/p&gt;
&lt;p&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在《人工智能基础》一书的第122页作者给出了一个简单的语义网络和该语义网络的一阶谓词表示，书中阐述了一种将谓词作为数据表的列的一种存储方法。但是 思来想去该方法存在一个问题，一旦语义网络比较复杂（显示问题中随便一个问题的语义网络表示都很复杂），数据表中的列将迅速膨胀；更严重的问题是，对于不 同的EMC故障案例而言，用于描述该案例的谓词数目是不确定的，因此数据表的列数也无法确定，这在关系型数据库中是不可能实现的！我再次陷入迷茫。&lt;/p&gt;
&lt;p&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; God bless us！今天终于想出一种存储方法。思路就是将一阶谓词作为一个对象来进行存储。一阶谓词的属性可以作为数据表中的列，而谓词函数以及谓词的参数作为行来存储。表的设计如下：&lt;/font&gt;&lt;!--[endif]--&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;CBR&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;表&lt;/span&gt;&lt;/p&gt;
&lt;table width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;1&quot; style=&quot;border:medium none;width:100%;border-collapse:collapse;&quot; class=&quot;MsoNormalTable&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;10%&quot; valign=&quot;top&quot; style=&quot;border-style:solid none;border-color:windowtext -moz-use-text-color;border-width:2.25pt medium;padding:0 5.4pt;background:rgb(75,172,198) none repeat scroll 0 0;width:10.32%;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size:11pt;font-family:宋体;color:white;&quot;&gt;列号&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;color:white;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;23%&quot; valign=&quot;top&quot; style=&quot;border-style:solid none;border-color:windowtext -moz-use-text-color;border-width:2.25pt medium;padding:0 5.4pt;background:rgb(75,172,198) none repeat scroll 0 0;width:23.7%;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size:11pt;font-family:宋体;color:white;&quot;&gt;列名&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;color:white;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;15%&quot; valign=&quot;top&quot; style=&quot;border-style:solid none;border-color:windowtext -moz-use-text-color;border-width:2.25pt medium;padding:0 5.4pt;background:rgb(75,172,198) none repeat scroll 0 0;width:15.68%;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size:11pt;font-family:宋体;color:white;&quot;&gt;数据类型&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;color:white;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;16%&quot; valign=&quot;top&quot; style=&quot;border-style:solid none;border-color:windowtext -moz-use-text-color;border-width:2.25pt medium;padding:0 5.4pt;background:rgb(75,172,198) none repeat scroll 0 0;width:16.46%;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size:11pt;font-family:宋体;color:white;&quot;&gt;能否为&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;color:white;&quot;&gt;NULL&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;33%&quot; style=&quot;border-style:solid none;border-color:windowtext -moz-use-text-color;border-width:2.25pt medium;padding:0 5.4pt;background:rgb(75,172,198) none repeat scroll 0 0;width:33.84%;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;&quot; colspan=&quot;2&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size:11pt;font-family:宋体;color:white;&quot;&gt;说明&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;color:white;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;height:20.9pt;&quot;&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;11%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:11.02%;height:20.9pt;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;1&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;23%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:23%;height:20.9pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;predicate_no&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;15%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:15.68%;height:20.9pt;&quot;&gt;
&lt;p style=&quot;text-indent:5.5pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;smallint&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;19%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:19.04%;height:20.9pt;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;Not Null&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;31%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:31.26%;height:20.9pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-size:11pt;font-family:宋体;&quot;&gt;谓词编号，主键，标识，种子&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-size:11pt;font-family:宋体;&quot;&gt;，增量&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;1&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;11%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:11.02%;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;2&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;23%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:23%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;case_no&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;15%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:15.68%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;varchar(15)&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;19%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:19.04%;&quot; colspan=&quot;2&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Not Null&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;31%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:31.26%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;案例号，一般为&lt;/span&gt;&lt;span&gt;case+&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;数字&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;11%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:11.02%;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;3&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;23%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:23%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;predicate&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;15%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:15.68%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;varchar(30)&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;19%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:19.04%;&quot; colspan=&quot;2&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Not Null&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;31%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:31.26%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;谓词&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;11%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:11.02%;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;4&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;23%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:23%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;predicate_property&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;15%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:15.68%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;varchar(30)&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;19%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:19.04%;&quot; colspan=&quot;2&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Not Null&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;31%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:31.26%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;谓词属性，取值范围&lt;/span&gt;&lt;span&gt;fault_character, phisical_structure,   causation, settlement&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;11%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:11.02%;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;5&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;23%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:23%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;param_nums&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;15%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:15.68%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;tinyint&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;19%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:19.04%;&quot; colspan=&quot;2&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Not Null&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;31%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:31.26%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;谓词参数的个数，取值范围&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;或&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，默认为&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;11%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:11.02%;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;6&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;23%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:23%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;param1&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;15%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:15.68%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;varchar(50)&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;19%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:19.04%;&quot; colspan=&quot;2&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Null&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;31%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:31.26%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;谓词函数的第一个参数&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;11%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:11.02%;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;7&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;23%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:23%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;is_param1_digit&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;15%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:15.68%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;bit&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;19%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:19.04%;&quot; colspan=&quot;2&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Null&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;31%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:31.26%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span&gt;param1&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;是否为数字类型，默认&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;11%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:11.02%;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;8&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;23%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:23%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;param1_unit&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;15%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:15.68%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;varchar(8)&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;19%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:19.04%;&quot; colspan=&quot;2&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Null&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;31%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:31.26%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span&gt;param1&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;的单位，如果&lt;/span&gt;&lt;span&gt;param1&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;为数字类型，则该项一般不为&lt;/span&gt;&lt;span&gt;Null&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;11%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:11.02%;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;9&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;23%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:23%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;param2&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;15%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:15.68%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;varchar(50)&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;19%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:19.04%;&quot; colspan=&quot;2&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Null&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;31%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:31.26%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;谓词函数的第二个参数&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;11%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:11.02%;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;10&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;23%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:23%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;is_param2_digit&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;15%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:15.68%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;bit&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;19%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:19.04%;&quot; colspan=&quot;2&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Null&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;31%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:31.26%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span&gt;param2&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;是否为数字类型，默认&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;11%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:11.02%;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;11&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;23%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:23%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;param2_unit&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;15%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:15.68%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;varchar(8)&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;19%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:19.04%;&quot; colspan=&quot;2&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Null&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;31%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:31.26%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span&gt;param2&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;的单位，如果&lt;/span&gt;&lt;span&gt;param2&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;为数字类型，则该项一般不为&lt;/span&gt;&lt;span&gt;Null&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;11%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:11.02%;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;12&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;23%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:23%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;has_sub_predicate&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;15%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:15.68%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;bit&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;19%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:19.04%;&quot; colspan=&quot;2&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Null&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;31%&quot; valign=&quot;top&quot; style=&quot;border:medium none;padding:0 5.4pt;width:31.26%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;谓词函数是否以别的谓词作为参数，默认为&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td nowrap=&quot;nowrap&quot; width=&quot;11%&quot; valign=&quot;top&quot; style=&quot;border-style:none none solid;border-color:-moz-use-text-color -moz-use-text-color windowtext;border-width:medium medium 2.25pt;padding:0 5.4pt;width:11.02%;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-size:11pt;&quot;&gt;13&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;23%&quot; valign=&quot;top&quot; style=&quot;border-style:none none solid;border-color:-moz-use-text-color -moz-use-text-color windowtext;border-width:medium medium 2.25pt;padding:0 5.4pt;width:23%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;sub_predicate_no&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;15%&quot; valign=&quot;top&quot; style=&quot;border-style:none none solid;border-color:-moz-use-text-color -moz-use-text-color windowtext;border-width:medium medium 2.25pt;padding:0 5.4pt;width:15.68%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;smallint&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;19%&quot; valign=&quot;top&quot; style=&quot;border-style:none none solid;border-color:-moz-use-text-color -moz-use-text-color windowtext;border-width:medium medium 2.25pt;padding:0 5.4pt;width:19.04%;&quot; colspan=&quot;2&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Null&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;31%&quot; valign=&quot;top&quot; style=&quot;border-style:none none solid;border-color:-moz-use-text-color -moz-use-text-color windowtext;border-width:medium medium 2.25pt;padding:0 5.4pt;width:31.26%;&quot;&gt;
&lt;p style=&quot;text-align:justify;&quot; class=&quot;DecimalAligned&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;作为参数的谓词的编号&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt; &lt;font size=&quot;3&quot;&gt;本案例库采用SQL Server2005 Express Edition来实现：&lt;/font&gt;&lt;br /&gt; &lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/CBR表设计.JPG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;如果要查询案例&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;6&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;中&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;EUT&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;的物理结构特征，可以用如下查询语句：&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;SELECT predicate, param1, param2&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;FROM Cases&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;WHERE (predicate_property = &#39;phisical_structure&#39;) AND (case_no = &#39;case6&#39;)&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;查询结果如下：&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt; &lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/case6--phisical_structure.JPG&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;color:rgb(255,0,0);&quot; class=&quot;MsoNormal&quot;&gt; &lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;span style=&quot;color:rgb(255,0,0);&quot;&gt;【注】：版权归作者所有，转载或引用请注明出处。&lt;/span&gt;&lt;br /&gt; &lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>关于EMI多线程分段测试方法的说明</title>
   <link href="http://bo-yang.github.com//2008/05/03/emi-test-multi-threads"/>
   <updated>2008-05-03T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/05/03/emi-test-multi-threads</id>
   <content type="html">&lt;p&gt;
    2008年5月15日修正版&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;利用频谱仪进行电磁干扰测试时，考虑到显示效果，点击测试对话框的&amp;ldquo;开始&amp;rdquo;按钮之后视图应该立刻切换到对数坐标系而不是等待测试完成后才切换，因此，必须采用多线程测试方式，也即，需要增加一个测试线程用来向频谱仪发送测试指令。该测试线程定义为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;CTestThread&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，由&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;MFC&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;类&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;CWinThread&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;派生而来。主线程（在本程序中为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;CChildFrame&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;类）和辅助线程（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;CTestThread&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）之间利用消息进行通信，消息处理函数的参数用来传递测试工程设置数据的指针。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;另一方面，根据&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;GJB152A-97&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;《军用设备和分系统电磁发射和敏感度测量》规定，在不同的测试频段，接收机的&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;6dB&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;带宽&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(RBW)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;必须采用不同的数值，如下表所示：&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;color:red;&quot;&gt;表&lt;/span&gt;&lt;span style=&quot;color:red;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;频率扫描测量&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;6dB&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;带宽&lt;/span&gt;&lt;/p&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;1&quot; style=&quot;border:medium none;border-collapse:collapse;&quot; class=&quot;MsoTableGrid&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width=&quot;284&quot; valign=&quot;top&quot; style=&quot;border:1pt solid black;padding:0 5.4pt;width:213.05pt;&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;频率范围&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;284&quot; valign=&quot;top&quot; style=&quot;border-style:solid solid solid none;border-color:black black black -moz-use-text-color;border-width:1pt 1pt 1pt medium;padding:0 5.4pt;width:213.05pt;&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;6dB&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;带宽&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;284&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:213.05pt;&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;30Hz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1KHz&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;284&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:213.05pt;&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;10Hz&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;284&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:213.05pt;&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;10KHz&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;284&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:213.05pt;&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;100Hz&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;284&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:213.05pt;&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;250KHz&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;284&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:213.05pt;&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;1KHz&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;284&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:213.05pt;&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;250KHz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;30MHz&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;284&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:213.05pt;&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;10KHz&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;284&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:213.05pt;&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;30MHz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1GHz&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;284&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:213.05pt;&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;100KHz&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;284&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:213.05pt;&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;gt;1GHz&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;284&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:213.05pt;&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;1MHz&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;如果一次测试横跨多个频段，那么就必须分为多段进行测量。另外，由于接收机或频谱仪一般为数字设备，受限于测量仪器的测量采样精度，如果频段较宽，因为一次测量采样点数是固定的&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;本文所用频谱仪一帧采样&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;501&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;个点&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，此时往往也需要将整个测试频段划分为几个更小的频段分段测量。本文中将这样的划分后的一个小频段称为一帧。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;综上所述，一次测试是一个多线程逐帧测试的过程。辅助线程&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;CTestThread&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;用于向频谱仪发送测试指令，发送完一段测试指令，便休眠等待；主线程&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;CChildFrame&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;接收测试结果（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;ASCII&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;格式），接收完一帧向辅助线程发送消息进行下一段测试，同时发送消息更新&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;CEMCView&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;中的测试曲线。测试流程如下图所示：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/多线程分频段测试流程图.JPG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;以下为最初的版本，予以保留。&lt;/p&gt;
&lt;p&gt;################ 关于多线程测试方法的说明 ################&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 利用频谱仪进行电磁干扰测试时，考虑到显示效果（点击&amp;ldquo;开始测试&amp;rdquo;按钮之后视图立刻切换到对数坐标系而不是等待测试完成后才切换），必须采用多线程方式，也即，增加一个TestThread用来向频谱仪发送测试指令。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 主线程和辅助线程（CTestThread）之间利用消息通信。根据GJB规定，CE102测试在10KHz～1000MHz之间需要分为三段：10KHz～250KHz（RBW：1KHz）、250KHz～30MHz（RBW：10KHz）、30MHz～1GHz（RBW：100KHz）。因此，一次测试工程势必要分为多段测量。辅助线程用于向频谱仪发送测试指令，发送完一段测试指令，便休眠等待；主线程接收测试结果（ASCII格式），接收完一帧向辅助线程发送消息进行&lt;br /&gt;下一段测试。辅助线程也可以通过::PostMessage函数向主线程发送消息。&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 测试流程如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;http://www.best4c.com/Best4cUserFiles/20080503/17143_1209816609220.jpg&quot; /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; file=&quot;/Best4cUserFiles/20080503/17143_1209816609220&quot;;showImage();&amp;nbsp;&amp;nbsp;&amp;nbsp; 如需源代码，请联系本人。&lt;/p&gt;
&lt;p&gt;PS：今天本人第一次使用CSDN的Best4c画流程图，很是惊异于网络编程的强大，难怪微软深刻感到Google等公司的在线Office的压力，也要推出自己的Live Office呢。（貌似Best4c采用了Adobe的Flex技术？请求达人指教）但是必须指出的是，Best4c在很多方面还不够理想，仍需努力&amp;hellip;&amp;hellip;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>利用自定义消息处理函数的WPARAM或LPARAM参数传递指针</title>
   <link href="http://bo-yang.github.com//2008/04/29/mfc-param"/>
   <updated>2008-04-29T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/04/29/mfc-param</id>
   <content type="html">&lt;p&gt;
    有自定义消息：&lt;/p&gt;
&lt;div style=&quot;border:.5pt solid windowtext;padding:4px 5.4pt;background:rgb(230,230,230) none repeat scroll 0 0;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;width:95%;&quot;&gt;
&lt;div&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; /&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;#define&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;WM_TEST&amp;nbsp;WM_USER+121&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;消息处理函数：&lt;/p&gt;
&lt;div style=&quot;border:.5pt solid windowtext;padding:4px 5.4pt;background:rgb(230,230,230) none repeat scroll 0 0;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;width:95%;&quot;&gt;
&lt;div&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; /&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;afx_msg&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;OnTest(WPARAM&amp;nbsp;wParam,LPARAM&amp;nbsp;lParam);&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;该消息是一个主线程向辅助线程发送数据的消息。&lt;br /&gt;主线程中发送消息的代码：&lt;/p&gt;
&lt;div style=&quot;border:.5pt solid windowtext;padding:4px 5.4pt;background:rgb(230,230,230) none repeat scroll 0 0;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;width:95%;&quot;&gt;
&lt;div&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; /&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_param.pDoc&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;pDoc;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_param.pSpecAnlyz&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;m_pSpecAnlyz;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CWinThread*&amp;nbsp;pThread=AfxBeginThread(ThreadTest,static_cast&amp;lt;LPVOID&amp;gt;(&amp;amp;m_param));&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_pTestThread&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;(CTestThread&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)AfxBeginThread(RUNTIME_CLASS(CTestThread));&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Sleep(&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;200&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;);&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;必须先把&amp;amp;m_param转化为void*指针，然后才可以进一步强制转化为WPARAM&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_pTestThread&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;PostThreadMessageW(WM_TEST,(WPARAM)((&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,255);&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;m_param),&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;);&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&amp;nbsp;发送测试消息&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;m_param为自定义类型，其成员为指针变量，因此&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt; m_param无法强制转化为&lt;/span&gt;WPARAM。但是&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;m_param的地址指针和&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;/span&gt;WPARAM一样，都是4个字节，因此可以将&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;m_param的地址指针起那个只转换为&lt;/span&gt;WPARAM。在VC.NET2005中，直接转换编译报错。考虑到void * 之后，先将&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;amp;m_param转化为void*指针，然后才可以进一步强制转化为WPARAM&lt;/span&gt;&lt;span style=&quot;color:rgb(0,128,0);&quot;&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;。&lt;/p&gt;
&lt;p&gt;同样的，在&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;OnTest中，必须先将&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;wParam强制转换为&lt;/span&gt;void * ，然后进一步转换为其他类型。&lt;/p&gt;
&lt;p&gt;PS：网上有高手指出，局部指针变量最好不要作为&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt;wParam或&lt;/span&gt;&lt;span style=&quot;color:rgb(0,0,0);&quot;&gt; lParam传递，因为当消息响应时改变量&lt;/span&gt;可能已经不在了。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>EMC-CBR故障诊断研究（一）</title>
   <link href="http://bo-yang.github.com//2008/04/25/emi-cbr-notes-1"/>
   <updated>2008-04-25T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/04/25/emi-cbr-notes-1</id>
   <content type="html">&lt;p class=&quot;MsoNormal&quot; style=&quot;color:rgb(0,0,0);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 该系列文章致力于建立一个基于CBR（Case-Based Reasoning）的电磁兼容故障诊断系统模型。这篇文章将首先阐述用语义网络对故障进行表示。&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:red;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;strong&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:red;&quot;&gt;Case6&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;font-family:宋体;color:red;&quot;&gt;：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:red;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;【故障特征】：辐射骚扰测试，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;120MHz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;附近多个频点超标&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;合式公式表示为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;默认频率单位&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;MHz)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;：&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Test_content(RE) &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;and;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Exceed_standard(Range(120))&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;【系统结构】：某模块安装在屏蔽底板上，模块与底板连接器处已经用导电胶条进行了屏蔽处理，并与底板的金属部分之间采用了&amp;ldquo;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;360&lt;/span&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;&amp;deg;&amp;rdquo;搭接；产品采用屏蔽结构；模块安装处辐射最大&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/系统结构语义网络.JPG&quot; alt=&quot;&quot; /&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;合式公式表示为&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;margin-left:21pt;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;Part_of(module_x, product)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;and;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Connect_to(module_x, connector)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;and;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Shielding(connector ,conductive_tape)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;and;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Main_problem(connector, RE)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;and;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Connect_to(bottom_plane, connector)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;and;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Part_of(bottom_plane, product)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;and;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Part_of(metal_area, bottom_plane)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;and;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Object(bond, metal_area)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;and;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Main_body(bond, module_x)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;and;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;Bond_type(bond, 360_degree)&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;【原因分析】：产品采用了屏蔽结构，所以必定是缝隙辐射造成的超标；产品进行了屏蔽和搭接，还能测到很大的辐射，必定是因为导电胶条与模块屏蔽体或导电胶条与底板屏蔽体之间的&amp;ldquo;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;360&lt;/span&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;&amp;deg;&amp;rdquo;搭接不理想，存在阻抗不连续或结构意义上的缝隙。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;【解决措施】：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:21pt;text-indent:0;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;span&gt;（1）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;用较厚的导电橡胶代替原来的导电橡胶，使导电橡胶的压缩量增加，便可以满足测试要求；&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:21pt;text-indent:0;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;span&gt;（2）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;将底板中的&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;PCB&lt;/span&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;模块垫高（也可达到同样效果）。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;【相关结论】：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:21pt;text-indent:0;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;span&gt;（1）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;使用导电橡胶、衬垫之类的屏蔽材料时，不但要保证接触面上的良好的导电性（接触面去除所有漆），而且还要保证一定的压缩量。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:21pt;text-indent:0;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;span&gt;（2）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;缝隙也是天线。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:21pt;text-indent:0;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;span&gt;（3）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;一个&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;EMC&lt;/span&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;观点上搭接良好的等电位系统是指：搭接点直接的电阻小于&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;2m&lt;/span&gt;&lt;span style=&quot;font-family:宋体;color:rgb(0,176,80);&quot;&gt;&amp;Omega;，并且整个预期的等电位系统的任何两点之间的电阻小于&lt;span lang=&quot;EN-US&quot;&gt;25m&lt;/span&gt;&amp;Omega;。&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color:rgb(0,176,80);&quot;&gt;&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>《电磁设备防干扰原理与技术》读书笔记(一)</title>
   <link href="http://bo-yang.github.com//2008/04/05/emc-notes-1"/>
   <updated>2008-04-05T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/04/05/emc-notes-1</id>
   <content type="html">&lt;p&gt;
    &amp;nbsp;&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-size:16pt;font-family:黑体;&quot;&gt;《电磁设备防干扰原理与技术》读书笔记&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;right&quot; style=&quot;text-align:right;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;mdash;&amp;mdash;周旭编著，《电磁设备防干扰原理与技术》，国防工业出版社，&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;2005&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、电偶极子、磁偶极子和实际干扰源的简化&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;实际的辐射干扰源大致分为两类：类似于对称阵子天线的非闭合载流导线辐射源和类似于变压器绕组的闭合载流导线辐射源。电偶极子和磁偶极子是上述两类源的最基本的形式。实际的辐射源在空间某点产生的场，均可由若干个基本源的场叠加而成；实际天线可近似为许多偶极子的组合，天线所产生的电磁波也就是这些偶极子所产生的电磁波的合成。因此研究电磁辐射，最简单的是电偶极子和磁偶极子的辐射。通过对电偶极子和磁偶极子所产生的场进行分析，就可得出实际辐射源的远近场及波阻抗和远近场的场特性。&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;1.1 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;电偶极子和磁偶极子的概念&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;电偶极子是指一段载有高频电流的短导线，短是指其长度&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;Delta;&lt;span lang=&quot;EN-US&quot;&gt;l&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;远小于其辐射的电磁波的工作波长，这时导线上各点电流的振幅和相位可视为相同。虽然实际的线天线上各处电流的大小和相位不相同，但其上的电流分布可以看成是由许多首尾相连的一系列电偶极子的电流组成，而各电偶极子上的电流可分别看作常数，因此电偶极子也称为电基本振子、电流元或时变电偶极子。&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;磁偶极子也被称为磁基本振子，是一个半径为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;a(a&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;lambda;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;的细导线小圆环，载有高频电流。当此细导线小圆环的周长远小于波长时，可以认为流过圆环电流的振幅和相位处处相等。磁偶极子的电场强度矢量和磁场强度矢量互相垂直，这一点和电偶极子的电磁场相同。&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;1.2 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;两类源在远近场的特性比较&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;1.2.1 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;传播特性&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;表&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1.1 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;两类源的场于传播特性&lt;/span&gt;&lt;/p&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;1&quot; style=&quot;border:medium none;border-collapse:collapse;&quot; class=&quot;MsoNormalTable&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width=&quot;114&quot; style=&quot;border:1pt solid black;padding:0 5.4pt;width:85.2pt;&quot; rowspan=&quot;2&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;场源类型&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;227&quot; style=&quot;border-style:solid solid solid none;border-color:black black black -moz-use-text-color;border-width:1pt 1pt 1pt medium;padding:0 5.4pt;width:170.4pt;&quot; colspan=&quot;2&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;近&lt;/span&gt; &lt;span style=&quot;font-family:宋体;&quot;&gt;场&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;227&quot; style=&quot;border-style:solid solid solid none;border-color:black black black -moz-use-text-color;border-width:1pt 1pt 1pt medium;padding:0 5.4pt;width:170.5pt;&quot; colspan=&quot;2&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;远&lt;/span&gt; &lt;span style=&quot;font-family:宋体;&quot;&gt;场&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;114&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:85.2pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;场特性&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;114&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:85.2pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;传播特性&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;114&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:85.25pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;场特性&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;114&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:85.25pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;传播特性&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;114&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:85.2pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;电偶极子&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;114&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:85.2pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;非平面波&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;114&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:85.2pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;以&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1/r&lt;sup&gt;3&lt;/sup&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;衰减&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;114&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:85.25pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;平面波&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;114&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:85.25pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;以&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1/r&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;衰减&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;114&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:85.2pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;磁偶极子&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;114&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:85.2pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;非平面波&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;114&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:85.2pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;以&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1/r&lt;sup&gt;2&lt;/sup&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;衰减&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;114&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:85.25pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;平面波&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;114&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:85.25pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;以&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1/r&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;衰减&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;近场区的电场和磁场方向处在以场源为中心的大曲率半径球面上。理想的电偶极子和磁偶极子是不存在的。杆状天线及电子设备内部的一些高电压小电流元器件等场源，都可视为等效的电偶极子场源，其近区场的电磁场以容性高阻抗电场为主。环状天线和电子设备中的一些低压大电流元器件及电感线圈等场源可视作等效的磁偶极子场源，其周围电磁场呈现低感性低阻抗磁场的特征。&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;在远场区电磁场为横电磁波，只有与传播方向垂直的两个场分量，在传播方向上没有场分量。&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;1.2.2 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;波阻抗&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;波阻抗是电磁波中电场分量与磁场分量之比，即&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:18pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img height=&quot;59&quot; width=&quot;49&quot; src=&quot;/DOCUME~1/ADMINI~1/LOCALS~1/Temp/msohtmlclip1/01/clip_image002.gif&quot; alt=&quot;&quot; /&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;场源不同、远近场不同，则波阻抗也有所不同。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;表&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1.2 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;两类源的波阻抗&lt;/span&gt;&lt;/p&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;1&quot; style=&quot;border:medium none;border-collapse:collapse;&quot; class=&quot;MsoNormalTable&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;height:23.55pt;&quot;&gt;
&lt;td width=&quot;189&quot; style=&quot;border:1pt solid black;padding:0 5.4pt;width:142pt;height:23.55pt;&quot; rowspan=&quot;2&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;场源类型&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;379&quot; style=&quot;border-style:solid solid solid none;border-color:black black black -moz-use-text-color;border-width:1pt 1pt 1pt medium;padding:0 5.4pt;width:284.1pt;height:23.55pt;&quot; colspan=&quot;2&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;波阻抗&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;Omega;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;height:21pt;&quot;&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:142.05pt;height:21pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;近&lt;/span&gt; &lt;span style=&quot;font-family:宋体;&quot;&gt;场&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:142.05pt;height:21pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;远&lt;/span&gt; &lt;span style=&quot;font-family:宋体;&quot;&gt;场&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;height:46.8pt;&quot;&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:142pt;height:46.8pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;电偶极子&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:142.05pt;height:46.8pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:15pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img height=&quot;45&quot; width=&quot;87&quot; src=&quot;/DOCUME~1/ADMINI~1/LOCALS~1/Temp/msohtmlclip1/01/clip_image004.gif&quot; alt=&quot;&quot; /&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:142.05pt;height:46.8pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;120&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;pi;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;height:46.8pt;&quot;&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:142pt;height:46.8pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;磁偶极子&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:142.05pt;height:46.8pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:6pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img height=&quot;24&quot; width=&quot;88&quot; src=&quot;/DOCUME~1/ADMINI~1/LOCALS~1/Temp/msohtmlclip1/01/clip_image006.gif&quot; alt=&quot;&quot; /&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:142.05pt;height:46.8pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;120&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&amp;pi;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;1.2.3 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;能量密度&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;能量密度包括电场能量密度和磁场分量能量密度，通过对由同一场源所产生的电场、磁场分量的能量密度进行比较，可以确定场源在不同区域内何种分量占主要成分，以便确定具体的屏蔽分类。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;表&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1.3 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;两类源的能量密度&lt;/span&gt;&lt;/p&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;1&quot; style=&quot;border:medium none;border-collapse:collapse;&quot; class=&quot;MsoNormalTable&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width=&quot;189&quot; style=&quot;border:1pt solid black;padding:0 5.4pt;width:142pt;&quot; rowspan=&quot;2&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;场源类型&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;379&quot; style=&quot;border-style:solid solid solid none;border-color:black black black -moz-use-text-color;border-width:1pt 1pt 1pt medium;padding:0 5.4pt;width:284.1pt;&quot; colspan=&quot;2&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;能量密度比较&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:142.05pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;近场&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:142.05pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;远场&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:142pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;电偶极子&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:142.05pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img height=&quot;23&quot; width=&quot;72&quot; src=&quot;/DOCUME~1/ADMINI~1/LOCALS~1/Temp/msohtmlclip1/01/clip_image008.gif&quot; alt=&quot;&quot; /&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:142.05pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img height=&quot;23&quot; width=&quot;64&quot; src=&quot;/DOCUME~1/ADMINI~1/LOCALS~1/Temp/msohtmlclip1/01/clip_image010.gif&quot; alt=&quot;&quot; /&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:142pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;磁偶极子&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:142.05pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img height=&quot;23&quot; width=&quot;72&quot; src=&quot;/DOCUME~1/ADMINI~1/LOCALS~1/Temp/msohtmlclip1/01/clip_image012.gif&quot; alt=&quot;&quot; /&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;189&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:142.05pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:5pt;&quot;&gt;&lt;!--[if !vml]--&gt;&lt;img height=&quot;23&quot; width=&quot;64&quot; src=&quot;/DOCUME~1/ADMINI~1/LOCALS~1/Temp/msohtmlclip1/01/clip_image010.gif&quot; alt=&quot;&quot; /&gt;&lt;!--[endif]--&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、传输线基础&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;传输线是一种能在两点之间高效率地传输功率与信号的器材。场源产生的能量沿着传输线所引导的方向以横电磁波模式传播，即只在传输过程中电场和磁场相互垂直，且都垂直于传输线导向的传播方向。传输线只能在一定的频率范围内使用，超出范围将会使传输损耗大大增加。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;传输线通常分为三类：双线传输线、双线平行板传输线和同轴线。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;传输线和普通电路网络的差别：普通电路网络的几何尺寸远小于工作波长，因此网络中的电路元件可以认为是分立的，并以集总参数来描述，电流通过集总参数电路元件时，不用考虑电流在空间的变化；传输线的长度通常可与传输信号的波长相比拟，它的分布参数已直接影响到信号的传输，必须用分布于整个长度的电路参数来描述其自身的特性。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;如果传输线终端的负载阻抗与传输线特性阻抗不相等，那么床竖线终端的不连续性会引起电压和电流的反射。这时入射波（从源端传出）和反射波（从负载传出）在线上将同时存在，形成有别于行波的另一种波&amp;mdash;&amp;mdash;驻波。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;负载端的反射系数定义为反射波与入射波之比，它与负载阻抗及传输线特性阻抗有关。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、波导&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;到微波波段（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;300MHz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;300GHz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;），普通传输线传输信号的泄漏急剧上升，只好采用波导作为微波能量的导波载体。波导实质上是一根空心金属管，其横截面一般为矩形或圆形。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;波导传输的重要特点：&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）每种既定的波导都有最低可传输频率，低于此频率的电磁波就不能再在波导中传输，该频率称为截止频率，它只与报道的横截面尺寸及波导内介质的特性有关。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）由于波导内没有同轴电缆那样的导体，所以沿传播方向总存在一个场分量。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）波导波长始终大于同频率的电磁波的自由空间波长。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;4&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、电磁干扰源的分类&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;4.1 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;按存在区域分类&amp;mdash;&amp;mdash;外部电磁干扰和内部电磁干扰&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;所谓外部电磁干扰，是指电子设备或系统以外的因素对线路、设备或系统的干扰，这些干扰是通过外壳、天线及各种输入馈线等途径输入设备内部的，其中有些是自然干扰，有些是人为干扰。具体而言，外部干扰包括：&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;margin-left:57pt;text-align:left;text-indent:-36pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（1）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;外部的高电压、电源通过绝缘漏电而干扰电子设备或系统。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;margin-left:57pt;text-align:left;text-indent:-36pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（2）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;外部大功率设备在空间产生很强的磁场，通过互感耦合干扰电子设备或系统。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;margin-left:57pt;text-align:left;text-indent:-36pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（3）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;空间电磁波对电子线路或系统产生的干扰。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;margin-left:57pt;text-align:left;text-indent:-36pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（4）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;工作环境温度不稳定，引起电子设备或系统内部元器件参数改变造成的干扰。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;margin-left:57pt;text-align:left;text-indent:-36pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（5）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;由工业电网供电的设备和由电网电压通过电源变压器所产生的干扰。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;所谓内部电磁干扰，是指设备内部电路单元之间、元器件之间及导线之间的电磁干扰。具体而言，内部干扰包括：&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;margin-left:21pt;text-align:left;text-indent:0;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（1）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;工作电源通过线路的分布电容和绝缘电阻产生漏电造成的干扰（与工作频率有关）。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;margin-left:21pt;text-align:left;text-indent:0;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（2）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;信号通过地线、电源和传输导线的阻抗相互耦合，或导线之间的互感造成的干扰。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;margin-left:21pt;text-align:left;text-indent:0;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（3）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;设备或系统内部某些元件发热，影响元件本身或其它元件的稳定性造成的干扰。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;margin-left:21pt;text-align:left;text-indent:0;&quot; class=&quot;MsoNormal&quot;&gt;&lt;!--[if !supportLists]--&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;（4）&lt;span style=&#39;font-family:&quot;Times New Roman&quot;;font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal;font-size-adjust:none;font-stretch:normal;&#39;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;大功率和高电压部件产生的磁场、电场通过耦合影响其他部件造成的干扰。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;在电子设备内部，这些电磁干扰都是通过寄生耦合形成的。寄生耦合有电容耦合、电感耦合。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;4.2 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;按频率范围分类&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）工频干扰源：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;50Hz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;及其谐波，波长为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;6000km&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，包括输配电以及电力牵引系统。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）甚低频干扰源：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;30KHz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;以下，波长大于&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;10km&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）载频干扰源：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;10KHz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;300KHz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，波长大于&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1km&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，包括高压直流输电谐波干扰、交流输电谐波干扰及交流电气铁道的谐波干扰。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;4&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）射频及视频干扰源：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;300KHz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;300MHz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，波长在&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1m&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1000km&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;之间，包括工业、科学和医用射频设备、输电线电晕放电、高压设备和电力牵引系统的火花放电以及内燃机、电动机、家用电器和照明电器等。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）微波干扰：&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;300MHz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;300GHz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，波长在&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1mm&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1m&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;之间，包括特高频、超高频、极高频干扰。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;6&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）雷电及核电磁脉冲：频谱在&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;1GHz&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;之间。&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;4.3 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;按产生原因分类&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;表&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;3.1 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;按照产生电磁干扰的原因来分类&lt;/span&gt;&lt;/p&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;1&quot; style=&quot;border:medium none;border-collapse:collapse;&quot; class=&quot;MsoNormalTable&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width=&quot;111&quot; style=&quot;border:1pt solid black;padding:0 5.4pt;width:83.4pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;大类别&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;132&quot; style=&quot;border-style:solid solid solid none;border-color:black black black -moz-use-text-color;border-width:1pt 1pt 1pt medium;padding:0 5.4pt;width:99.2pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;产生原因&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;321&quot; style=&quot;border-style:solid solid solid none;border-color:black black black -moz-use-text-color;border-width:1pt 1pt 1pt medium;padding:0 5.4pt;width:241pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;小类别及说明&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;111&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:83.4pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;放电噪声&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;132&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:99.2pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;放电产生噪声&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;321&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:241pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;火花放电&amp;mdash;&amp;mdash;在电路绝缘破坏的过渡状态下放电；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;连续放电&amp;mdash;&amp;mdash;电晕放电（部分绝缘破坏）；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;辉光放电&amp;mdash;&amp;mdash;弧光放电（全电路绝缘破坏）；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;静电噪声&amp;mdash;&amp;mdash;带静电的火花放电噪声；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;雷击&amp;mdash;&amp;mdash;雷云和大地之间的放电。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;111&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:83.4pt;&quot; rowspan=&quot;5&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;接触噪声&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;132&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:99.2pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;电流通过接触部分，由接触电阻变化而引起电压变化&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;321&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:241pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;静接触噪声&amp;mdash;&amp;mdash;接点接触压力变化，使接触电阻变化而引起的干扰；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;滑动噪声&amp;mdash;&amp;mdash;滑动过程中接触电阻变化而产生的噪声；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;振动噪声&amp;mdash;&amp;mdash;机械振动使接触电阻发生变化而产生的噪声；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;皮膜破坏噪声&amp;mdash;&amp;mdash;接点表面破坏使电阻变化而产生的噪声。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;132&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:99.2pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;金属的接触面接触不良&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;321&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:241pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;接点振动&amp;mdash;&amp;mdash;断开的接点，当接触时由接点跳动而产生的噪声；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;不完全接触噪声&amp;mdash;&amp;mdash;不完全接触，由接触断续而产生的噪声。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;132&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:99.2pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;极化电荷波动&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;321&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:241pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;电极噪声&amp;mdash;&amp;mdash;医疗电子设备的电极，由于涂料极化可引起电压变化而产生的噪声。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;132&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:99.2pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;金属氧化物整流作用&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;321&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:241pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;检波输出信号&amp;mdash;&amp;mdash;由金属和氧化物引起的被调制波的检波作用。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;132&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:99.2pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;热电势&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;321&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:241pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;直流噪声&amp;mdash;&amp;mdash;由不同金属接点的温差而引起的电势。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;111&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:83.4pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;过度现象（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;transient&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）干扰&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;132&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:99.2pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;过渡现象所产生的电压和电流引起的干扰&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;321&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:241pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;电子开关&amp;mdash;&amp;mdash;硅整流器等产生的噪声；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;高速数字回路&amp;mdash;&amp;mdash;设备内的电源开关，集成电路的尖峰电流；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;通电瞬间的冲击电流&amp;mdash;&amp;mdash;白炽灯泡，电动机；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;电力线路过渡的异常电压&amp;mdash;&amp;mdash;线路开闭和故障时的异常电压；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;雷电感应&amp;mdash;&amp;mdash;雷云使电线产生电荷，并使放电的自由电荷在电线中形成行波。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;111&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:83.4pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;无用信号的干扰&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;132&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:99.2pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;对电路而言，是毫无用处的信号&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;321&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:241pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;市用电源&amp;mdash;&amp;mdash;电源哼声，感应障碍所引起的波形失真；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;无线电频率干扰&amp;mdash;&amp;mdash;高频设备，发射机，振荡器等；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;脉冲信号干扰&amp;mdash;&amp;mdash;数字回路，偏转回路等；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;无用辐射&amp;mdash;&amp;mdash;发射机的高频调制，接收机的局部震荡等。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;111&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:83.4pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;反射干扰&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;132&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:99.2pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;由信号本身反射而引起的干扰&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;321&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:241pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;延迟信号干扰&amp;mdash;&amp;mdash;由空间或传输线反射波引起的干扰；&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;不匹配噪声&amp;mdash;&amp;mdash;由于传输线的阻抗不匹配而引起的噪声。&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;111&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:83.4pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;等离子&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;132&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:99.2pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;放电等离子区内的离子、电子固有振动&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;321&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:241pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;由核爆炸噪声，太阳噪声等产生&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;4.4 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;按传输状态分类&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;表&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;4.2 &lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;按传输的状态来分类&lt;/span&gt;&lt;/p&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;1&quot; style=&quot;border:medium none;border-collapse:collapse;&quot; class=&quot;MsoTableGrid&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width=&quot;73&quot; style=&quot;border:1pt solid black;padding:0 5.4pt;width:55.05pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;传输路径&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;76&quot; style=&quot;border-style:solid solid solid none;border-color:black black black -moz-use-text-color;border-width:1pt 1pt 1pt medium;padding:0 5.4pt;width:2cm;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;大类别&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;132&quot; style=&quot;border-style:solid solid solid none;border-color:black black black -moz-use-text-color;border-width:1pt 1pt 1pt medium;padding:0 5.4pt;width:99.2pt;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;说明&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;287&quot; style=&quot;border-style:solid solid solid none;border-color:black black black -moz-use-text-color;border-width:1pt 1pt 1pt medium;padding:0 5.4pt;width:215.15pt;&quot; colspan=&quot;2&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;小类别&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;73&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:55.05pt;&quot; rowspan=&quot;3&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;空间&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;76&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:2cm;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;辐射干扰&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;132&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:99.2pt;&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;同波长相比，距离大的场合&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;287&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:215.15pt;&quot; colspan=&quot;2&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;76&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:2cm;&quot; rowspan=&quot;2&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;感应干扰&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;132&quot; valign=&quot;top&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:99.2pt;&quot; rowspan=&quot;2&quot;&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;由近距离电磁场引起，如平行布线、多芯电缆串音等&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;287&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:215.15pt;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;静电感应&amp;mdash;&amp;mdash;高阻抗场的静电耦合&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;287&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:215.15pt;&quot; colspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;电磁感应&amp;mdash;&amp;mdash;低阻抗场的电磁耦合&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;73&quot; style=&quot;border-style:none solid solid;border-color:-moz-use-text-color black black;border-width:medium 1pt 1pt;padding:0 5.4pt;width:55.05pt;&quot; rowspan=&quot;6&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;导线&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;76&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:2cm;&quot; rowspan=&quot;6&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot;text-align:center;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;传导干扰&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;132&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:99.2pt;&quot; rowspan=&quot;6&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;在传播中侵入导线的干扰&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;57&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:42.55pt;&quot; rowspan=&quot;2&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;按状态分类&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;230&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:172.6pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;差动干扰&amp;mdash;&amp;mdash;往复两导线间的干扰&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;230&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:172.6pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;同相干扰&amp;mdash;&amp;mdash;导线和大地之间所产生的干扰&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;57&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:42.55pt;&quot; rowspan=&quot;4&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;按传输线路不同分类&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;230&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:172.6pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;电源噪声&amp;mdash;&amp;mdash;由电源回路侵入的噪声&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;230&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:172.6pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;信号输入线&amp;mdash;&amp;mdash;从信号输入线直接侵入&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;230&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:172.6pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;控制线等&amp;mdash;&amp;mdash;从信号输出线间接侵入&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;230&quot; style=&quot;border-style:none solid solid none;border-color:-moz-use-text-color black black -moz-use-text-color;border-width:medium 1pt 1pt medium;padding:0 5.4pt;width:172.6pt;&quot;&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;地线即接地回路&amp;mdash;&amp;mdash;接地点相互之间的电位差&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p align=&quot;left&quot; style=&quot;text-align:left;text-indent:21pt;&quot; class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>故障智能诊断读书笔记（一）</title>
   <link href="http://bo-yang.github.com//2008/03/14/fault-diagnosis-notes-1"/>
   <updated>2008-03-14T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/03/14/fault-diagnosis-notes-1</id>
   <content type="html">&lt;p style=&quot;margin:0;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;1&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、故障智能诊断系统的发展趋势&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;1&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）多种知识表示方法的结合；&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;2&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）经验知识（浅层知识）与原理知识（深层知识）的紧密结合；&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;3&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）诊断系统与神经网络的结合；&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;4&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）虚拟现实技术将得到重视和应用；&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;&quot; class=&quot;MsoNormal&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;5&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）数据库技术与人工智能技术相互渗透。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:right;&quot; class=&quot;MsoNormal&quot; align=&quot;right&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&amp;mdash;&amp;mdash;王道平，张义忠著《故障智能诊断系统的理论与方法》，冶金工业出版社&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:right;&quot; class=&quot;MsoNormal&quot; align=&quot;right&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font size=&quot;3&quot; face=&quot;Calibri&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;2&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、故障诊断方法分类示意图&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;center&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/故障诊断分类.JPG&quot; /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:center;&quot; class=&quot;MsoNormal&quot; align=&quot;center&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:right;&quot; class=&quot;MsoNormal&quot; align=&quot;right&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&amp;mdash;&amp;mdash;王道平，张义忠著《故障智能诊断系统的理论与方法》，冶金工业出版社&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:right;&quot; class=&quot;MsoNormal&quot; align=&quot;right&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font size=&quot;3&quot; face=&quot;Calibri&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;3&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、故障智能诊断系统的概念&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:黑体;&quot;&gt;定义&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;3.1&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;：元素是指构成复杂设备的最基本的、具有相对独立功能的结构。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:黑体;&quot;&gt;定义&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;3.2&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;：联系是指设备元素之间的关系。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:黑体;&quot;&gt;定义&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;3.3&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;：系统是指由若干个相互联系、相互制约的元素组成的具有某种特定功能的整体。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:黑体;&quot;&gt;定义&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;3.4&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;：设备系统的层次性是指从系统到元素之间的纵向可分解性。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;font face=&quot;Calibri&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;较低层的元素可以聚合成较大的高层元素，以此类推，直至最高层的元素，也就是原级系统。一般来说，一个复杂设备系统可以分解为系统级、子系统级、&amp;hellip;&amp;hellip;、部件级和元件级等多个层次。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:黑体;&quot;&gt;定义&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;3.5&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;：系统的功能是指在系统设计时要求系统所要实现的一些行为。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;font face=&quot;Calibri&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;功能的实现是系统设计的根本目的，也是系统设计时所要求必备的行为。功能失调与否是设备运行是否正常的主要标志，也是必不可少的、最重要的检测内容和诊断信息。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:黑体;&quot;&gt;定义&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;3.6&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;：系统的输出是系统所有行为的表现。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;font face=&quot;Calibri&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;系统的输出是系统当前工作状态的外部表现，它以两种形式表现：一些能直接表现系统的功能行为，称之为功能输出；另一些则是实现系统功能时附带产生的，称之为附加输出。如导弹发动机产生的功率和发热都是它的输出，前者是其功能的直接表现，是功能输出；后者则是附带产生的，属附加输出。（&lt;span style=&quot;color:red;&quot;&gt;在电磁干扰故障诊断时，既要关心待测设备的功能输出，即在外加干扰的情况下能否正常工作；更要关心的是待测设备的附加输出，即在设备正常工作时附加输出如电磁辐射是否超标。&lt;/span&gt;）&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:黑体;&quot;&gt;定义&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;3.7&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;：系统的故障是指该系统的非正常状态，即在正常条件下，系统实际的功能输出或附加输出超越规定界限的现象。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:黑体;&quot;&gt;定义&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;3.8&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;：所谓故障诊断，就是在一定的检测策略的指导下实施对被诊断系统的自动检测。通过检测获取诊断对象的故障模型，提取故障特征，在此基础上，根据预定的推理原则，对故障信息作出综合评估，并向系统的操纵者或控制者提示所要采取的措施。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:黑体;&quot;&gt;定义&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;3.9&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;：诊断系统的智能就是它有效地获取、传递、处理、再生和利用诊断信息，从而对给定环境下的诊断对象进行正确的状态识别、诊断和预测的能力。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:黑体;&quot;&gt;定义&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font face=&quot;Calibri&quot;&gt;3.10&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;：故障智能诊断系统是由人、当代模拟人脑功能的硬件及其必要的外部设备、物理器件以及支持这些硬件的软件所组成的具有智能的故障诊断系统。&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:left;&quot; class=&quot;MsoNormal&quot; align=&quot;left&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span style=&quot;font-size:12pt;color:red;font-family:楷体_GB2312;&quot;&gt;以上定义可以用于限定电磁干扰故障诊断的概念&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:right;&quot; class=&quot;MsoNormal&quot; align=&quot;right&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&amp;mdash;&amp;mdash;王道平，张义忠著《故障智能诊断系统的理论与方法》，冶金工业出版社&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin:0;text-align:right;&quot; class=&quot;MsoNormal&quot; align=&quot;right&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;font size=&quot;3&quot; face=&quot;Calibri&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>场耦合到导线/电缆的预估</title>
   <link href="http://bo-yang.github.com//2008/03/10/field-coupling-prediction"/>
   <updated>2008-03-10T00:00:00-07:00</updated>
   <id>http://bo-yang.github.com//2008/03/10/field-coupling-prediction</id>
   <content type="html">&lt;p&gt;这几天事情比较多，知道今天才完成&amp;nbsp;&amp;ldquo;场耦合到导线/电缆的预估&amp;rdquo;该部分的程序。&lt;/p&gt;
&lt;p&gt;该程序依然是根据《电磁兼容原理与应用》一书中的QBASIC程序改编而成。程序运行截图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/环路接收性能预估.JPG&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/传输线接收性能预估.JPG&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/非谐振单极天线接收性能预估.JPG&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>导线辐射预估</title>
   <link href="http://bo-yang.github.com//2008/03/07/wire-emi-prediction"/>
   <updated>2008-03-07T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/03/07/wire-emi-prediction</id>
   <content type="html">&lt;p&gt;今天完成了导线辐射预估的编程。导线辐射预估分为三部分：电流元预估、电流环路预估、谐振传输线预估。&lt;/p&gt;
&lt;p&gt;因为涉及到很多电磁兼容专业公式，因此有需要代码的朋友可以和我联系。&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img alt=&quot;电流元预估&quot; align=&quot;absMiddle&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/电流元预估.JPG&quot; /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;电流元预估截图&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/电流环路预估.JPG&quot; /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;电流环路预估截图&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/谐振传输线预估.JPG&quot; /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;谐振传输线预估截图&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>关于测试工程提示信息功能的说明</title>
   <link href="http://bo-yang.github.com//2008/03/03/mfc-test-project-info"/>
   <updated>2008-03-03T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/03/03/mfc-test-project-info</id>
   <content type="html">&lt;p align=&quot;center&quot;&gt;关于测试工程提示信息功能的说明&lt;/p&gt;
&lt;p&gt;该功能的实现完全依赖于CPPToolTip类，该类可以在 &lt;a href=&quot;http://www.codeproject.com/&quot;&gt;http://www.codeproject.com/&lt;/a&gt;&lt;br /&gt;
 上下载到。具体说明见该网站的介绍。&lt;br /&gt;
本程序所需要的功能是点击工具栏的&amp;ldquo;属性&amp;rdquo;按钮之后，屏幕右下角弹出测试工程的详细属性。在屏幕任何地方单击鼠标左键之后，信息提示框消失。&lt;br /&gt;
因此，本程序没有直接按照codeproject上的介绍那样使用CPPToolTip类，而是当点击&amp;ldquo;属性&amp;rdquo;按钮之后，调用ShowHelpTooltip函数。&lt;br /&gt;
在ShowHelpTooltip函数的重载版本void ShowHelpTooltip (LPPOINT pt, LPCTSTR lpszString, HICON hIcon = NULL)中，lpszString支持HTML文本，因此可以利用HTML控制显示信息的格式。&lt;/p&gt;
&lt;p&gt;弹出的信息提示框如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/工程信息提示栏.JPG&quot; alt=&quot;信息提示框&quot; width=&quot;800&quot; height=&quot;500&quot; /&gt;&lt;/p&gt;
&lt;p&gt;源代码如下：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div style=&quot;border:.5pt solid windowtext;padding:4px 5.4pt;background:#e6e6e6 none repeat scroll 0 0;width:95%;&quot;&gt;
&lt;div&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;span id=&quot;_0_17_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;/**/&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_0_17_Open_Text&quot;&gt;&lt;span style=&quot;color:#808080;&quot;&gt;///&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;/&amp;nbsp;MainFrm.h中定义&lt;/span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;public&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;:&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPPToolTip&amp;nbsp;m_toolTip;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;显示测试属性的提示框&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_63_80_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;/**/&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_63_80_Open_Text&quot;&gt;&lt;span style=&quot;color:#808080;&quot;&gt;///&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;/&amp;nbsp;MainFrm.cpp中&lt;/span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CMainFrame::OnCreate(LPCREATESTRUCT&amp;nbsp;lpCreateStruct)&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_137_249_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_137_249_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;hellip;&amp;hellip;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_toolTip.Create(&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;this&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;Adds&amp;nbsp;tooltip&amp;nbsp;for&amp;nbsp;toolbar&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_toolTip.AddToolBar(&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_ProperBar);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;hellip;&amp;hellip;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
}&lt;/span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;显示测试工程的属性&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;void&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CEMCView::OnEditProper()&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_295_4834_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_295_4834_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;TODO:&amp;nbsp;在此添加命令处理程序代码&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;(m_bIsWorking&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;!&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_bOldVersion)&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_357_4832_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_357_4832_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CEMCDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;GetDocument();&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CMainFrame&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;pmfrm&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;(CMainFrame&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;)AfxGetMainWnd();&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pmfrm&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_toolTip.SetDirection(PPTOOLTIP_BOTTOMEDGE_CENTER);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pmfrm&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_toolTip.AddTool(&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;this&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;,L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;测试文件属性&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pmfrm-&amp;gt;m_toolTip.SetColorBk(RGB(0,0,255),RGB(192,192,192));&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPoint&amp;nbsp;pt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CRect&amp;nbsp;rc;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;GetClientRect(&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;rc);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ClientToScreen(&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;rc);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pt.x&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;rc.right;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pt.y&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;rc.bottom;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;pt为客户区窗口右下角对应的点&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;利用HTML控制提示框的显示格式&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;显示测试工程属性&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CString&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CString&amp;nbsp;str&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;center&amp;gt;&amp;lt;h2&amp;gt;&amp;lt;font&amp;nbsp;face=&amp;quot;黑体&amp;quot;&amp;nbsp;color=red&amp;gt;测试工程属性&amp;lt;/font&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;br&amp;gt;&amp;lt;hr&amp;nbsp;color=blue&amp;gt;&amp;lt;/center&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;font&amp;nbsp;size=14&amp;gt;测试类型：&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;(pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_TestCon&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;==&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;CE102)&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_1018_1080_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_1018_1080_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;CE102测试&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;(pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_TestCon&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;==&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;RE102)&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_1130_1192_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_1130_1192_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;RE102测试&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;font&amp;nbsp;size=14&amp;gt;测试设备：&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;switch&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;(pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_TestEquip)&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_1308_1983_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_1308_1983_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;case&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;TEST_EQUIP_NONE:&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;无&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;case&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CUR_PROBE:&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;电流探头&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;case&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;ET_G:&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;ET-G&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;case&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;ET_Q:&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;ET-Q&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;case&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;HT_1:&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;HT-1&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;case&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;HT_6:&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;HT-6&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;case&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;LISN:&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;LISN&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;case&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;EZ_17:&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;EZ-17&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;font&amp;nbsp;size=14&amp;gt;起始频率：&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;%5.2fMHz&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;,pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_StartFreq);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;font&amp;nbsp;size=14&amp;gt;终止频率：&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;%5.2fMHz&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;,pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_StopFreq);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;font&amp;nbsp;size=14&amp;gt;EUT电压：&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;(pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_TestCon&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;==&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;RE102)&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;N/A&amp;lt;/span&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;%5.2fV&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;,pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_EUTVolt);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;font&amp;nbsp;size=14&amp;gt;待测设备：&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;(pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_EUTName&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;!=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;%s&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;,pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_EUTName);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;N/A&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;font&amp;nbsp;size=14&amp;gt;测试模式：&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;(pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_TestCon&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;==&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;RE102)&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;N/A&amp;lt;/span&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_3007_3312_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_3007_3312_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;switch&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;(pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_TestMode)&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_3052_3308_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_3052_3308_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;case&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;TEST_MODE_NONE:&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;无&amp;lt;/span&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;case&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;DIFFER:&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;差模&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;case&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;COMMON:&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;共模&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;font&amp;nbsp;size=14&amp;gt;测试距离：&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;(pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_TestCon&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;==&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;CE102)&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;N/A&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;%5.2fm&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;,pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_TestDist);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;显示频谱仪设置&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;br&amp;gt;&amp;lt;center&amp;gt;&amp;lt;h2&amp;gt;&amp;lt;font&amp;nbsp;face=&amp;quot;黑体&amp;quot;&amp;nbsp;color=red&amp;gt;频谱仪设置&amp;lt;/font&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;br&amp;gt;&amp;lt;hr&amp;nbsp;color=blue&amp;gt;&amp;lt;/center&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;font&amp;nbsp;size=14&amp;gt;RBW&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;：&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;(pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_TestBand&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;==&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;9&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;9KHz&amp;lt;/span&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;(pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_TestBand&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;==&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;120&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;120KHz&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;AUTO&amp;lt;/span&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;font&amp;nbsp;size=14&amp;gt;显示模式：&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;switch&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;(pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_DispPattern)&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_4171_4441_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;br /&gt;
&lt;span id=&quot;_4171_4441_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;case&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;SAMPLE:&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;SAMPLE&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;case&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;MIN_HOLD:&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;MIN.HOLD&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;case&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;MAX_HOLD:&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;MAX.HOLD&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;font&amp;nbsp;size=14&amp;gt;内部衰减：&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;%ddB&amp;lt;/span&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;,pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_InnerAttenuator);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;font&amp;nbsp;size=14&amp;gt;外部衰减：&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.Format(L&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;span&amp;nbsp;class=cpp-comment&amp;gt;%ddB&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;,pDoc&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_pTestPrj&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_OuterAttenuator);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;info&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;str;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pmfrm&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;m_toolTip.ShowHelpTooltip(&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;pt,info);&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;br /&gt;
&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;
&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;
}&lt;/span&gt;&lt;br /&gt;
&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>加载真彩色工具栏</title>
   <link href="http://bo-yang.github.com//2008/03/02/mfc-real-color-toolbar"/>
   <updated>2008-03-02T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/03/02/mfc-real-color-toolbar</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 首先利用&lt;strong&gt;Visual Toolbar工具&lt;/strong&gt;将自.bmp图片制作成工具条。&lt;strong&gt;Visual Toolbar工具&lt;/strong&gt;可以利用Google去搜，尽管这款软件需要注册，但笔者不提倡下载注册机破解注册或者直接下载破解版。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;然后在VC的资源中添加工具栏，导入已经制作好的工具条（此时为bmp格式），然后利用CtrueColorToolBar 类加载图片到工具条。CtrueColorToolBar 类的下载地址为：&lt;a href=&quot;http://www.codeproject.com/docking/TrueColorToolBar.asp&quot;&gt;http://www.codeproject.com/docking/TrueColorToolBar.asp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以上两步可以参考《&lt;strong&gt;&lt;a href=&quot;http://www.vckbase.com/document/viewdoc/?id=1069&quot;&gt;一步步制作真彩工具条&lt;/a&gt;&lt;/strong&gt;》。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 接下来就要将多个工具条加载到同一个工具栏里。我也是在网上找到的源代码，然后自己修改。不便赘述，直接贴上代码：&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div style=&quot;border-right:windowtext .5pt solid;border-top:windowtext .5pt solid;background:#e6e6e6;border-left:windowtext .5pt solid;width:95%;word-break:break-all;border-bottom:windowtext .5pt solid;padding:4px 5.4pt;&quot;&gt;
&lt;div&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CMainFrame::OnCreate(LPCREATESTRUCT&amp;nbsp;lpCreateStruct)&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; /&gt;&lt;img style=&quot;display:none;&quot; alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span id=&quot;_56_2717_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_56_2717_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;(CMDIFrameWnd::OnCreate(lpCreateStruct)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;m_wndToolBar.CreateEx(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&amp;nbsp;TBSTYLE_FLAT,&amp;nbsp;WS_CHILD&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;WS_VISIBLE&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_TOP&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CBRS_FLOAT_MULTI&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_GRIPPER&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_TOOLTIPS&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_FLYBY&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_SIZE_DYNAMIC)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;||&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;m_wndToolBar.LoadToolBar(IDR_MAINFRAME))&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; /&gt;&lt;img style=&quot;display:none;&quot; alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_339_391_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_339_391_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TRACE0(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;未能创建工具栏 &lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;未能创建&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;m_wndStatusBar.Create(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;||&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;m_wndStatusBar.SetIndicators(indicators,&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;sizeof&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(indicators)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;sizeof&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(UINT)))&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; /&gt;&lt;img style=&quot;display:none;&quot; alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_514_566_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_514_566_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TRACE0(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;未能创建状态栏 &lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;未能创建&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;TODO:&amp;nbsp;如果不需要工具栏可停靠，则删除这三行&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_wndToolBar.EnableDocking(CBRS_ALIGN_ANY);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EnableDocking(CBRS_ALIGN_ANY);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DockControlBar(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;m_wndToolBar);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CRect&amp;nbsp;rect;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;创建属性工具栏&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_ProperBar.SetBorders(1,1,1,1);&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;m_ProperBar.CreateEx(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&amp;nbsp;TBSTYLE_FLAT,&amp;nbsp;WS_CHILD&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;WS_VISIBLE&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_TOP&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CBRS_FLOAT_MULTI&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_GRIPPER&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_TOOLTIPS&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_FLYBY&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_SIZE_DYNAMIC)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;||&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;m_ProperBar.LoadToolBar(IDR_TOOLBAR_PROPER))&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; /&gt;&lt;img style=&quot;display:none;&quot; alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_988_1042_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_988_1042_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TRACE0(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;未能创建缩放工具栏 &lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;未能创建&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_ProperBar.LoadTrueColorToolBar(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;16&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,IDB_BITMAP_PROPER_HOT,IDB_BITMAP_PROPER_HOT,IDB_BITMAP_PROPER_DISABLED);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_ProperBar.GetWindowRect(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rect);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rect.OffsetRect(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;RecalcLayout();&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_ProperBar.EnableDocking(CBRS_ALIGN_ANY);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EnableDocking(CBRS_ALIGN_ANY);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DockControlBar(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;m_ProperBar,&amp;nbsp;AFX_IDW_DOCKBAR_TOP,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rect);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;创建缩放工具栏&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_TestBar.SetBorders(1,1,1,1);&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;m_ZoomBar.CreateEx(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&amp;nbsp;TBSTYLE_FLAT,&amp;nbsp;WS_CHILD&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;WS_VISIBLE&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_TOP&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CBRS_FLOAT_MULTI&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_GRIPPER&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_TOOLTIPS&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_FLYBY&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_SIZE_DYNAMIC)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;||&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;m_ZoomBar.LoadToolBar(IDR_TOOLBAR_ZOOM))&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; /&gt;&lt;img style=&quot;display:none;&quot; alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_1628_1682_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1628_1682_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TRACE0(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;未能创建缩放工具栏 &lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;未能创建&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_ZoomBar.LoadTrueColorToolBar(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;16&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,IDB_BITMAP_ZOOM,IDB_BITMAP_ZOOM_HOT,IDB_BITMAP_ZOOM_DISABLED);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_ZoomBar.GetWindowRect(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rect);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rect.OffsetRect(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;RecalcLayout();&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_ZoomBar.EnableDocking(CBRS_ALIGN_ANY);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EnableDocking(CBRS_ALIGN_ANY);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DockControlBar(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;m_ZoomBar,&amp;nbsp;AFX_IDW_DOCKBAR_TOP,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rect);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;创建测试工具栏&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_TestBar.SetBorders(1,1,1,1);&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;m_TestBar.CreateEx(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&amp;nbsp;TBSTYLE_FLAT,&amp;nbsp;WS_CHILD&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;WS_VISIBLE&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_TOP&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CBRS_FLOAT_MULTI&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_GRIPPER&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_TOOLTIPS&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_FLYBY&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CBRS_SIZE_DYNAMIC)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;||&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;m_TestBar.LoadToolBar(IDR_TOOLBAR_TEST))&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; /&gt;&lt;img style=&quot;display:none;&quot; alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_2250_2304_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_2250_2304_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TRACE0(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;未能创建测试工具栏 &lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;未能创建&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_TestBar.LoadTrueColorToolBar(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;16&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,IDB_BITMAP_TEST,IDB_BITMAP_TEST_HOT,IDB_BITMAP_TEST_DISABLED);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_TestBar.GetWindowRect(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rect);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rect.OffsetRect(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;RecalcLayout();&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_TestBar.EnableDocking(CBRS_ALIGN_ANY);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EnableDocking(CBRS_ALIGN_ANY);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DockControlBar(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;m_TestBar,&amp;nbsp;AFX_IDW_DOCKBAR_TOP,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rect);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_toolTip.Create(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;Adds&amp;nbsp;tooltip&amp;nbsp;for&amp;nbsp;toolbar&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;m_toolTip.AddToolBar(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;m_ProperBar);&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;&lt;img alt=&quot;&quot; align=&quot;top&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif&quot; /&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 但是这样做有一个问题，就是两个工具条之间有空白间隙，显得很难看，如下图所示。已经在论坛里发帖了，希望有高手指点一二。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/我的工具栏.bmp&quot; /&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;高手给出的答案为：&lt;/p&gt;
&lt;p&gt;这种效果是正常的，如果不想要这样，可以把CBRS_GRIPPER风格去掉，或者用CReBar。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>关于ROHDE SCHWARZ公司电流探头EZ-17系数修正的说明</title>
   <link href="http://bo-yang.github.com//2008/02/29/interpolation-ez-17"/>
   <updated>2008-02-29T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/02/29/interpolation-ez-17</id>
   <content type="html">&lt;p align=&quot;center&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;关于EZ-17探头系数修正的说明&lt;/p&gt;
&lt;p&gt;///// 电流探头EZ17测试结果修正&amp;nbsp;/////&lt;br /&gt;// 根据ROHDE&amp;amp;SCHWARZ公司的手册，EZ17的测试结果需要&lt;br /&gt;// 进行修正，加上转移电阻K。由手册给出的曲线(第二页)&lt;br /&gt;// 和测试数据(第12页，表4-1),可知在对数坐标中，500KHz&lt;br /&gt;// 以下可看作一条直线；500KHz～10MHz为一非线性变化段；&lt;br /&gt;// 10MHz～200MHz为另一非线性变化段。据此，对测试数据进行&lt;br /&gt;// 校正。以下所有拟合函数均为对数坐标系下的拟合函数。&lt;br /&gt;//&lt;br /&gt;// 20Hz～500KHz拟合函数为：&lt;br /&gt;//&amp;nbsp;&amp;nbsp;p1=-19.1838*x-8.1953&lt;br /&gt;// 500KHz～10MHz拟合函数为：&lt;br /&gt;//&amp;nbsp;&amp;nbsp;p4=18.2253*x^4-31.3557*x^3+16.5565*x^2-6.6261*x-6.8&lt;br /&gt;// 10MHz～20MHz拟合函数为：&lt;br /&gt;//&amp;nbsp;&amp;nbsp;p0=-10&lt;br /&gt;//&amp;nbsp;20MHz～100MHz拟合函数为：&lt;br /&gt;//&amp;nbsp;&amp;nbsp;p2=0.1157*x^2-0.0959*x-10.0711&lt;br /&gt;// 100MHz～200MHz拟合函数为：&lt;br /&gt;//&amp;nbsp;&amp;nbsp;p3=175.6*x^3-1044.5*x^2+2067.7*x-1371.9&lt;br /&gt;//&amp;nbsp;以上各式中，x为频率的对数，p为频率所对应的修正因子。&lt;br /&gt;//&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div style=&quot;border-right:windowtext .5pt solid;border-top:windowtext .5pt solid;background:#e6e6e6;border-left:windowtext .5pt solid;width:95%;word-break:break-all;border-bottom:windowtext .5pt solid;padding:4px 5.4pt;&quot;&gt;
&lt;div&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;参数freq为频率，单位MHz。&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CEMCView::EZ17CorrectionFactor(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;freq)&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; /&gt;&lt;img style=&quot;display:none;&quot; align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; /&gt;&lt;/span&gt;&lt;span id=&quot;_75_600_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_75_600_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;factor;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(freq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.000020&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;freq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;factor&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;19.1838&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(freq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;8.1953&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(freq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;freq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;factor&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;18.2253&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pow(log10(freq),&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;4&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;31.3557&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pow(log10(freq),&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;16.5565&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(freq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(freq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;6.6261&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(freq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;6.8&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(freq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;freq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;20&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;factor&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10.0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(freq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;20&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;freq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;100&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;factor&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.1157&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(freq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(freq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.0959&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(freq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10.0711&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(freq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;100&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;freq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;200&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;factor&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;175.6&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pow(log10(freq),&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1044.5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(freq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(freq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2067.7&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(freq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1371.9&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;factor;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif&quot; /&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>利用VC绘制对数坐标系</title>
   <link href="http://bo-yang.github.com//2008/02/21/draw-log-coordination"/>
   <updated>2008-02-21T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/02/21/draw-log-coordination</id>
   <content type="html">&lt;p&gt;&lt;span style=&quot;font-weight:bold;&quot;&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;span style=&quot;font-size:medium;&quot;&gt;利用VC绘制对数坐标系&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;目标：绘制以任意频率为起点、任意频率为终点的对数坐标，并能对坐标进行任意缩放。&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;实现方法：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0cm 0cm 0pt&quot;&gt;&lt;span style=&quot;font-family:宋体; font-size:12px; color:#ff0000&quot;&gt;======【Update 2013-12-18】：=========================================================&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0cm 0cm 0pt&quot;&gt;&lt;/p&gt;
&lt;ul style=&quot;list-style:none; margin:0px; padding:0px; border:none; outline:none 0px; line-height:24px&quot;&gt;
&lt;li style=&quot;font-family:Helvetica,Tahoma,Arial,sans-serif; list-style:none; margin:0px; padding:0px; border:none; outline:none 0px&quot;&gt;
&lt;span style=&quot;font-size:18px; color:#ff0000&quot;&gt;今天发现以前的方法其实是很笨的方法。其实只要知道任意两个点的X坐标及其对应的频率f, 就可以根据第三点的频率确定第三点的坐标，或者根据第三点的坐标确定该点的频率。&lt;/span&gt;&lt;span style=&quot;font-size:18px&quot;&gt;&lt;span style=&quot;color:#ff0000&quot;&gt;个人感觉&lt;span style=&quot;font-family:Helvetica,Tahoma,Arial,sans-serif; line-height:24px&quot;&gt;对数坐标的本质就是，对于频率取对数之后，该坐标映射成为线性坐标，即屏幕坐标x可以看做log(f)的线性函数。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;font-family:Helvetica,Tahoma,Arial,sans-serif; list-style:none; margin:0px; padding:0px; border:none; outline:none 0px&quot;&gt;
&lt;span style=&quot;font-size:18px; color:#ff0000&quot;&gt;&lt;br&gt;
&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;font-family:Helvetica,Tahoma,Arial,sans-serif; list-style:none; margin:0px; padding:0px; border:none; outline:none 0px&quot;&gt;
&lt;span style=&quot;font-size:18px; color:#ff0000&quot;&gt;给定三点(x0,f0), (x1,f1),(x2,f2), 其中x是X坐标，f是对应的频率，有对应关系&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align:center; list-style:none; margin:0px; padding:0px; border:none; outline:none 0px&quot;&gt;
&lt;span style=&quot;font-size:18px; color:#ff0000&quot;&gt;&lt;span style=&quot;font-family:Helvetica,Tahoma,Arial,sans-serif; white-space:pre&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-family:Courier New&quot;&gt;(x2-x0)/(x1-x0) = (log(f2)-log(f0))/(log(f1)-log(f0)) = log(f2/f0)/log(f1/f0),&lt;/span&gt;&lt;span style=&quot;font-family:Times New Roman&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;font-family:Helvetica,Tahoma,Arial,sans-serif; list-style:none; margin:0px; padding:0px; border:none; outline:none 0px&quot;&gt;
&lt;span style=&quot;font-size:18px; color:#ff0000&quot;&gt;于是，可以求得&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align:center; list-style:none; margin:0px; padding:0px; border:none; outline:none 0px&quot;&gt;
&lt;span style=&quot;font-size:18px; color:#ff0000&quot;&gt;&lt;span style=&quot;font-family:Courier New&quot;&gt;&amp;nbsp;x1=log(f1/f0)/log(f2/f0)*(x2-x0)&amp;#43;x0&lt;/span&gt;&lt;span style=&quot;font-family:Helvetica,Tahoma,Arial,sans-serif&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;font-family:Helvetica,Tahoma,Arial,sans-serif; list-style:none; margin:0px; padding:0px; border:none; outline:none 0px&quot;&gt;
&lt;span style=&quot;font-size:18px; color:#ff0000&quot;&gt;和&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;text-align:center; list-style:none; margin:0px; padding:0px; border:none; outline:none 0px&quot;&gt;
&lt;span style=&quot;font-size:18px; color:#ff0000&quot;&gt;&lt;span style=&quot;font-family:Courier New&quot;&gt;log(f1) = 1/C* log(f2/f0)&amp;#43;log(f0), where C=(x2-x0)/(X1-x0)。&lt;/span&gt;&lt;span style=&quot;font-family:Helvetica,Tahoma,Arial,sans-serif&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;font-family:Helvetica,Tahoma,Arial,sans-serif; text-align:center; list-style:none; margin:0px; padding:0px; border:none; outline:none 0px&quot;&gt;
&lt;span style=&quot;font-size:18px; color:#ff0000&quot;&gt;&lt;br&gt;
&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;font-family:Helvetica,Tahoma,Arial,sans-serif; list-style:none; margin:0px; padding:0px; border:none; outline:none 0px&quot;&gt;
&lt;span style=&quot;font-size:18px; color:#ff0000&quot;&gt;根据这两个公式，写成两个函数，一个是根据频率计算x坐标，一个根据x坐标计算频率，然后指定坐标轴的位置，就可以很容易绘制出对数坐标系了。&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;span style=&quot;font-size:12px; color:#ff0000; font-family:宋体&quot;&gt;=====================================================================================&lt;/span&gt;
&lt;p&gt;以下内容已经过时，仅供参考。&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、定义&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;标准频率：频率值为&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;10&lt;sup&gt;N&lt;/sup&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;的相应的频率点，其中&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;N=&amp;hellip;-2,-1,0,1,2,3&amp;hellip;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，单位&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;。如&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;0.01MHZ&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;0.1MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;1MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;10MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;100MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;等都是标准频率。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、思路&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;首先找出标准频率，画出标准频率线，然后根据标准频率画出其他频率线。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、实现&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）对数坐标系数学基础&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;&quot; align=&quot;center&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/对数坐标数学基础.JPG&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:center;&quot; align=&quot;center&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;如图所示的对数坐标系中：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;&quot; align=&quot;center&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/公式.JPG&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:center;&quot; align=&quot;center&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;position:relative;top:15pt;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;由此，若知道上图中的三个点的坐标，可以求出另一点的坐标。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）找出起始&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;终止标准频率的代码：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;color:blue;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt; stdStartFreq,stdStopFreq;&lt;span style=&quot;color:green;&quot;&gt;//&lt;span&gt;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:9pt;color:green;font-family:新宋体;&quot;&gt;标准频率起始点、终止点&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:green;&quot;&gt;// &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:9pt;color:green;font-family:新宋体;&quot;&gt;格式化标准起始频率&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:blue;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color:blue;&quot;&gt;int&lt;/span&gt; i=0;i&amp;lt;7;++i)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:blue;&quot;&gt;if&lt;/span&gt;(StartFreq==pow((&lt;span style=&quot;color:blue;&quot;&gt;double&lt;/span&gt;)10,i-2))&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;stdStartFreq=StartFreq;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:blue;&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:blue;&quot;&gt;else&lt;/span&gt; &lt;span style=&quot;color:blue;&quot;&gt;if&lt;/span&gt;(StartFreq&amp;gt;pow((&lt;span style=&quot;color:blue;&quot;&gt;double&lt;/span&gt;)10,i-2) &amp;amp;&amp;amp; StartFreq&amp;lt;pow((&lt;span style=&quot;color:blue;&quot;&gt;double&lt;/span&gt;)10,i-1))&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;stdStartFreq=pow((&lt;span style=&quot;color:blue;&quot;&gt;double&lt;/span&gt;)10,i-1);&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:blue;&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:green;&quot;&gt;// &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:9pt;color:green;font-family:新宋体;&quot;&gt;格式化标准终止频率&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:blue;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color:blue;&quot;&gt;int&lt;/span&gt; i=0;i&amp;lt;7;++i)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:blue;&quot;&gt;if&lt;/span&gt;(StopFreq==pow((&lt;span style=&quot;color:blue;&quot;&gt;double&lt;/span&gt;)10,i-2))&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;stdStopFreq=StopFreq;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:blue;&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:blue;&quot;&gt;else&lt;/span&gt; &lt;span style=&quot;color:blue;&quot;&gt;if&lt;/span&gt;(StopFreq&amp;gt;pow((&lt;span style=&quot;color:blue;&quot;&gt;double&lt;/span&gt;)10,i-2) &amp;amp;&amp;amp; StopFreq&amp;lt;pow((&lt;span style=&quot;color:blue;&quot;&gt;double&lt;/span&gt;)10,i-1))&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;{&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;stdStopFreq=pow((&lt;span style=&quot;color:blue;&quot;&gt;double&lt;/span&gt;)10,i-2);&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:blue;&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;&quot;&gt;&lt;span style=&quot;font-size:9pt;font-family:新宋体;&quot; lang=&quot;EN-US&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;起始标准频率&lt;span style=&quot;font-family:宋体;&quot;&gt;就是第一个大于起始频率的标准频率；终止标准频率就是最后一个小于终止频率的标准频率。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;举例：如果起始频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;1.9MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，终止频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;201MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，那么起始标准频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;10MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，终止标准频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;100MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;；如果起始频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;1.9MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，终止频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;20.1MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，那么起始标准频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;10MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，终止标准频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;10MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;；如果起始频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;1.9MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，终止频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;2.01MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，那么起始标准频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;10MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;，终止标准频率为&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;1MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）三种情况&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;①&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;起始频率&amp;le;起始标准频率&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;终止标准频率&amp;le;终止频率&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;&quot; align=&quot;center&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/对数坐标系&amp;mdash;模型1.JPG&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:Calibri;font-size:small;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;在这种情况下，首先画出起始&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;终止标准频率线。对于起始频率和起始标准频率之间的部分，由起始标准频率递减向起始频率画出虚线；对于终止标准频率和终止频率之间的部分，由终止标准频率向终止频率递增画出虚线；对于起始标准频率和终止标准频率之间的部分，首先找到二者之间的标准频率，然后根据标准频率（包括起始&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;终止标准频率）画出其间的虚线。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;②&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;起始频率&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;起始标准频率&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;终止标准频率&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;终止频率&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;&quot; align=&quot;center&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/对数坐标系&amp;mdash;模型2.JPG&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;text-align:center;&quot; align=&quot;center&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;这种情况是第一种情况的特例。因为起始标准频率&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;终止标准频率，所以第一种情况里只有两种情况来画虚线。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;③&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;终止标准频率&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;起始频率&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;终止频率&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;起始标准频率&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;text-align:left;&quot; align=&quot;center&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/对数坐标系&amp;mdash;模型3.JPG&quot; alt=&quot;&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;text-align:center;&quot; align=&quot;center&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;在这种情况下，先找出终止标准频率，然后依据终止标准频率递增画出起始频率和终止频率之间的虚线。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;、其他问题&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）细化间隔&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;由于对数坐标相同频率段的间隔不同，如&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;20MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;的间隔与&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;90MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;的间隔不同，前者大于后者；另外，考虑到坐标系放大时，如&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;200MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;～&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;300MHz&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;频率段，整个坐标系中无虚线，只有横线，很难对测试曲线中某个点的频率进行粗略判断。因此，对于比较大的间隔，应该进行细化。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;方法就是利用相邻两虚线的间隔所占坐标横轴的比例&lt;span style=&quot;font-family:宋体;&quot;&gt;进行判断，若大于某个数值则有必要进行细化。由于间隔有大有小，考虑到细化的间隔不能影响整体对数坐标的效果，因此细化的竖线用灰色虚线表示，且将间隔分成不同等级，不同等级画不同条灰色虚线。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-indent:21pt;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;（&lt;/span&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;）坐标标注&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot; style=&quot;margin:0;text-align:left;&quot; align=&quot;left&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:Calibri;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;坐标标注同样利用相邻两虚线的间隔所占坐标横轴的比例&lt;span style=&quot;font-family:宋体;&quot;&gt;来进行判断，大于某个设定值后才进行标注，否则不进行标注。&lt;span lang=&quot;EN-US&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;【源代码如下：】&lt;/p&gt;
&lt;div style=&quot;background:#e6e6e6;width:95%;word-break:break-all;border:windowtext .5pt solid;padding:4px 5.4pt;&quot;&gt;
&lt;div&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制对数坐标&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;CEMCView::DrawLogCoords(CDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;pDC,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;StartFreq,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;StopFreq)&lt;br /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:inline;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span id=&quot;_84_12926_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:inline;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_84_12926_Open_Text&quot; style=&quot;display:none;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CString&amp;nbsp;note;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CRect&amp;nbsp;rect;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;GetClientRect(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rect);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ORIGIN_X&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rect.left&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rect.Width()&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;坐标原点X坐标&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ORIGIN_Y&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rect.bottom&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rect.Height()&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;坐标原点Y坐标&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;COORD_TOP&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rect.top&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rect.Height()&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;坐标系最高点Y坐标&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;COORD_RIGHT&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rect.right&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rect.Width()&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;坐标系最右点X坐标&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo(ORIGIN_X,ORIGIN_Y);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo(ORIGIN_X,COORD_TOP);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画纵坐标轴&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo(ORIGIN_X,ORIGIN_Y);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo(COORD_RIGHT,ORIGIN_Y);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画横坐标轴&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;note.Format(L&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;%4.2fM&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,StartFreq);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;TextOutW(ORIGIN_X&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,ORIGIN_Y&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,note);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;原点标注&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画横格线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;yInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(ORIGIN_Y&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;COORD_TOP)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;9.0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)ORIGIN_Y&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;yInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;8&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;i)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_697_871_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_697_871_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo(ORIGIN_X,(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)tmp);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo(COORD_RIGHT,(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)tmp);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;note.Format(L&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;%d&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;));&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;TextOutW(ORIGIN_X&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;25&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)tmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;8&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,note);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;z纵坐标标注&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;yInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo(ORIGIN_X,COORD_TOP);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo(COORD_RIGHT,COORD_TOP);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;note.Format(L&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;%d&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;90&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;TextOutW(ORIGIN_X&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;25&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,COORD_TOP&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;8&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,note);&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;z纵坐标标注&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;note.Format(L&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;[dBuV]&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;TextOutW(ORIGIN_X&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;25&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,COORD_TOP&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;28&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,note);&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;z纵坐标标注&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画竖格线&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&amp;nbsp;&amp;nbsp;.|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&amp;nbsp;&amp;nbsp;.|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&amp;nbsp;&amp;nbsp;.|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&amp;nbsp;&amp;nbsp;.|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&amp;nbsp;&amp;nbsp;.|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&amp;nbsp;&amp;nbsp;.|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.&amp;nbsp;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;定义：标准频率，是指0.01MHz、0.1MHz、1MHz&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;10MHZ、100MHz、1000MHz等频率&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;stdStartFreq,stdStopFreq;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;&amp;nbsp;标准频率起始点、终止点&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;格式化标准起始频率&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;7&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;i)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_1351_1565_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1351_1565_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(StartFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pow((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;))&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_1392_1433_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1392_1433_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stdStartFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;StartFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(StartFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pow((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;StartFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pow((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;))&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_1511_1562_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1511_1562_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stdStartFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pow((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;格式化标准终止频率&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;7&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;i)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_1604_1812_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1604_1812_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(StopFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pow((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;))&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_1644_1683_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1644_1683_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stdStopFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;StopFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(StopFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pow((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;StopFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pow((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;))&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_1759_1809_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_1759_1809_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stdStopFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pow((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;break&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;totalRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(StopFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;StartFreq);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;整个频率段所占的比例&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;totalLen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;COORD_RIGHT&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;ORIGIN_X;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;总长度&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(stdStartFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStopFreq)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;起始频率和终止频率相差大于等于一个数量级，如StartFreq=2.5，StopFreq=200&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_2003_10364_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_2003_10364_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;startRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(stdStartFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;StartFreq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalRatio;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;起始频率与标准起始频率之间的部分所占的比例&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;stdRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(stdStopFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStartFreq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalRatio;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;标准起始频率和标准终止频率之间部分所占的比例&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;stopRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(StopFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStopFreq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalRatio;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;标准终止频率和终止频率之间部分所占的比例&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;xStdStart&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;ORIGIN_X&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;startRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalLen;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;标准起始频率所在的X坐标&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)xStdStart,ORIGIN_Y);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)xStdStart,COORD_TOP);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制标准起始频率所在的垂直实线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;note.Format(L&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;%4.2fM&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,stdStartFreq);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;TextOutW((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)xStdStart&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,ORIGIN_Y&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,note);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;坐标标注&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;xStdStop&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;xStdStart&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalLen;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;标准终止频率所在的X坐标&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)xStdStop,ORIGIN_Y);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)xStdStop,COORD_TOP);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制标准终止频率所在的垂直实线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;note.Format(L&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;%4.2fM&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,stdStopFreq);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;TextOutW((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)xStdStop&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,ORIGIN_Y&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,note);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;坐标标注&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;xStdStart;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)(stdRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalRatio);&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;i)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制标准起始频率和标准终止频率之间的垂直实线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_2891_3132_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_2891_3132_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalLen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)xtmp,ORIGIN_Y);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)xtmp,COORD_TOP);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制个关键频率所在的垂直实线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;note.Format(L&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;%4.2fM&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,stdStartFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pow((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;));&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;TextOutW((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,ORIGIN_Y&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,note);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;坐标标注&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo(COORD_RIGHT,ORIGIN_Y);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;终止频率X坐标为COORD_RIGHT&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo(COORD_RIGHT,COORD_TOP);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;note.Format(L&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;%4.2fM&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,StopFreq);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;TextOutW(COORD_RIGHT&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,ORIGIN_Y&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,note);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;坐标标注&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&amp;nbsp;dotPen(PS_DOT,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,RGB(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;));&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;pOldPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;dotPen);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制起始频率与标准起始频率之间的虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStartFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStartFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;低频率&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStartFreq;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;高频率&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;xStdStart;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;while&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;((tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;StartFreq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.000001&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_3601_3644_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;/**/&lt;/span&gt;&lt;span id=&quot;_3601_3644_Open_Text&quot;&gt;&lt;span style=&quot;color:#808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&amp;nbsp;由于double型浮点数精度的问题，不得不采用这种方法进行判断&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_3647_4904_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_3647_4904_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalLen;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)xtmp,ORIGIN_Y);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo((&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)xtmp,COORD_TOP);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.06&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_3832_3926_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_3832_3926_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;note.Format(L&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;%4.2fM&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,tmpFreqL);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;TextOutW(xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,ORIGIN_Y&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,note);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;坐标标注&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;如果两个频率之间的间隔所占长度大于等于横坐标全长的10%,&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;用灰色虚线画出中间频率线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_4009_4839_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_4009_4839_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&amp;nbsp;grayPen(PS_DOT,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,RGB(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;));&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;pDotPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayPen);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;灰色画笔&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画1条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.20&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;4&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画3条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.20&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;6&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画5条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayLen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalLen;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;xgray&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;xtmp;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;while&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.000001&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_4567_4801_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_4567_4801_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xgray&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayLen;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo(xgray,ORIGIN_Y);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo(xgray,COORD_TOP);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(pDotPen);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStartFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStartFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;起始频率和第一条黑色虚线之间的灰色虚线&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;如果两个频率之间的间隔所占长度大于等于横坐标全长的10%&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;用灰色虚线画出全部中间频率线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;StartFreq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_5057_6107_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_5057_6107_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&amp;nbsp;grayPen(PS_DOT,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,RGB(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;));&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;pDotPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayPen);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;灰色画笔&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画1条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.20&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;4&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画2条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.20&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.25&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;6&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画5条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.25&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.30&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;8&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画7条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.30&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.4&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;9&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画8条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.40&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画8条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqH;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;xgray&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;xtmp;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;while&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(grayFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;StartFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.000001&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_5835_6071_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_5835_6071_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;StartFreq);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xgray&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;ORIGIN_X)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo(xgray,ORIGIN_Y);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo(xgray,COORD_TOP);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(pDotPen);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制标准起始频率和标准终止频率之间的垂直虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;xStdStart;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStartFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;i&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)(stdRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalRatio);&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;i)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_6236_7728_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_6236_7728_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;tmp代表关键频率所在的X坐标，xtmp代表将要绘制的虚线的X坐标&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;由低频向高频绘制虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;j&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;j&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;8&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;++&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;j)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_6380_7662_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_6380_7662_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalLen;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo(xtmp,ORIGIN_Y);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo(xtmp,COORD_TOP);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.06&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_6561_6658_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_6561_6658_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;note.Format(L&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;%4.2fM&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,tmpFreqH);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;TextOutW(xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,ORIGIN_Y&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,note);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;坐标标注&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;如果两个频率之间的间隔所占长度大于等于横坐标全长的10%,&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;用灰色虚线画出中间频率线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_6745_7607_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_6745_7607_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&amp;nbsp;grayPen(PS_DOT,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,RGB(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;));&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;pDotPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayPen);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;灰色画笔&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画1条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.20&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;4&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画3条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.20&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;6&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画3条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayLen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalLen;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;xgray&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayLen;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;while&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.00001&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_7326_7567_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_7326_7567_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xgray&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayLen;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo(xgray,ORIGIN_Y);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo(xgray,COORD_TOP);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(pDotPen);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;tmpFreq代表关键频率&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalLen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制标准终止频率和终止频率之间的垂直虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;xStdStop;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStopFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStopFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;while&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;((StopFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqH)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.000001&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_7864_9129_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_7864_9129_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalLen;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo(xtmp,ORIGIN_Y);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo(xtmp,COORD_TOP);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.06&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_8039_8133_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_8039_8133_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;note.Format(L&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;%4.2fM&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,tmpFreqH);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;TextOutW(xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,ORIGIN_Y&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,note);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;坐标标注&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;如果两个频率之间的间隔所占长度大于等于横坐标全长的10%&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;用灰色虚线画出全部中间频率线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_8217_9072_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_8217_9072_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&amp;nbsp;grayPen(PS_DOT,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,RGB(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;));&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;pDotPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayPen);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;灰色画笔&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画1条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.20&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;4&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画3条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.20&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;6&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画5条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayLen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalLen;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;要画灰色虚线频率之间的距离&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;xgray&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayLen;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;while&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.000001&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_8800_9034_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_8800_9034_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xgray&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayLen;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo(xgray,ORIGIN_Y);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo(xgray,COORD_TOP);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(pDotPen);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStopFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStopFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;黑色虚线和终止频率之间的灰色虚线&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;如果两个频率之间的间隔所占长度大于等于横坐标全长的10%&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;用灰色虚线画出全部中间频率线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(StopFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_9279_10330_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_9279_10330_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&amp;nbsp;grayPen(PS_DOT,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,RGB(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;));&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;pDotPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayPen);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;灰色画笔&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画1条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.20&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;4&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画2条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.20&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.25&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;6&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画5条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.25&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.30&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;8&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画7条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.30&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.4&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;9&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画8条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.40&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画9条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;xgray&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;xtmp;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;while&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(StopFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.000001&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_10056_10294_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_10056_10294_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(StopFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xgray&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(COORD_RIGHT&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;xtmp)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo(xgray,ORIGIN_Y);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo(xgray,COORD_TOP);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(pDotPen);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(pOldPen);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;起始频率和终止频率在同一数量级，如StartFreq=200，StopFreq=500&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_10420_12924_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_10420_12924_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo(COORD_RIGHT,ORIGIN_Y);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo(COORD_RIGHT,COORD_TOP);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;最右端边界线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;note.Format(L&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;%4.2fM&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,StopFreq);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;TextOutW(COORD_RIGHT&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,ORIGIN_Y&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,note);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;坐标标注&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&amp;nbsp;dotPen(PS_DOT,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,RGB(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;));&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;pOldPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;dotPen);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;unitLen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalLen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;totalRatio;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;标准频率之间应有的距离&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;xStdStop&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;ORIGIN_X&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(StartFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStopFreq)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;unitLen;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;标准终止频率(此时在起始频率的左边)的X坐标&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;xStdStop;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStopFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStopFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;tmpRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;根据标准终止频率(此时在起始频率的左边)绘制标准虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;while&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;((StartFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.000001&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;))&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;找到第一根标准虚线的X坐标&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_11028_11149_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_11028_11149_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;unitLen;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStopFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStopFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;while&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(StopFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.000001&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_11190_12890_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_11190_12890_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;StartFreq)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_11265_11468_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_11265_11468_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo(xtmp,ORIGIN_Y);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo(xtmp,COORD_TOP);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.06&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_11367_11463_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_11367_11463_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;note.Format(L&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;%4.2fM&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,tmpFreqL);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;TextOutW(xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,ORIGIN_Y&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,note);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;坐标标注&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;如果两个频率之间的间隔所占长度大于等于横坐标全长的10%&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;用灰色虚线画出全部中间频率线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayTmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(StopFreq&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;StartFreq);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(grayTmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_11615_12805_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_11615_12805_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&amp;nbsp;grayPen(PS_DOT,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.5&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,RGB(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;192&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;));&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;pDotPen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayPen);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;灰色画笔&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(grayTmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画1条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(grayTmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.15&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayTmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.20&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;4&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画2条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(grayTmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.20&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayTmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.25&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;6&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画5条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(grayTmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.25&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayTmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.30&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;8&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画7条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(grayTmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.30&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayTmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.35&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;9&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画8条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(grayTmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.35&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayInc&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;画9条灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayLen&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;unitLen;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;要画的灰色虚线频率之间的距离&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;xgray&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;xtmp;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayRatio;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;while&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;((tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0.000001&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;StopFreq)&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockStart.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;img style=&quot;display:none;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ContractedSubBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;_12533_12767_Closed_Text&quot; style=&quot;border-right:#808080 1px solid;border-top:#808080 1px solid;display:none;border-left:#808080 1px solid;border-bottom:#808080 1px solid;background-color:#ffffff;&quot;&gt;...&lt;/span&gt;&lt;span id=&quot;_12533_12767_Open_Text&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;{&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayFreqL)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;log10(tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpFreqL);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xgray&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayLen;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveTo(xgray,ORIGIN_Y);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;LineTo(xgray,COORD_TOP);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;绘制灰色虚线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;grayFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;grayInc;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(pDotPen);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xtmp&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;tmpRatio&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;unitLen;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpFreqH&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStopFreq;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmpFreqL&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;stdStopFreq;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/InBlock.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pDC&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;SelectObject(pOldPen);&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedSubBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/ExpandedBlockEnd.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; alt=&quot;&quot; align=&quot;top&quot; /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;&lt;span style=&quot;font-size:small;&quot;&gt;目标：绘制以任意频率为起点、任意频率为终点的对数坐标，并能对坐标进行任意缩放。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;附录：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;1 读者来信问道：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;您好，我是在校的学生，看了您关于&amp;ldquo;利用VC绘制对数坐标系&amp;rdquo;http://blog.csdn.net/bonny95/archive/2008/02/21/2111368.aspx 的博文，于是自己写了一个在不同坐标系（直角坐标系和对数坐标系）上描点并选择一些点进行线性拟合的C++程序，结果发现我的点不能很好的在对数坐标坐标上显示出来。&lt;br /&gt;因此我想问您关于实际点到对数坐标系上的页面坐标点转换的过程，您的想法是什么样的呢？&lt;br /&gt;比如点（1998，200）落在1000-10000的标准频率段内，并且是在1000-2000之间，这其中的如何正确地把该点在对数坐标上绘制出来呢。如果您有时间能给我这个解答的话不胜感激。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size:x-small;&quot;&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;【答】首先我觉得有必要明确一下直角坐标系和对数坐标系的区别：&lt;/span&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;直角坐标系的X轴、Y轴全部为线性坐标轴，也即1、2、3、&amp;hellip;&amp;hellip;&lt;/span&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;10、&amp;hellip;&amp;hellip;100，1和2，2和3，&lt;/span&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;99和100之间的距离是相等的；而对数坐标系（&lt;/span&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;确切而言是半对数坐标系）的X轴（横坐标）是对数坐标，&lt;/span&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;是非线性的，而Y轴是线性变化的，X轴上1、10、&lt;/span&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;100之间的距离是相等的，而1和2，2和3，&lt;/span&gt;&lt;span style=&quot;font-family:mceinline;&quot;&gt;99和100之间的距离是不等的。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;对于对数坐标系的横坐标，两个点之间的相对位置与两个点代表的频率值的对数呈正比，即：如果屏幕上某个像素点X1在屏幕上的坐标(计算机屏幕上的坐标系为线性坐标系)为(x1,y)，X2的坐标为(x2,y)，X3的坐标为(x3,y)，X1、X2、X3分别为对数坐标系横轴上的三点，对应的频率值分别为f1, f2, f3，则有：&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; 屏幕上的像素点位置比例 &amp;nbsp;(x2-x1)/(x2-x3) = [lg(f2)-lg(f1)]/[lg(f2)-lg(f3)] &amp;nbsp;对数坐标系的频率值取对数之后的比例&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;根据上述公式，设对数坐标横轴上频率1000对应的屏幕坐标为x1, 1998对应的屏幕坐标为x2, 10000对应的屏幕坐标为x3，带入上述公式就可以了。当然，对数坐标的原点对应的屏幕像素值你要自己设定。&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;因此，其实把测量仪器测得的直角坐标系的曲线（或像素点）转换成计算机屏幕上显示的对数坐标系的曲线（或像素点）的关键在于计算机屏幕直角坐标系和对数坐标系的转换：屏幕上对数坐标系在屏幕上显示的位置要你自己来设定（比如原点为(200,600)，横轴(200～800,600)，纵轴(200, 600~150)），你设定了这个坐标系的位置之后，就要进行对数坐标（横轴为频率值；也可以理解为频率值的对数，这样频率值的对数也是线性的）和直角坐标系（横轴为屏幕像素点的位置）的转换。&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;另外，对于纵轴，尽管都是线性坐标，但也要进行一些等比例变换，不然绘制出来的也有可能不对。&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;祝你好运！&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;PS:&amp;nbsp;你可以参见&lt;a href=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/%E5%B7%A5%E7%A8%8B%E4%BF%A1%E6%81%AF%E6%8F%90%E7%A4%BA%E6%A0%8F.JPG&quot; target=&quot;_blank&quot;&gt;http://p.blog.csdn.net/images/p_blog_csdn_net/bonny95/工程信息提示栏.JPG&lt;/a&gt;，这是我自己绘制的对数坐标系。&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>关于属性页和属性单的应用总结</title>
   <link href="http://bo-yang.github.com//2008/02/16/mfc-propertypage"/>
   <updated>2008-02-16T00:00:00-08:00</updated>
   <id>http://bo-yang.github.com//2008/02/16/mfc-propertypage</id>
   <content type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;关于属性页和属性单的应用总结&lt;/p&gt;
&lt;p&gt;1、属性页(CPropertyPage)中获取&lt;br /&gt;&amp;nbsp;(1) 程序主框架指针：CMainFrame* pMainFrame=(CMainFrame*)AfxGetMainWnd();&lt;br /&gt;&amp;nbsp;(2) 程序子框架指针：CChildFrame* pframe=(CChildFrame*)((CMainFrame*)AfxGetMainWnd())-&amp;gt;GetActiveFrame();&lt;br /&gt;&amp;nbsp;(3) 程序活动文档指针：CEMCDoc* m_pDoc=(CEMCDoc*)pframe-&amp;gt;GetActiveDocument();&amp;nbsp;//获取活动的文档&lt;br /&gt;&amp;nbsp;(4) 属性单(CPropertySheet)指针：CMyPropertySheet* pSheet=(CMyPropertySheet*)this-&amp;gt;GetParent();&amp;nbsp;// 获取CMyPropertySheet指针&lt;br /&gt;&amp;nbsp;(5) 程序活动视图指针：CEMCView* pView=(CEMCView*)pframe-&amp;gt;GetActiveView();&amp;nbsp;// 获取活动视图&lt;/p&gt;
&lt;p&gt;2、在属性单(CPropertySheet)单击OK按钮后，程序框架将逐个遍历加载的CPropertyPage（从GetPage(0)～GetPage(N-1)），查询是否&lt;br /&gt;有CPropertyPage重载了OnOK()，若有则执行重载的代码，否则执行默认的CPropertyPage::OnOK()。&lt;/p&gt;
&lt;p&gt;3、CPropertySheet和加载的CPropertyPage通信，可以在CPropertySheet中定义&lt;br /&gt;&amp;nbsp;CPPageContentMode* pCM=(CPPageContentMode*)this-&amp;gt;GetPage(0);&lt;br /&gt;&amp;nbsp;然后利用pCM操作CPPageContentMode中的成员变量。&lt;br /&gt;&amp;nbsp;也可以在CPropertyPage中获取CPropertySheet的指针。&lt;/p&gt;
&lt;p&gt;4、两个或多个加载的CPropertyPage之间通信，可以借助于CPropertySheet实现。&lt;/p&gt;
&lt;p&gt;5、对CPropertySheet标准按钮的操作&lt;br /&gt;&amp;nbsp;(1)更改标准按钮的标题：&lt;br /&gt;&amp;nbsp;CWnd* pWnd=GetDlgItem(IDOK);&lt;br /&gt;&amp;nbsp;pWnd-&amp;gt;SetWindowTextW(_T(&amp;quot;开始&amp;quot;));&lt;br /&gt;&amp;nbsp;(2)去掉&amp;ldquo;应用&amp;rdquo;按钮：&lt;br /&gt;&amp;nbsp;pWnd=GetDlgItem(ID_APPLY_NOW);&lt;br /&gt;&amp;nbsp;pWnd-&amp;gt;ShowWindow(FALSE);&lt;br /&gt;&amp;nbsp;(3)移动标准按钮至对话框中间&lt;/p&gt;
&lt;div style=&quot;border-right:windowtext .5pt solid;border-top:windowtext .5pt solid;background:#e6e6e6;border-left:windowtext .5pt solid;width:95%;word-break:break-all;border-bottom:windowtext .5pt solid;padding:4px 5.4pt;&quot;&gt;
&lt;div&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;span style=&quot;color:#000000;&quot;&gt;CPropertyPage&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;pPage;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&amp;nbsp;pPage&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;GetPage(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;CRect&amp;nbsp;rectPage;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;pPage&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;GetWindowRect(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rectPage);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&amp;nbsp;CWnd&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;pWndOK&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;GetDlgItem(IDOK);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&amp;nbsp;CWnd&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;pWndCancel&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;GetDlgItem(IDCANCEL);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&amp;nbsp;CRect&amp;nbsp;rectOK,rectCancel;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&amp;nbsp;pWndOK&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;GetWindowRect(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rectOK);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&amp;nbsp;pWndCancel&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;GetWindowRect(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rectCancel);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;BtnCenter&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(rectCancel.right&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rectOK.left)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&amp;nbsp;OK和CANCEL按钮中轴线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;PageCenter&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;(rectPage.right&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rectPage.left)&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;属性单的中轴线&lt;/span&gt;&lt;span style=&quot;color:#008000;&quot;&gt;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;nbsp;dist&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;PageCenter&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;BtnCenter;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&amp;nbsp;rectOK.left&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;dist;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&amp;nbsp;rectOK.right&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;dist;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&amp;nbsp;rectCancel.left&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;dist;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&amp;nbsp;rectCancel.right&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;+=&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;dist;&amp;nbsp;&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&amp;nbsp;ScreenToClient(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rectOK);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&amp;nbsp;ScreenToClient(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rectCancel);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&amp;nbsp;pWndOK&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveWindow(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rectOK);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&amp;nbsp;pWndCancel&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;MoveWindow(&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;rectCancel);&lt;br /&gt;&lt;img align=&quot;top&quot; alt=&quot;&quot; src=&quot;http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif&quot; /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 
</feed>